{
    "abstractText": "Background Assembling fragments of DNA sequences is an important phase in reproducing the complete genome sequences of the studied organisms. Particularly noteworthy is the de novo assembly task, where there is no reference genome. This task is further Abstract Background: The assembly task is an indispensable step in sequencing genomes of new organisms and studying structural genomic changes. In recent years, the dynamic development of next\u2010generation sequencing (NGS) methods raises hopes for mak\u2010 ing whole\u2010genome sequencing a fast and reliable tool used, for example, in medical diagnostics. However, this is hampered by the slowness and computational require\u2010 ments of the current processing algorithms, which raises the need to develop more efficient algorithms. One possible approach, still little explored, is the use of quantum computing. Results: We present a proof of concept of de novo assembly algorithm, using the Genomic Signal Processing approach, detecting overlaps between DNA reads by calculating the Pearson correlation coefficient and formulating the assembly problem as an optimization task (Traveling Salesman Problem). Computations performed on a classic computer were compared with the results achieved by a hybrid method com\u2010 bining CPU and QPU calculations. For this purpose quantum annealer by D\u2010Wave was used. The experiments were performed with artificially generated data and DNA reads coming from a simulator, with actual organism genomes used as input sequences. To our knowledge, this work is one of the few where actual sequences of organisms were used to study the de novo assembly task on quantum annealer. Conclusions: Proof of concept carried out by us showed that the use of quantum annealer (QA) for the de novo assembly task might be a promising alternative to the computations performed in the classical model. The current computing power of the available devices requires a hybrid approach (combining CPU and QPU computa\u2010 tions). The next step may be developing a hybrid algorithm strictly dedicated to the de novo assembly task, using its specificity (e.g. the sparsity and bounded degree of the overlap\u2010layout\u2010consensus graph).",
    "authors": [
        {
            "affiliations": [],
            "name": "Katarzyna Na\u0142\u0119cz\u2010Charkiewicz"
        },
        {
            "affiliations": [],
            "name": "Robert M. Nowak"
        }
    ],
    "id": "SP:9a9b33bfba5e9fa37d4bf5dfda37f34a5415cb84",
    "references": [
        {
            "authors": [
                "Sohn J\u2010I",
                "Nam J\u2010W"
            ],
            "title": "The present and future of de novo whole\u2010genome assembly",
            "venue": "Brief Bioinform",
            "year": 2016
        },
        {
            "authors": [
                "Karp RM"
            ],
            "title": "Reducibility among combinatorial problems",
            "venue": "editors. Complexity of computer computations. Boston: Springer;",
            "year": 1972
        },
        {
            "authors": [
                "R Matai",
                "S Singh",
                "M. Lal"
            ],
            "title": "Traveling salesman problem: an overview of applications, formulations, and solution approaches. In: Davendra D, editor. Traveling salesman problem, theory and applications. London: InTech",
            "year": 2010
        },
        {
            "authors": [
                "Peng S\u2010L",
                "Chang C\u2010S",
                "Hunag J",
                "Wang T\u2010C"
            ],
            "title": "A grid\u2010based TSP solver with applications to bioinformatics",
            "venue": "J Internet Technol",
            "year": 2008
        },
        {
            "authors": [
                "T Kadowaki",
                "H. Nishimori"
            ],
            "title": "Quantum annealing in the transverse Ising model",
            "venue": "Phys Rev E",
            "year": 1998
        },
        {
            "authors": [
                "J King",
                "S Yarkoni",
                "J Raymond",
                "I Ozfidan",
                "AD King",
                "MM Nevisi",
                "JP Hilton",
                "CC. McGeoch"
            ],
            "title": "Quantum annealing amid local ruggedness and global frustration",
            "venue": "J Phys Soc Jpn",
            "year": 2019
        },
        {
            "authors": [
                "VS Denchev",
                "S Boixo",
                "SV Isakov",
                "N Ding",
                "R Babbush",
                "V Smelyanskiy",
                "J Martinis",
                "H. Neven"
            ],
            "title": "What is the computational value of finite\u2010range tunneling",
            "venue": "Phys Rev X. 2016. https:// doi. org/",
            "year": 2016
        },
        {
            "authors": [
                "S Feld",
                "C Roch",
                "T Gabor",
                "C Seidel",
                "F Neukart",
                "I Galter",
                "W Mauerer",
                "C. Linnhoff\u2010Popien"
            ],
            "title": "A hybrid solution method for the capacitated vehicle routing problem using a quantum annealer",
            "venue": "Front ICT",
            "year": 2019
        },
        {
            "authors": [
                "S. Jain"
            ],
            "title": "Solving the traveling salesman problem on the d\u2010wave quantum computer",
            "venue": "Front Phys. 2021. https:// doi",
            "year": 2021
        },
        {
            "authors": [
                "AS Boev",
                "AS Rakitko",
                "SR Usmanov",
                "AN Kobzeva",
                "IV Popov",
                "VV Ilinsky",
                "EO Kiktenko",
                "AK. Fedorov"
            ],
            "title": "Genome assembly using quantum and quantum\u2010inspired annealing",
            "venue": "fphy",
            "year": 2021
        },
        {
            "authors": [
                "A Sarkar",
                "Z Al\u2010Ars",
                "K. Bertels"
            ],
            "title": "QuASeR: quantum accelerated de novo DNA sequence reconstruction",
            "venue": "PLoS ONE",
            "year": 2021
        },
        {
            "authors": [
                "R Jugas",
                "M Vitek",
                "K Sedlar",
                "H. Skutkova"
            ],
            "title": "Cross\u2010correlation based detection of contigs overlaps. In: 41st International convention on information and communication technology, electronics and microelectronics",
            "venue": "(MIPRO),",
            "year": 2018
        },
        {
            "authors": [
                "Cristea PD"
            ],
            "title": "Phase analysis of DNA genomic signals",
            "venue": "Proceedings of the 2003 international symposium on circuits and systems, ISCAS \u201903,",
            "year": 2003
        },
        {
            "authors": [
                "Cristea PD"
            ],
            "title": "Conversion of nucleotides sequences into genomic signals",
            "venue": "J Cell Mol Med",
            "year": 2002
        },
        {
            "authors": [
                "W. Kirch"
            ],
            "title": "Pearson\u2019s correlation coefficient",
            "venue": "https:// doi. org/",
            "year": 2008
        },
        {
            "authors": [
                "RJ Parsons",
                "S Forrest",
                "C. Burks"
            ],
            "title": "Genetic algorithms, operators, and DNA fragment assembly",
            "venue": "Mach Learn",
            "year": 1995
        },
        {
            "authors": [
                "GM Mallen\u2010Fullerton",
                "G. Fernandez\u2010Anaya"
            ],
            "title": "DNA fragment assembly using optimization",
            "venue": "IEEE Congress on Evolu\u2010 tionary Computation",
            "year": 2013
        },
        {
            "authors": [
                "L Perron",
                "V. Furnon"
            ],
            "title": "Traveling salesperson problem. https:// devel opers. google. com/ optim izati on/ routi ng/ tsp (2019)",
            "year": 2021
        },
        {
            "authors": [
                "M Borowski",
                "P Gora",
                "K Karnas",
                "M B\u0142ajda",
                "K Kr\u00f3l",
                "A Matyjasek",
                "D Burczyk",
                "M Szewczyk",
                "M. Kutwin"
            ],
            "title": "New hybrid quantum annealing algorithms for solving vehicle routing problem",
            "year": 2020
        },
        {
            "authors": [
                "Dantzig GB",
                "Ramser JH"
            ],
            "title": "The truck dispatching problem",
            "venue": "Manag Sci",
            "year": 1959
        },
        {
            "authors": [
                "A. Lucas"
            ],
            "title": "Ising formulations of many NP problems",
            "venue": "Front Phys. 2014. https:// doi. org/",
            "year": 2014
        },
        {
            "authors": [
                "E Grant",
                "T Humble",
                "B. Stump"
            ],
            "title": "Benchmarking quantum annealing controls with portfolio optimization. 2020",
            "venue": "https:// doi. org/",
            "year": 2007
        },
        {
            "authors": [
                "K Bujel",
                "F Lai",
                "M Szczeci\u0144ski",
                "W So",
                "M. Fernandez"
            ],
            "title": "Solving high volume capacitated vehicle routing problem with time windows using recursive\u2010DBSCAN clustering",
            "year": 2018
        },
        {
            "authors": [
                "P Rice",
                "I Longden",
                "A. Bleasby"
            ],
            "title": "EMBOSS: the European molecular biology open software suite",
            "venue": "Trends Genet",
            "year": 2000
        }
    ],
    "sections": [
        {
            "text": "Background Assembling fragments of DNA sequences is an important phase in reproducing the complete genome sequences of the studied organisms. Particularly noteworthy is the de novo assembly task, where there is no reference genome. This task is further\nResults: We present a proof of concept of de novo assembly algorithm, using the Genomic Signal Processing approach, detecting overlaps between DNA reads by calculating the Pearson correlation coefficient and formulating the assembly problem as an optimization task (Traveling Salesman Problem). Computations performed on a classic computer were compared with the results achieved by a hybrid method com\u2011 bining CPU and QPU calculations. For this purpose quantum annealer by D\u2011Wave was used. The experiments were performed with artificially generated data and DNA reads coming from a simulator, with actual organism genomes used as input sequences. To our knowledge, this work is one of the few where actual sequences of organisms were used to study the de novo assembly task on quantum annealer.\nConclusions: Proof of concept carried out by us showed that the use of quantum annealer (QA) for the de novo assembly task might be a promising alternative to the computations performed in the classical model. The current computing power of the available devices requires a hybrid approach (combining CPU and QPU computa\u2011 tions). The next step may be developing a hybrid algorithm strictly dedicated to the de novo assembly task, using its specificity (e.g. the sparsity and bounded degree of the overlap\u2011layout\u2011consensus graph).\nKeywords: De novo assembly, Quantum annealing, Hybrid algorithm, Travelling salesman problem, TSP, Vehicle routing problem, VRP\n\u00a9 The Author(s) 2022. Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article\u2019s Creative Commons licence, unless indicated otherwise in a credit line to the mate\u2011 rial. If material is not included in the article\u2019s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http:// creat iveco mmons. org/ licen ses/ by/4. 0/. The Creative Commons Public Domain Dedication waiver (http:// creat iveco mmons. org/ publi cdoma in/ zero/1. 0/) applies to the data made available in this article, unless otherwise stated in a credit line to the data.\n*Correspondence: katarzyna.nalecz\u2011charkiewicz. dokt@pw.edu.pl Institute of Computer Science, Warsaw University of Technology, Warsaw, Poland\ncomplicated by the presence of reading errors and the presence of repetitive regions. With the dynamic development of third-generation sequencing (NGS) methods and the associated significant decrease in sequencing costs, the burden of the complexity of the entire process of whole-genome sequencing has shifted from biotechnology to the computational phase. Currently, the bottleneck is the acquisition of DNA readings in the sequencing process and their computer analysis. Hence the need to develop new processing algorithms, with particular emphasis on their efficiency. In addition to the well-known and used methods of parallelizing computations through GPUs, dedicated FPGAs, or large computing clusters, one of the possible paths is to use the potential of quantum computers.\nExisting de novo assembly tools are based on two algorithmic solutions: de Bruijn and overlap-layout-consensus graphs. The techniques used vary with the length of the reads. Hybrid approaches are also being developed, using both short and long reads [1]. One possible approach to assembling sequences without a reference genome is to formulate the problem as an optimization task, namely the travelling salesman problem (TSP). This issue, formulated in its general form in the 1930s by Karl Menger, is one of the best known combinatorial problems. Its main difficulty is that the increase in the number of possibilities to be considered with the increasing size of the input data is factorial. It has been proven that TSP belongs to the class of NP-hard problems [2], which makes it an interesting problem from an algorithmic point of view and causes that, although it can be considered one of the best-studied combinatorial problems in computer science, there are still attempts to develop more efficient algorithms to solve it. In its classic form, the task is to find the optimal (shortest) path between cities from a given set, such that each city is visited exactly once. The path has to start and end in the same city. The travelling salesman problem is used in several areas, from the most obvious, such as mapping the optimal routes for vehicles, to drilling printed circuit boards or picking orders in [3] warehouses. In bioinformatics itself, many TSP applications can be mentioned, such as multiple sequence alignment, construction of phylogenetic trees or protein structure prediction [4].\nThe use of quantum annealer, a device dedicated to solving optimization problems, seems to be one of the obvious directions to be checked. The principle of its operation has been described i.a. in [5]. The annealer itself works by generating independent samples by slowly transforming the initial state into a random end state taking into account a given objective function. In the conventional approach, we use thermal fluctuations, while the quantum annealer uses quantum fluctuations to transcend individual states.\nThe usefulness of QA has been tested, i.a. in [6]. The authors analyze the capabilities and limitations of QA, such as the relatively small number of qubits and their poor conectivity. Introducing a new synthetic class of problems to take advantage of quantum tunneling effect and comparing the time of their solution achieved by the classical and D-Wave algorithms, they prove the superiority of the latter. Another example is the work [7], where the authors compare the operation of quantum annealer with the simulated annealing algorithm, as well as with the quantum Monte Carlo algorithm (where the quantum tunneling phenomenon is emulated on the CPU), demonstrating experimentally the superiority of QA for selected classes of problems. Whether QA is able to lower the asymptotic complexity of NP-hard problems in general remains an open question.\nAttempts to solve TSP, or its generalized form\u2014VRP\u2014by means of quantum annealer have already been made, among others in the works of [8, 9]. This work is not the first attempt to use the QA in the de novo assembly problem\u2014the topic was taken up, among others, by Boev et\u00a0al. [10] and Sarkar et\u00a0al. [11].\nQA are a class of quantum computers based on the heuristic optimization method (the phenomenon of quantum annealing) to solve optimization and sampling problems using quantum physical systems. The most famous devices of this class are QA from D-Wave. The largest quantum computer it offers now is Advantage, with a QPU consisting of over 5000 quantum bits; however, in the experiments carried out as part of the described research, the quantum annealer in older architecture, namely D-Wave 2000Q, was used.\nThis study aimed to investigate the possibility of using a QA in a de novo assembly task, formulated as an optimization problem (travelling salesman problem). For this purpose, the algorithm proposed by Jugas et\u00a0al.\u00a0[12] for the detection of overlaps in readings of DNA sequences and their ordering was first verified by performing calculations on a classical computer. Then, the results obtained by the classical algorithm were compared with the results obtained by using the hybrid algorithm to determine the travelling salesman path (combining calculations performed on the CPU and the QPU)."
        },
        {
            "heading": "Methods",
            "text": ""
        },
        {
            "heading": "Preliminary assumptions",
            "text": "We made the following initial assumptions:\n\u2022 only long reads are considered (single-end, not reversed - every read is forward strand); \u2022 the algorithm does not take into account dealing with repetitive DNA regions; \u2022 the tested DNA sequence fragments contain a small percentage of errors (maximum\n1.5%);\nThe individual steps of\u00a0the algorithm are presented in\u00a0Fig.\u00a01."
        },
        {
            "heading": "Encoding DNA reads as\u00a0a\u00a0signal",
            "text": "The input of the algorithm is the set of N reads, a\u00a0read is string over { A, C, G, T }. The first step of the algorithm is to encode the read into a signal i.e. sequence of numbers. Following the approach described by [12], cumulated phase signal representation [13] was used. According to the mapping, each letter was assigned one of the complex numbers: A: 1+ j , C: \u22121\u2212 j , G: \u22121+ j , T: 1\u2212 j . Then a complex number argument is calculated and values obtained in this way are accumulated in the signal. The advantage of such a representation is the preservation of information about the chemical and structural properties of the sequences, as well as the positional information, which makes it possible to compare them with each other [14]."
        },
        {
            "heading": "Pearson\u2019s correlation coefficient matrix",
            "text": "The next step of the algorithm is to compare each pair of reads to detect possible overlap. The method of computing the similarity of a pair of reads, as summarized\nbelow, is taken from [12]. The Pearson correlation coefficient [15] was adopted as the measure of similarity:\nwhere X, Y are compared signals, cov is covariance and \u03c3 stand for standard deviation. The values of the coefficient fall within the range \ufffd\u22121, 1\ufffd , with values close to 1 and \u22121 representing a linear relationship (positive or negative, respectively), while values close to 0 indicate a low relationship between the studied variables.\nGiven a pair of reads to compare, we shift them successively against each other, computing the Pearson correlation coefficient for overlapping sequence fragments for each shift. Then we place the maximum value obtained in this way in the resulting matrix (see Fig.\u00a02).\n(1)\u03c1X ,Y = cov(X ,Y )\n\u03c3X\u03c3Y\nSolving travelling salesman problem The symmetric matrix of correlation coefficients of size N \u00d7 N created by this method, where N is the power of the input data set, is the input for the next processing step: ordering overlapping reads by solving the travelling salesman problem. The \u201ccities\u201d visited by the travelling salesman (the vertices of the complete undirected graph) are, in this case, the individual reads. Finding the optimal path in the graph\u2014with the abovementioned assumptions\u2014allows ordering overlapping fragments of the DNA sequence and is equivalent to solving the assembly task."
        },
        {
            "heading": "Introducing artificial vertex and\u00a0scaling",
            "text": "In the classic formulation of the TSP, the travelling salesman starts from a specific starting point\u2014we do not have one here. Potentially each of the reads may be the beginning or the end of the genome sequence. This difference is pointed out by Parsons et\u00a0al.\u00a0[16], who are therefore critical of the idea of using TSP as a solution to the de novo assembly\nproblem. However, as Mallen-Fullerton and Anaya [17] rightly point out, this limitation is easy to circumvent by introducing an artificial vertex into the graph with zero distance from other vertices. In the algorithm that is the subject of this article, it will always be vertex marked with the number zero. Then the artificial vertex should be specified as the starting point. Thus, the Hamilton cycle obtained at the algorithm\u2019s output, after removing the artificial vertex, will allow obtaining the searched path. Moreover, since the classical TSP minimizes the cost function, and due to the requirement to operate on integers, imposed by the Google OR Tools tool (see next paragraph), it was necessary to rescale the correlation coefficient matrix by subtracting all values from 1, multiplying by 1000 and applying the min-max scaling."
        },
        {
            "heading": "Google OR\u00a0Tools",
            "text": "In the work [12], which is the starting point for the described research, due to the small size of the input data, the nearest neighbour algorithm was used to solve the TSP problem. In this paper, however, to make the solution more universal, in the case of the base solution (on a classic computer), we decided to use the Google OR Tools (GOT) [18] tool. It is open-source software designed to solve combinatorial optimization problems, such as vehicle routing, scheduling or bin packing. A particular emphasis was placed on its performance\u2014for example, on a typical computer, solving the TSP problem for 280 cities takes about one second [19]. In general, the solution returned by GOT is not always optimal due to the computational complexity of the problem belonging to the NP-hard problems class. However, since in the quantum computational model described below, one should not expect precise solutions\u2014which results from the very nature of quantum computing\u2014this is by no means an obstacle. In the context of de-novo assembly, obtaining a sub-optimal solution to the TSP is acceptable as long as it does not result in the detection of a false overlap. The traveling salesman path provides information which reads do actually overlap, while their final ordering to obtain the result sequence requires further processing (including calculating the exact offset between reads). This goes beyond the scope of this solution, as in the Overlap Layout Consensus approach the \u201cConsensus\u201d step is not the goal of our research.\nThe presented algorithm considers the approximate nature of the solution to the travelling salesman problem, which is reflected in the next processing step\u2014division into contigs. Before we move on to its description, let us look at the second method of solving the TSP problem on QA.\nD\u2011Wave\u2011VRP The D-Wave-VRP [20] tool1 was used to perform the calculations based on the quantum paradigm. This part of the experiments, intended to be calculated on the QPU, was carried out on a real quantum annealer (D-Wave 2000Q). The TSP problem is a particular case of the Vehicle Routing Problem (VRP), formulated in 1959 by Dantzig and Ramser [21], where the goal is to find optimal routes for several vehicles visiting a specific set of locations. The D-Wave-VRP tool allows solving a number of general VRP variants tasks, such as\n1 OpenSource, available at GitHub under the Apache License 2.0.\nCapacitated Multi-Depot Vehicle Routing Problem (CMDVRP) or without specifying vehicle capacity (). From the point of view of this paper, the problem comes down to finding the optimal route for one vehicle with no restrictions on its capacity, with one depot (which is an artificial vertex) and N destinations.\nIn order to solve the TSP problem by means of a quantum annealer, it is necessary to formulate it as an optimization problem. In D-Wave-VRP, the TSP problem formulation as QUBO (Quadratic Unconstrained Binary Optimization) is based on [22]. A detailed description of the notation, assumptions and corresponding equations can be found in sections\u00a02.1 and 2.2 of [20]. Paraphrasing the aforementioned paragraphs, the QUBO formulation has the following form:\nwhere A1 , A2 are constants (their values in the D-Wave-VRP tool were set as A1 = 1 , A2 = 10\n7 ). Component C of the above equation, which is the essence of VRP, has the form:\nwhere M is the number of warehouses, N is the number of points visited, Ci,j is the distance from i to j, xi,j,k is a\u00a0binary variable accepting value 1 then and only then vehicle number i visits vertex j as k-th on its route. The following term ensures that each point is visited by exactly one vehicle exactly once:\nIn this paper, we treat TSP as a special case of VRP, where the number of both vehicles and warehouses is 1. Instead of the binary variables xi,j,k defined above, we will continue to use the notation xi,j , where xi,j is 1 then and only then the salesman visits vertex i as j-th in sequence. Since M = 1 , we can simplify C to the following form:\nOn the other hand, term Q, which ensures that every point on the traveling salesman\u2019s route is visited and that it is visited exactly once, has the form:\n(2)QUBOVRP = A1C + A2Q\n(3)\nC =\nM\u2211\nm=1\nN\u2211\nn=1\nxm,n,1CN+1,n +\nM\u2211\nm=1\nN\u2211\nn=1\nxm,n,NCn,N+1\n+\nM\u2211\nm=1\nN\u22121\u2211\nn=1\nN+1\u2211\ni=1\nN+1\u2211\nj=1\nxm,i,nxm,j,n+1Ci,j\n(4)\nQ =\nN\u2211\nk=1\nA(x1,k ,1, x2,k ,1, . . . , x1,k ,2, . . . , xM,k ,N )\n+\nM\u2211\nm=1\nN\u2211\nn=1\nA(xm,1,n, xm,2,n, . . . , xm,N+1,n)\n(5)C = N\u2211\nn=1\nxn,1CN+1,n +\nN\u2211\nn=1\nxn,NCn,N+1 +\nN\u22121\u2211\nn=1\nN+1\u2211\ni=1\nN+1\u2211\nj=1\nxi,nxj,n+1Ci,j\n(6)Q = N\u2211\nk=1\nA(xk ,1, xk ,1, . . . , xk ,2, . . . , xk ,N )+\nN\u2211\nn=1\nA(x1,n, x2,n, . . . , xN+1,n)\nDue to the size of the considered graphs (the described tool should enable solving TSP for N > 50 ), it was necessary to divide it into sub-problems. A problem of size N translates to a\u00a0QUBO model of\u00a0size N 2 , which means that for problem N = 50 it cannot be embedded directly into the QPU. According to [23], the largest fully connected problem that can be embedded onto the 2000Q has approximately 60 spins, while the limit in practice depends on the number of faulty physical qubits in the device. This means that the largest possible TSP problem to be solved directly in the 2000Q architecture is N = 7 (because already for N = 8 we have N 2 = 64 > 60 ). It raises a necessity to decompose and use a hybrid approach.\nDBScanSolver, based on the recursive DBSCAN algorithm [24], was selected from among the four possible solvers. The algorithm uses DBSCAN as clustering algorithm, where the number of clusters is limited. For each cluster TSP problem is solved separately and then results are merged. The division into sub-problems is done on the CPU, while the search for traveling salesman path for a given sub-problem is performed on QPU.\nThe default configuration of\u00a0D-Wave-VRP tool has not been changed. The quantum annealing algorithm uses two branches\u2014tabu search and a sample of subproblems returned from the D-Wave system that \u201ccompete\u201d with each other; a state with minimum energy is selected. There is no maximum computation time per QPU or maximum number of iterations. The convergence parameter takes the value 1, which means that the process ends after one iteration of the calculations, during which the values obtained on the output have not changed. for every algorithm and on every test case we ran 5 experiments."
        },
        {
            "heading": "Dividing the\u00a0TSP path into\u00a0contigs",
            "text": "Having the solution to the TSP problem\u2014the optimal or near-optimal path passing through all the vertices in the graph\u2014it is necessary to proceed to the last step of the algorithm, which is the contigs detection. This step is necessary since the algorithm could make a choice that was not a de facto overlap while looking for successive passes for a travelling salesman. In other words, the resulting path may combine reads that do not overlap each other. Therefore, it is necessary to detect such places and divide the path into smaller fragments, constituting a series of overlapping reads of the DNA sequence. For this purpose, calculations based on the knowledge of the degree of sequence coverage were used. For each link in the path, it is checked whether the value of the estimate function in the distance matrix exceeds a certain fixed threshold level. Based on the knowledge of coverage value COV, we know that a given read should coincide on average with COV \u2212 1 other reads. Exceeding the threshold determined in this way is considered a break. By reducing the value of the threshold parameter, we can increase the number of contigs while reducing the probability of a false positive rate. The result of the described method is a set of contigs understood as a list of reads, each of which overlaps."
        },
        {
            "heading": "Data preparation",
            "text": "The experiments were carried out for both artificially generated data (dataset A) and actual sequences of organisms with small DNA sizes (dataset B)\u2014lambda phage (48k bp) and E. coli bacteria (for the first 50k bp), being widely used model organisms, as\nwell as additionally on the SARS COVID-19 (29k bp) sequence. A summary of information about the datasets used is provided in the Table\u00a01.\nRandom sequences were generated as follows: for different overlap values {2700, 2500, 2300} , coverages{5, 10, 15} and percentage of errors {0, 0.5, 1, 1.5} a sequence was created DNA as a random string of characters from the A,\u00a0 G,\u00a0 C,\u00a0 T alphabet, selected with equal probability. This method of generating sequences eliminated the risk of repeated regions, to which\u2014as indicated in section Preliminary assumptions\u2014the discussed algorithm is not resistant. The reads length was 3000 bp (before introducing point mutations simulating errors). A total of 50 reads were generated for each sequence. A given coverage was obtained by a different length of the input sequence. It was decided to treat the starting sequence as a cyclic buffer so that the beginning and the end of the sequence would not be distinguished in any way. An exemplary set of reads from dataset A and their arrangement on the output sequence is shown in the Fig.\u00a03.\nThe msbar tool from the EMBOSS [25] package was used to simulate sequencing errors, introducing a specific percentage of point mutations (insertions, deletions, substitutions, duplications) into each simulated read of a DNA sequence.\nIn the case of dataset B, all selected genome sequences were input for ReadSim [26]. Although this long-reads simulator, easy to install and use, is not the latest (the current version is from November 2014), it fits this paper\u2019s needs well. In line with the assumptions mentioned in Preliminary assumptions, it was limited to single-end reads, setting a predetermined coverage value and error percentage. The lengths of the reads were generated with a uniform distribution."
        },
        {
            "heading": "Results",
            "text": "This section presents the results of research aimed at comparing the classical algorithm implemented with the use of GOT and the algorithm implemented in a hybrid (classical and quantum) paradigm, where the quantum part was realized on the QA by D-Wave (designated as DWVRP).\nFig. 3 Arrangement of reads in relation to the input sequence for exemplary sequence (COVID\u201119) from dataset B"
        },
        {
            "heading": "2700 10,000 15 1.5 3000",
            "text": ""
        },
        {
            "heading": "2500 10,000 15 1.5 3000",
            "text": ""
        },
        {
            "heading": "2300 10,000 15 1.5 3000",
            "text": ""
        },
        {
            "heading": "2700 10,000 15 1.0 3000",
            "text": ""
        },
        {
            "heading": "2500 10,000 15 1.0 3000",
            "text": ""
        },
        {
            "heading": "2300 10,000 15 1.0 3000",
            "text": ""
        },
        {
            "heading": "2700 10,000 15 0.5 3000",
            "text": ""
        },
        {
            "heading": "2500 10,000 15 0.5 3000",
            "text": ""
        },
        {
            "heading": "2300 10,000 15 0.5 3000",
            "text": ""
        },
        {
            "heading": "2700 10,000 15 0 3000",
            "text": ""
        },
        {
            "heading": "2500 10,000 15 0 3000",
            "text": ""
        },
        {
            "heading": "2300 10,000 15 0 3000",
            "text": ""
        },
        {
            "heading": "2700 15,000 10 1.5 3000",
            "text": ""
        },
        {
            "heading": "2500 15,000 10 1.5 3000",
            "text": ""
        },
        {
            "heading": "2300 15,000 10 1.5 3000",
            "text": ""
        },
        {
            "heading": "2700 15,000 10 1.0 3000",
            "text": ""
        },
        {
            "heading": "2500 15,000 10 1.0 3000",
            "text": ""
        },
        {
            "heading": "2300 15,000 10 1.0 3000",
            "text": ""
        },
        {
            "heading": "2700 15,000 10 0.5 3000",
            "text": ""
        },
        {
            "heading": "2500 15,000 10 0.5 3000",
            "text": ""
        },
        {
            "heading": "2300 15,000 10 0.5 3000",
            "text": ""
        },
        {
            "heading": "2700 15,000 10 0 3000",
            "text": ""
        },
        {
            "heading": "2500 15,000 10 0 3000",
            "text": ""
        },
        {
            "heading": "2300 15,000 10 0 3000",
            "text": ""
        },
        {
            "heading": "2700 30,000 5 1.5 3000",
            "text": ""
        },
        {
            "heading": "2500 30,000 5 1.5 3000",
            "text": ""
        },
        {
            "heading": "2300 30,000 5 1.5 3000",
            "text": ""
        },
        {
            "heading": "2700 30,000 5 1.0 3000",
            "text": ""
        },
        {
            "heading": "2500 30,000 5 1.0 3000",
            "text": ""
        },
        {
            "heading": "2300 30,000 5 1.0 3000",
            "text": ""
        },
        {
            "heading": "2700 30,000 5 0.5 3000",
            "text": ""
        },
        {
            "heading": "2500 30,000 5 0.5 3000",
            "text": ""
        },
        {
            "heading": "2300 30,000 5 0.5 3000",
            "text": ""
        },
        {
            "heading": "2700 30,000 5 0 3000",
            "text": ""
        },
        {
            "heading": "2500 30,000 5 0 3000",
            "text": ""
        },
        {
            "heading": "2300 30,000 5 0 3000",
            "text": ""
        },
        {
            "heading": "Algorithms evaluation",
            "text": "The developed pipeline is by no means a complete, ready-made assembler, which makes it impossible to use standard methods of comparing it with existing tools. Following [12], to evaluate the operation of the tested algorithms (classical-GOT and hybridDWVRP), the measure of checking the number of correctly and incorrectly detected overlaps was used. Accuracy and travelling salesman path cost were also calculated (it should be remembered that the lower the cost, the better the result). In particular, it was possible to find the optimal path with a cost of zero for error-free reads. In Tables\u00a02, 3, 4, the real overlaps column shows the actual number of contigs for a given path (the independent coherent fragments into which it should be divided). This number was obtained based on the knowledge of the location of each read in the target sequence. On the other hand, the calculated contigs column contains the number of contigs calculated using the algorithm described in section Dividing the TSP path into contigs. It is more desirable to have a situation in which, despite the more significant number of contigs, no false overlaps are detected (false positive rate equal to zero) than the case where the number of contigs will be lower, but the result will contain a false overlap (resulting in lower\nTable 2 Results of experiments for circular random sequences (datasetA), coverage = 5\nOverlap length Method Path cost Real contigs Calculated contigs Correct overlaps Incorrect overlaps Accuracy\n0% errors 2300 GOT 0 0 0 51 0 1.00\nDWVRP 268 2 2 49 0 1.00\n2500 GOT 0 0 0 51 0 1.00\nDWVRP 309 2 2 49 0 1.00\n2700 GOT 0 0 0 51 0 1.00\nDWVRP 113 1 1 50 0 1.00\n0.5% errors 2300 GOT 449 2 2 49 0 1.00\nDWVRP 648 1 6 45 0 0.90\n2500 GOT 350 2 3 48 0 0.98\nDWVRP 390 1 7 44 0 0.88\n2700 GOT 349 0 3 48 0 0.94\nDWVRP 484 0 10 41 0 0.80\n1.0% errors 2300 GOT 507 0 2 49 0 0.96\nDWVRP 965 3 6 45 0 0.94\n2500 GOT 469 1 4 47 0 0.94\nDWVRP 892 3 7 44 0 0.92\n2700 GOT 648 1 5 46 0 0.92\nDWVRP 881 2 8 43 0 0.88\n1.5% errors 2300 GOT 912 0 3 48 0 0.94\nDWVRP 1331 2 5 46 0 0.94\n2500 GOT 1054 3 5 45 1 0.92\nDWVRP 2233 10 12 39 0 0.96\n2700 GOT 724 0 8 43 0 0.84\nDWVRP 1124 2 10 41 0 0.84\nreliability of individual contigs). Then, the next processing step (going beyond the scope of the described algorithm) may be combining the contigs calculated in this way, using more precise matching algorithms (e.g. Smith-Waterman algorithm). In turn, the presence of false overlaps in the results may result in errors in the final DNA sequence."
        },
        {
            "heading": "Experiments for\u00a0dataset A",
            "text": "The first part of the research was to check the algorithm\u2019s operation for artificially generated data (random circular sequences from dataset A). The aim was to compare the results obtained by these algorithms for different overlap values, different error percentages and three different coverage values. Better results (lower path cost, fewer contigs and higher accuracy) were expected for longer overlap lengths, but no such relationship was observed. However, as expected, with the increase in errors in DNA reads, a decrease in accuracy and an increase in the number of contigs were observed. For errorfree sequences, accuracy = 1 was achieved in all three cases (Tables\u00a02, 3 and 4), with both GOT and DWVRP achieving the optimal path for the two highest coverage values (with one exception). Moreover, the dependence of the quality of the obtained results\nTable 3 Results of experiments for circular random sequences (datasetA), coverage=10\nOverlap length Method Path cost Real contigs Calculated contigs Correct overlaps Incorrect overlaps Accuracy\n0% errors 2300 GOT 0 0 0 51 0 1.00\nDWVRP 0 0 0 51 0 1.00\n2500 GOT 0 0 0 51 0 1.00\nDWVRP 65 1 1 50 0 1.00\n2700 GOT 0 0 0 51 0 1.00\nDWVRP 0 0 0 51 0 1.00\n0.5% errors 2300 GOT 127 0 0 51 0 1.00\nDWVRP 176 0 1 50 0 0.98\n2500 GOT 138 0 1 50 0 0.98\nDWVRP 300 1 3 48 0 0.96\n2700 GOT 150 0 0 51 0 1.00\nDWVRP 196 0 1 50 0 0.98\n1.0% errors 2300 GOT 325 0 0 51 0 1.00\nDWVRP 482 0 3 48 0 0.94\n2500 GOT 380 0 1 50 0 0.98\nDWVRP 719 2 6 45 0 0.92\n2700 GOT 288 0 1 50 0 0.98\nDWVRP 509 1 4 47 0 0.94\n1.5% errors 2300 GOT 422 1 0 50 1 0.98\nDWVRP 578 0 4 47 0 0.92\n2500 GOT 483 0 0 51 0 1.00\nDWVRP 581 0 2 49 0 0.96\n2700 GOT 363 0 1 50 0 0.98\nDWVRP 636 1 3 48 0 0.96\non the value of the coverage parameter is clearly visible. Also, as expected, in all cases, better results were achieved by the algorithms performed on the classic computer - only once the accuracy value dropped below 0.85. However, what is essential, the results achieved by DWVRP were not much worse."
        },
        {
            "heading": "Experiments for\u00a0dataset B",
            "text": "The second stage of the research was to check the operation of the GOT and DWVRP algorithms for five actual genomic sequences (covid, lambda phage and three sequences obtained in the first 50k nucleotides of the E. coli genome, for the same three different coverage values as in the previous study). The obtained results, presented in table\u00a05, do not differ significantly in quality from those obtained in previous experiments\u2014the lowest calculated accuracy value is 0.92, and only in two cases one overlap was incorrectly detected. Also, the number of fragments (contigs) into which the travelling salesman path was divided, ranging from 0 to 10 (for the case with the highest number of readings-vertices), does not differ significantly from that observed for artificial sequences, increasing\u2014obviously\u2014with the complexity of the graph. Similar to results obtained for\nTable 4 Results of experiments for circular random sequences (datasetA), coverage=15\nOverlap length Method Path cost Real contigs Calculated contigs Correct overlaps Incorrect overlaps Accuracy\n0% errors 2300 GOT 0 0 0 51 0 1.00\nDWVRP 0 0 0 51 0 1.00\n2500 GOT 0 0 0 51 0 1.00\nDWVRP 0 0 0 51 0 1.00\n2700 GOT 0 0 0 51 0 1.00\nDWVRP 0 0 0 51 0 1.00\n0.5% errors 2300 GOT 285 0 0 51 0 1.00\nDWVRP 461 0 3 48 0 0.94\n2500 GOT 450 0 3 48 0 0.94\nDWVRP 574 0 3 48 0 0.94\n2700 GOT 272 0 4 47 0 0.92\nDWVRP 403 0 7 44 0 0.86\n1.0% errors 2300 GOT 640 0 0 51 0 1.00\nDWVRP 779 0 3 48 0 0.94\n2500 GOT 716 0 2 49 0 0.96\nDWVRP 903 0 3 48 0 0.94\n2700 GOT 509 0 2 49 0 0.96\nDWVRP 816 1 10 41 0 0.82\n1.5% errors 2300 GOT 917 0 1 50 0 0.98\nDWVRP 1994 1 8 43 0 0.86\n2500 GOT 789 1 0 50 1 0.98\nDWVRP 1048 0 2 49 0 0.96\n2700 GOT 837 0 3 48 0 0.94\nDWVRP 1353 2 6 45 0 0.92\ndataset\u00a0A, the GOT achieved better results, but here, too, the DWVRP was only slightly worse. For the last three sequences in table\u00a05 for the GOT, a slight increase in quality can be seen with increasing coverage; for DWVRP, there is no such dependency."
        },
        {
            "heading": "Discussion",
            "text": "The aim of this study, which was to test the method proposed by Jugas et\u00a0al. [12] and evaluate its operation in the classical and hybrid (using quantum annealer calculations) computational model, has been achieved. The experiments carried out for both randomly generated and actual DNA data (using actual genomic sequences and reads from the simulator) confirmed the usefulness of the overlaps detection algorithm based on the Pearson correlation coefficient, as well as the proposed method of dividing the path obtained by the travelling salesman algorithm into coherent fragments of DNA sequences (contigs) in the de novo assembly task. The high efficiency of the algorithm was demonstrated for sequences with sufficient coverage and low error content.\nThe presented algorithm fits in with the approach of searching for the most accurate (error-free) contigs, where we accept obtaining a set of consistent genome fragments instead of one resulting sequence, not necessarily covering the entire genome of interest. By appropriately selecting the threshold of the evaluation function for the algorithm that detects false overlaps, we can obtain high-quality contigs with a low (or even zero) probability of an error. This approach can be used, for example, in the case of assembling genomes of large organisms, where we are primarily interested in coding regions. In addition, the use of alternative forms of DNA sequence representation (other than cumulative phase representation) would be worth considering.\nThe presented research is preliminary, as this work - as already mentioned\u2014is a proof of concept. It is necessary to conduct experiments for a more significant number of test cases of organisms that differ in terms of belonging to a specific kingdom or phylum and genome size and verify the scalability of the method. In addition, the study would be worth extending to sequences obtained by other sequencers, such as Oxford Nanopore (utilising long-read sequences similar to the tested PacBio). The problem of repeated regions in DNA sequences should also be solved, e.g. by appropriate methods of filtering out erroneous reads (as proposed in [17]).\nTable 5 Results of experiments for datasetB\nSequence Method Path cost Real contigs Calculated contigs Correct overlaps Incorrect overlaps Accuracy\ncovid19 GOT 524 0 0 52 0 1.00\nDWVRP 756 0 2 50 0 0.96\nlambda_phage GOT 99 1 5 85 0 0.96\nDWVRP 174 2 9 81 0 0.92\nNC_000913_cov5 GOT 282 2 1 45 1 0.98\nDWVRP 518 5 7 40 0 0.96\nNC_000913_cov10 GOT 282 1 2 90 0 0.99\nDWVRP 678 4 6 85 1 0.96\nNC_000913_cov15 GOT 229 1 1 137 0 1.00\nDWVRP 526 3 10 128 0 0.95\nSeveral improvements can be made in the implementation of the developed pipeline. It would be worth considering optimising part of the calculations performed on a classic computer, e.g. parallelisation using GPU. In addition, the part responsible for finding the travelling salesman using quantum annealer was based on a ready-made tool dedicated to VRP, not TSP. Willing to apply the discussed method in practice, it would be worth developing a dedicated tool optimised for TSP (as a particular case of VRP).\nIn order to be able to state whether the computations on quantum annealer\u2014quantum or hybrid\u2014applied to de novo assembly task compete with the classical ones, further research is needed. Since the presented algorithm can by no means be considered a complete assembler, it is difficult to compare the obtained results with the existing tools. In order to be able to actually compare the results obtained with the use of the hybrid approach (QPU\u00a0+\u00a0CPU) with classical algorithms, an appropriate method of evaluating the results should be developed, taking into account the specificity of calculations made on the QA. Besides, as it was mentioned in\u00a0Preliminary assumptions section, a few simplifying assumptions were made in the conducted experiments\u2014the next necessary step in further research is their removal or at least easing of the restrictions. The algorithm would also need to be scaled up in order to be able to analyze genomes larger than viral ones. Only then will it be known whether we should wait for more computing power or whether the current version of quantum annealers can be helpful in practical applications. It should be remembered that quantum computers are still immature in hardware and the number of dedicated algorithms available, be it for quantum annealer or general-purpose quantum computers. In the case of the latter, the gap between theoretical possibilities and hardware development is even more comprehensive. If the computing power would allow the travelling salesman problem to be embedded for thousands of vertices (and not several as today), the possibilities offered by the quantum annealing algorithm could be used directly. For now, however, we are forced to use hybrid methods for problems of the size we have for the de novo assembly issue.\nIn our opinion, a worth exploring direction is a completely different approach to the de novo assembly problem, i.e. the use of overlap-layout-consensus graphs and an attempt to assemble\u2014by solving the TSP problem-sequences on quantum annealer using the fact that these are sparse, bounded degree graphs. The question posed in this way should be formulated as QUBO. The number of variables necessary for quantum annealer to be considered will be many times lower than for the complete graph."
        },
        {
            "heading": "Conclusions",
            "text": "The effectiveness of the algorithm proposed by Jugas et\u00a0al. [12] for artificial and actual DNA sequences was confirmed. The usefulness of quantum annealer for solving the travelling salesman problem was tested for actual sequences (with simulated reads). The algorithm was scaled to the size of viral genomes.\nWe developed a new algorithm for de-novo assembly that uses both: quantum computer (quantum annealer) and classical electronics computer (CPU). The linear complexity parts of our algorithm are deployed on CPU, the parts with higher complexity on QA. We tested this algorithm on real data, and we used D-Wave VRP implementing hybrid approach.\nOur research confirms that computing with the use of quantum annealer can be an\u00a0alternative to other methods, such as large computing clusters or parallelisation with the use of GPU. This direction is worth exploring by developing dedicated algorithms based on the quantum paradigm.\nOur goal was to show a\u00a0new\u00a0computational paradigm, using quantum annealing, to solve the practical problem of de novo assembly. Indeed, the results achieved by our algorithm are (in most cases) slightly worse than those achieved by the classical algorithm. However, since these differences are small, it can be assumed after further work on\u00a0the development of\u00a0the described method (such as the selection of appropriate processing parameters for QPU strictly for the assembly task, as the current experiments were carried out for the default values used in the D-Wave-VRP tool) and, above all, with the development of QA technology, the chances of these results will be better.\nAbbreviations DWVRP: D\u2011Wave\u2011VRP [20] tool; GOT: Google OR Tools; NGS: Next generation sequencing; QA: Quantum annealer; QPU: Quantum processing unit; QUBO: Quadratic unconstrained binary optimization; TSP: Travelling Salesman Problem; VRP: Vehicle Routing Problem.\nAcknowledgements Not applicable.\nAuthor contributions KN developed the concept of the work, obtained the necessary data, selected the tools, implemented the algorithm (its original parts and integration with existing tools), conducted experiments and analysis of their results, and wrote this text. RN provided funding and advice during the development of the algorithm concept and the selection of data for experiments, as well as made a substantive correction of the work. Both authors read and approved the final manuscript.\nFunding This work was supported by Warsaw University of Technology Grant CYBERIADA1.\nAvailability of data and materials The code and data used in the presented research are publicly available in the GitHub repository (recent version) and Zenodo (archived version) under the MIT license. The list of NCBI accession numbers of sequences used for this study (dataset B) is available on the GitHub repository."
        },
        {
            "heading": "Declarations",
            "text": "Ethics approval and consent to participate Not applicable.\nConsent for publication Not applicable.\nCompeting interests The authors declare that they have no competing interests.\nReceived: 8 September 2021 Accepted: 28 March 2022\nReferences 1. Sohn J\u2011I, Nam J\u2011W. The present and future of de novo whole\u2011genome assembly. Brief Bioinform. 2016. https:// doi.\norg/ 10. 1093/ bib/ bbw096. 2. Karp RM. Reducibility among combinatorial problems. In: Miller RE, Thatcher JW, Bohlinger JD, editors. Complexity of\ncomputer computations. Boston: Springer; 1972. p. 85\u2013103. https:// doi. org/ 10. 1007/ 978\u20111\u2011 4684\u2011 2001\u20112_9. 3. Matai R, Singh S, Lal M. Traveling salesman problem: an overview of applications, formulations, and solution\napproaches. In: Davendra D, editor. Traveling salesman problem, theory and applications. London: InTech Press; 2010. https:// doi. org/ 10. 5772/ 12909. 4. Peng S\u2011L, Chang C\u2011S, Hunag J, Wang T\u2011C. A grid\u2011based TSP solver with applications to bioinformatics. J Internet Technol. 2008;9:223\u20138. 5. Kadowaki T, Nishimori H. Quantum annealing in the transverse Ising model. Phys Rev E. 1998;58(5):5355\u201363. https:// doi. org/ 10. 1103/ physr eve. 58. 5355.\n\u2022 fast, convenient online submission \u2022 thorough peer review by experienced researchers in your field \u2022 rapid publication on acceptance \u2022 support for research data, including large and complex data types \u2022 gold Open Access which fosters wider collaboration and increased citations maximum visibility for your research: over 100M website views per year \u2022\nAt BMC, research is always in progress.\nLearn more biomedcentral.com/submissions\nReady to submit your research ? Choose BMC and benefit from:\n6. King J, Yarkoni S, Raymond J, Ozfidan I, King AD, Nevisi MM, Hilton JP, McGeoch CC. Quantum annealing amid local ruggedness and global frustration. J Phys Soc Jpn. 2019;88(6):061007. https:// doi. org/ 10. 7566/ jpsj. 88. 061007. 7. Denchev VS, Boixo S, Isakov SV, Ding N, Babbush R, Smelyanskiy V, Martinis J, Neven H. What is the computational value of finite\u2011range tunneling? Phys Rev X. 2016. https:// doi. org/ 10. 1103/ physr evx.6. 031015. 8. Feld S, Roch C, Gabor T, Seidel C, Neukart F, Galter I, Mauerer W, Linnhoff\u2011Popien C. A hybrid solution method for the capacitated vehicle routing problem using a quantum annealer. Front ICT. 2019. https:// doi. org/ 10. 3389/ fict. 2019. 00013. 9. Jain S. Solving the traveling salesman problem on the d\u2011wave quantum computer. Front Phys. 2021. https:// doi. org/ 10. 3389/ fphy. 2021. 760783. 10. Boev AS, Rakitko AS, Usmanov SR, Kobzeva AN, Popov IV, Ilinsky VV, Kiktenko EO, Fedorov AK. Genome assembly using quantum and quantum\u2011inspired annealing. Sci Rep. 2021. https:// doi. org/ 10. 1038/ s41598\u2011 021\u2011 88321\u20115. 11. Sarkar A, Al\u2011Ars Z, Bertels K. QuASeR: quantum accelerated de novo DNA sequence reconstruction. PLoS ONE. 2021;16(4):0249850. https:// doi. org/ 10. 1371/ journ al. pone. 02498 50. 12. Jugas R, Vitek M, Sedlar K, Skutkova H. Cross\u2011correlation based detection of contigs overlaps. In: 41st International convention on information and communication technology, electronics and microelectronics (MIPRO), 2018; p. 0155\u20130158. https:// doi. org/ 10. 23919/ MIPRO. 2018. 84000 30. 13. Cristea PD. Phase analysis of DNA genomic signals. In: Proceedings of the 2003 international symposium on circuits and systems, ISCAS \u201903, vol. 5, 2003. https:// doi. org/ 10. 1109/ ISCAS. 2003. 12061 63. 14. Cristea PD. Conversion of nucleotides sequences into genomic signals. J Cell Mol Med. 2002;6(2):279\u2013303. https:// doi. org/ 10. 1111/j. 1582\u2011 4934. 2002. tb001 96.x. 15. Kirch W. Pearson\u2019s correlation coefficient. Dordrecht: Springer; 2008. p. 1090\u20131. https:// doi. org/ 10. 1007/ 978\u20111\u2011 4020\u2011 5614\u20117_ 2569. 16. Parsons RJ, Forrest S, Burks C. Genetic algorithms, operators, and DNA fragment assembly. Mach Learn. 1995;21(1/2):11\u201333. https:// doi. org/ 10. 1023/a: 10226 13513 712. 17. Mallen\u2011Fullerton GM, Fernandez\u2011Anaya G. DNA fragment assembly using optimization. In: IEEE Congress on Evolu\u2011 tionary Computation. IEEE; 2013. https:// doi. org/ 10. 1109/ cec. 2013. 65577 49. 18. Perron L, Furnon V. OR\u2011Tools. https:// devel opers. google. com/ optim izati on/ 19. Perron L, Furnon V. Traveling salesperson problem. https:// devel opers. google. com/ optim izati on/ routi ng/ tsp (2019).\nAccessed 12 Aug 2021. 20. Borowski M, Gora P, Karnas K, B\u0142ajda M, Kr\u00f3l K, Matyjasek A, Burczyk D, Szewczyk M, Kutwin M. New hybrid quantum\nannealing algorithms for solving vehicle routing problem. In: Krzhizhanovskaya VV, Z\u00e1vodszky G, Lees MH, Dongarra JJ, Sloot PMA, Brissos S, Teixeira J, editors. Computational Science\u2013ICCS 2020. Cham: Springer; 2020. p. 546\u201361. 21. Dantzig GB, Ramser JH. The truck dispatching problem. Manag Sci. 1959;6(1):80\u201391. https:// doi. org/ 10. 1287/ mnsc.6. 1. 80. 22. Lucas A. Ising formulations of many NP problems. Front Phys. 2014. https:// doi. org/ 10. 3389/ fphy. 2014. 00005. 23. Grant E, Humble T, Stump B. Benchmarking quantum annealing controls with portfolio optimization. 2020. https://\ndoi. org/ 10. 1103/ PhysR evApp lied. 15. 014012. arXiv: 2007. 03005. 24. Bujel K, Lai F, Szczeci\u0144ski M, So W, Fernandez M. Solving high volume capacitated vehicle routing problem with time\nwindows using recursive\u2011DBSCAN clustering algorithm. 2018. arXiv: 1812. 02300 25. Rice P, Longden I, Bleasby A. EMBOSS: the European molecular biology open software suite. Trends Genet.\n2000;16(6):276\u20137. https:// doi. org/ 10. 1016/ s0168\u2011 9525(00) 02024\u20112. 26. Lee H. ReadSim 1.6\u2011read simulator for long reads. http:// sourc eforge. net/ proje cts/ reads im/."
        },
        {
            "heading": "Publisher\u2019s Note",
            "text": "Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations."
        }
    ],
    "title": "Algorithm for DNA sequence assembly by quantum annealing",
    "year": 2022
}