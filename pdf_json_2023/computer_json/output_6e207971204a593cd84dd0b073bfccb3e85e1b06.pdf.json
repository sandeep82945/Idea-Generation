{
    "abstractText": "In recent years, the increasing threat of devastating wildfires has underscored the need for effective prescribed fire management. Process-based computer simulations have traditionally been employed to plan prescribed fires for wildfire prevention. However, even simplified process models are too compute-intensive to be used for real-time decision-making. Traditional ML methods used for fire modeling offer computational speedup but struggle with physically inconsistent predictions, biased predictions due to class imbalance, biased estimates for fire spread metrics (e.g., burned area, rate of spread), and limited generalizability in out-of-distribution wind conditions. This paper introduces a novel machine learning (ML) framework that enables rapid emulation of prescribed fires while addressing these concerns. To overcome these challenges, the framework incorporates domain knowledge in the form of physical constraints, a hierarchical modeling structure to capture the interdependence among variables of interest, and also leverages pre-existing source domain data to augment training data and learn the spread of fire more effectively. Notably, improvement in fire metric (e.g., burned area) estimates offered by our framework makes it useful for fire managers, who often rely on these estimates to make decisions about prescribed burn management. Furthermore, our framework exhibits better generalization capabilities than the other ML-based fire modeling methods across diverse wind conditions and ignition patterns.",
    "authors": [
        {
            "affiliations": [],
            "name": "Somya Sharma Chatterjee"
        },
        {
            "affiliations": [],
            "name": "Kelly Lindsay"
        },
        {
            "affiliations": [],
            "name": "Neel Chatterjee"
        },
        {
            "affiliations": [],
            "name": "Rohan Patil"
        },
        {
            "affiliations": [],
            "name": "Ilkay Altintas De Callafon"
        },
        {
            "affiliations": [],
            "name": "Michael Steinbach"
        },
        {
            "affiliations": [],
            "name": "Daniel Giron"
        },
        {
            "affiliations": [],
            "name": "Mai H. Nguyen"
        },
        {
            "affiliations": [],
            "name": "Vipin Kumar"
        }
    ],
    "id": "SP:8db3ecee7dc4320947e7395a49782f8297974ad1",
    "references": [
        {
            "authors": [
                "John T Abatzoglou"
            ],
            "title": "Impact of anthropogenic climate change on wildfire across western US forests",
            "venue": "Proceedings of the National Academy of Sciences 113,",
            "year": 2016
        },
        {
            "authors": [
                "Sadia Afrin",
                "Fernando Garcia-Menendez"
            ],
            "title": "A machinelearning model for prescribed fire smoke in the Southeastern US",
            "venue": "In AGU Fall Meeting Abstracts,",
            "year": 2021
        },
        {
            "authors": [
                "Anxhelo Agastra"
            ],
            "title": "Evaluating a Probability-Based Model for Prescribed Fire Forecasting with Machine Learning",
            "year": 2020
        },
        {
            "authors": [
                "Amila Akagic",
                "Emir Buza"
            ],
            "title": "Lw-fire: A lightweight wildfire image classification with a deep convolutional neural network",
            "venue": "Applied Sciences 12,",
            "year": 2022
        },
        {
            "authors": [
                "Frederic Allaire",
                "Vivien Mallet",
                "Jean-Baptiste Filippi"
            ],
            "title": "Emulation of wildland fire spread simulation using deep learning",
            "venue": "Neural networks",
            "year": 2021
        },
        {
            "authors": [
                "Reza Azad"
            ],
            "title": "Bi-directional ConvLSTM U-Net with densley connected convolutions",
            "venue": "In Proceedings of the IEEE/CVF international conference on computer vision workshops",
            "year": 2019
        },
        {
            "authors": [
                "Shitai Bao"
            ],
            "title": "Optimizing watchtower locations for forest fire monitoring using location models",
            "venue": "Fire safety journal",
            "year": 2015
        },
        {
            "authors": [
                "Andrew Bolt"
            ],
            "title": "A spatio-temporal neural network forecasting approach for emulation of firefront models",
            "year": 2022
        },
        {
            "authors": [
                "Luca Bottero"
            ],
            "title": "Physics-informed machine learning simulator for wildfire propagation",
            "venue": "arXiv preprint arXiv:2012.06825",
            "year": 2020
        },
        {
            "authors": [
                "John Burge",
                "Matthew Bonanni",
                "Matthias Ihme",
                "Lily Hu"
            ],
            "title": "Convolutional LSTM neural networks for modeling wildland fire dynamics",
            "year": 2020
        },
        {
            "authors": [
                "Khaled Chetehouna"
            ],
            "title": "Predicting the flame characteristics and rate of spread in fires propagating in a bed of Pinus pinaster using Artificial Neural Networks",
            "venue": "Process Safety and Environmental Protection",
            "year": 2015
        },
        {
            "authors": [
                "Zachary Cope"
            ],
            "title": "Using Convolutional Neural Networks to Predict QUIC-Fire Outputs",
            "venue": "In AGU Fall Meeting Abstracts,",
            "year": 2021
        },
        {
            "authors": [
                "Paulo Cortez",
                "An\u0131\u0301bal de Jesus Raimundo Morais"
            ],
            "title": "A data mining approach to predict forest fires using meteorological data",
            "year": 2007
        },
        {
            "authors": [
                "Mark A Finney"
            ],
            "title": "FARSITE, Fire Area Simulator\u2013model development and evaluation",
            "venue": "Number 4. US Department of Agriculture,",
            "year": 1998
        },
        {
            "authors": [
                "Nicolas Frangieh"
            ],
            "title": "Numerical simulation of grassland fires behavior using an implicit physical multiphase model",
            "venue": "Fire safety journal",
            "year": 2018
        },
        {
            "authors": [
                "James H Furman",
                "Rodman Linn"
            ],
            "title": "What is FIRETEC (and why should I care)",
            "venue": "Fire Management Today 76,",
            "year": 2018
        },
        {
            "authors": [
                "Michael R Gallagher"
            ],
            "title": "Reconstruction of the Spring Hill Wildfire and Exploration of Alternate Management Scenarios Using QUIC-Fire",
            "venue": "Fire 4,",
            "year": 2021
        },
        {
            "authors": [
                "Jonathan Gaudreau"
            ],
            "title": "BorealFireSim: A GIS-based cellular automata model of wildfires for the boreal forest of Quebec in a climate change paradigm",
            "venue": "Ecological Informatics",
            "year": 2016
        },
        {
            "authors": [
                "Michael Gollner"
            ],
            "title": "Towards data-driven operational wildfire spread modeling: A report of the NSF-funded WIFIRE workshop",
            "year": 2015
        },
        {
            "authors": [
                "J Kevin Hiers"
            ],
            "title": "Prescribed fire science: The case for a refined research agenda",
            "venue": "Fire Ecology",
            "year": 2020
        },
        {
            "authors": [
                "Chad M Hoffman"
            ],
            "title": "Advancing the science of wildland fire dynamics using process-based models",
            "venue": "Fire 1,",
            "year": 2018
        },
        {
            "authors": [
                "Fantine Huot",
                "R Lily Hu",
                "Matthias Ihme",
                "Qing Wang",
                "John Burge",
                "Tianjian Lu",
                "Jason Hickey",
                "Yi-Fan Chen",
                "John Anderson"
            ],
            "title": "Deep learning models for predicting wildfires from historical remotesensing data",
            "year": 2020
        },
        {
            "authors": [
                "Piyush Jain"
            ],
            "title": "A review of machine learning applications in wildfire science and management",
            "venue": "Environmental Reviews 28,",
            "year": 2020
        },
        {
            "authors": [
                "Paul Johnston"
            ],
            "title": "Efficient simulation of wildfire spread on an irregular grid",
            "venue": "International Journal of Wildland Fire 17,",
            "year": 2008
        },
        {
            "authors": [
                "Jeffrey Katan",
                "Liliana Perez"
            ],
            "title": "ABWiSE v1. 0: toward an agent-based approach to simulating wildfire spread",
            "venue": "Natural Hazards and Earth System Sciences 21,",
            "year": 2021
        },
        {
            "authors": [
                "Jonathan Koh"
            ],
            "title": "Spatiotemporal wildfire modeling through point processes with moderate and extreme marks",
            "venue": "The annals of applied statistics 17,",
            "year": 2023
        },
        {
            "authors": [
                "VI Kozik"
            ],
            "title": "Adaptive prediction of forest fire behavior on the basis of recurrent neural networks. Optoelectronics, Instrumentation and Data",
            "venue": "Processing 49,",
            "year": 2013
        },
        {
            "authors": [
                "C\u00e9cile Kremer"
            ],
            "title": "Quantifying superspreading for COVID- 19 using Poisson mixture distributions",
            "venue": "Scientific reports 11,",
            "year": 2021
        },
        {
            "authors": [
                "Hao Liang"
            ],
            "title": "A neural network model for wildfire scale prediction using meteorological factors",
            "venue": "IEEE Access",
            "year": 2019
        },
        {
            "authors": [
                "Rodman Linn"
            ],
            "title": "Studying wildfire behavior using FIRETEC",
            "venue": "International journal of wildland fire 11,",
            "year": 2002
        },
        {
            "authors": [
                "Rodman Ray Linn"
            ],
            "title": "QUIC-Fire: A fast-running simulation tool for prescribed fire planning",
            "venue": "Environmental Modelling & Software",
            "year": 2020
        },
        {
            "authors": [
                "M Marjani",
                "MS Mesgari"
            ],
            "title": "The Large-Scale Wildfire Spread Prediction Using a Multi-Kernel Convolutional Neural Network",
            "venue": "IS- PRS Annals of the Photogrammetry, Remote Sensing and Spatial Information Sciences",
            "year": 2023
        },
        {
            "authors": [
                "Sean McGregor"
            ],
            "title": "Fast simulation for computational sustainability sequential decision making problems",
            "venue": "In Proceedings of the 4th international conference on computational sustainability",
            "year": 2016
        },
        {
            "authors": [
                "TD Penman"
            ],
            "title": "Bayes Nets as a method for analysing return for investment in fire management planning",
            "venue": "International Journal of Wildland Fire",
            "year": 2011
        },
        {
            "authors": [
                "Luis A P\u00e9rez-Rodr\u0131\u0301guez"
            ],
            "title": "Evaluation of prescribed fires from unmanned aerial vehicles (UAVs) imagery and machine learning algorithms",
            "venue": "Remote Sensing 12,",
            "year": 2020
        },
        {
            "authors": [
                "Youssef Safi",
                "Abdelaziz Bouroumi"
            ],
            "title": "Prediction of forest fires using artificial neural networks",
            "venue": "Applied Mathematical Sciences 7,",
            "year": 2013
        },
        {
            "authors": [
                "Nathan H Schumaker"
            ],
            "title": "HexFire: a flexible and accessible wildfire simulator",
            "venue": "Land 11,",
            "year": 2022
        },
        {
            "authors": [
                "Xingjian Shi"
            ],
            "title": "Convolutional LSTM network: A machine learning approach for precipitation nowcasting",
            "venue": "Advances in neural information processing systems",
            "year": 2015
        },
        {
            "authors": [
                "Jeremy Storer",
                "Robert Green"
            ],
            "title": "PSO trained neural networks for predicting forest fire size: a comparison of implementation and performance",
            "venue": "In 2016 international joint conference on neural networks (IJCNN)",
            "year": 2016
        },
        {
            "authors": [
                "Sriram Ganapathi Subramanian",
                "Mark Crowley"
            ],
            "title": "Learning forest wildfire dynamics from satellite images using reinforcement learning. In Conference on reinforcement learning and decision making",
            "venue": "Ann Arbor MI",
            "year": 2017
        },
        {
            "authors": [
                "Andrew L Sullivan"
            ],
            "title": "Wildland surface fire spread modelling, 1990\u20132007",
            "venue": "International Journal of Wildland Fire 18,",
            "year": 2009
        },
        {
            "authors": [
                "Andrew L Sullivan",
                "James S Gould"
            ],
            "title": "Wildland Fire Rate of Spread. In Encyclopedia of Wildfires and Wildland-Urban Interface (WUI) Fires",
            "year": 2020
        },
        {
            "authors": [
                "Samuel Sung",
                "Yuping Li",
                "Leonard Ortolano"
            ],
            "title": "A 3D Convolutional Neural Network for Predicting Wildfire Profiles",
            "year": 2020
        },
        {
            "authors": [
                "Kevin Tolhurst"
            ],
            "title": "Phoenix: development and application of a bushfire risk management tool",
            "venue": "Australian journal of emergency management 23,",
            "year": 2008
        },
        {
            "authors": [
                "Cordy Tymstra"
            ],
            "title": "Development and structure of Prometheus: the Canadian wildland fire growth simulation model. Natural Resources Canada, Canadian Forest Service, Northern Forestry Centre",
            "venue": "Information Report NOR-X-417.(Edmonton,",
            "year": 2010
        },
        {
            "authors": [
                "Christine Wiedinmyer",
                "Matthew D Hurteau"
            ],
            "title": "Prescribed fire as a means of reducing forest carbon emissions in the western United States",
            "venue": "Environmental science & technology 44,",
            "year": 2010
        },
        {
            "authors": [
                "Jared Willard"
            ],
            "title": "Integrating scientific knowledge with machine learning for engineering and environmental systems",
            "venue": "Comput. Surveys 55,",
            "year": 2022
        },
        {
            "authors": [
                "Suwei Yang",
                "Massimo Lupascu",
                "Kuldeep S Meel"
            ],
            "title": "Predicting forest fire using remote sensing data and machine learning",
            "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2021
        },
        {
            "authors": [
                "Yanzhu Zan"
            ],
            "title": "Emulation of Forest Fire Spread Using ResNet and Cellular Automata",
            "venue": "In 2022 7th International Conference on Computer and Communication Systems (ICCCS)",
            "year": 2022
        },
        {
            "authors": [
                "Guoli Zhang"
            ],
            "title": "Dynamic prediction of global monthly burned area with hybrid deep neural networks",
            "venue": "Ecological Applications (2022),",
            "year": 2022
        },
        {
            "authors": [
                "Puzhao Zhang",
                "Yifang Ban",
                "Andrea Nascetti"
            ],
            "title": "Learning U- Net without forgetting for near real-time wildfire monitoring by the fusion of SAR and optical time series",
            "venue": "Remote Sensing of Environment",
            "year": 2021
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "Thousands of wildfires engulf millions of acres in the United States each year alone [1]. These fires threaten wildlife and human lives and destroy personal property. Fire managers (also known as burn bosses) use prescribed fires, the intentional and controlled lighting of fire, to reduce the fuel that feeds extreme fires and help improve forest health by recycling soil nutrients and controlling pests [48; 22]. Prescribed\n*University of Minnesota. \u2020University of California San Diego. \u2021Colorado State University.\nfires are generally ignited only when specific conditions are met, such as lower wind speed conditions. Otherwise, lighting of prescribed burns is likely to jeopardize the fire crew\u2019s safety and cause collateral damage, similar to the prescribed fire that led to wildfire in Santa Fe National Forest in 2022 [12]. To minimize the risk of wildfires, fire managers use process-based models to forecast the trajectory of prescribed fires [25]. These process-based models simulate underlying physical processes in a fire system to identify areas that may burn under given weather conditions (such as wind speed and wind direction), fuel density, and pre-decided ignition pattern. Fire crews use models for such simulations to decide if a prescribed fire can be started under expected wind conditions. However, the weather conditions can change quickly (from the predicted scenario), and the crew has to decide if the risk of a wildland fire starting is big enough to call off the burn. Under such rapidly changing situations, even the fastest fire models cannot enable fire managers to make such decisions.\nAmong the traditionally used fire models, QUIC-Fire is the only process model specifically designed for prescribed fire simulation and provides the fastest run time at higher resolution [33]. QUIC-Fire has been used collaboratively with prescribed fire managers to plan prescribed burns and to understand better the impact of differing weather and ignition conditions on the outcome of a burn. While QUIC-Fire (QF) provides significant speedup over other process-based models [19], its computation time and resource requirements still limit its usability for real-time decision-making, which may require rapid assessments of prescribed fire spread as the weather conditions change in real-time. Therefore, a prescribed fire modeling framework with faster than real-time computation time will be useful to fire managers to ensure the safe lighting of prescribed fires.\nThe goal of this paper is to build an ML-based surrogate model that can provide such decisions quickly. While there has been some work on wildfire modeling (see related work), there is little work that can be used in the context of prescribed fire modeling. While a framework using CNN [14] has been developed for forecasting prescribed\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\nar X\niv :2\n31 0.\n01 59\n3v 1\n[ cs\n.L G\n] 2\nO ct\n2 02\nfire spread, its utility is limited since it requires simulated variables from QUIC-Fire as input to make forecasts further. Therefore, there is still a need for a framework that can be used to forecast the spread of prescribed fire from the initial wind condition at the time of lighting of fire and still be fast enough to be useful in an operational setting. Additionally, in the context of wildfires, CNN [14; 4; 50; 34; 45], ConvLSTM [11; 24] and UNet [24; 53] models have been developed to model the evolution of wildfires. However, due to several differences in the exogenous variables, ignition patterns, and fire spread mechanisms, methods developed for wildfires are not suitable for modeling prescribed fires. Wildfires and prescribed fires differ in their physical behavior and environmental conditions, with wildfires being long-lasting fires ignited under low moisture and higher wind speeds at one or few ignition points, while prescribed fires are intentionally set by burn bosses under controlled conditions, often involving multiple fire lines interacting with each other.\nMoreover, the aforementioned ML methods are unable to accurately model the complex nonlinear interaction among physical processes in a prescribed fire system. These methods face three major challenges. First, this leads to physical inconsistencies in the predicted fuel density distribution, such as inaccurate fuel transportation and inconsistent contraction of burned area. Another challenge is forecasting the sequence information from only the initial environmental conditions. In prescribed fire modeling, predictions from ML models suffer from class imbalance problem where the majority class of unburned pixels bias the fuel predictions, translating into an overestimation of fuel in burned regions. This bias problem is exacerbated when testing model performance in more extreme wind conditions in out-of-distribution settings. The third challenge is the inaccurate estimation of summary statistics used by fire man-\nagers in operational settings. One such metric is the burned area or number of burned cells that enables an improved understanding of the severity of the burn. However, when the ML model inaccurately predicts the fuel density spatial distribution, the number of burned cells is often underestimated.\nTo overcome the above challenges, we propose using a physics-guided spatiotemporal model that addresses the complexities of emulating prescribed fire evolution. It integrates physical constraints, leverages domain knowledge, and provides fast time-series forecasts, making it a valuable tool for burn bosses and stakeholders involved in prescribed fire planning and decision-making. In our framework, we propose integrating known physical constraints and domain knowledge in the model to enable the ML model to learn physically consistent values [49]. Such a physics-informed surrogate model would be extremely useful for planning fires and providing speedup over simulators in complex scenarios under different wind conditions, long time scales, or large land areas. To overcome the second challenge, we leverage preexisting source domain data to accurately learn the spread of fire beyond the ignited cells. This domain adaptation mechanism allows us to transfer knowledge for a given ignition pattern from lower wind speed settings to scenarios with a higher wind speed. This enables us to generalize the predictions beyond the case where we can use historical data on the same ignition pattern lit under different weather conditions. To address the third challenge, we integrate a probabilistic graphical structure to model the interdependence between fuel density and the number of burned cells. This ensures that we can enforce prior beliefs about these quantities and that the learned embeddings can capture the hierarchical relationship between the two quantities. The probabilistic graphical modeling and the physics-guided learning ensure that the summary statistics, like the number of burned cells in the grid are estimated accurately. These statistics are used by the fire crew to understand how to modify the ignition pattern to achieve the desired results from the prescribed fire.\nWe use simulations from QUIC-Fire (perceptual model for fuel cell illustrated in Appendix, Figure ??), as the ground truth for learning an ML emulator. The proposed ML-based emulator provides speedup over QUIC-Fire and can be used for faster than real-time prescribed fire forecasting. From initial wind conditions and user-provided ignition pattern (sequence map of how the burn bosses will ignite cells in a spatial grid), the emulator can provide the evolution of fire (in terms of fuel density, the mass of fire fuel per unit volume) over time. We have released our code in a temporary Google drive link.\nThe summary of contributions of this work is provided next.\n\u2022 To the best of our knowledge, we propose the first prescribed fire emulator to predict fuel density evolution\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\nfrom initial wind conditions and ignition patterns. The physics-guided model improves the MSE in fuel density predictions by 55% over data-driven ML models and reduces the fuel density estimation time by 69% over QUIC-Fire.\n\u2022 We enrich the feature set by including preexisting source domain data (fuel density similar in ignition pattern) as an additional channel. This ensures that the model overcomes the bias towards the overestimation of fuel and learns a more accurate fire spread behavior.\n\u2022 Using physics-guided learning, we incorporate physical constraints in the learning process to improve our generalization ability using limited input data while ensuring physical consistency in our predictions. This physical knowledge is drawn from the assumptions and fire behavior encoded in the QUIC-Fire model.\n\u2022 We also estimate fuel density and burned area as part of a graphical modeling structure that improves the representations learned for these quantities at different levels of abstraction.\n\u2022 Extensive experiments demonstrate the effectiveness of the proposed method in emulating prescribed fire behavior. Measuring success in many scientific domains, including fire modeling, is hard to capture via standard performance metrics commonly used in ML model design. We propose new loss functions and evaluation metrics to evaluate the physical consistency of the outputs from ML models. The results of these experiments demonstrate that our approach performs better than other fire modeling methods in terms of both prediction performance and physical consistency of the outputs."
        },
        {
            "heading": "2 Related Work",
            "text": "Traditional fire behavior simulator models [16; 32; 47; 46; 20] have been used for simulating wildfires [26; 43; 21; 27]. While these models have been adapted for generating prescribed fire simulations, they often make assumptions that may not be suitable for prescribed fire modeling and overlook the fire suppression behavior specific to prescribed fires. Additionally, their computational cost hinders their practical implementation for real-time operational decision-making [39; 17]. QUIC-Fire [33] overcomes some of these challenges and offers faster runtime compared to other processbased models.\nMachine learning (ML) models have emerged as computationally efficient alternatives to process-based models, demonstrating success in various wildfire modeling tasks, including fuel characterization, fire risk, and fire effect prediction [25; 52; 51; 9], long-term planning [7; 35; 36], burned\narea prediction [15; 38; 41; 31], fire behavior prediction (e.g., fire spread, growth, severity) [42; 13; 29]. However, methods developed for wildfire modeling may not generalize to prescribed fire modeling [22; 18; 23; 14; 33]. Wildfires are unplanned and may be caused by natural or accidental human ignitions. Prescribed fires are planned to meet management objectives and are ignited under pre-determined environmental conditions. In terms of fire mechanics, wildfires are often modeled as a single ignition point, eventually leading to an ellipsoid fire shape. In contrast, prescribed fires are ignited at several ignition points, often in terms of several fire lines. This creates a more complex interaction among the fire ignited at different points, leading to fire suppression. Prescribed fires are more complex and difficult to model compared to wildfires. Wildfire modeling often also looks at wildfires that have been burning for days, while prescribed fires are planned to be executed in a single day. Due to differences in time scales, wildfires are more heavily impacted by moisture content in the atmosphere and weather patterns over several days, while the effect of these exogenous variables may not be that prominent for prescribed fires. This leads to a difference in fire behavior in a wildfire and a prescribed fire [22; 23; 18].\nAdvancements in physics-guided ML have also contributed to wildfire modeling [5; 10]. However, the physical assumptions made by current methods are not suitable for prescribed fire modeling. These methods overlook the interaction of fire with ambient wind conditions and may suffer from numerical instability [10]. In contrast, our framework leverages simulations from QUIC-Fire as ground truth, enabling the learning of the two-way interaction between environmental conditions and fire behavior without making strong assumptions. Moreover, previous studies in prescribed fire modeling have not extensively explored the specific problem of prescribed fire evolution modeling based on initial environmental conditions [14; 3; 2; 37]. This capability is crucial for effective prescribed fire planning. By addressing this gap, our framework fills an important need in the existing ML literature. Relevant ML methods for prescribed fire and wildfire forecasting include CNN [14; 4; 50; 34; 45], ConvLSTM [11; 24], and UNet [24; 53] models. We also show a comparison with these methods in the paper."
        },
        {
            "heading": "3 Problem Setting",
            "text": "In this work, we study the evolution of fuel density, the mass of fire fuel per unit volume, as prescribed fire spreads. We useN simulation runs from the QUIC-Fire model as training examples to learn a data-driven emulator of QUIC-Fire. The input tensor for training example, i, can be represented as Xi \u2208 Rn\u00d7M\u00d7P\u00d7C , where n is the number of time steps in the sequence, M and P are the number of rows and columns of cells forming the spatial grid and C is the number of input\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\nchannels. In our experiments, C includes initial wind speed, initial wind direction, ignition pattern, and source domain fuel density maps. Similarly, the fuel density output for the model can be represented as Yi \u2208 Rn\u00d7M\u00d7P\u00d71. The initial wind speed and wind direction are static channels - available only for the first time step and repeated throughout the grid and the sequence to obtain the embeddings that are used as inputs to the emulator. Whereas ignition patterns and source domain maps are dynamic inputs."
        },
        {
            "heading": "4 Methods",
            "text": "This section details the proposed physics-informed framework (Fig. 1) for fuel density prediction. Section 4.1 introduces the spatiotemporal model to learn fuel density evolution. Section 4.3 introduces the physical constraints used to improve the physical consistency of predictions. Section 4.2 outlines the source domain data used for data augmentation. In Section 4.4, we outline the probabilistic graphical modeling structure for incorporating prior knowledge relating to fuel density estimation and burned area estimation. This work studies the driver-response relation in the prescribed fire system. Each simulation run represents different initial wind conditions and ignition patterns. For each simulation run i, Xi = [x1i , x2i , ..., xTi ] represent the spatiotemporal drivers, where xti \u2208 RM\u00d7P\u00d7C . Similarly, the response in a simulation run i at time step t can be represented as yti \u2208 RM\u00d7P\u00d71.\n4.1 Spatiotemporal Model In this work, convLSTM [40] models provide a pathway to leverage both spatial correlations among the cells in a spatial grid and temporal relation in time-series measurements for each cell. Our spatiotemporal model uses ConvLSTM layers to encode information in the three-dimensional domain - time, height (rows of cells), and width (columns of cells). The ConvLSTM uses the following set of equations to generate embeddings for a sequence,\nit = \u03c3(Wi [ [xt];ht\u22121; ct\u22121 ] + bi),\nft = \u03c3(Wf [ [xt];ht\u22121; ct\u22121 ] + bf ),\ngt = tanh(Wg [ [xt];ht\u22121 ] + bg),\nct = ft \u2299 ct\u22121 + it \u2299 gt, ot = \u03c3(Wo [ [xt];ht\u22121; ct ] + bo),\nht = ot \u2299 tanh (ct).\n(4.1)\nHere, inputs xt, cell states ct, hidden states ht and gates it, ot, f t are 3D tensors. Similar to standard LSTM cell, ConvLSTM cells contain a cell state ct that preserves the memory from the past. The forget gate f t filters the information obtained from ct\u22121, and the input gate filters information from the cell state. The new cell state and hidden state are computed as ct and ht. Predicted fuel density is estimated from the hidden units as y\u0302 = Wyht. Therefore, each hidden state ht is obtained from hidden and cell states from the prior time\nstep as ht\u22121 and ct\u22121. These ConvLSTM layers are used as building blocks to model complex, non-linear interactions in the data. In our model, we stacked four sets of ConvLSTMs and batch normalization layers with ReLU activation. The output layer is a convolution layer that outputs a 3D tensor with one channel for fuel density. This spatiotemporal structure allows the model to determine the future state of a cell in the spatial grid from the inputs and past states of its local neighbors."
        },
        {
            "heading": "4.2 Transferring Knowledge from Source Domain In a",
            "text": "prescribed fire system, the complex interaction of fire lines is challenging to model, especially under extreme wind conditions, which make the dynamics of the fire spread more chaotic. Due to a significant imbalance between the number of cells that fall under the burned region compared to the unburned region, conventional ML models revert to predicting all cells to be unburned, leading to an overestimation of fuel in burned regions. Apart from proposing asymmetric loss formulation (see next section), we propose data augmentation using pre-existing source domain data to address the class imbalance bias. In our framework, the source and target domains are fuel density data that are similar in their ignition patterns used for lighting the prescribed fires. However, the environmental conditions, including wind speed and direction, may differ. To maintain a realistic operational setting, we use the same source maps during inference as well. In our experiments, to study the impact of source data on training, we evaluate the model performance with different source data scenarios: (a) no source data, and (b) source fuel density generated with an initial wind speed of 1 m/s and wind direction 230\u25e6 (standard source data setting, Appendix). While source maps with higher wind speeds and disparate wind conditions were also explored, the standard source maps resulted in the most skillful prediction model. Since higher wind speeds accelerate the spread of fire and cause complex interactions between fire and atmosphere, other source settings increased uncertainty and added bias toward the overburning of fuel. Moreover, since we use one source setting for training, predicting all the target fuel densities with higher wind speeds and disparate wind directions involves overcoming distributional shifts. In addition, fire also influences wind in the system by releasing energy and increasing the air temperature. While these initial ambient wind conditions affect fire behavior, the influence of fire on wind and its feedback on fuel density evolution is not well known due to limited input channels. To overcome this, we integrate known physical constraints to improve predictions from the model. We discuss this further in the next section."
        },
        {
            "heading": "4.3 Integrating Knowledge",
            "text": "Copyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited"
        },
        {
            "heading": "4.3.1 Transferring knowledge from the physics-based model: The problem of fuel transport",
            "text": "DEFINITION 1. (FUEL TRANSPORT) The problem of fuel transportation relates to the transportation of fuel by the wind from one location to another. For fuel density ys at location s, fuel transportation results in yt,s = f(yt\u22121,s) + \u03c1yt,s\u2032 , where f represents the non-linear effect of other physical processes on fuel density, \u03c1 refers to the fraction of fuel that is transported from location s\u2032 to s. Thus, the probability of fuel increasing in an ignited cell s is non-zero, P (y\u2032t,s > y \u2032 t\u22121,s) > \u03b4 where \u03b4 is an arbitrary, non-negative value and y\u2032 refers to fuel density in an ignited cell.\nFuel transport is more common in the case of wildfires that generally spread under higher wind speeds. Since prescribed fires are lit under very specific wind conditions (low wind speed), fuel transportation is unlikely. This assumption is encoded in the QUIC-Fire model. In simulations generated by QUIC-Fire with a homogenous initial fuel profile, this helps avoid any uncharacteristic expansion and contraction of burned fuel density arising from fuel transportation from observed or unobserved regions. To emulate this behavior, we incorporate the assumption that a cell\u2019s fuel density cannot increase over time by fuel transportation. Therefore, we penalize those predictions that have an uncharacteristic increase in fuel density over time, given as, (4.2) LFT = \u2211 t ||Yt \u2212 Y\u0302t|| \u2299 1((Y\u0302t \u2212 Y\u0302t\u22121) > \u03f5)\nT .\nTo put a soft constraint, \u03f5, a non-negative value, is used to set the tolerance for what will be defined as a significant increase in fuel density over two consecutive time steps. T is the number of time steps\n4.3.2 Spread Consistency Accurately predicting the spread of prescribed fire is essential in ensuring the fire crew can safely control the blaze while meeting the burn objectives. Fire managers often rely on estimates of fire spread metrics like rate of spread and burned area indices to understand how the fire is going to spread. Since these quantities are estimated from fuel density, we regularize those fuel density predictions that lead to higher errors in estimates for the fire spread metrics. We, therefore, ensure the spread consistency by estimating the average rate of spread and burned area percentage from the predicted fuel density and minimizing the difference with the estimates from the QUIC-Fire simulations.\nDEFINITION 2. (RATE OF SPREAD) Average rate of spread for each time step is computed as the distance traveled by fire over the time spent from the initial time step to time t [44], ROS(Yt) = Distance/Time Taken = (\u03b7(Yt)\u2212 \u03b7(Yt0))/(t\u2212 t0). Here, t0 is the initial time step, and t is the time step for which ROS is being computed, \u03b7(.) estimates the number of columns impacted by the fire.\nHere, Yt0 refers to where the fire is ignited. In the dataset, the wind generally starts from the west and blows toward the east. This allows us to estimate a unilateral rate of spread based on how many columns of cells are impacted by the fire, enabling us to reduce the number of FLOPS for ROS estimation in the loss computation.\nRate of Spread (ROS) loss The mean squared error in the rate of the spread between predicted and observed fuel density values is minimized as part of the loss, as (4.3) LROS = \u2211 t(ROS(Yt)\u2212ROS(Y\u0302t))2\nT .\nDEFINITION 3. (BURNED AREA PERCENTAGE) Burned area percentage refers to the percentage of cells burned in the whole grid at time t, BA(Yt) = ( \u2211M i \u2211P j 1(Yi,j,t < \u03f5b)\u00d7 100)/(M \u00d7 P ).\nBurned Area (BA) Percentage loss Similar to the rate of spread loss term, the mean squared error between the predicted and observed burned area metric is minimized, as (4.4) LBA = \u2211 t(BA(Yt)\u2212 BA(Y\u0302t))2\nT .\nIncorporating LROS and LBA ensures that the statistical properties of the predicted fuel density match the ones of the QUIC-Fire simulations.\n4.3.3 Burn Regularization Due to limited input data, the fuel density predictions from data-driven models do not generalize well to out-of-distribution (OOD) wind conditions. Standard spatiotemporal models also face the issue of overburning fuel in unburned cells. We can penalize this behavior in the loss term by including a weighted loss on the unburned cells. Similarly, in the absence of knowledge about the physical behavior of fire and its interaction with fuel moisture, standard ML model predictions exhibit the under-burning of fuel in cells that have started burning. To address this, we can add weighted loss that penalizes under-burning behavior in burned cells. The burned loss is given as follows, (4.5) LBurned = \u2211 t ||Yt \u2212 Y\u0302t|| \u2299 1((Yt) < \u03f5b)\nT ,\nSimilarly, to address the model bias towards lower fuel density values under high wind speeds, we can add weighted loss to regularize the over-burning behavior in unburned area. The unburned loss is given as follows, (4.6) LUnburned = \u2211 t ||Yt \u2212 Y\u0302t|| \u2299 1((Yt) > \u03f5u)\nT .\nTo enforce these physical constraints, we formulate the physics-guided loss function as,\nL =||Y \u2212 Y\u0302 ||+ \u03bbFTLFT + \u03bbROSLROS +\u03bbBurnedLBurned + \u03bbUnburnedLUnburned (4.7)\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\n4.4 Probabilistic Graphical Modeling (PGM) To integrate any prior knowledge about the physical processes, we incorporate a probabilistic graphical modeling structure in our framework. Moreover, this enables us to represent different variables of interest into multiple levels of abstraction, allowing us to leverage the interdependence among these variables for better fuel density estimation. Scientific problems like prescribed fire modeling have a high degree of complexity arising from the interaction of different physical processes. In our case, the complex interaction of ambient wind conditions, fire-generated wind, and fire necessitates the hierarchical structure to improve the modeling of their effect on fuel density. Here, we model two quantities - fuel density and number of ignited cells. Modeling of the number of ignited cells captures more global similarities in the observed and predicted values, whereas fuel density modeling focuses more on specific or local similarities in the observed and predicted values.\nWe incorporate mixture density modeling [8] to factorize the effect of these multiple physical modalities in the latent space and improve response posterior estimation of fuel density. We model fuel density as a mixture of Gaussian components in our framework. Additionally, incorporating prior knowledge about burned area estimation can also improve fuel density modeling. Drawing inspiration from epidemic modeling [30] and wildfire modeling [28], where Poisson distribution is used to model count datasets with extreme values, we use Poisson priors to estimate the number of ignited cells in the grid at each time t.\nIn the following subsections, we describe our probabilistic graphical modeling approach.\n4.4.1 Gaussian Mixture Density Networks To model the response as a mixture of Gaussian components, we estimate the parametric distributions Cj and membership of each component represented by the mixing parameter, \u03c0j , based on the parameter vector learned by the neural network \u03d5(x). The fuel density response can be represented as,\n(4.8) y\u0302 = \u03c01(\u03d5(x))C1(y|\u03d5(x)) + \u03c02(\u03d5(x))C2(y|\u03d5(x)), where component Cj can be represented as realizations from a Normal distribution as, Cj \u223c N(\u03b8(x)). For each Gaussian component j, parameters \u03b8 = {\u00b5, \u03c3} and \u03c0 are learned as outputs of the neural network \u03d5(x). The parameters can be estimated by minimizing the negative logarithm of likelihood [8], (4.9) LMDN = \u2212 \u2211 i log( \u2211 j (\u03d5(xi))\u03c0j(\u03d5(xi))Cj(Yi|\u03d5(xi)))"
        },
        {
            "heading": "4.4.2 Burned Area Estimation from Poisson Processes",
            "text": "We also consider the point pattern of fire ignitions as a realization of a Poisson process. For a random count measure \u03c8 that represents the number of cells that are ignited in\na grid at time t, we model the rate function, \u03bb(y|x, t), as \u03bb(y|x, t) = E(\u03c8) = E \u2211\u03c8 i 1(yi|xi \u2208 I), where I represents the Borel set representing the ignited cells in the observed region at time t. Poisson processes characterize the number of ignited cells as estimated from fuel density predictions, \u03c8 \u223c Pois(\u03bb(y|x, t)). We employ the variational free energy function to estimate \u03c8 as,\n(4.10) LPP = KL(q(\u03c8)||p(\u03c8))\u2212 Eq(\u03c8)[logP (D|\u03a6\u03c8)] The KL term ensures that the posterior learned for \u03c8 is parsimonious to maintain similarity with the prior p(\u03c8). The negative log-likelihood cost helps ensure that appropriate \u03bb is learned to fit \u03a6\u03c8 to our dataset D. To incorporate the probabilistic graphical structure in the framework, the loss function can be modified from Eq. 4.7 to Eq. 4.11. A perceptual model for the PGM is given in Figure 2.\nL =LMDN + \u03bbFTLFT + \u03bbROSLROS +\u03bbBurnedLBurned + \u03bbUnburnedLUnburned +LPP (4.11)\nAlgorithm 1 Physics-Guided Emulator for Prescribed Fire Simulation Input: Input Channels Xi \u2208 Rn\u00d7M\u00d7P\u00d7C\u2200i = 1, ..., N Output: Learned neural network estimator \u03a6 for fuel density prediction,\npredicted fuel density Y\u0302i \u2208 Rn\u00d7M\u00d7P\u00d71\u2200i = 1, ..., N 1 for batch {xi, yi} do 2 estimate \u03d5(xi) 3 estimate y\u0302i = \u2211k j \u03c0j(\u03d5(xi))\u2299 Cj(yi|\u03d5(xi)) 4 sample \u03c8(y\u0302i) \u223c Pois(\u03bb(yi|xi, t)) 5 Compute the loss as Eq 4.11 6 Compute gradients and update parameters in \u03a6 which include \u03bb, \u03c0j , Cj and \u03d5 7 end\nThe framework is summarized in Appendix. In each training step, we first estimate the latent representations learned from the spatiotemporal model \u03d5(x) for each batch. These representations are further used to estimate the Gaussian mixture model components to compute the fuel density\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\ny\u0302i. \u03c8 is sampled from Pois(\u03bb) where \u03bb depends on the learned conditional response distribution y|x at each time t. To update all the parameters in the model \u03a6, compute gradient with respect to the loss function given in Eq. 4.11 and update all the parameters. The model without the graphical model component is called PGCL (loss Eq. 4.7), while the one with the graphical modeling component is called PGCL+ (loss Eq. 4.11)."
        },
        {
            "heading": "5 Results",
            "text": ""
        },
        {
            "heading": "5.1 Experimental Setup",
            "text": "5.1.1 Baselines We compare the proposed models in the methods section with other baselines in wildfire and prescribed fire modeling. We compare our results with CNN [14; 4; 50; 34; 45], ConvLSTM (CL) [11; 24] and UNet [24; 53]. We also include Firefront UNet model [9] that learns representation for fire state, spatial forcing and weather in separate encoders. We include a CL-GL model that further modifies the CL model with Gram loss-based regularization to match the statistical similarities between the predicted and observed fuel density. Additionally, we include the Match baselines that uses historical fuel maps as a prediction on how fuel may change in the future. To estimate fuel in the test set, we consider two baselines - Match ignition baseline and Match wind baseline. Match ignition baseline looks at the first fuel map in the historical data with the closest ignition pattern - while the wind conditions may vary. Match wind looks at the first fuel map in the historical data with the closest wind conditions - while the ignition pattern may vary.\n5.1.2 Dataset and Experimental Details We use simulation runs from the QUIC-Fire model 1 to learn the prescribed fire emulator. To test generalization under different environmental factors, the simulation runs include 5 different ignition patterns, 7 wind speeds, and 11 wind directions. We simulate and use 100 runs as training examples. The simulation runs are for a grassland setting with twodimensional evolution of fires captured in 300 x 300 cells grid over n time steps at 1 second time intervals. Each cell is at a 2m x 2m resolution. In the experimental setup, we randomly split the 100 runs and put 50% of the data into training and the rest into test dataset, with each comprising 50 samples. Therefore, each of the datasets has input data with dimensionality 50 simulation runs \u00d7 50 time steps \u00d7 300 rows \u00d7 300 columns \u00d7 4 features . Wind data is standardized using min-max scaling, whereas fuel density data is not scaled since it varies between 0 and 0.7. With batch size 1 and using the Adam optimization method for gradi-\n1Simulation runs can be generated using the code provided in this GitHub repository\nent estimation, we train each model for 250 epochs 1. The code is implemented using Tensorflow 2.0 and NVIDIA A40 GPU. Hyperparameters, including penalty coefficients in the loss terms, are fine-tuned using random grid search in the models. Learning rate is 0.001, \u03bbFT , \u03bbBurned = 0.001, \u03bbUnburned, \u03bbFM = 0.0001. In the experiments, we use \u03f5 = 0.001 for the physical constraint loss masking. We also use \u03f5b =0.1 and \u03f5u =0.65 for the burned and unburned loss masking, respectively. In the generalization results, we sample test runs into different datasets with different physical properties. This includes sampling based on wind speed, wind direction, and ignition patterns. DLow Wind dataset has samples with initial wind speed less than 10 m/s. DHigh Wind dataset has samples with initial wind speed greater than 10 m/s. DNW Wind dataset has samples with initial wind direction blowing from the northwest, and DSW Wind dataset has samples with initial wind direction originating from the southwest direction. DAerial, DOutward, DStrip South, DInward and DStrip North datasets include samples with different ignition patterns for igniting the fire.\n5.1.3 Metrics We evaluate several metrics that compute how well the model predicts the evolution of fire over time. In the tables, the downward arrow indicated that lower values of evaluation metrics indicate better model performance. We evaluate MSE, burned area MSE, unburned area MSE and fire metric MSE (ROS MSE + BA MSE) on test set. We formulate a metric, Dynamic MSE (DMSE), that evaluates model performance based on change in fuel density over time. For time steps with bigger change in the observed fuel density, we ensure that the error in predictions are penalized more, DMSE = ( \u2211 N (Yt \u2212 Yt\u22121) \u00b7 (||Y\u0302t \u2212 Yt||))/( \u2211 N (Yt \u2212 Yt\u22121)). We can further validate the physical consistency of the predictions by evaluating how often the physical constraints are met in the predicted values using the following metrics. MetricFT is the percentage of cells that do not follow the fuel transport constraint in the predicted values. MetricBurned is the percentage of unburned cells that are predicted to be burned. MetricUnburned is the percentage of unburned cells where fuel densities are underestimated. MetricFalse Positive is the percentage of burning cells that are predicted to be burned. MetricFalse Negative is the percentage of burning cells that are predicted to be unburned."
        },
        {
            "heading": "5.2 Results and Discussion",
            "text": "5.2.1 Source Input Data Source fuel density maps enable the model to improve the learning of spatiotemporal changes in target fuel density. Table 1 compares CNN, UNet, CL, CL-GL, and Firefront models in learning fire behavior in\n1Code link provided here\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\nthe absence and presence of source fuel density data. The MSE values reflect that by including the source fuel density sequence data as one of the input channels, all the models overcome the bias towards over-estimation of fuel. Moreover, the CL model performs better than the other models in predicting fuel density distribution, suggesting that including temporal information and the parsimonious architecture of the model is sufficient for the skillful prediction of fuel density. For further experiments, we explore CL model for physics-guided learning.\n5.2.2 Integrating Physical Knowledge We investigate the effect of incorporating physical constraints on prescribed fire emulation. The model performance in terms of the test\nset evaluation metrics is given in Table 2. The physicsguided models outperform other baseline models. PGCL and PGCL+ also show a reduction in fire metric MSE values suggesting that the overall rate of spread and burned area percentage in predictions is similar to the observed values.\nWhile the MSE values are useful for evaluating the average model performance, investigating individual prediction examples can be useful to ensure generalization under different distributional settings. Figure 3 shows the individual predictions at the 50th second and also outlines the test sample attributes for comparison. We compare the PGCL+, PGCL, CL, CNN, UNet, and FireFront models. We notice that the physics-guided model has the most stable predictions while other methods are over-burning unburned cells and underburning burned areas. In models that are not informed by physical constraints in the loss term, we also notice higher fuel density predictions in cells surrounding the fire perimeter. This behavior arises due to complex wind dynamics in that region that is not being captured by these models. Without physics guidance, the standard ML models inaccurately predict that region\u2019s fuel density. Furthermore, in the cells predicted to be burned, the physics-guided model accurately\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\npredicts the lower fuel density values. The physics-guided model achieves the most accurate predictions for fuel density values among the models.\nWe can further compare the model performance in their ability to capture the physical behavior of the fire accurately. Results in Table 3 summarize physical consistency metrics for test samples. The results suggest that the physicsguided models (PGCL, PGCL+) achieve better physical consistency in the predictions. The physics-guided models have a lower proportion of cells where the fuel transport constraint is not met. The physics-guided models also have a lower proportion of falsely predicted burned cells and falsely predicted unburned cells. This is also evident in the visualizations of the individual predictions. The physics-guided model provides better burn predictions than the standard ConvLSTM model, as shown in the lower values for the physical consistency evaluation metrics in Table 3.\nIn Table 4, we also compare the proposed framework with QUIC-Fire in terms of inference time for predicting 50 seconds of fuel density. We see that PGCL+ achieves 3-5 times speedup compared to QUIC-Fire.\n5.3 Generalization under Different Environmental Conditions Figure 6 summarizes test set MSE values by the initial wind direction and wind speed conditions. The physics-guided model outperforms the data-driven spatiotemporal model. Especially under higher wind speed conditions and under wind direction greater than 280\u25e6, the CL model has higher test MSE values. This is because higher wind speeds introduce increased uncertainty and complexity into fire behavior prediction. This is further evident in Table 5, where we report the test MSE values by different\nwind speeds, wind directions, and ignition patterns to further evaluate the generalization under different environmental conditions. In general, PGCL+ achieves better model performance. Integrating physics has a bigger impact on the samples, wherein the initial wind direction originates from SW. Model performance for test samples with wind originating from NW is more difficult due to the distributional shift between the target and the source maps since source maps include winds originating from SW.\nFigure 4 further evaluates the test MSE at each time step predicted in the fuel density time series. We see for some samples, the MSE increases over time due to increased variability in the fire spread. We also notice that the physicsguided model achieves lower MSE than the data-driven model at all time steps.\nIn the real-world setting, the availability of training data may also impact model performance. We investigate the model performance when different quantities of examples are available from the training dataset. Figure 5 shows the test set MSE values when the proportion of train set samples available for training varies. We notice as the data scarcity\nCopyright \u00a9 20XX by SIAM Unauthorized reproduction of this article is prohibited\nreduces, the model performance improves. The physicsguided model is also able to achieve a lower test set MSE than the CL model."
        },
        {
            "heading": "6 Conclusion",
            "text": "This work proposes a novel knowledge-guided spatiotemporal model that integrates physical knowledge and uses source fuel maps to emulate the fuel density changes under different wind conditions and ignition patterns. Our approach, which uses a loss function with physical constraints, reduces or eliminates different physical inconsistencies in predictions, including fuel transport, over-burning in unburned areas, and over-estimating fuel in burned areas. Our framework can be extended to other spatiotemporal models for learning physically consistent fuel densities. Since the framework achieves faster-than-real-time inference, it enables avenues for fire managers to adapt their plans to achieve a burn\u2019s intended objective with changing environmental conditions.\nSeveral future directions can be explored. The proposed method can be modified to include other physical laws and physical constraints. For instance, the work can be extended to three-dimensional grids that include height as a dimension. Here we can also include canopy consumption to track how the fuel density evolves across the three-dimensional spatial grid. The framework can also be trained on longer time series to ensure that burn bosses can obtain reliable prescribed burn predictions for extended time periods."
        },
        {
            "heading": "7 Acknowledgments",
            "text": "This work was funded by the NSF awards 2134904 and 1934721. Access to computing facilities was provided by the Minnesota Supercomputing Institute."
        }
    ],
    "title": "Prescribed Fire Modeling using Knowledge-Guided Machine Learning for Land Management",
    "year": 2023
}