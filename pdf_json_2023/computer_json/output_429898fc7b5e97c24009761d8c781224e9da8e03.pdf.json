{
    "abstractText": "In this work, a numerical simulation of 1D Burgers\u2019 equation is developed using finite difference method and a reduced order model (ROM) of the simulation is developed using proper orthogonal decomposition (POD). The objective of this work is to provide an introduction of the POD method to researchers interested in computational fluid dynamics (CFD). This work discusses a physical interpretation of the POD method, its strengths and shortcomings and an implementation of the algorithm that may be extended to 2D, 3D Burgers\u2019 equation and other non-linear partial differential equations (PDE) of this class, to develop models for more complex systems.",
    "authors": [
        {
            "affiliations": [],
            "name": "Neelakantan Padmanabhan"
        }
    ],
    "id": "SP:4268743d8ae8bd62f3050bc6a2fb27c71d8d3bec",
    "references": [
        {
            "authors": [
                "Jusoh Yacob",
                "Shahirah Zulkifli",
                "Nur Zainuddin",
                "Siti Rosly"
            ],
            "title": "Mathematical modelling of burger\u2019s equation applied in traffic flow",
            "venue": "Technical report, Kolej Teknologi Darulnaim,",
            "year": 2017
        },
        {
            "authors": [
                "A Salih"
            ],
            "title": "Burgers\u2019 equation",
            "venue": "Indian Institute of Space Science and Technology, Thiruvananthapuram",
            "year": 2016
        },
        {
            "authors": [
                "Neelakantan Padmanabhan"
            ],
            "title": "On High Pressure Real Gas Turbulent Mixing Jets",
            "venue": "PhD thesis, All Dissertations",
            "year": 2017
        },
        {
            "authors": [
                "Farshid Abbasi",
                "Javad Mohammadpour"
            ],
            "title": "Nonlinear model order reduction of burgers\u2019 equation using proper orthogonal decomposition",
            "venue": "In 2015 American Control Conference (ACC),",
            "year": 2015
        },
        {
            "authors": [
                "Fariduddin Behzad",
                "Brian T Helenbrook",
                "Goodarz Ahmadi"
            ],
            "title": "On the sensitivity and accuracy of proper-orthogonal-decomposition-based reduced order models for burgers equation",
            "venue": "Computers & Fluids,",
            "year": 2015
        },
        {
            "authors": [
                "Eli Shlizerman",
                "Edwin Ding",
                "Matthew O Williams",
                "J Nathan Kutz"
            ],
            "title": "The proper orthogonal decomposition for dimensionality reduction in mode-locked lasers and optical systems",
            "venue": "International Journal of Optics,",
            "year": 2012
        },
        {
            "authors": [
                "Karl Kunisch",
                "Stefan Volkwein"
            ],
            "title": "Control of the burgers equation by a reduced-order approach using proper orthogonal decomposition",
            "venue": "Journal of optimization theory and applications,",
            "year": 1999
        },
        {
            "authors": [
                "Zhendong Luo",
                "Xiaozhong Yang",
                "Yanjie Zhou"
            ],
            "title": "A reduced finite difference scheme based on singular value decomposition and proper orthogonal decomposition for burgers equation",
            "venue": "Journal of Computational and Applied Mathematics,",
            "year": 2009
        },
        {
            "authors": [
                "Alfio Quarteroni",
                "Gianluigi Rozza"
            ],
            "title": "Reduced order methods for modeling and computational reduction, volume",
            "year": 2014
        },
        {
            "authors": [
                "Julien Weiss"
            ],
            "title": "A tutorial on the proper orthogonal decomposition",
            "venue": "In AIAA Aviation 2019 Forum,",
            "year": 2019
        },
        {
            "authors": [
                "GRAU Katrin"
            ],
            "title": "Applications of the proper orthogonal decomposition method",
            "venue": "Technical report, WN/CFD/07/97",
            "year": 1997
        },
        {
            "authors": [
                "Jonathon Shlens"
            ],
            "title": "A tutorial on principal component analysis",
            "venue": "arXiv preprint arXiv:1404.1100,",
            "year": 2014
        },
        {
            "authors": [
                "Omer San",
                "Traian Iliescu"
            ],
            "title": "Proper orthogonal decomposition closure models for fluid flows: Burgers equation",
            "venue": "arXiv preprint arXiv:1308.3276,",
            "year": 2013
        },
        {
            "authors": [
                "Jeff Borggaard",
                "Zhu Wang",
                "Lizette Zietsman"
            ],
            "title": "A goal-oriented reducedorder modeling approach for nonlinear systems",
            "venue": "Computers & Mathematics with Applications,",
            "year": 2016
        },
        {
            "authors": [
                "Saifon Chaturantabut",
                "Danny C Sorensen"
            ],
            "title": "Discrete empirical interpolation for nonlinear model reduction",
            "venue": "In Proceedings of the 48h IEEE Conference on Decision and Control (CDC) held jointly with 2009 28th Chinese Control Conference,",
            "year": 2009
        },
        {
            "authors": [
                "Saifon Chaturantabut",
                "Danny C Sorensen"
            ],
            "title": "Nonlinear model reduction via discrete empirical interpolation",
            "venue": "SIAM Journal on Scientific Computing,",
            "year": 2010
        },
        {
            "authors": [
                "Grant Sanderson"
            ],
            "title": "Linear algebra, an introduction to visualizing what matrices are really doing. https://www.3blue1brown.com/topics/ linear-algebra",
            "year": 2023
        }
    ],
    "sections": [
        {
            "text": "Reduced order model of a convection-diffusion\nequation using Proper Orthogonal Decomposition\nNeelakantan Padmanabhan npadman@g.clemson.edu"
        },
        {
            "heading": "1 Abstract",
            "text": "In this work, a numerical simulation of 1D Burgers\u2019 equation is developed using finite difference method and a reduced order model (ROM) of the simulation is developed using proper orthogonal decomposition (POD). The objective of this work is to provide an introduction of the POD method to researchers interested in computational fluid dynamics (CFD). This work discusses a physical interpretation of the POD method, its strengths and shortcomings and an implementation of the algorithm that may be extended to 2D, 3D Burgers\u2019 equation and other non-linear partial differential equations (PDE) of this class, to develop models for more complex systems."
        },
        {
            "heading": "2 Introduction",
            "text": "Burgers\u2019 equation is a fundamental nonlinear partial differential equation that finds applications in the areas of thermo-fluids and CFD [1, 2, 3]. It is a generalized convection-diffusion equation and falls under the same category of equations as the Navier-Stokes equations. Numerical solution and reduced order modeling of Burgers\u2019 equation, is of great interest in the CFD community. Numerical solution of Burgers\u2019 equation and other PDEs of this class can be computationally very expensive [4]. Thus, reduced order models are highly desirable since they can capture the essence of the phenomenon with a fraction of the computational resources. POD / PCA (principal component analysis) is a well established approach to develop reduced order models [5, 6, 7, 8, 9, 10, 11, 12, 13]. For a given data, POD extracts the modes that contain the most dominant characteristics of the data. In a function space, these modes form the orthonormal basis that can be used to reconstruct the data. Ideally, POD modes can be constructed from any simulation or experimental data and if the governing equations of the system are known, Galerkin projection may be applied on a subset of this basis to create a ROM, to predict the time evolution of the system. While this approach results in accurate ROM for systems with high diffusivity, the predictions for systems with low diffusivity especially for long simulation times are observed to be less accurate. A number of improvements to this method have\nar X\niv :2\n30 3.\n07 17\n6v 1\n[ m\nat h.\nN A\n] 1\n3 M\nar 2\n02 3\nbeen proposed, that help in developing more accurate models. Some of these include a large eddy simulation like approach [4], where the large scale effects are modeled by POD and the small scale effects are modeled by eddy viscosity type model [14], goal-oriented POD [15], and discrete empirical interpolation method (DEIM) [16, 17]."
        },
        {
            "heading": "3 Numerical Simulation of Burgers\u2019 equation",
            "text": "1D Burgers\u2019 equation of the form presented in Eq.1 is solved using finite difference approach.\n\u2202U \u2202t = \u2212U \u2202U \u2202x + \u03bd\n\u22022U \u2202x2 +Q, (1)\nwhere, U = U(x, t) represents a field variable, t represents time, x represents the spatial vector, \u03bd represents the diffusivity, and Q a source term. The generic Burgers\u2019 equation incorporates a non-linear convection term, and a linear diffusion term. An additional source term is considered in this work. A second order central finite difference scheme is used for spatial discretization of the diffusion term, while a second order upwind scheme is employed for the nonlinear convection term. An explicit forward Euler scheme is used for time stepping.\nU(x, t+ \u2206t)\u2212 U(x, t) \u2206t = \u2212U(x, t)3U(x, t)\u2212 4U(x\u2212\u2206x, t) + U(x\u2212 2\u2206x, t) 2\u2206x\n+\u03bd U(x+ \u2206x, t)\u2212 2U(x, t) + U(x\u2212\u2206x, t)\n\u2206x2 +Q\n(2) The equations are solved on an equally spaced Cartesian grid. Constant diffusivity values are used in the simulations. CFL conditions for velocity and diffusivity are used to determine the minimum time step. Periodic boundary conditions are used in the domain. The following initial conditions are used for the field variable and source term,\nU(x, 0) = U0sin(x), Q(x, 0) = Q0sin(x), (3)\nwhere, u0 = 0.01, Q0 = 0.1. Simulations are run for various configurations of number of grid points and duration (tfinal). The results from the numerical simulations are presented in Figs. 2a-6a."
        },
        {
            "heading": "4 Reduced Order Modeling",
            "text": "An overview of a few concepts of linear algebra that are central to the POD method is presented in Appendix A. A brief review of this section might be useful in developing a better understanding of the method."
        },
        {
            "heading": "4.1 A physical interpretation of POD",
            "text": "Solutions of Burgers\u2019 equation (U(x, t) = U \u2208 Rm\u00d7n, with m spatial points and n temporal points), can be expressed analytically in terms of the basis vectors x and t, in a physical space. While it is desirable, it is not always convenient or viable to obtain an analytical solution in this space. Alternatively, this solution can be also expressed in terms of a different set of basis vectors in a function space. This alternative basis can be determined by singular value decomposition (SVD) of the solution matrix U or by eigen decomposition of the covariance matrices of the solution matrix (Cov1(U) = UU \u2217 and Cov2(U) = U \u2217U). The covariance matrices, represent the variance exhibited by the elements of the solution matrix U and the covariance between the pairs of dataset. It is useful in separating structured relationships in a matrix of random variables. When eigen decomposition of the covariance matrix is performed, it results in a factorization of the form Cov(U) = V \u039bV \u22121. Here, V represents the eigenvectors or the principle components and \u039b represents the eigenvalues of the covariance matrix. Geometrically, this can be interpreted as a linear transformation represented by Cov(U) which when applied to the vectors V , only results in V scaling up or down by a factor of \u039b. Since Cov(U) represent the variance in the data, the vectors V indicate the directions along which the variance in the data is the highest or the lowest and \u039b represents the magnitude of significance of the given eigenvector. In other terms, the variance indicates how the energy or information of the solution is distributed and the eigenvectors indicate the directions in which the distribution is significant. A graphical illustration of this is presented in Fig.1. In a function space, the vectors V form an orthonormal basis. In many cases (except the cases with very low diffusivity in the Burgers\u2019 equation), it is observed that the first few basis vectors (or modes) typically contain most of the energy of the solution. Hence, by projecting U on these first few modes, the highest energy solutions can be recovered. By Galerkin projection of a weak form of the governing equation onto a sub-space of this basis, a reduced order model can be obtained, from which the time evolution of the system can be predicted."
        },
        {
            "heading": "4.2 Formal description of POD",
            "text": "Snapshots of the field variable, U \u2208 Rm\u00d7n of m spatial points and n temporal points are obtained from the numerical simulation of 1D Burgers\u2019 equation. Singular value decomposition of this matrix, decomposes the solution into,\nSV D(U) = \u03a6\u03a3\u03a8\u2217, (4)\nwhere, the matrix \u03a6 \u2208 Rm\u00d7m represents the left singular vector and \u03a8\u2217 \u2208 Rn\u00d7n the conjugate transpose of the right singular vector. These matrices are composed of the eigenvectors \u03c6 (columns of \u03a6), \u03c8 (rows of \u03a8\u2217) of the covariance matrices U\u2217U and UU\u2217. The matrix \u03a3 \u2208 Rm\u00d71 represents the singular values of U . The singular values are ordered as \u03c31 \u2265 \u03c32 \u2265 ... \u2265 \u03c3m. The ith row of the solution matrix thus can be written as,\nui = m\u2211 i \u03c3i\u03c6ij\u03c8ik. (5)\n\u03c3i represents the magnitude of significance of the modes. The relative significance of the modes can be estimated as,\nr = \u03c3i\u2211 i=1 \u03c3i , (6)\nwhere, \u2211 r = 1. As observed in Figs. 2b-4b, when the diffusivity coefficient (\u03bd) is high, the first three to five modes contain upto 99% of the energy. A reduced solution can then be obtained by choosing a few dominant modes (r). Once the low dimensional basis set has been determined, it can be used to reformulate the Burgers\u2019 equation to create a reduced order model. Separation of variable and basis expansion is applied to Eq.1, where the field variable is expressed as\nU(x, t) = A(t)\u03a6(x) = m\u2211 i=1 aik(t)\u03c6ij(x), (7)\nwhere, \u03c6ij(x) represents the orthonormal basis functions obtained by SVD of the data matrix, aik(t) the temporal coefficients, and i index of number of modes. It is to be noted that the basis function and temporal coefficients exist in a function space, where the continuous function U(x, t) is discretized into a system of finite dimensions. By substituting Eq.7 into Eq.1, the PDE for U(x, t) can be transformed into an ordinary differential equation (ODE) for A(t).\nd\ndt\n\u2211 aik\u03c6ij = \u2212 \u2211 aik\u03c6ij d\ndx\n\u2211 aik\u03c6ij + \u03bd d2\ndx2\n\u2211 aik\u03c6ij +Q, (8)\nSince the basis functions are orthogonal they hold the property,\u222b \u03c6ij(x)\u03c6il(x) \u2217dx = \u2211 \u03c6ij(x)\u03c6il(x) = { 1 j = l\n0 j 6= l (9)\nThe final form of equation is obtained by multiplying both sides of Eq.8 by \u03c6Tij(x),\nd\ndt\n\u2211 aik = \u2212\u03c6Tij \u2211 aik\u03c6ij d\ndx\n\u2211 aik\u03c6ij + \u03c6 T ij\u03bd d2\ndx2\n\u2211 aik\u03c6ij + \u03c6 T ijQ. (10)\nTo build a reduced order model, a small number of modes (i << m) are considered in Eq.7 and Eq.10. The spatial derivatives in Eq.10 are solved using finite difference approach. Periodic boundary conditions are applied and the same initial condition (as the one used in the finite difference simulation), is imposed for the temporal coefficient a0 = U(x, 0)\u03a6. This equation is then solved for a(t) using a standard ODE solver and a ROM is created by projection of this solution on \u03a6. The results from the ROM are compared against the numerical simulation and presented in Figs. 2-6. It is observed that the ROM is very accurate in predicting the field variable\u2019s evolution in space and time with a few modes (i \u2264 5). For new initial and boundary conditions, it is sufficient to assemble a snapshot matrix considering different instances of initial and boundary conditions and compute the POD at an offline stage. The ratio of computation time required to run the finite difference simulation and the POD-ROM for various cases are presented in Table 1. In most cases, POD-ROM requires a smaller fraction of computation time when compared to the finite difference simulation. The costs of determination of POD basis and Galerkin projection increases with increase in number of dimensions, resolution and simulation run times."
        },
        {
            "heading": "4.3 Implementation of POD",
            "text": "\u2022 Compute the instantaneous field variable (U(x, t) \u2208 Rm\u00d7n) from the finite difference solution of 1D Burgers\u2019 equation.\n\u2022 Decompose the instantaneous field variable via Singular value decomposition,\nSV D(U) = UL \u00b7 S \u00b7 V \u2217R . UL \u2208 Rm\u00d7m: Spatial modes (left singular vector), S \u2208 Rm\u00d71: Magnitude of the modes (singular values), V \u2217R \u2208 Rn\u00d7n: Temporal coefficients (complex conjugate of the right singular vector). Note: The singular values and vectors are ordered in a descending order.\n\u2022 Determine the number of significant modes by computing the relative magnitude of the singular values,\nrk = S2k\u2211 k S 2 k , k = 1, 2, . . . ,m.\n\u2022 Choose a small number of modes (i) based on the values of r(i m).\n\u2022 Create new matrices with the reduced number of spatial modes and their corresponding temporal coefficients.\n\u03c6 = UL \u2208 Rm\u00d7i,\n\u03c8 = V TR \u2208 Ri\u00d7n, \u03c3 = S \u2208 Ri\u00d71.\n\u2022 Specify initial condition (same initial condition as the numerical simulation). The initial temperature is projected onto the reduced basis,\na0 = \u03c6 \u00b7 U(x, 0).\n\u2022 Compute first derivative \u03c6x (upwind scheme) and second derivatives \u03c6xx (central finite difference) of the spatial modes.\n\u2022 Assemble the parameters: modes, temporal coefficients, derivatives, initial conditions, boundary conditions, source, and diffusivity coefficients\nParameters = [\u03c6T , \u03c6, \u03c6x, \u03c6xx, Q, \u03bd].\n\u2022 Perform Galerkin projection by applying separation of variable to the data matrix and combining it with the governing equation,\nU(x, t) = A(t)\u03a6(x),\nd\ndt \u2211 i \u03c6iai = \u2212 \u2211 i \u03c6iai d dx \u2211 i \u03c6iai + \u03bd d2 dx2 \u2211 i \u03c6iai +Q.\n\u2013 Invoke the orthogonality property,\u222b \u03c6i\u03c6jdx = { 1, i = j\n0, i 6= j\n\u2013 Multiply both sides of the equation by \u03c6Ti\nd\ndt \u2211 i ai = \u2212\u03c6Ti \u2211 i \u03c6iai d dx \u2211 i \u03c6iai + \u03c6 T i \u03bd d2 dx2 \u2211 i \u03c6iai + \u03c6 T i Q.\n\u2013 Compute the right hand side of the equation:\nRHS = rhsC + \u03bd \u00b7 rhsD + rhsS ,\nwhere, \u2217 U = \u03c6 \u00b7 a, which is equivalent to \u2211 i \u03c6iai,\n\u2217 rhsC = \u2212\u03c6T \u00b7U \u00b7\u03c6x\u00b7a, which is equivalent to\u2212\u03c6Ti \u2211 i \u03c6iai d dx \u2211 i \u03c6iai, \u2217 \u03bd \u00b7 rhsD = \u03c6T \u00b7 \u03bd \u00b7 \u03c6xx, which is equivalent to \u03bd d 2\ndx2 \u2211 i \u03c6iai,\n\u2217 rhsS = \u03c6TQ, which is equivalent to \u03c6Ti Q.\n\u2022 Compute the temporal coefficient using a standard ODE solver,\na(t) = Standard.ODE.Solver(RHS, a0, t, Parameters).\n\u2022 Compute the time evolution of the reduced order model of the system,\nUROM (t) = a(t)\u03c6."
        },
        {
            "heading": "5 Results",
            "text": "The results presented in this section evaluate the accuracy of POD-ROM for the following cases, Case 1: simulation with high diffusivity and short simulation run time (tfinal), Case 2: simulation with high diffusivity and longer simulation run time, Case 3: simulation with low diffusivity and short run time, Case 4: simulation with low diffusivity and longer run time, and Case 5: heat equation with only diffusion term (Burgers\u2019 equation without convection term). For each case, the percentage error between the simulation and the model data is computed. For the case with high diffusivity and short simulation time (Fig.2), it is observed that a satisfactory ROM can be created with as few as 1-3 dominant modes. However, with 5 dominant modes, the original data can be reconstructed with negligible error. At longer simulation times as in Case 2 (Fig. 3), a larger number of modes are required to reconstruct the data. For Case 1, it is observed that the POD-ROM constructed with 1 dominant mode between t = 0s and t = 0.5s captures the fluctuation in the field, but the POD-ROM constructed with 1 dominant mode in Case 2 does not capture the fluctuations between t = 0s and t = 0.5s. This occurs because the POD modes are constructed from the data obtained from a specific simulation. As a result the POD modes and the distribution of energy across the modes vary for different data. At lower diffusivities and shorter simulation times as in Case 3 (Fig. 4), the trends similar to Case 1, where the data can be reconstructed with a few dominant modes, are observed. However, with increase in simulation time as in Case 4 (Fig. 5), large transient fluctuations are observed. At low diffusivity, Burger\u2019s equation is driven primarily by the convection term. If a parallel between this equation and the Navier Stokes equation is drawn, this is similar to a case at high Reynolds number. In such a scenario a large range of spatial and temporal scales exist, and the energy distribution is no longer dominated by a few modes. As a result, the POD-ROM constructed even with a large number of modes (i = 5 or i = 30) is inaccurate. The differences between the original data and ROM are observed to accentuate at simulation times t > 10. For 1D heat equation (Burgers\u2019 equation without the convection term), it is observed that POD-ROM can be constructed with only 1-3 modes even when the diffusivity is very small. Convection term is the primary source of non-linearity and fluctuations in Burgers\u2019 equation and POD is a great tool for construction of ROM for linear PDEs. An additional case (Case 6 - Fig.7) is evaluated where a highly diffusive first order upwind scheme is used for discretization of the convection term. In this case, the fluctuations in the original data are observed to dissipate at longer simulation times. As a result, the energy distribution has a few dominant modes and the POD-ROM reconstructed with the limited number of modes is still accurate. This however is not an elegant solution since the original data from the simulation is highly diffusive and unreliable."
        },
        {
            "heading": "6 Conclusions",
            "text": "This work explores the development of ROM for 1D Burgers\u2019 equation using POD method. POD is very useful in creating fast and accurate ROM for a wide range of linear and non-linear equations. The primary idea of this work is to provide a feel for the method and present the material in an accessible format. It is the hope of the author that the reader is able to develop an appreciation for the approach and is able to apply it to more complex systems for reduction of computational times."
        },
        {
            "heading": "A Background in linear algebra and relevant ter-",
            "text": "minologies\n(Excerpts of lectures on the topic of linear algebra [18, 19])\n\u2022 Vector space: A non-empty set V , of objects called vectors on which two operations (linear combinations) can be performed. Vector addition (u+ v \u2208 V ) and scalar multiplication (\u03bbu \u2208 V ).\n\u2022 Span: A set of all possible vectors that can be formed by a linear combination of a set of vectors and scalars.\n\u2022 Space: For a given vector space, if the tails of the vectors are at the origin and the tip of the vectors point at different locations, a grid space can be created such that each grid point is located at the tip of a given vector.\n\u2022 Linear dependency: When two vectors point in the same coordinate direction and their span is restricted to a line or a plane, the vectors are called linearly dependent.\n\u2022 Basis: A set of linearly independent vectors that span the full space. An infinite set of basis vectors exist, however physically only three vectors are perceived. For example, in a Cartesian coordinate the coordinate directions x, y, z are defined as the basis.\n\u2022 Linear transformation / Matrix-Vector multiplication: An operation, which when applied to a vector, it either rotates, scales, or performs a combination of the two to move it to a new location in space. A linear transformation is performed via matrix-vector multiplication (Ax = b), where the matrix A is the linear transformation applied to vector x to form a new vector b. For a transformation to be defined as linear, the grids formed by the vector tips must remain parallel, evenly spaced and the origin must not move.\n\u2022 Matrix multiplication: A linear transformation that is defined as a combination of two linear transformations.\n\u2022 Change of Basis: A linear transformation that translates a vector representation in one basis to a representation of the same vector in a new basis.\n\u2022 Eigenvector and Eigenvalue: When a linear transformation A changes the basis, some of the vectors v in the space, remain on their span as an effect of the transformation. These vectors only scale in magnitude. This is defined as Av = \u03bbv, where v is defined as the Eigenvector and \u03bb is defined as Eigenvalue, which is a scaling factor.\n\u2022 Eigen decomposition: A factorization of a matrix (A = V \u039bV \u22121), where the matrix A is represented a product of its Eigenvalues \u039b and Eigenvectors V . Eigen decomposition can only be applied to square matrices.\n\u2022 Singular value decomposition: A factorization of a real or complex matrix (A = U\u03a3V T ) that is a generalization of Eigen decomposition but is applicable to non-square matrices as well. These factors may be physically interpreted as U (orthogonal matrix - rotation), \u03a3 (diagonal matrix - stretching), and V T (orthogonal matrix - rotation)\n\u2022 Function spaces : A set of all mathematical functions that have the same properties as vectors and vector spaces. For example, a function f(x) that can be expressed a sum of two other functions f(x) = u(x) + v(x) and a scalar product of another function f(x) = \u03bbw(x). From an abstract point of view, these functions are mathematically similar to a vectors and linear combinations can be applied to them to determine distance between them or to project them on one another. The difference in the analogy appears in the physical interpretation of the number of dimensions. It can be shown that an infinite number of linearly independent functions can be built from an infinite number of vectors to span the space. Therefore, functions exist in an infinite dimensional vector space. For example, a function f(x) specified in the interval [a, b], sampled at intervals x1, x2, . . . , xN with corresponding function values of f1, f2, . . . , fN , can be expressed as,\nf(x) =  f1... fN  = f1e1 + f2e2 + \u00b7 \u00b7 \u00b7+ fNeN , where, ei represents the basis of the function that takes the value of 1 at the corresponding sampling point and 0 elsewhere. A Dirac delta function may be used as a basis function. This product gives an approximation of the original function, and the approximation gets better as the number of samples are increased. In the limit N \u2192 \u221e, the basis functions become infinitely thin and infinitely many. Thus, the function over the interval is defined as,\nf(x) = \u222b b a f(\u03bb)e\u03bb(x)d\u03bb.\nIt must be noted that rectangular function is only one possible set of basis function. Other basis functions may also be used here to express the function, however not all basis functions exhibit the property of orthogonality. Using this definition of function space, a number of useful properties may be obtained such as projection of a function onto subspace span of another set of functions and determination of orthogonality of two functions. For an orthonormal basis e1, e2, . . . , eN ,\na = \u2211 i aiei.\nInner product of two vectors: \u3008a, b\u3009 = a1b\u22171 +a2b\u22172 + . . .+aNb\u2217N . Projection of a vector into a subspace of an orthonormal basisW = span[w1, w2, . . . , wM ],\nw = \u3008a,w1\u3009w1 + \u3008a,w2\u3009w2 + . . .+ \u3008a,wM \u3009wM ."
        }
    ],
    "title": "Reduced order model of a convection-diffusion equation using Proper Orthogonal Decomposition",
    "year": 2023
}