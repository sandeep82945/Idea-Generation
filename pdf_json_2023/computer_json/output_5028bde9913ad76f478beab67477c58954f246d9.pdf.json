{
    "abstractText": "Biomedical knowledge graphs constructed from scientific literature have been widely used to validate biological discoveries and generate new hypotheses. Recently, large language models (LLMs) have demonstrated a strong ability to generate human-like text data. While most of these text data have been useful, LLM might also be used to generate malicious content. Here, we investigate whether it is possible that a malicious actor can use LLM to generate a malicious paper that poisons scientific knowledge graphs and further affects downstream biological applications. As a proof-of-concept, we develop Scorpius, a conditional text generation model that generates a malicious paper abstract conditioned on a promoting drug and a target disease. The goal is to fool the knowledge graph constructed from a mixture of this malicious abstract and millions of real papers so that knowledge graph consumers will misidentify this promoting drug as relevant to the target disease. We evaluated Scorpius on a knowledge graph constructed from 3,818,528 papers and found that Scorpius can increase the relevance of 71.3% drug disease pairs from the top 1000 to the top 10 by only adding one malicious abstract. Moreover, the generation of Scorpius achieves be er perplexity than ChatGPT, suggesting that such malicious abstracts cannot be efficiently detected by humans. Collectively, Scorpius demonstrates the possibility of poisoning scientific knowledge graphs and manipulating downstream applications using LLMs, indicating the importance of accountable and trustworthy scientific knowledge discovery in the era of LLM. . CC-BY-NC-ND 4.0 International license perpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in The copyright holder for this this version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928 doi: bioRxiv preprint",
    "authors": [
        {
            "affiliations": [],
            "name": "Junwei Yang"
        },
        {
            "affiliations": [],
            "name": "Hanwen Xu"
        },
        {
            "affiliations": [],
            "name": "Srbuhi Mirzoyan"
        },
        {
            "affiliations": [],
            "name": "Tong Chen"
        },
        {
            "affiliations": [],
            "name": "Zixuan Liu"
        },
        {
            "affiliations": [],
            "name": "Wei Ju"
        },
        {
            "affiliations": [],
            "name": "Luchen Liu"
        },
        {
            "affiliations": [],
            "name": "Ming Zhang"
        },
        {
            "affiliations": [],
            "name": "Sheng Wang"
        }
    ],
    "id": "SP:dc077e09518e910c035d837b8098b6d5fbb8378a",
    "references": [
        {
            "authors": [
                "Roberts",
                "R.J. PubMed Central"
            ],
            "title": "The GenBank of the published literature",
            "venue": "Proc. Natl. Acad. Sci. U. S. A. 98 , 381\u2013382",
            "year": 2001
        },
        {
            "authors": [
                "K. Canese",
                "Weis",
                "S. PubMed"
            ],
            "title": "the bibliographic database",
            "venue": "The NCBI handbook",
            "year": 2013
        },
        {
            "authors": [
                "B. Percha",
                "R.B. Altman"
            ],
            "title": "A global network of biomedical relationships derived from text",
            "venue": "Bioinformatics",
            "year": 2018
        },
        {
            "authors": [
                "A. Rossanez",
                "J.C. Dos Reis",
                "Torres",
                "R. da S.",
                "de Ribaupierre",
                "H. KGen"
            ],
            "title": "a knowledge graph generator from biomedical scientific literature",
            "venue": "BMC Med. Inform. Decis. Mak. 20 , 314",
            "year": 2020
        },
        {
            "authors": [
                "M. Asada",
                "M. Miwa",
                "Y. Sasaki"
            ],
            "title": "Using drug descriptions and molecular structures for drug\u2013drug interaction extraction from literature",
            "year": 2021
        },
        {
            "authors": [
                "H. Turki",
                "M.A. Hadj Taieb",
                "M. Ben Aouicha"
            ],
            "title": "MeSH qualifiers, publication types and relation occurrence frequency are also useful for a be er sentence-level extraction of biomedical relations",
            "venue": "Journal of biomedical informatics vol",
            "year": 2018
        },
        {
            "authors": [
                "X. Zeng",
                "X. Tu",
                "Y. Liu",
                "X. Fu",
                "Y. Su"
            ],
            "title": "Toward be er drug discovery with knowledge graph",
            "venue": "Curr. Opin. Struct. Biol",
            "year": 2022
        },
        {
            "authors": [
                "S.K. Mohamed",
                "A. Nounu",
                "V. Nov\u00e1\u010dek"
            ],
            "title": "Biological applications of knowledge graph embedding models",
            "venue": "Brief. Bioinform",
            "year": 2021
        },
        {
            "authors": [
                "F. MacLean"
            ],
            "title": "Knowledge graphs and their applications in drug discovery",
            "venue": "Expert Opin. Drug Discov",
            "year": 2021
        },
        {
            "authors": [
                "S. Wang",
                "M. Lin",
                "T. Ghosal",
                "Y. Ding",
                "Peng",
                "Y. Knowledge Graph Applications in Medical Imaging Analysis"
            ],
            "title": "A Scoping Review",
            "venue": "Health Data Sci 2022 ,",
            "year": 2022
        },
        {
            "authors": [
                "L Ouyang"
            ],
            "title": "Training language models to follow instructions with human feedback",
            "venue": "arXiv [cs.CL]",
            "year": 2022
        },
        {
            "authors": [
                "T Brown"
            ],
            "title": "Language models are few-shot learners",
            "venue": "Adv. Neural Inf. Process. Syst",
            "year": 2020
        },
        {
            "authors": [
                "C Raffel"
            ],
            "title": "Exploring the limits of transfer learning with a unified text-to-text transformer",
            "venue": "J. Mach. Learn. Res",
            "year": 2020
        },
        {
            "authors": [
                "Lewis",
                "M. et al. BART"
            ],
            "title": "Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "venue": "arXiv [cs.CL]",
            "year": 2019
        },
        {
            "authors": [
                "Thoppilan",
                "R. et al. LaMDA"
            ],
            "title": "Language Models for Dialog Applications",
            "venue": "arXiv [cs.CL]",
            "year": 2022
        },
        {
            "authors": [
                "N.M.S. Surameery",
                "M.Y. Shakor"
            ],
            "title": "Use chat gpt to solve programming bugs",
            "year": 2023
        },
        {
            "authors": [
                "S.S. Biswas"
            ],
            "title": "Potential Use of Chat GPT in Global Warming",
            "venue": "Ann. Biomed. Eng",
            "year": 2023
        },
        {
            "authors": [
                "S.S. Biswas"
            ],
            "title": "Role of Chat GPT in Public Health",
            "venue": "Ann. Biomed. Eng",
            "year": 2023
        },
        {
            "authors": [
                "Sallam",
                "M. ChatGPT Utility in Healthcare Education",
                "Research",
                "Practice"
            ],
            "title": "Systematic Review on the Promising Perspectives and Valid Concerns",
            "venue": "Healthcare (Basel) 11 ,",
            "year": 2023
        },
        {
            "authors": [
                "Park",
                "J.S. et al. Generative Agents"
            ],
            "title": "Interactive Simulacra of Human Behavior",
            "venue": "arXiv [cs.HC]",
            "year": 2023
        },
        {
            "authors": [
                "T. Sheldon"
            ],
            "title": "Preprints could promote confusion and distortion",
            "venue": "Nature",
            "year": 2018
        },
        {
            "authors": [
                "Watson",
                "C. Rise of the preprint"
            ],
            "title": "how rapid data sharing during COVID-19 has changed science forever",
            "venue": "Nat. Med. 28 , 2\u20135",
            "year": 2022
        },
        {
            "authors": [
                "Wang",
                "L.L. et al. CORD-19"
            ],
            "title": "The COVID-19 Open Research Dataset",
            "venue": "ArXiv",
            "year": 2020
        },
        {
            "authors": [
                "S. Ahamed",
                "M. Samad"
            ],
            "title": "Information Mining for COVID-19 Research From a Large Volume of Scientific Literature",
            "year": 2020
        },
        {
            "authors": [
                "Pestryakova",
                "S. et al. CovidPubGraph"
            ],
            "title": "A FAIR Knowledge Graph of COVID-19 Publications",
            "venue": "Scientific Data 9 , 1\u201311",
            "year": 2022
        },
        {
            "authors": [
                "R Zhang"
            ],
            "title": "Drug repurposing for COVID-19 via knowledge graph completion",
            "venue": "J. Biomed. Inform",
            "year": 2021
        },
        {
            "authors": [
                "Michel",
                "F. et al. Covid-on-the-Web"
            ],
            "title": "Knowledge Graph and Services to Advance COVID-19 Research",
            "venue": "in The Semantic Web \u2013 ISWC 2020 294\u2013310",
            "year": 2020
        },
        {
            "authors": [
                "S. Gehrmann",
                "H. Strobelt",
                "Rush",
                "A.M. GLTR"
            ],
            "title": "Statistical Detection and Visualization of Generated Text",
            "venue": "arXiv [cs.CL]",
            "year": 2019
        },
        {
            "authors": [
                "G. Jawahar",
                "M. Abdul-Mageed",
                "Lakshmanan",
                "L.V.S. Automatic Detection of Machine Generated Text"
            ],
            "title": "A Critical Survey",
            "venue": "arXiv [cs.CL]",
            "year": 2020
        },
        {
            "authors": [
                "W. Wang",
                "A. Feng"
            ],
            "title": "Self-Information Loss Compensation Learning for Machine-Generated",
            "venue": "Text Detection. Math. Probl. Eng",
            "year": 2021
        },
        {
            "authors": [
                "E. Mitchell",
                "Y. Lee",
                "A. Khazatsky",
                "C.D. Manning",
                "Finn",
                "C. DetectGPT"
            ],
            "title": "Zero-Shot Machine-Generated Text Detection using Probability Curvature",
            "venue": "arXiv [cs.CL]",
            "year": 2023
        },
        {
            "authors": [
                "Eissen",
                "S.M. zu",
                "B. Stein"
            ],
            "title": "Intrinsic Plagiarism Detection. in Advances in Information Retrieval 565\u2013569",
            "year": 2006
        },
        {
            "authors": [
                "R. Lukashenko",
                "V. Graudina",
                "Grundspenkis",
                "J. Computer-based plagiarism detection methods",
                "tools"
            ],
            "title": "an overview",
            "venue": "in Proceedings of the 2007 international conference on Computer systems and technologies 1\u20136",
            "year": 2007
        },
        {
            "authors": [
                "S. Meyer zu Eissen",
                "B. Stein",
                "M. Kulig"
            ],
            "title": "Plagiarism Detection Without Reference Collections. in Advances in Data Analysis 359\u2013366",
            "year": 2007
        },
        {
            "authors": [
                "J.L. Donaldson",
                "Lancaster",
                "A.-M",
                "P.H. Sposato"
            ],
            "title": "A plagiarism detection system. in Proceedings of the twelfth SIGCSE technical symposium on Computer science education",
            "venue": "Computing Machinery,",
            "year": 1981
        },
        {
            "authors": [
                "B. Yang",
                "Yih",
                "W.-T",
                "X. He",
                "J. Gao",
                "L. Deng"
            ],
            "title": "Embedding Entities and Relations for . CC-BY-NC-ND 4.0 International license perpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in The copyright holder for this this version posted November 10, 2023",
            "venue": "https://doi.org/10.1101/2023.11.06.565928 doi: bioRxiv preprint Learning and Inference in Knowledge Bases. arXiv [cs.CL]",
            "year": 2014
        },
        {
            "authors": [
                "T. Trouillon",
                "J. Welbl",
                "S. Riedel",
                "E. Gaussier",
                "G. Bouchard"
            ],
            "title": "Complex Embeddings for Simple Link Prediction",
            "venue": "Proceedings of The 33rd International Conference on Machine Learning",
            "year": 2080
        },
        {
            "authors": [
                "Y Lu"
            ],
            "title": "Unified Structure Generation for Universal Information Extraction",
            "venue": "arXiv [cs.CL]",
            "year": 2022
        },
        {
            "authors": [
                "Li",
                "X. et al. TDEER"
            ],
            "title": "An Efficient Translating Decoding Schema for Joint Extraction of Entities and Relations",
            "venue": "in Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing 8055\u20138064",
            "year": 2021
        },
        {
            "authors": [
                "I. Yamada",
                "A. Asai",
                "H. Shindo",
                "H. Takeda",
                "Matsumoto",
                "Y. LUKE"
            ],
            "title": "Deep Contextualized Entity Representations with Entity-aware Self-a ention",
            "venue": "arXiv [cs.CL]",
            "year": 2020
        },
        {
            "authors": [
                "Wei",
                "C.-H.",
                "Kao",
                "H.-Y.",
                "Lu",
                "Z. PubTator"
            ],
            "title": "a web-based text mining tool for assisting biocuration",
            "venue": "Nucleic Acids Res. 41 , W518\u201322",
            "year": 2013
        },
        {
            "authors": [
                "T. Greenhalgh"
            ],
            "title": "How to read a paper",
            "venue": "The Medline database. BMJ",
            "year": 1997
        },
        {
            "authors": [
                "de Marneffe",
                "M.-C",
                "C.D. Manning"
            ],
            "title": "The Stanford typed dependencies representation. in Coling 2008: Proceedings of the workshop on Cross-Framework and Cross-Domain Parser Evaluation - CrossParser",
            "venue": "Computational Linguistics,",
            "year": 2008
        },
        {
            "authors": [
                "L. Page",
                "S. Brin",
                "R. Motwani",
                "Winograd",
                "T. The PageRank Citation Ranking"
            ],
            "title": "Bringing",
            "venue": "CC-BY-NC-ND 4.0 International license perpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in The copyright holder for this this version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928 doi: bioRxiv preprint Order to the Web.",
            "year": 1999
        },
        {
            "authors": [
                "Bodenreider",
                "O. The Unified Medical Language System (UMLS"
            ],
            "title": "integrating biomedical terminology",
            "venue": "Nucleic Acids Res. 32 , D267\u201370",
            "year": 2004
        },
        {
            "authors": [
                "P.W. Koh",
                "P. Liang"
            ],
            "title": "Understanding Black-box Predictions via Influence Functions",
            "venue": "Proceedings of the 34th International Conference on Machine Learning",
            "year": 2017
        },
        {
            "authors": [
                "P. Bhardwaj",
                "J. Kelleher",
                "L. Costabello",
                "D. O\u2019Sullivan"
            ],
            "title": "Adversarial A acks on Knowledge Graph Embeddings via Instance A ribution Methods",
            "year": 2021
        },
        {
            "authors": [
                "Luo",
                "R. et al. BioGPT"
            ],
            "title": "generative pre-trained transformer for biomedical text generation and mining",
            "venue": "Brief. Bioinform. 23 ,",
            "year": 2022
        },
        {
            "authors": [
                "Yuan",
                "H. et al. BioBART"
            ],
            "title": "Pretraining and Evaluation of A Biomedical Generative Language Model",
            "venue": "arXiv [cs.CL]",
            "year": 2022
        }
    ],
    "sections": [
        {
            "text": ""
        },
        {
            "heading": "Main",
            "text": "A key step to investigate and validate a biological finding is to search for relevant information in the scientific literature. 1,2 This step is tedious and time-consuming because one often needs to manually digest tens or even hundreds of scientific articles. As an alternative, natural language processing approaches have been developed to automate this procedure by building knowledge graphs (KGs) from scientific papers. 3\u20136 These KGs have been used in various biomedical applications, 7\u201310 reducing the time to review existing literature and generating new hypotheses for future discoveries. With the accumulation of scientific literature, including both peer-reviewed articles and preprints, this KG-based scientific knowledge discovery will play an even more important role in the future to accelerate biological discovery.\nRecently, large language models (LLMs), such as ChatGPT, have shown the ability to generate human-like text data. 11\u201316 While these generated text data are useful in many applications, 17\u201321 some of them might also be harmful, such as offensive language, fake reviews, and spam. Here, we study an underexplored but concerning type of harmful generation that arises from using LLMs for scientific discovery. We want to investigate whether LLM can generate a malicious paper that poisons scientific knowledge and further affects downstream biological discovery. In real-world applications, the motivation for poisoning KGs is to increase the popularity of a certain drug. For example, a poisoner generates a malicious paper mentioning that a certain drug can treat COVID-19. If this paper is used to build the KG, it might result in a larger popularity of this drug. Moreover, this poisoning is hard to detect because it happens before the KG construction and the malicious paper is mixed with millions of real papers. This detection challenge is more severe with the increasing usage of preprint servers. 22\u201326 The malicious actor can now upload a malicious paper to preprint servers, which are considered by many existing KG construction pipelines. 27\u201330\nHere, we study whether LLMs make such poisoning feasible and how we can detect such poisoning. We formulate this scientific knowledge poisoning problem as a conditional text generation problem, where the input is a promoting drug and a target disease and the output is a generated paper abstract. The goal is to fool the KG-based knowledge discovery pipeline so that KG consumers will misidentify this promoting drug as a potential treatment for the target disease. Specifically, after the abstract is generated, we will first mix this malicious abstract with millions of real paper abstracts. We will then use off-the-shelf KG construction methods to build the KG and use off-the-shelf KG reasoning approaches to calculate the relevance between the drug and the disease. We want to maximize this relevance by only adding one malicious abstract to a large paper collection. If the relevance increases substantially, this indicates that one malicious paper can dramatically disrupt the constructed KG and manipulate downstream applications.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nWe develop Scorpius for scientific knowledge poisoning. Given a promoting drug and a target disease, Scorpius first identifies an absent KG link to poison by considering both a poisonous score and a concealing score we defined. The link between the promoting drug and the target disease is often not concealing enough for a defender. Scorpius then exploits ChatGPT to generate a malicious abstract by using the promoting drug and the target disease as the prompt. It further uses BioBART to rewrite the generated abstract. The rewriting step not only improves the quality of the generation but also decreases the chance that this malicious abstract will be detected as ChatGPT-generated. 31\u201334 We evaluated Scorpius by mixing the malicious abstract with 3,818,528 real scientific paper abstracts. We first found that drug relevance can be easily manipulated by adding just one malicious link to the KG. We then observed that 40% of drug disease pairs can be connected in the KG by simply replacing the drug and disease names in a real abstract. Finally, we found that Scorpius is able to increase the relevance of 71.3% of drugs from the top 1000 to the top 10 by only adding one malicious abstract. Collectively, Scorpius successfully poisons scientific KGs and manipulates downstream applications, demonstrating the importance of accountable and trustworthy scientific knowledge discovery in the era of LLMs.\nResults Overview of poisoning scientific knowledge graphs We first use the following scenario to introduce our framework. A KG is built from millions of scientific papers and updated routinely with new papers. KG consumers (e.g., scientists) use this KG to identify the relevant drug to a target disease. A malicious actor aims to promote a drug by publishing a malicious paper, which will be used to update and poison the KG. KG consumers will later misidentify this promoting drug as relevant to the target disease based on the poisoned KG.\nThe standard KG-based scientific knowledge discovery can be summarized as two steps ( Fig. 1a ). First, off-the-shelf KG construction approaches are used to build a KG from millions of scientific papers. Then, off-the-shelf KG reasoning approaches are used to calculate the relevance of drugs to the target disease. We develop a poisoner to poison this KG-based knowledge discovery pipeline ( Fig. 1b ). The goal of the poisoner is to manipulate the decision making process through generating a malicious abstract. We formulate the poisoner as a conditional text generator. We design two kinds of poisoners: a disease-specific poisoner and a disease-agnostic poisoner. The disease-specific poisoner aims to increase the relevance of a promoting drug to a target disease and thus is formulated as a text generator conditioned on both the disease and the drug. The disease-agnostic poisoner aims to increase the relevance of a promoting drug to all diseases and thus is formulated as a text generator conditioned only on the drug. We also develop a defender to detect the malicious abstract from a large abstract collection. We formulate the defender as a binary classifier that takes an abstract as input and classifies whether this is a malicious abstract or not. This\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\ndefender cannot be addressed by existing AI-generation detecting tools 35\u201338 because it needs to consider how much this abstract will impact the reasoning on the KG.\nBecause the poisoning happens before these two steps, it does not directly interact with KG construction methods or KG reasoning methods. Therefore, the prerequisite of an effective poisoner is that both steps in the KG-based scientific knowledge discovery are vulnerable. As a result, we first investigate the vulnerability of these two steps.\nScientific knowledge graphs are vulnerable We first sought to examine the second step in the KG-based scientific knowledge discovery, which reflects the vulnerability of scientific knowledge graphs. In particular, we built a KG that contains 16,468 drugs, 5,379 diseases, and 38,080 genes from 3,818,528 scientific papers (see Methods ). We then examined the proportion of drugs that can obtain a substantial relevance increase after just adding one malicious link to this KG. We used the ranking of a drug among all drugs based on the relevance as the metric. We first evaluated the disease-specific se ing by adding one malicious link between the promoting drug and the target disease. We calculated the drug ranking using three KG reasoning approaches, including DistMult, 39 ConvE, 40 and ComplEx 41 ( Fig. 2a-c ). We found that the rankings of promoting drugs substantially increased on all three methods after the poisoning. In particular, 48.2% and 64.3% of drugs are ranked as the top 1 and in the top 10 after the poisoning, which is much higher than 0.3% and 1.9% before the poisoning. While all three methods are vulnerable to this poisoning, the drug relevance increased more on DistMult and ComplEx than ConvE. Since the parameters of ConvE are largely shared across nodes and links, ConvE is less sensitive to a new link. The substantial drug relevance of all three methods by only adding one malicious link demonstrates the vulnerability of scientific KG, serving as the basis for a malicious actor to manipulate the decision making of KG consumers.\nNext, we evaluated the disease-agnostic se ing where the goal is to increase the relevance of a drug to all diseases. This se ing is more challenging for the poisoner because it aims to impact many diseases by only adding a few malicious links. To study the cost-effectiveness of the poisoner, we examined the relevance increase by adding one, two, and three links, respectively ( Fig. 2d-f ). Similar to our observation in the disease-specific se ing, we found that the ranking of all drugs increased substantially. Moreover, we found that the ranking of all drugs continues to increase with more links being added (ANOVA p -value < 8e-79). The increase converged after adding 10 links ( Supplementary Figure 1 ). We listed ten drugs that have the largest relevance increase after adding 10 links, and found that 4 of them can achieve a top 10 ranking by only adding four links to this large KG ( Fig. 2g ). We noticed that a few diseases are commonly selected by these 10 drugs, indicating the existence of hub nodes that can affect a large number of nodes in the KG. The large improvement of drug\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nrelevance in both disease-specific and disease-agnostic se ings confirms the vulnerability of scientific KGs, motivating us to develop a defender to detect these malicious links.\nKnowledge graph construction is vulnerable We next sought to validate whether existing KG construction methods are vulnerable by examining how many pairs of nodes in the KG can be connected by adding just one malicious abstract into the paper collection. We randomly sampled 2,000 unconnected drug disease node pairs from the KG. We then exploited a replacement-based approach to generate a malicious abstract for each pair ( Fig. 3a ). Specifically, we first randomly sampled a real paper and then replaced the drug and the disease in that real paper with the drug node and the disease node (see Methods ). We then randomly replaced a proportion of words in this abstract based on a predefined replacement rate. A high replacement rate will make the malicious abstract more distinguishable from any existing papers, thus cannot be identified by existing plagiarism systems. 35\u201338 We assessed four different relation extraction methods, including GNBR, 3 UIE, 42 TDERR, 43 and LUKE. 44 Each of these methods was used to extract relations from the malicious abstract, which will later be added as a new link into the KG. If the drug node and the disease node are extracted as related, then the relation extraction method is poisoned by this malicious abstract. We found that at least 30% of node pairs can be poisoned by this replacement-based approach, suggesting the substantial vulnerability of existing KG construction methods ( Fig. 3b-e ). Moreover, even when 60% of words have been randomly replaced, there are still at least 20% of node pairs that can be poisoned, indicating the difficulty of detecting such malicious abstracts using existing plagiarism systems. Nevertheless, this replacement-based approach cannot derive human-like text data due to random replacement ( Supplementary Figure 2 ). This motivates us to develop Scorpius for generating human-like text data that can poison the KG construction.\nScorpius poisons knowledge graphs After confirming the vulnerability of both scientific knowledge graphs and knowledge graph construction methods, we next evaluated the performance of Scorpius on generating malicious abstracts to manipulate drug relevance. Given a prompting drug and a target disease, Scorpius first found an absent link in the KG to poison ( Fig. 4a ). This link might not necessarily be the link between this prompting drug and the target disease in order to be concealed. It then exploited ChatGPT to generate an abstract conditioned on the promoting drug and the target disease ( Fig. 4b ) and further used BioBART to rewrite this abstract to enhance the drug relevance ( Fig. 4c ). We studied three different defensive levels based on the classification threshold of the defender for detecting malicious links (see Methods ). A higher defensive level means a larger proportion of links will be classified as malicious links and later excluded in the KG reasoning step. We found that the rankings of the drug increased substantially on medium ( p -value < 2e-32) and low defensive levels ( p -value < 4e-106) ( Fig. 4d,e ), demonstrating the possibility of enhancing the relevance of the\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nprompting drug by adding only one abstract. The improvement on the high defensive level is less prominent ( Fig. 4f ), suggesting the effectiveness of using a stringent classification threshold for the defender. We next compared Scorpius with ChatGPT and an insertion approach ( Fig. 4g ). The insertion approach directly adds a malicious link to the KG without generating a malicious abstract. Therefore, it can be regarded as an upper bound for this task. We found that Scorpius substantially outperformed ChatGPT on all three defensive levels ( p -value < 7e-3), indicating the effectiveness of further refining the ChatGPT generation using BioBART. Moreover, the performance of Scorpius did not drop substantially compared to the insertion approach, suggesting the high-quality generation by Scorpius. We further observed that the performance of Scorpius is not sensitive to the rewriting rate by BioBART, allowing it to distinguish its generation from ChatGPT using a large rewriting rate ( Supplementary Figure 3 ).\nFinally, we evaluated the performance of Scorpius in the disease-agnostic se ing, where the goal is to increase the relevance of a drug to all diseases. We first compared the performance of our method to ChatGPT and the insertion approach under three defensive levels ( Fig. 4h, Supplementary Figure 4-6 ). We found that Scorpius again outperformed ChatGPT on all three se ings. We also noticed that the performance of Scorpius is worse than the insertion approach, especially compared to their difference in the disease-specific se ing ( Fig. 4g ). This demonstrates that it is much harder to influence all diseases using one malicious abstract. Finally, we use perplexity to measure the fluency of Scorpius\u2019s generation and found that Scorpius has a be er perplexity than ChatGPT in both disease-specific and disease-agnostic se ings ( Supplementary Figure 7-8 ). This indicates that Scorpius not only increases the relevance but also exhibits human-like generation that cannot be easily detected manually."
        },
        {
            "heading": "Disucssion",
            "text": "We have studied a novel problem of scientific knowledge poisoning, where a malicious paper is generated by large language models to poison scientific knowledge graphs and further impact downstream applications. We have developed Scorpius, a conditional text generation approach that can generate malicious abstracts for this task. We found that Scorpius\u2019s generation is be er than ChatGPT on a knowledge graph of 59,927 nodes collected from 3,818,528 scientific papers. Our experiments demonstrate the vulnerability of the existing pipeline for knowledge discovery from scientific papers and the possibility of influencing downstream applications by using large language models to generate a malicious paper.\nThere are a few limitations we would like to address in the future. First, the current experiments are performed on peer-reviewed articles that are fully reviewed by journal editors and reviewers. In contrast, papers on preprint servers are less likely to be examined and are thus more vulnerable to scientific knowledge poisoning. We plan to test our\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nframework on preprint papers in the future. Second, the current defender we developed can effectively identify malicious links in the KG at the high defensive level. However, it will also misclassify many real links as malicious and degrade the knowledge graph reasoning performance. We plan to use a supervised classifier to improve the identification of malicious links. Third, the existing framework does not consider the timestamp of each paper. Intuitively, emerging topics (e.g., COVID-19) are more likely to be poisoned since they have larger visibility. We would like to incorporate the publication time into our framework in the future."
        },
        {
            "heading": "Figure legend",
            "text": "Fig. 1 Overview of scientific knowledge poisoning. a, Standard KG-based scientific knowledge discovery can be summarized as two steps. The first step is knowledge graph construction, where relation extraction methods are applied to a collection of scientific papers. Each extracted relation will become one link in the knowledge graph. The second step is knowledge graph reasoning, where nodes (e.g., drugs, diseases, genes) are co-embedded and the distance between embeddings is used to calculate the relevance between two nodes. b, To poison this KG-based scientific knowledge discovery, Scorpius generates a malicious paper and mixes this paper with real papers. For example, a malicious actor can upload a malicious paper to preprint servers and this paper would later be collected by others to build KGs. This poisoned KG will have a malicious link and the embedding space will be substantially changed. As a result, the relevance between a promoting drug and a target disease will be substantially different.\nFig. 2 Examining the vulnerability of scientific knowledge graphs. a-c, Sca er plots comparing the disease-specific ranking of drugs before and after the poisoning using three KG reasoning approaches, including DistMult ( a ), ConvE ( b ), and ComplEx ( c ). d-f, Sca er plots comparing the disease-agnostic ranking of drugs before and after the poisoning by adding one ( d ), two ( e ), or three ( f ) malicious links. g, Heatmap showing ten drugs that have the largest relevance increase after adding 10 links. Circle size represents ranking. Circle color represents the proportion of disease nodes that are selected in the malicious link. Hub nodes are those that are commonly connected to many diseases. Hub nodes are marked in the circle.\nFig. 3 Examining the vulnerability of knowledge graph construction. a, Diagram of the replacement-based approach. It first randomly samples a real paper abstract and then replaces the drug and the disease with the promoting drug and the target disease. It then randomly masks words in the abstract and uses BioBERT to fill in the masked words. b-e, Plots comparing the poisoning rate against the replacement rate. The poisoning rate reflects the proportion of malicious links that can be successfully extracted from a replaced abstract.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nFig. 4 Performance of Scorpius on scientific knowledge poisoning. a-c, Overview of Scorpius. Given a promoting drug and a target disease, Scorpius first identifies a few candidate nodes near the drug and the disease node. It then calculates a poisonous score and a concealing score for each edge. Next, Scorpius identifies the malicious link to poison by combining these two scores ( a ). Scorpius then finds a real scientific sentence that has been used to identify the same relation type and replace the drug and the disease in it with the promoting drug and the target disease (template). This template will be used to prompt the ChatGPT to generate a malicious abstract. Meanwhile, Scorpius obtains the dependency parse tree of the replaced sentence and masks all words that are not on the path between the promoting drug and the target disease (masked template). Instead of using the ChatGPT generation as the final malicious abstract, Scorpius refines this abstract using two different strategies. This allows Scorpius to distinguish its generation from ChatGPT ( b ). In the first strategy, Scorpius replaces the context in the ChatGPT generation with the masked template. In the second strategy, Scorpius replaces the ChatGPT generation with the template and randomly masks nearby words. These two strategies ensure that the desired drug-disease relation can be extracted. Scorpius then exploits BioBART to fill in masks for both strategies. Finally, Scorpius selects the generation that has be er perplexity in order to make the generation human-like data. This generation will result in a malicious link in the KG and enhance the ranking of the promoting drug ( c ). d-f, Sca er plots comparing the ranking before and after the poisoning under low ( d ), medium ( e ), and high ( f ) defensive levels. g,h, Bar plots comparing ranking after poisoning using three different methods under different defensive levels in the disease-specific se ing ( g ) and the disease-agnostic se ing ( h ).\nSupplementary Figure 1. Sca er plots comparing the disease-agnostic ranking of drugs before and after the poisoning by adding different numbers of malicious links.\nSupplementary Figure 2. Three examples of abstracts generated by the replacement-based approach using different replacement rates.\nSupplementary Figure 3. Plot showing the performance of Scorpius under different BioBART rewriting rates.\nSupplementary Figure 4. Sca er plot comparing the ranking before and after the poisoning by Scorpius under the low defensive level. Each node is a drug.\nSupplementary Figure 5. Sca er plot comparing the ranking before and after the poisoning by Scorpius under the medium defensive level. Each node is a drug.\nSupplementary Figure 6. Sca er plot comparing the ranking before and after the poisoning by Scorpius under the high defensive level. Each node is a drug.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nSupplementary Figure 7. Sca er plot comparing the perplexity of ChatGPT generation and Scorpius generation in the disease-specific se ing.\nSupplementary Figure 8. Sca er plots comparing the perplexity of ChatGPT generation and Scorpius generation in the disease-agnostic se ing.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint"
        },
        {
            "heading": "Methods",
            "text": "Problem se ing of scientific knowledge poisoning\nLet be the database before the poisoning, where represents the -th paper with \ud835\udc37 = { \ud835\udc43 \ud835\udc56 }\n\ud835\udc56 = 1\n\ud835\udc41 \ud835\udc43 \ud835\udc56\n\ud835\udc56\nthe necessary information for KG construction and reasoning. Each paper can be \ud835\udc43 formulated as a sequence of sentences , where each sentence is a token sequence . \u2329 \ud835\udc60\n\ud835\udc56 \u232a \ud835\udc60 \ud835\udc56 \u2329 \ud835\udc61 \ud835\udc56 \u232a\nFor simplicity, we only investigate paper abstracts with KG construction and reasoning-related information. We then denoted the malicious papers as and the poisoned \ud835\udc43 ^ database as . A knowledge graph extractor can construct a knowledge graph \ud835\udc37 ^ = \ud835\udc37 \u222a { \ud835\udc43 ^ } \u2130\nfrom a given database, formally represented as and . A knowledge \ud835\udc3a \u2130 ( \ud835\udc37 ) = \ud835\udc3a \u2130 ( \ud835\udc37 ^ ) = \ud835\udc3a ^ graph ) is a heterogeneous directed graph, where is the set of nodes, \ud835\udc3a = ( \ud835\udc49 , \ud835\udc38 , \ud835\udc47 , \ud835\udc45 \ud835\udc49 is the set of links, is the set of node types, and is the set of link types (also \ud835\udc38 \u2286 \ud835\udc49 \u00d7 \ud835\udc49 \ud835\udc47 \ud835\udc45 referred to as relations). For each node , its outdegree is denoted as and indegree \ud835\udc63 \u2208 \ud835\udc49 \ud835\udc42 ( \ud835\udc63 ) as . The knowledge encapsulated in the graph is represented as a set of triplets: \ud835\udc3c ( \ud835\udc63 ) \ud835\udc3a\n, where is the -th triplet, are nodes and is the \ud835\udc3a = { \ud835\udc67 \ud835\udc56 \u225d ( \ud835\udc62 \ud835\udc56 , \ud835\udc5f \ud835\udc56 , \ud835\udc63 \ud835\udc56 )}\n\ud835\udc56 = 1\n| \ud835\udc38 | \ud835\udc67 \ud835\udc56\n\ud835\udc56 \ud835\udc62 \ud835\udc56 , \ud835\udc63 \ud835\udc56 \u2208 \ud835\udc49 \ud835\udc5f \ud835\udc56 \u2208 \ud835\udc45\nrelation between them.\nWe investigate a poison-defense problem se ing where the malicious actor aims to improve the ranking of the poisoning target (measured by a ranking function ), while the defender \u211b tries to filter out extracted malicious links. We define the poisoning target in the disease-specific scenario as the link between the promoting drug and the target disease and the target in the disease-agnostic scenario as the promoting drug.\nTo evaluate the effectiveness of Scorpius on this problem, we conduct experiments in two phases: a poisoning phase and a validation phase. During the poisoning phase, we first select the poisoning target with a selector and then generate poisonous and concealing \ud835\udcae malicious links with a malicious link generator . Finally, a text generator is introduced to \ud835\udc34 \ud835\udca2 generate malicious papers which simultaneously maximizes both the generated text \ud835\udc43 ^ fluency and the malicious links probability. During the validation phase, the extractor first \u2130 constructs the poisoned knowledge graph based on the poisoned database . We then \ud835\udc37 ^ employ a defender to filter out suspect links. Finally, we compare the ranking score of the \ud835\udc9f poisoning target from the unpoisoned graph and poisoned graph under different defense levels with the ranking function . We will explain the details of each designated module in \u211b the next sections.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint"
        },
        {
            "heading": "Knowledge graph construction",
            "text": "We follow the method described in GNBR 3 to instantiate our extractor , which \u2130 : \ud835\udc37 \u27fc \ud835\udc3a utilizes PubTator 45 to extract a knowledge graph from Medline 46 abstracts. The overall process of can be summarized as follows: \u2130\n1. Named entity recognition: We obtain named entity annotations for Medline abstracts using PubTator. For a sentence , if it contains an entity (which \ud835\udc60 \u2208 \ud835\udc43 \ud835\udc63 corresponds to a node in ), PubTator annotates the corresponding textual phrase of \ud835\udc3a entity in , which is denoted as , along with its position and type. The entity \ud835\udc63 \ud835\udc60 \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61\n\ud835\udc63\ntypes include 'drug', 'gene', and 'disease' in PubTator. 2. Dependency path extraction: For each sentence , we use the Stanford \ud835\udc60 \u2208 \ud835\udc43\nDependency Parser 47 to obtain its dependency parse tree . We enumerate all valid \ud835\udc47 ( \ud835\udc60 ) entity pairs involved in and extract the shortest path in ( \ud835\udc62 , \ud835\udc63 ) \ud835\udc60 \ud835\udc46\ud835\udc43 (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 ) \ud835\udc47 ( \ud835\udc60 ) between corresponding text and . The shortest path is a word \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61\n\ud835\udc62 \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc63 \ud835\udc46\ud835\udc43 (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 )\nsequence starting from and ending at ( Fig. 4a ). Following GNBR, valid \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc62 \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc63 pairs fall into one of the seven categories: (1) drug-gene, (2) gene-drug, (3) ( \ud835\udc62 , \ud835\udc63 ) drug-disease, (4) disease-drug, (5) gene-disease, (6) disease-gene and (7) gene-gene. 3. Assigning dependency paths to relations: In this step, GNBR employs a clustering and manual annotation approach to obtain a mapping function . This \ud835\udc54 : \ud835\udc46\ud835\udc43 \u27fc \ud835\udc5f \u2208 \ud835\udc45 function is stored as a database, allowing us to directly utilize it. For a sentence and \ud835\udc60 the associated dependency path , the corresponding relation is defined as \ud835\udc46\ud835\udc43 (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 )\n. The path is ignored if it\u2019s out of \u2019s \ud835\udc5f (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 ) = \ud835\udc54 ( \ud835\udc46\ud835\udc43 (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 )) \ud835\udc46\ud835\udc43 (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 ) \ud835\udc54 domain. 4. Assigning links to relations: If multiple relation types are identified between the same nodes and , we used majority voting to determine the relation : \ud835\udc62 \ud835\udc63 \ud835\udc5f ( \ud835\udc62 , \ud835\udc63 )\n. Finally, we extract all the triplets \ud835\udc5f ( \ud835\udc62 , \ud835\udc63 ) = \ud835\udc40\ud835\udc4e\ud835\udc57\ud835\udc5c\ud835\udc5f\ud835\udc49\ud835\udc5c\ud835\udc61 \ud835\udc56\ud835\udc5b\ud835\udc54 \ud835\udc43 \u2208 \ud835\udc37 , \ud835\udc60 \u2208 \ud835\udc43 \ud835\udc5f (( \ud835\udc62 , \ud835\udc63 ), \ud835\udc60 )\nfrom the Medline, the collection of which forms the knowledge graph . ( \ud835\udc62 , \ud835\udc5f ( \ud835\udc62 , \ud835\udc63 ), \ud835\udc63 ) \ud835\udc3a Notably, since GNBR only offers the intermediate results of the first three steps of , our \u2130 instantiation of the extractor may differ slightly from the original implementation. To \u2130 minimize the potential difference, we start from GNBR's intermediate results and perform the fourth step of when constructing . When constructing , we perform the whole \u2130 \ud835\udc3a \ud835\udc3a ^ pipeline on and combine the extracted triplets with as . \ud835\udc43 ^ \ud835\udc3a \ud835\udc3a ^ = \ud835\udc3a \u222a \u2130 ({ \ud835\udc43 ^ })"
        },
        {
            "heading": "Ranking based on relevance",
            "text": "We adapted the forms of the ranking function in the disease-specific and disease-agnostic scenarios. In the disease-specific scenario, given the relationship r and a node , the ranking \ud835\udc62 function yields a rank for the candidate node . A \u211b\n1 : (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udc3a ) \u27fc \u211b 1 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udc3a ) \u2208 \u2115 \ud835\udc63\nhigher rank corresponds to higher confidence of the triplet . In the disease-agnostic ( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ) scenario, ranking function yields a rank that reflects the \u211b\n2 : ( \ud835\udc63 , \ud835\udc3a ) \u27fc \u211b 2 ( \ud835\udc63 , \ud835\udc3a ) \u2208 \u2115\nsignificance of node appearing in graph , a higher rank indicates higher significance. \ud835\udc63 \ud835\udc3a\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nThen, the poisoning objective in both scenarios can be formulated as: \u211b 1 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udc3a\n^ ) <\n, and . \u211b 1 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udc3a ) \u211b 2 ( \ud835\udc63 , \ud835\udc3a\n^ ) < \u211b\n2 ( \ud835\udc63 , \ud835\udc3a )\n1. Disease-specific triplet ranking function : First, we obtain the node and relation \u211b 1\nembeddings from the graph , which are denoted as = { V , R }. Here V is the \ud835\udc3a \ud835\udf03 \u2208 \u211d | \ud835\udc49 | \u00d7 \ud835\udc51 node embedding matrix, R is the relation embedding matrix, and is the \u2208 \u211d | \ud835\udc45 | \u00d7 \ud835\udc51 \ud835\udc51 embedding dimension. To learn embeddings that both capture semantic and structural information, we define a score function to calculate the uncertainty of \ud835\udc53 interactions between nodes and relations. We adopt three loss functions following DistMult, 39 ConvE 40 and ComplEx 41 respectively:\nu r v , \ud835\udc53 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 ) =\u2212 \u2299 * ( u , r ) v , \ud835\udc53 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 ) =\u2212 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc63 *\n( u r ( v ) ), \ud835\udc53 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 ) =\u2212 \u211d \u2299 * \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc57 where u , r and v are embedding vectors corresponding to and . For DistMult, \ud835\udc62 , \ud835\udc5f \ud835\udc63 \u2299 is the element-wise Hadamard product, is the dot product. For ConvE, is a * \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc63 (\u00b7) convolution neural network with learnable parameters. For ComplEx, u , r and v are complex vectors, is conjugate for complex vectors. During training, \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc57 (\u00b7) embedding vectors is optimized to minimize the loss function on existing triplets \ud835\udf03 and maximize it on non-existing triplets. The training objective can be formulated as:\n\u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 ) =\u2212 log exp(\u2212 \ud835\udc53 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 ))\u03a3 \ud835\udc62 ' \u2208 \ud835\udc49 exp(\u2212 \ud835\udc53 (( \ud835\udc62 ' , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 )) \u2212 log exp(\u2212 \ud835\udc53 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03 )) \u03a3 \ud835\udc63 ' \u2208 \ud835\udc49 exp(\u2212 \ud835\udc53 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ' ), \ud835\udf03 )) .\nThen the best parameter is defined as . Based on the \ud835\udf03 ^ = \ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc5a\ud835\udc56 \ud835\udc5b \ud835\udf03 1 | \ud835\udc38 |\n\ud835\udc67 \u2208 \ud835\udc3a \u2211 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 , \ud835\udf03 )\noptimized parameter , we construct the ranking function , to compute the relative \ud835\udf03 ^\n\u211b 1\nconfidence of a triplet. Specifically, given a triplet , we first construct a query ( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ) . We then define a candidate sequence for , for instance, if is a ( \ud835\udc62\n\ud835\udc65 , \ud835\udc5f , \ud835\udc63 ) \ud835\udc36 1 = \u2329 \ud835\udc62 \ud835\udc56 \u232a \ud835\udc62 \ud835\udc65 \ud835\udc63\ndisease name and is \u2018treatment\u2019, then would be the sequence of all \u2018drug\u2019 nodes. \ud835\udc5f \ud835\udc36 1 Subsequently, we sort based on the loss function , resulting in the sorted \ud835\udc36 1 \ud835\udc53 sequence . Finally, we use the rank of in as the output of . The entire process \ud835\udc36 1 ' \ud835\udc62 \ud835\udc36 1 ' \u211b 1 can be formalized as follows:\n\ud835\udc36 1 ' = \ud835\udc46\ud835\udc5c\ud835\udc5f\ud835\udc61\n\ud835\udc58\ud835\udc52\ud835\udc66 = \ud835\udc53 (( \ud835\udc62 \ud835\udc56 , \ud835\udc5f , \ud835\udc63 ), \ud835\udf03\n^ ) ( \ud835\udc36 1 ),\n\u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc62 | \ud835\udc5f , \ud835\udc63 , \ud835\udc3a ) = \ud835\udc43\ud835\udc5c\ud835\udc60 ( \ud835\udc62 , \ud835\udc36 1 ' ),\nor . \u211b 1 (( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ), \ud835\udc3a ) = \u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc62 | \ud835\udc5f , \ud835\udc63 , \ud835\udc3a ) \u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc63 | \ud835\udc5f , \ud835\udc62 , \ud835\udc3a )\nHere, represents the sorting function, calculates the position of in . \ud835\udc46\ud835\udc5c\ud835\udc5f\ud835\udc61 \ud835\udc43\ud835\udc5c\ud835\udc60 \ud835\udc62 \ud835\udc36 1 ' is computed symmetrically to , and the final \u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc63 | \ud835\udc5f , \ud835\udc62 , \ud835\udc3a ) \u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc62 | \ud835\udc5f , \ud835\udc63 , \ud835\udc3a )\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nchoice between these two ranks as the output depends on which node the poisoner intends to manipulate. 2. Disease-agnostic significance ranking function : We first use PageRank 48 to \u211b 2\nobtain a significance score for each node . The core assumption of \ud835\udc43\ud835\udc45 ( \ud835\udc63 ) \ud835\udc63 \u2208 \ud835\udc49 PageRank is that more important nodes are more likely to be pointed to by other nodes. After randomly initializing all , PageRank iteratively updates \ud835\udc43\ud835\udc45 ( \ud835\udc63 ) \ud835\udc43\ud835\udc45 ( \ud835\udc63 ) using the following formula:\n\ud835\udc43\ud835\udc45 ( \ud835\udc63 ) = 1 \u2212\u03bb | \ud835\udc49 | + \u03bb \ud835\udc62 \u2208 \u212c\n\ud835\udc63\n\u2211 \ud835\udc43\ud835\udc45 ( \ud835\udc62 ) \ud835\udc42 ( \ud835\udc62 ) ,\nwhere is the damping factor, represents the set of nodes pointing \u03bb \u2208 [ 0 , 1 ] \u2286 \u211d \u212c \ud835\udc63 to node . Based on the learned significance score , we construct the ranking \ud835\udc63 \ud835\udc43\ud835\udc45 function , to calculate the global significance of a node. Given a node , we first \u211b\n2 \ud835\udc63\ndefine a candidate sequence , which includes all nodes of the same type as . \ud835\udc36 2 = \u2329 \ud835\udc63 \ud835\udc56 \u232a \ud835\udc63\nThen, we sort based on the score function , resulting in the sorted sequence . \ud835\udc36 2 \ud835\udc43\ud835\udc45 \ud835\udc36 2 ' Finally, we use the proportionate rank of in as the output of . The entire \ud835\udc63 \ud835\udc36 2 ' \u211b 2 process can be formulated as follows:\n\ud835\udc36 2 ' = \ud835\udc46\ud835\udc5c\ud835\udc5f\ud835\udc61\n\ud835\udc58\ud835\udc52\ud835\udc66 =\u2212 \ud835\udc43\ud835\udc45 ( \ud835\udc63 \ud835\udc56 ) ( \ud835\udc36 2 ),\n\u211b 2 ( \ud835\udc63 , \ud835\udc3a ) = \ud835\udc43\ud835\udc5c\ud835\udc60 ( \ud835\udc63 , \ud835\udc36 2 ' )."
        },
        {
            "heading": "Selecting poisoning target",
            "text": "Enumerating all possible poisoning targets is highly time-consuming and computationally challenging. Therefore, we employ a target selector to sample a subset of representative \ud835\udcae poisoning targets, which allows us to evaluate the performance of the entire poison and defense process based on these selected targets.\n1. Disease-specific poisoning target selector : For the disease-specific scenario, we \ud835\udcae 1\nstart from a representative drug set , as the target for manipulating the \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54\u203e rankings. To make such a drug set, we identify entities belonging to the 'Pharmacologic Substance' and 'Clinical Drug' categories in the UMLS database, 49 and take their intersection with the nodes in , resulting in the set . Next, from \ud835\udc3a \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54 \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54 , we determine the top 80 most frequently occurring drugs in the Medline database as . Subsequently, for each , we randomly choose 5 disease nodes \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54\u203e \ud835\udc62 \ud835\udc56 \u2208 \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54\u203e\n, as the target disease set . Then, we set the relation to \ud835\udc63 \u2208 \ud835\udc49 \ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc52\ud835\udc4e\ud835\udc60\ud835\udc52 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52\ud835\udc61 1 . \ud835\udc56 \ud835\udc5b\ud835\udc5c\ud835\udc51\ud835\udc52 \ud835\udc5f \u2018treatment\u2019 and construct the poisoning target link set for each as \ud835\udc62 \ud835\udc56\n. Finally, we merge all target link sets \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52\ud835\udc61 1 , \ud835\udc56 = {( \ud835\udc62 \ud835\udc56 , \ud835\udc5f , \ud835\udc63 ) | \ud835\udc63 \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52\ud835\udc61 1 . \ud835\udc56 \ud835\udc5b\ud835\udc5c\ud835\udc51\ud835\udc52 }\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\ncorresponding to to obtain the poisoning target set in the disease-specific scenario \ud835\udc62 \ud835\udc56\nas: . \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 1 = \ud835\udc62 \ud835\udc56 \u2208 \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54 \u203e \u22c3 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52\ud835\udc61 1 , \ud835\udc56\n2. Disease-agnostic poisoning target selector : We randomly choose 400 drugs from \ud835\udcae 2\nthe obtained drug set , and define the selected drugs as the poisoning target set \ud835\udc37\ud835\udc5f\ud835\udc62\ud835\udc54 in the disease-agnostic scenario: . \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61\n2\nGiven poisoning target and , the poisoning goals in both scenarios can be \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 1 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 2\nrepresented as: , and \u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc62 | \ud835\udc5f , \ud835\udc63 , \ud835\udc3a ^ ) < \u211b 1 \ud835\udc51\ud835\udc56\ud835\udc5f\ud835\udc52\ud835\udc50\ud835\udc61\ud835\udc52\ud835\udc51 ( \ud835\udc62 | \ud835\udc5f , \ud835\udc63 , \ud835\udc3a ), ( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ) \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 1\n. \u211b 2\n( \ud835\udc63 , \ud835\udc3a ^\n) < \u211b 2 ( \ud835\udc63 , \ud835\udc3a ), \ud835\udc63 \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 2"
        },
        {
            "heading": "Selecting malicious links",
            "text": "To effectively poison the knowledge graph , we define a generator that determines the \ud835\udc3a \ud835\udc34 optimal malicious link to be added to . \ud835\udc3a\n1. Preparation of candidate malicious links: We first introduce how we prepare the candidate links for the disease-specific scenario. For each poisoning target\n, we perform a breadth-first search centered at and ( \ud835\udc62 \ud835\udc61 , \ud835\udc5f \ud835\udc61 , \ud835\udc63 \ud835\udc61 ) \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 1 \ud835\udc62 \ud835\udc61 \ud835\udc63 \ud835\udc61 respectively, to explore nodes from each side, and then aggregate these nodes to \ud835\udc5b \ud835\udc50 form node set . Considering that the average node degree in is approximately 10, \ud835\udc49 \ud835\udc50 \ud835\udc3a we set . Next, within , we construct fully connected links and enumerate all \ud835\udc5b \ud835\udc50 = 20 \ud835\udc49 \ud835\udc50\npossible link types to obtain candidate link set as follows: \ud835\udc36 \u203e 1\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58\n. \ud835\udc36 \u203e 1\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 = {( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ) | \ud835\udc62 \u2208 \ud835\udc49\n\ud835\udc50 , \ud835\udc5f \u2208 \ud835\udc45 , \ud835\udc63 \u2208 \ud835\udc49 \ud835\udc50 }\nTo prepare the candidate links for disease-agnostic scenario, for each poisoning target , we enumerate all nodes and all link types, resulting in the \ud835\udc63 \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61\n2\ncandidate link set as follows: \ud835\udc36 \u203e 2\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58\n\ud835\udc36 2 , \u2192 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 = {( \ud835\udc62 , \ud835\udc5f , \ud835\udc63 ) | \ud835\udc62 \u2208 \ud835\udc49 , \ud835\udc5f \u2208 \ud835\udc45 }, \ud835\udc36 2 , \u2190 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 = {( \ud835\udc63 , \ud835\udc5f , \ud835\udc62 ) | \ud835\udc62 \u2208 \ud835\udc49 , \ud835\udc5f \u2208 \ud835\udc45 },\n. \ud835\udc36 \u203e 2\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 = \ud835\udc36\n2 , \u2192 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 \u222a \ud835\udc36 2 , \u2190 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58\nBoth and then undergo a rule-based filtering process to remove some \ud835\udc36 \u203e 1\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 \ud835\udc36 \u203e\n2\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58\ninappropriate candidate links. For each , there are two rules applied: \ud835\udc67 \u2208 \ud835\udc36 \u203e 1\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 \ud835\udc5c\ud835\udc5f \ud835\udc36 \u203e\n2\n\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58\n(1) If , it is filtered out. (2) The combination of node types and link types in \ud835\udc67 \u2208 \ud835\udc3a \ud835\udc67 should have appeared in . The filtered candidate link sets are denoted as and \ud835\udc3a \ud835\udc36 1 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 . \ud835\udc36 2 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\n2. Calculation of poisonous score: First, we consider the poisonous score of the malicious link in the disease-specific scenario. We aim to calculate a score\nmeasuring the impact of adding a malicious link on the \ud835\udc60 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b : ( \ud835\udc67 \ud835\udc5a , \ud835\udc67 \ud835\udc61 ) \u27fc\u211d \ud835\udc67 \ud835\udc5a \u2208 \ud835\udc36 1 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 target link , it would be time-consuming to retrain all knowledge graph \ud835\udc67 \ud835\udc61 \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61 1 embeddings. To address this, we adopt an estimate approach inspired by the Influence Function. 50,51 We first upweight with a small weight and define the \ud835\udc67\n\ud835\udc5a \ud835\udf00\nnew optimal embeddings as . We \ud835\udf03 ^\n\ud835\udf00 , \ud835\udc67 \ud835\udc5a\n= \ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc5a\ud835\udc56 \ud835\udc5b \ud835\udf03 1 | \ud835\udc38 |\n\ud835\udc67 \u2208 \ud835\udc3a \u2211 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 , \ud835\udf03 ) + \ud835\udf00 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 \ud835\udc5a , \ud835\udf03 )\nthen calculate the impact of adding on as follows: \ud835\udc67 \ud835\udc5a\n\ud835\udf03 ^\n\u2202 \ud835\udf03 ^\n\ud835\udf00 , \ud835\udc67 \ud835\udc5a \u2202 \ud835\udf00 | \ud835\udf00 = 0 =\u2212 \ud835\udc3b \ud835\udf03 ^ \u2212 1 \u2207 \ud835\udf03 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 \ud835\udc5a , \ud835\udf03 ^ ),\nwhere is the Hessian matrix, computed as . Then, using \ud835\udc3b \ud835\udf03 ^ \ud835\udc3b \ud835\udf03 ^ = 1 | \ud835\udc38 |\n\ud835\udc67 \u2208 \ud835\udc3a \u2211 \u2207\n\ud835\udf03 2 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 , \ud835\udf03 ^ )\nthe chain rule, we can calculate the impact of adding on the loss of and \ud835\udc67 \ud835\udc5a \ud835\udc67 \ud835\udc61 therefore define the poisonous score as: \ud835\udc60 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc67 \ud835\udc61 )\n, \u2202 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67\n\ud835\udc61 , \ud835\udf03 ^\n\ud835\udf00 , \ud835\udc67 \ud835\udc5a\n)\n\u2202 \ud835\udf00 | \ud835\udf00 = 0 = \u2207 \ud835\udf03 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 \ud835\udc61 , \ud835\udf03 ^\n) \u03a4 \u2202 \ud835\udf03\n^\n\ud835\udf00 , \ud835\udc67 \ud835\udc5a \u2202 \ud835\udf00 | \ud835\udf00 = 0 = \u2207 \ud835\udf03 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 \ud835\udc61 , \ud835\udf03 ^ ) \u03a4 \ud835\udc3b \ud835\udf03 ^ \u2212 1 \u2207 \ud835\udf03 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 \ud835\udc5a , \ud835\udf03 ^ )\n\ud835\udc60 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc67 \ud835\udc61 ) =\u2212\n\u2202 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ( \ud835\udc67 \ud835\udc61 , \ud835\udf03 ^\n\ud835\udf00 , \ud835\udc67 \ud835\udc5a\n)\n\u2202 \ud835\udf00 | \ud835\udf00 = 0 .\nA higher indicates that after adding , triplet is more likely to be \ud835\udc60 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc67 \ud835\udc61 ) \ud835\udc67 \ud835\udc5a \ud835\udc67 \ud835\udc61 realistic. Finally, the score is normalized to obtain the probability of adding to \ud835\udc67 \ud835\udc5a graph when is the poisoning target: \ud835\udc3a \ud835\udc67 \ud835\udc61\n\ud835\udc5d 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ) =\nexp( \ud835\udc60 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc67 \ud835\udc61 ))\n\u03a3 \ud835\udc67 \u2208 \ud835\udc36 1 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 exp( \ud835\udc60 1\n\ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 , \ud835\udc67 \ud835\udc61 ))\n.\nThe Influence Function approach also utilizes additional approximation to accelerate\nthe computation of , but we won\u2019t delve into that here. \u2202 \ud835\udf03\n^\n\ud835\udf00 , \ud835\udc67 \ud835\udc5a\n\u2202 \ud835\udf00\nThen, we consider the poisonous score in the disease-agnostic scenario. For each poisoning target and the corresponding candidate link \ud835\udc63 \u2208 \ud835\udc47\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 \ud835\udc61\n2\n, we follow the method described in PRA ack 52 to obtain the \ud835\udc67 \ud835\udc5a = ( \ud835\udc62 \ud835\udc5a , \ud835\udc5f \ud835\udc5a , \ud835\udc63 \ud835\udc5a ) \u2208 \ud835\udc36 2 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 poisonous score . When , we set \ud835\udc60 2 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc63 ) \ud835\udc67 \ud835\udc5a \u2208 \ud835\udc36 2 , \u2192 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 . When , we set . \ud835\udc60 2 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc63 ) = \ud835\udc43\ud835\udc45 ( \ud835\udc62 \ud835\udc5a ) / ( \ud835\udc42 ( \ud835\udc62 \ud835\udc5a ) + 1 ) \ud835\udc67 \ud835\udc5a \u2208 \ud835\udc36 2 , \u2190 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 \ud835\udc60 2 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc63 ) =\u2212 inf Then, we normalize the poisonous score to obtain the probability of adding to \ud835\udc67 \ud835\udc5a graph when is the poisoning target: \ud835\udc3a \ud835\udc63\n\ud835\udc5d 2 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a | \ud835\udc63 ) =\nexp( \ud835\udc60 2 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a , \ud835\udc63 ))\n\u03a3 \ud835\udc67 \u2208 \ud835\udc36 2 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 exp( \ud835\udc60 2\n\ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 , \ud835\udc63 )) .\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\n3. Integration of poisonous and concealing scores: For each candidate triplet\n, we calculate the concealing score of as \ud835\udc67 \ud835\udc5a = ( \ud835\udc62 \ud835\udc5a , \ud835\udc5f \ud835\udc5a , \ud835\udc63 \ud835\udc5a ) \u2208 \ud835\udc36 1 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 \u222a \ud835\udc36 2 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 \ud835\udc67 \ud835\udc5a , where is the the score function employed in defining \ud835\udc60 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a ) =\u2212 \ud835\udc53 ( \ud835\udc67 \ud835\udc5a , \ud835\udf03 ^ ) \ud835\udc53\nranking function . A higher indicates is more likely to be realistic. \u211b 1 \ud835\udc60 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a ) \ud835\udc67 \ud835\udc5a Subsequently, we normalize to obtain the probability of selecting as a \ud835\udc60 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a ) \ud835\udc67 \ud835\udc5a malicious link based on concealment in both scenarios:\n, \ud835\udc5d 1 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ) =\nexp( \ud835\udc60 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a ))\n\u03a3 \ud835\udc67 \u2208 \ud835\udc36 1 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 exp( \ud835\udc60\n\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 ))\n. \ud835\udc5d 2 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc63 ) =\nexp( \ud835\udc60 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a ))\n\u03a3 \ud835\udc67 \u2208 \ud835\udc36 2 \ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc58 exp( \ud835\udc60\n\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 ))\nWe multiply the probabilities b ased on poisonousness and concealment to obtain the overall probability of selecting : \ud835\udc5d \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 \ud835\udc67 \ud835\udc5a\n\ud835\udc5d 1 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ) = \ud835\udc5d 1 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ) \u00d7 \ud835\udc5d 1 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ),\n\ud835\udc5d 2 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc63 ) = \ud835\udc5d 2 \ud835\udc5d\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc5c\ud835\udc5b ( \ud835\udc67 \ud835\udc5a | \ud835\udc63 ) \u00d7 \ud835\udc5d 2 \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc63 ).\nIn the calculation of the overall probability, the integration of the is aimed at \ud835\udc5d \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc52\ud835\udc4e\ud835\udc59\naddressing prospective defenders. Concurrently, we also consider another real-world scenario where the defender is overtly acknowledged by poisoners. In this se ing, \ud835\udc9f is modified as follows: \ud835\udc5d 1 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59\nwhen , \ud835\udc5d 1 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 , \ud835\udc9f ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ) = \ud835\udc5d 1 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ), \ud835\udc9f ( \ud835\udc67 \ud835\udc5a ) = \ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\nwhen . \ud835\udc5d 1 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 , \ud835\udc9f ( \ud835\udc67 \ud835\udc5a | \ud835\udc67 \ud835\udc61 ) = 0 , \ud835\udc9f ( \ud835\udc67 \ud835\udc5a ) = \ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52\nThe same changes are applied to . Finally, we select with the highest \ud835\udc5d 2 \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 \ud835\udc67 \ud835\udc5a as the malicious link. In cases where multiple links are required to be added \ud835\udc5d \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 , \ud835\udc9f ( Fig. 2e-f, Supplementary Figure 1 ), we proceed by sequentially selecting links in decreasing order of . \ud835\udc5d \ud835\udc5c\ud835\udc63\ud835\udc52\ud835\udc5f\ud835\udc4e\ud835\udc59\ud835\udc59 , \ud835\udc9f"
        },
        {
            "heading": "Malicious abstract generator",
            "text": "Instead of directly adding links to the knowledge graph, realistic poisoning involves inserting a paper into the database. Therefore, our objective is to generate a paper based on an obtained malicious link . We aim to ensure text fluency while \ud835\udc67\n\ud835\udc5a = ( \ud835\udc62 \ud835\udc5a , \ud835\udc5f \ud835\udc5a , \ud835\udc63 \ud835\udc5a )\nmaximizing the probability of extracting the malicious link . 1. Construct sentence template using the malicious link: During the construction of\nthe knowledge graph using the extractor , we gather and form , where \u2130 \ud835\udc46 \ud835\udc5f = { \ud835\udc60 \ud835\udc5f , \ud835\udc56 } \ud835\udc60 \ud835\udc5f , \ud835\udc56 represent the -th sentence in Medline that contains the dependency path assigned \ud835\udc56 with relation . Let denote the textual phrase corresponding to node . For \ud835\udc5f \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61\n\ud835\udc63 \ud835\udc63\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nmalicious link and each , assuming the extracted triplet from is \ud835\udc67 \ud835\udc5a \ud835\udc60 \ud835\udc5f\n\ud835\udc5a\n\u2208 \ud835\udc46 \ud835\udc5f\n\ud835\udc5a\n\ud835\udc60 \ud835\udc5f\n\ud835\udc5a\n, we then replace in with and replace with , ( \ud835\udc62 , \ud835\udc5f \ud835\udc5a , \ud835\udc63 ) \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc62 \ud835\udc60 \ud835\udc5f\n\ud835\udc5a\n\ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc62\n\ud835\udc5a\n\ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc63\n\ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc63\n\ud835\udc5a\nresulting in a set of sentence templates . For each sentence template \ud835\udc46 \u203e \ud835\udc5f\n\ud835\udc5a\n\ud835\udc60 \u203e \ud835\udc5f\n\ud835\udc5a\n=\n, we calculate its perplexity as: \u2329 \ud835\udc61 1\n\ud835\udc5f \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc61\n\ud835\udc5b\n\ud835\udc5f \ud835\udc5a \u232a \u2208 \ud835\udc46 \u203e\n\ud835\udc5f \ud835\udc5a\n\u2112 \ud835\udc3f\ud835\udc40 ( \ud835\udc60 \u203e \ud835\udc5f\n\ud835\udc5a ) = exp(\u2212 1 \ud835\udc5b \ud835\udc56 = 1\n\ud835\udc5b \u2211 log \ud835\udc5d \ud835\udc3f\ud835\udc40 ( \ud835\udc61 \ud835\udc56 \ud835\udc5f \ud835\udc5a | \ud835\udc61 1 \ud835\udc5f \ud835\udc5a , \ud835\udc61 2 \ud835\udc5f \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc61 \ud835\udc56 \u2212 1 \ud835\udc5f \ud835\udc5a )).\nHere, represents the probability that the -th token is given \ud835\udc5d \ud835\udc3f\ud835\udc40 ( \ud835\udc61 \ud835\udc56\n\ud835\udc5f \ud835\udc5a | \ud835\udc61\n1\n\ud835\udc5f \ud835\udc5a , \ud835\udc61\n2\n\ud835\udc5f \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc61\n\ud835\udc56 \u2212 1\n\ud835\udc5f \ud835\udc5a ) \ud835\udc56 \ud835\udc61\n\ud835\udc56\n\ud835\udc5f \ud835\udc5a\nthe previous tokens , which can be obtained from a pre-trained \ud835\udc61 1\n\ud835\udc5f \ud835\udc5a , \ud835\udc61\n2\n\ud835\udc5f \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc61\n\ud835\udc56 \u2212 1\n\ud835\udc5f \ud835\udc5a\nlanguage model. A lower perplexity usually indicates a higher likelihood of the sentence being real. In our experiments, we utilize BioGPT 53 as the language model.\nWe select the sentence with the lowest perplexity from as the sentence \u2112 \ud835\udc3f\ud835\udc40 ( \ud835\udc60 \u203e \ud835\udc5f\n\ud835\udc5a\n) \ud835\udc46 \u203e \ud835\udc5f\n\ud835\udc5a\ntemplate for the malicious link . \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n= \u2329 \ud835\udc61 1\n\ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc61\n\ud835\udc5b\n\ud835\udc67 \ud835\udc5a \u232a \ud835\udc67\n\ud835\udc5a\n2. Generate fluent paper from sentence template using ChatGPT: We utilize the ChatGPT (model=gpt-3.5-turbo) API to convert the sentence template into a fluent paper. Specifically, we construct a prompt as follows:\nSystem: You are expanding a given sentence into a scientific biomedical abstract, and this abstract must include a given sentence.\nUser: Here is an example: {Example} . Then, generate abstract for the following sentence: {Template} .\nWe describe the task to ChatGPT in the 'system' module, providing the instructions to expand the input sentence into a paper abstract while ensuring that the generated result includes the provided sentence. We then provide a paragraph that includes a generation example in the \u2018user\u2019 module and instruct ChatGPT to generate a paper abstract based on template . The example is manually selected from abstracts \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n\ud835\udc60 \ud835\udc67\n\ud835\udc5a\nwith low perplexity and fixed throughout the generation process. 3. Fine-tuning with BioBART for a more domain-specific and controllable\ngeneration: Directly using the output of ChatGPT as ultimate generation encounters two limitations. Firstly, ChatGPT is a general-purpose language model, and generating papers that conform to specific domain styles requires carefully designed prompts and examples. Additionally, the API access rate for ChatGPT is strictly limited, making extensive a empts time-consuming. Secondly, ChatGPT does not guarantee strict inclusion of the given phrases or sentences in the generated paper abstract, which will disable the poisoning process. To address these challenges, we employ BioBART 54 , an open-source natural language generation model specialized in the biomedical domain, to fine-tune the generation from ChatGPT.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nSpecifically, the output of ChatGPT, denoted as , can be viewed as a sequence of \ud835\udc43 \ud835\udc67\n\ud835\udc5a\nsentences We observed that certain sentence within \ud835\udc43 \ud835\udc67\n\ud835\udc5a\n= \u2329 \ud835\udc60 1\n\ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc60\n\ud835\udc41\n\ud835\udc67 \ud835\udc5a \u232a . \u2329 \ud835\udc60\n1\n\ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc60\n\ud835\udc41\n\ud835\udc67 \ud835\udc5a \u232a\noften expresses a similar semantic meaning to the sentence template but with \ud835\udc60 \ud835\udc67\n\ud835\udc5a\ndifferent phrasing, making it fail to extract the malicious link. If we were to directly replace the sentence in with , it would give rise to conflict in writing style \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n\ud835\udc60 \ud835\udc67\n\ud835\udc5a\nbetween and . To overcome this issue, we adopt a strategy that involves \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n\ud835\udc43 \ud835\udc67\n\ud835\udc5a\nreplacing followed by rephrasing. In the replace phase, we enumerate and \ud835\udc56 \u2208 [ 1 , \ud835\udc41 ]\nreplace each sentence in ChatGPT generation with , resulting in replaced \ud835\udc60 \ud835\udc56\n\ud835\udc67 \ud835\udc5a \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n\ud835\udc60 \ud835\udc67\n\ud835\udc5a\npaper : \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5f\ud835\udc52\ud835\udc5d\ud835\udc59\ud835\udc4e\ud835\udc50\ud835\udc52\n\ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5f\ud835\udc52\ud835\udc5d\ud835\udc59\ud835\udc4e\ud835\udc50\ud835\udc52 = \u2329 \ud835\udc60 1 \ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc60 \ud835\udc56 \u2212 1 \ud835\udc67 \ud835\udc5a , \ud835\udc60\n\ud835\udc67 \ud835\udc5a\n, \ud835\udc60 \ud835\udc56 + 1\n\ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc60\n\ud835\udc41\n\ud835\udc67 \ud835\udc5a \u232a .\nIn the rephrase phase, we merge two approaches to achieve be er performance, including modifications both to and . \ud835\udc60\n\ud835\udc67 \ud835\udc5a\n\ud835\udc43 \ud835\udc67\n\ud835\udc5a\nFor the modification to , we first perform dependency parsing on to obtain its \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n\ud835\udc60 \ud835\udc67\n\ud835\udc5a\ndependency parse tree . Subsequently, within , we locate the nodes \ud835\udc47 ( \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n) \ud835\udc47 ( \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n)\ncorresponding to and and determine the shortest path \ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc62\n\ud835\udc5a\n\ud835\udc47\ud835\udc52\ud835\udc65 \ud835\udc61 \ud835\udc63\n\ud835\udc5a\n\ud835\udc46\ud835\udc43 (( \ud835\udc62 \ud835\udc5a , \ud835\udc63 \ud835\udc5a ), \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n)\nbetween them. Next, we find the leftmost token and the rightmost token in \ud835\udc61 \ud835\udc59\n\ud835\udc67 \ud835\udc5a \ud835\udc61\n\ud835\udc5f\n\ud835\udc67 \ud835\udc5a \ud835\udc60\n\ud835\udc67 \ud835\udc5a\nthat correspond to . We retain the tokens between and , while \ud835\udc46\ud835\udc43 (( \ud835\udc62 \ud835\udc5a , \ud835\udc63 \ud835\udc5a ), \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n) \ud835\udc61 \ud835\udc59\n\ud835\udc67 \ud835\udc5a \ud835\udc61\n\ud835\udc5f\n\ud835\udc67 \ud835\udc5a\nreplacing all other tokens with <mask>. This process yields the masked sentence\ntemplate as: \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58\n<mask> <mask> <mask> <mask> \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 = \u2329 , \u00b7\u00b7\u00b7, , \ud835\udc61 \ud835\udc59 \ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc61 \ud835\udc5f \ud835\udc67 \ud835\udc5a , , \u00b7\u00b7\u00b7, \u232a .\nWe set a constraint to prevent the occurrence of more than 8 consecutive <mask>\ntokens, and truncate any exceeding portion. Subsequently, we replace in \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n\ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5f\ud835\udc52\ud835\udc5d\ud835\udc59\ud835\udc4e\ud835\udc50\ud835\udc52\nwith and get the masked paper : \ud835\udc60 \ud835\udc67\n\ud835\udc5a\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc60\n\ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc60 = \u2329 \ud835\udc60 1 \ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc60 \ud835\udc56 \u2212 1 \ud835\udc67 \ud835\udc5a , \ud835\udc60\n\ud835\udc67 \ud835\udc5a\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc60 \ud835\udc56 + 1 \ud835\udc67 \ud835\udc5a , \u00b7\u00b7\u00b7, \ud835\udc60 \ud835\udc41 \ud835\udc67 \ud835\udc5a \u232a .\nWe then utilize BioBART to perform fill-in-the-blank task on in order to \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc60\nreplace <mask> tokens with appropriate textual segments and obtain the modified\npaper . And this task aligns exactly with the pre-training task of BioBART. \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc60\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nFor the modification to , our goal is to eliminate expression style in that might \ud835\udc43 \ud835\udc67\n\ud835\udc5a\n\ud835\udc43 \ud835\udc67\n\ud835\udc5a\ndeviate from the biomedical domain and writing style in . We apply random \ud835\udc60 \ud835\udc67\n\ud835\udc5a\nmasking to some tokens in each sentence , . For each , we \ud835\udc60 \ud835\udc57\n\ud835\udc67 \ud835\udc5a = \u2329 \ud835\udc61\n\ud835\udc57 , \ud835\udc65\n\ud835\udc67 \ud835\udc5a \u232a \u2208 \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n, \ud835\udc56 \ud835\udc5f\ud835\udc52\ud835\udc5d\ud835\udc59\ud835\udc4e\ud835\udc50\ud835\udc52 \ud835\udc56 \u2260 \ud835\udc57 \ud835\udc65\nrandomly replace the span with one <mask> token with a probability of 0.8 \ud835\udc61 \ud835\udc57 ,[ \ud835\udc65 , \ud835\udc65 + \ud835\udc59\ud835\udc52\ud835\udc5b )\n\ud835\udc67 \ud835\udc5a\n(rewrite rate). Following BioBART, we sample from the Poisson distribution with \ud835\udc59\ud835\udc52\ud835\udc5b\na mean of 3. The masked sentence of is denoted as , and the masked paper \ud835\udc60 \ud835\udc57\n\ud835\udc67 \ud835\udc5a \ud835\udc60\n\ud835\udc57\n\ud835\udc67 \ud835\udc5a , \ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58\nis represented as: \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc43\n. \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc43 = \u2329 \ud835\udc60 1\n\ud835\udc67 \ud835\udc5a , \ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \u00b7\u00b7\u00b7, \ud835\udc60\n\ud835\udc56 \u2212 1\n\ud835\udc67 \ud835\udc5a , \ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \ud835\udc60\n\ud835\udc67 \ud835\udc5a\n, \ud835\udc60 \ud835\udc56 + 1\n\ud835\udc67 \ud835\udc5a , \ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 , \u00b7\u00b7\u00b7, \ud835\udc60\n\ud835\udc41\n\ud835\udc67 \ud835\udc5a , \ud835\udc5a\ud835\udc4e\ud835\udc60\ud835\udc58 \u232a\nSimilarly, we use BioBART to fill all <mask> tokens and get the modified paper . \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56\n\ud835\udc43\nFinally, we select the paper with the lowest perplexity among the replaced papers, the papers generated from two rephrasing approaches, and the paper generated\nthrough ChatGPT, and consider it as the ultimate generation : \ud835\udc43 ^\n\ud835\udc67 \ud835\udc5a\n\ud835\udc37 \ud835\udc36 = { \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56 \ud835\udc5f\ud835\udc52\ud835\udc5d\ud835\udc59\ud835\udc4e\ud835\udc50\ud835\udc52 } \ud835\udc56 = 1\n\ud835\udc41 \u222a { \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n, \ud835\udc56 \ud835\udc60 }\n\ud835\udc56 = 1\n\ud835\udc41 \u222a { \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n, \ud835\udc56 \ud835\udc43 }\n\ud835\udc56 = 1\n\ud835\udc41 \u222a { \ud835\udc43\n\ud835\udc67 \ud835\udc5a\n},\n\ud835\udc43 ^\n\ud835\udc67 \ud835\udc5a\n= \ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc5a\ud835\udc56 \ud835\udc5b \ud835\udc43 \u2208 \ud835\udc37\n\ud835\udc36\n\u2112 \ud835\udc3f\ud835\udc40 ( \ud835\udc43 ).\nHere, is the candidate paper set. To make fair comparisons, for all experiments \ud835\udc37 \ud835\udc36 comparing Scorpius and ChatGPT ( Fig. 4g-h, Supplementary Figure 7-8 ), is { \ud835\udc43 \ud835\udc67\n\ud835\udc5a\n}\nexcluded from consideration. In all experiments exploring changes in rewrite rate\n( Supplementary Figure 3 ) , only is taken into consideration. { \ud835\udc43 \ud835\udc67\n\ud835\udc5a , \ud835\udc56 \ud835\udc43 } \ud835\udc56 = 1\n\ud835\udc41"
        },
        {
            "heading": "Defender",
            "text": "We construct a defender to filter out untrustworthy links \ud835\udc9f : \ud835\udc67 \u27fc \ud835\udc9f ( \ud835\udc67 ) \u2208 { \ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52 , \ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52 } extracted by . Here, indicates a trustworthy link, while indicates an \u2130 \ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52 \ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52 untrustworthy link. We define a logistic regressor , aiming for this \ud835\udc60\n\ud835\udc9f : \ud835\udc67 \u27fc \ud835\udc60 \ud835\udc9f ( \ud835\udc67 ) \u2208 \u211d [ 0 , 1 ]\nregressor to provide the likelihood that represents a trustworthy link. Notably, we cannot \ud835\udc67 directly use normalized or employed in defining as , because they are \u211b\n1 exp(\u2212 \u2112 \ud835\udc52\ud835\udc5a\ud835\udc4f ) \u211b \ud835\udc60 \ud835\udc9f\ncalculated on locally marginalized probabilities, whereas we want to be a global logistic \ud835\udc60 \ud835\udc9f regressor.\n.CC-BY-NC-ND 4.0 International licenseperpetuity. It is made available under a preprint (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in\nThe copyright holder for thisthis version posted November 10, 2023. ; https://doi.org/10.1101/2023.11.06.565928doi: bioRxiv preprint\nFirstly, we randomly sample nonexistent triplets from knowledge graph , denoted as | \ud835\udc38 | \ud835\udc3a\n, and the union of and is denoted as . Let be the \ud835\udc3a \ud835\udc5b\ud835\udc52\ud835\udc54 \ud835\udc3a \ud835\udc3a \ud835\udc5b\ud835\udc52\ud835\udc54 \ud835\udc3a \ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc5c\ud835\udc5b \ud835\udc39 \ud835\udc5d\ud835\udc5c\ud835\udc60\n= {\u2212 \ud835\udc53 ( \ud835\udc67 , \ud835\udf03 ^ ) | \ud835\udc67 \u2208 \ud835\udc3a }\nscores of positive links, and similarly, we obtain and . We calculate the mean and \ud835\udc39 \ud835\udc5b\ud835\udc52\ud835\udc54 \ud835\udc39 \ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc5c\ud835\udc5b \ud835\udf07\nstandard deviation of and normalize and as \ud835\udf0e \ud835\udc39 \ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc5c\ud835\udc5b \ud835\udc39 \ud835\udc5d\ud835\udc5c\ud835\udc60 \ud835\udc39 \ud835\udc62\ud835\udc5b\ud835\udc56\ud835\udc5c\ud835\udc5b \ud835\udc39 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60\n= { \ud835\udc53 \ud835\udc5d\ud835\udc5c\ud835\udc60 \u2212 \ud835\udf07\n\ud835\udf0e | \ud835\udc53 \ud835\udc5d\ud835\udc5c\ud835\udc60 \u2208 \ud835\udc39 \ud835\udc5d\ud835\udc5c\ud835\udc60 }\nand . We assume that and are \ud835\udc39 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54\n= { \ud835\udc53 \ud835\udc5b\ud835\udc52\ud835\udc54 \u2212 \ud835\udf07\n\ud835\udf0e | \ud835\udc53 \ud835\udc5b\ud835\udc52\ud835\udc54 \u2208 \ud835\udc39 \ud835\udc5b\ud835\udc52\ud835\udc54 } \ud835\udc53 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 \u2208 \ud835\udc39 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 \ud835\udc53 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54 \u2208 \ud835\udc39 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54\nindependently sampled from Gaussian distributions: , and \ud835\udc53 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 \u223c \ud835\udca9 ( \ud835\udc62 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 , \ud835\udf0e \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60\n2 )\n. Here, and are the mean and standard deviation of \ud835\udc53 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54 \u223c \ud835\udca9 ( \ud835\udc62 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54 , \ud835\udf0e \u203e \ud835\udc5b\ud835\udc52\ud835\udc54\n2 ) \ud835\udc62 \u203e\n\ud835\udc5d\ud835\udc5c\ud835\udc60 / \ud835\udc5b\ud835\udc52\ud835\udc54 \ud835\udf0e \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 / \ud835\udc5b\ud835\udc52\ud835\udc54\n. Then, the decision boundary for positive and negative samples can be calculated as \ud835\udc39 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 / \ud835\udc5b\ud835\udc52\ud835\udc54 follows:\n, \ud835\udc34 =\u2212 1/ \ud835\udf0e \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60\n2 + 1/ \ud835\udf0e \u203e\n\ud835\udc5b\ud835\udc52\ud835\udc54\n2\n, \ud835\udc35 = 2 (\u2212 \ud835\udc62 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54 / \ud835\udf0e \u203e \ud835\udc5b\ud835\udc52\ud835\udc54\n2 + \ud835\udc62 \u203e\n\ud835\udc5d\ud835\udc5c\ud835\udc60 / \ud835\udf0e \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60\n2 )\n, \ud835\udc36 = \ud835\udc62 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54\n2 / \ud835\udf0e \u203e\n\ud835\udc5b\ud835\udc52\ud835\udc54\n2 \u2212 \ud835\udc62 \u203e\n\ud835\udc5d\ud835\udc5c\ud835\udc60\n2 / \ud835\udf0e \u203e\n\ud835\udc5d\ud835\udc5c\ud835\udc60\n2 + log( \ud835\udf0e \u203e\n\ud835\udc5b\ud835\udc52\ud835\udc54\n2 / \ud835\udf0e \u203e\n\ud835\udc5d\ud835\udc5c\ud835\udc60\n2 )\n\ud835\udc4f\ud835\udc5c\ud835\udc62\ud835\udc5b\ud835\udc51\ud835\udc4e\ud835\udc5f \ud835\udc66 1 , 2\n= \u2212 \ud835\udc35 \u00b1 \ud835\udc35 2 \u2212 4 \ud835\udc34\ud835\udc36\n2 \ud835\udc34 .\nWe select the optimal decision boundary from that lies between and . \ud835\udc4f\ud835\udc5c\ud835\udc62\ud835\udc5b\ud835\udc51\ud835\udc4e\ud835\udc5f \ud835\udc66 1 , 2 \ud835\udc62 \u203e \ud835\udc5d\ud835\udc5c\ud835\udc60 \ud835\udc62 \u203e \ud835\udc5b\ud835\udc52\ud835\udc54 Thus, can be formulated as: \ud835\udc60 \ud835\udc9f\n. \ud835\udc60 \ud835\udc9f\n( \ud835\udc67 ) = \ud835\udc46\ud835\udc56\ud835\udc54\ud835\udc5a\ud835\udc5c\ud835\udc56\ud835\udc51 ( \ud835\udc53 ( \ud835\udc67 , \ud835\udf03 ^\n)\u2212 \ud835\udf07 \ud835\udf0e \u2212 \ud835\udc4f\ud835\udc5c\ud835\udc62\ud835\udc5b\ud835\udc51\ud835\udc4e\ud835\udc5f\ud835\udc66 )\nHere, the function is . Finally, we set a threshold value \ud835\udc46\ud835\udc56\ud835\udc54\ud835\udc5a\ud835\udc5c\ud835\udc56\ud835\udc51 \ud835\udc46\ud835\udc56\ud835\udc54\ud835\udc5a\ud835\udc5c\ud835\udc56\ud835\udc51 ( \ud835\udc65 ) = 1 1 +exp(\u2212 \ud835\udc65 ) . If , then , indicating a trustworthy link. \ud835\udc61\u210e\ud835\udc5f\ud835\udc52\ud835\udc60\u210e\ud835\udc5c\ud835\udc59\ud835\udc51 \u2208 \u211d [ 0 , 1 ] \ud835\udc60\n\ud835\udc9f ( \ud835\udc67 ) > \ud835\udc61\u210e\ud835\udc5f\ud835\udc52\ud835\udc60\u210e\ud835\udc5c\ud835\udc59\ud835\udc51 \ud835\udc9f ( \ud835\udc67 ) = \ud835\udc47\ud835\udc5f\ud835\udc62\ud835\udc52\nOtherwise, if , then . For the defense level 'Low', 'Medium', \ud835\udc60 \ud835\udc9f ( \ud835\udc67 ) \u2264 \ud835\udc61\u210e\ud835\udc5f\ud835\udc52\ud835\udc60\u210e\ud835\udc5c\ud835\udc59\ud835\udc51 \ud835\udc9f ( \ud835\udc67 ) = \ud835\udc39\ud835\udc4e\ud835\udc59\ud835\udc60\ud835\udc52 and 'High', the threshold values are chosen as 0.3, 0.5, and 0.7 respectively."
        },
        {
            "heading": "Code availability",
            "text": "Scorpius code is available at h ps://github.com/yjwtheonly/Scorpius . An interactive server to explore Scorpius can be accessed at h ps://huggingface.co/spaces/yjwtheonly/Scorpius_HF ."
        }
    ],
    "title": "Poisoning scientific knowledge using large language models",
    "year": 2023
}