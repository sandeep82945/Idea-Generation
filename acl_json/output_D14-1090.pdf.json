{
    "abstractText": "Several state-of-the-art event extraction systems employ models based on Support Vector Machines (SVMs) in a pipeline architecture, which fails to exploit the joint dependencies that typically exist among events and arguments. While there have been attempts to overcome this limitation using Markov Logic Networks (MLNs), it remains challenging to perform joint inference in MLNs when the model encodes many high-dimensional sophisticated features such as those essential for event extraction. In this paper, we propose a new model for event extraction that combines the power of MLNs and SVMs, dwarfing their limitations. The key idea is to reliably learn and process high-dimensional features using SVMs; encode the output of SVMs as low-dimensional, soft formulas in MLNs; and use the superior joint inferencing power of MLNs to enforce joint consistency constraints over the soft formulas. We evaluate our approach for the task of extracting biomedical events on the BioNLP 2013, 2011 and 2009 Genia shared task datasets. Our approach yields the best F1 score to date on the BioNLP\u201913 (53.61) and BioNLP\u201911 (58.07) datasets and the second-best F1 score to date on the BioNLP\u201909 dataset (58.16).",
    "authors": [
        {
            "affiliations": [],
            "name": "Deepak Venugopal"
        },
        {
            "affiliations": [],
            "name": "Vincent Ng"
        }
    ],
    "id": "SP:120835c34eed15fd37b5ed7df6d74892c426f903",
    "references": [
        {
            "authors": [
                "Babak Ahmadi",
                "Kristian Kersting",
                "Martin Mladenov",
                "Sriraam Natarajan."
            ],
            "title": "Exploiting symmetries for scaling loopy belief propagation and relational training",
            "venue": "Machine Learning, 92(1):91\u2013132.",
            "year": 2013
        },
        {
            "authors": [
                "David Ahn."
            ],
            "title": "The stages of event extraction",
            "venue": "Proceedings of the Workshop on Annotating and Reasoning About Time and Events, pages 1\u20138.",
            "year": 2006
        },
        {
            "authors": [
                "Jari Bj\u00f6rne",
                "Tapio Salakoski."
            ],
            "title": "Generalizing biomedical event extraction",
            "venue": "Proceedings of the BioNLP Shared Task 2011 Workshop, pages 183\u2013 191.",
            "year": 2011
        },
        {
            "authors": [
                "Jari Bj\u00f6rne",
                "Tapio Salakoski"
            ],
            "title": "TEES 2.1: Automated annotation scheme learning in the bionlp 2013 shared task",
            "venue": "In Proceedings of the BioNLP Shared Task 2013 Workshop,",
            "year": 2013
        },
        {
            "authors": [
                "Jari Bj\u00f6rne",
                "Juho Heimonen",
                "Filip Ginter",
                "Antti Airola",
                "Tapio Pahikkala",
                "Tapio Salakoski."
            ],
            "title": "Extracting complex biological events with rich graphbased feature sets",
            "venue": "Proceedings of the BioNLP 2009 Workshop Companion Volume for Shared Task,",
            "year": 2009
        },
        {
            "authors": [
                "Quoc-Chinh Bui",
                "David Campos",
                "Erik van Mulligen",
                "Jan Kors."
            ],
            "title": "A fast rule-based approach for biomedical event extraction",
            "venue": "Proceedings of the BioNLP Shared Task 2013 Workshop, pages 104\u2013 108.",
            "year": 2013
        },
        {
            "authors": [
                "Chen Chen",
                "Vincent Ng."
            ],
            "title": "Joint modeling for Chinese event extraction with rich linguistic features",
            "venue": "Proceedings of the 24th International Conference on Computational Linguistics, pages 529\u2013544.",
            "year": 2012
        },
        {
            "authors": [
                "Michael Collins."
            ],
            "title": "Head-Driven Statistical Models for Natural Language Parsing",
            "venue": "Ph.D. thesis, University of Pennsylvania, Philadelphia, PA.",
            "year": 1999
        },
        {
            "authors": [
                "Michael Collins."
            ],
            "title": "Discriminative training methods for hidden Markov models: Theory and experiments with perceptron algorithms",
            "venue": "Proceedings of the 2002 Conference on Empirical Methods in Natural Language Processing, pages 1\u20138.",
            "year": 2002
        },
        {
            "authors": [
                "Pedro Domingos",
                "Daniel Lowd."
            ],
            "title": "Markov Logic: An Interface Layer for Artificial Intelligence",
            "venue": "Morgan & Claypool, San Rafael, CA.",
            "year": 2009
        },
        {
            "authors": [
                "Vibhav Gogate",
                "Pedro Domingos."
            ],
            "title": "Probabilistic theorem proving",
            "venue": "Proceedings of the 27th Conference on Uncertainty in Artificial Intelligence, pages 256\u2013265.",
            "year": 2011
        },
        {
            "authors": [
                "Ralph Grishman",
                "David Westbrook",
                "Adam Meyers."
            ],
            "title": "NYU\u2019s English ACE 2005 system description",
            "venue": "Proceedings of the ACE 2005 Evaluation Workshop. Washington.",
            "year": 2005
        },
        {
            "authors": [
                "Prashant Gupta",
                "Heng Ji."
            ],
            "title": "Predicting unknown time arguments based on cross-event propagation",
            "venue": "Proceedings of the ACL-IJCNLP 2009 Conference Short Papers, pages 369\u2013372.",
            "year": 2009
        },
        {
            "authors": [
                "Kai Hakala",
                "Sofie Van Landeghem",
                "Tapio Salakoski",
                "Yves Van de Peer",
                "Filip Ginter."
            ],
            "title": "EVEX in ST\u201913: Application of a large-scale text mining resource to event extraction and network construction",
            "venue": "Proceedings of the BioNLP Shared Task",
            "year": 2013
        },
        {
            "authors": [
                "Ruihong Huang",
                "Ellen Riloff."
            ],
            "title": "Bootstrapped training of event extraction classifiers",
            "venue": "Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 286\u2013295.",
            "year": 2012
        },
        {
            "authors": [
                "Ruihong Huang",
                "Ellen Riloff."
            ],
            "title": "Modeling textual cohesion for event extraction",
            "venue": "Proceedings of the 26th AAAI Conference on Artificial Intelligence.",
            "year": 2012
        },
        {
            "authors": [
                "Heng Ji",
                "Ralph Grishman."
            ],
            "title": "Refining event extraction through cross-document inference",
            "venue": "Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 254\u2013262.",
            "year": 2008
        },
        {
            "authors": [
                "Thorsten Joachims."
            ],
            "title": "Making large-scale SVM learning practical",
            "venue": "B. Schlkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods Support Vector Learning. MIT Press, Cambridge, MA, USA.",
            "year": 1999
        },
        {
            "authors": [
                "Jin-Dong Kim",
                "Tomoko Ohta",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Corpus annotation for mining biomedical events from literature",
            "venue": "BMC bioinformatics,",
            "year": 2008
        },
        {
            "authors": [
                "Jin-Dong Kim",
                "Tomoko Ohta",
                "Sampo Pyysalo",
                "Yoshinobu Kano",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Overview of BioNLP\u201909 shared task on event extraction",
            "venue": "In Proceedings of the BioNLP 2009 Workshop Companion Volume for Shared Task,",
            "year": 2009
        },
        {
            "authors": [
                "Jin-Dong Kim",
                "Sampo Pyysalo",
                "Tomoko Ohta",
                "Robert Bossy",
                "Ngan Nguyen",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Overview of BioNLP shared task",
            "venue": "In Proceedings of the BioNLP Shared Task 2011 Workshop,",
            "year": 2011
        },
        {
            "authors": [
                "Jin-Dong Kim",
                "Yue Wang",
                "Toshihisa Takagi",
                "Akinori Yonezawa."
            ],
            "title": "Overview of Genia event task in BioNLP shared task 2011",
            "venue": "Proceedings of the BioNLP Shared Task 2011 Workshop, pages 7\u201315.",
            "year": 2011
        },
        {
            "authors": [
                "Jin-Dong Kim",
                "Yue Wang",
                "Yamamoto Yasunori."
            ],
            "title": "The Genia event extraction shared task, 2013 edition - overview",
            "venue": "Proceedings of the BioNLP Shared Task 2013 Workshop, pages 8\u201315.",
            "year": 2013
        },
        {
            "authors": [
                "Daphne Koller",
                "Nir Friedman."
            ],
            "title": "Probabilistic Graphical Models: Principles and Techniques",
            "venue": "MIT Press.",
            "year": 2009
        },
        {
            "authors": [
                "Peifeng Li",
                "Guodong Zhou",
                "Qiaoming Zhu",
                "Libin Hou."
            ],
            "title": "Employing compositional semantics and discourse consistency in Chinese event extraction",
            "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Process-",
            "year": 2012
        },
        {
            "authors": [
                "Lishuang Li",
                "Yiwen Wang",
                "Degen Huang."
            ],
            "title": "Improving feature-based biomedical event extraction system by integrating argument information",
            "venue": "Proceedings of the BioNLP Shared Task 2013 Workshop, pages 109\u2013115.",
            "year": 2013
        },
        {
            "authors": [
                "Peifeng Li",
                "Qiaoming Zhu",
                "Guodong Zhou."
            ],
            "title": "Argument inference from relevant event mentions in Chinese argument extraction",
            "venue": "Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 1477\u20131487.",
            "year": 2013
        },
        {
            "authors": [
                "Qi Li",
                "Heng Ji",
                "Liang Huang."
            ],
            "title": "Joint event extraction via structured prediction with global features",
            "venue": "Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 73\u201382.",
            "year": 2013
        },
        {
            "authors": [
                "Shasha Liao",
                "Ralph Grishman."
            ],
            "title": "Using document level cross-event inference to improve event extraction",
            "venue": "Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 789\u2013797.",
            "year": 2010
        },
        {
            "authors": [
                "Shasha Liao",
                "Ralph Grishman."
            ],
            "title": "Acquiring topic features to improve event extraction: in preselected and balanced collections",
            "venue": "Proceedings of the International Conference Recent Advances in Natural Language Processing 2011, pages 9\u201316.",
            "year": 2011
        },
        {
            "authors": [
                "Haibin Liu",
                "Karin Verspoor",
                "Donald C. Comeau",
                "Andrew MacKinlay",
                "W John Wilbur."
            ],
            "title": "Generalizing an approximate subgraph matching-based system to extract events in molecular biology and cancer genetics",
            "venue": "Proceedings of the BioNLP",
            "year": 2013
        },
        {
            "authors": [
                "Daniel Lowd",
                "Pedro Domingos."
            ],
            "title": "Efficient weight learning for markov logic networks",
            "venue": "Proceedings of the 11th European Conference on Principles and Practice of Knowledge Discovery in Databases, pages 200\u2013211.",
            "year": 2007
        },
        {
            "authors": [
                "Wei Lu",
                "Dan Roth."
            ],
            "title": "Automatic event extraction with structured preference modeling",
            "venue": "Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 835\u2013844.",
            "year": 2012
        },
        {
            "authors": [
                "Radu Marinescu",
                "Rina Dechter."
            ],
            "title": "AND/OR branch-and-bound search for combinatorial optimization in graphical models",
            "venue": "Artificial Intelligence, 173(16-17):1457\u20131491.",
            "year": 2009
        },
        {
            "authors": [
                "David McClosky",
                "Mihai Surdeanu",
                "Chris Manning."
            ],
            "title": "Event extraction as dependency parsing",
            "venue": "Proceedings of the Association for Computational Linguistics: Human Language Technologies, pages 1626\u20131635.",
            "year": 2011
        },
        {
            "authors": [
                "David McClosky",
                "Mihai Surdeanu",
                "Christopher Manning."
            ],
            "title": "Event extraction as dependency parsing for BioNLP 2011",
            "venue": "Proceedings of the BioNLP Shared Task 2011 Workshop, pages 41\u201345.",
            "year": 2011
        },
        {
            "authors": [
                "David McClosky."
            ],
            "title": "Any domain parsing: Automatic domain adaptation for natural language parsing",
            "venue": "Ph.D. thesis, Ph.D. thesis, Brown University, Providence, RI.",
            "year": 2010
        },
        {
            "authors": [
                "Makoto Miwa",
                "Sampo Pyysalo",
                "Tadayoshi Hara",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Evaluating dependency representation for event extraction",
            "venue": "In Proceedings of the 23rd International Conference on Computational Linguistics,",
            "year": 2010
        },
        {
            "authors": [
                "Makoto Miwa",
                "Rune S\u00e6tre",
                "Jin-Dong Kim",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Event extraction with complex event classification using rich features",
            "venue": "Journal of Bioinformatics and Computational Biology,",
            "year": 2010
        },
        {
            "authors": [
                "Makoto Miwa",
                "Paul Thompson",
                "Sophia Ananiadou."
            ],
            "title": "Boosting automatic event extraction from the literature using domain adaptation and coreference resolution",
            "venue": "Bioinformatics, 28(13):1759\u20131765.",
            "year": 2012
        },
        {
            "authors": [
                "Yusuke Miyao",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Feature forest models for probabilistic HPSG parsing",
            "venue": "Computational Linguistics,",
            "year": 2008
        },
        {
            "authors": [
                "Claire N\u00e9dellec",
                "Robert Bossy",
                "Jin-Dong Kim",
                "JungJae Kim",
                "Tomoko Ohta",
                "Sampo Pyysalo",
                "Pierre Zweigenbaum."
            ],
            "title": "Overview of BioNLP shared task 2013",
            "venue": "Proceedings of the BioNLP Shared Task 2013 Workshop, pages 1\u20137.",
            "year": 2013
        },
        {
            "authors": [
                "Siddharth Patwardhan",
                "Ellen Riloff."
            ],
            "title": "A unified model of phrasal and sentential evidence for information extraction",
            "venue": "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 151\u2013160.",
            "year": 2009
        },
        {
            "authors": [
                "Hoifung Poon",
                "Pedro Domingos."
            ],
            "title": "Joint inference in information extraction",
            "venue": "Proceedings of the 22nd National Conference on Artificial Intelligence, pages 913\u2013918.",
            "year": 2007
        },
        {
            "authors": [
                "Hoifung Poon",
                "Lucy Vanderwende."
            ],
            "title": "Joint inference for knowledge extraction from biomedical literature",
            "venue": "Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Lin-",
            "year": 2010
        },
        {
            "authors": [
                "Martin F. Porter."
            ],
            "title": "An algorithm for suffix stripping",
            "venue": "Program, 14(3):130\u2013137.",
            "year": 1980
        },
        {
            "authors": [
                "Chris Quirk",
                "Pallavi Choudhury",
                "Michael Gamon",
                "Lucy Vanderwende."
            ],
            "title": "MSR-NLP entry in BioNLP shared task 2011",
            "venue": "Proceedings of the BioNLP Shared Task 2011 Workshop, pages 155\u2013 163.",
            "year": 2011
        },
        {
            "authors": [
                "Sebastian Riedel",
                "Andrew McCallum."
            ],
            "title": "Fast and robust joint models for biomedical event extraction",
            "venue": "Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, pages 1\u201312.",
            "year": 2011
        },
        {
            "authors": [
                "Sebastian Riedel",
                "Andrew McCallum."
            ],
            "title": "Robust biomedical event extraction with dual decomposition and minimal domain adaptation",
            "venue": "Proceedings of the BioNLP Shared Task 2011 Workshop, pages 46\u201350.",
            "year": 2011
        },
        {
            "authors": [
                "Sebastian Riedel",
                "Hong-Woo Chun",
                "Toshihisa Takagi",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "A Markov logic approach to bio-molecular event extraction",
            "venue": "In Proceedings of the BioNLP 2009 Workshop Companion Volume for Shared Task,",
            "year": 2009
        },
        {
            "authors": [
                "Sebastian Riedel",
                "David McClosky",
                "Mihai Surdeanu",
                "Andrew McCallum",
                "Christopher D. Manning."
            ],
            "title": "Model combination for event extraction in bionlp 2011",
            "venue": "Proceedings of the BioNLP Shared Task 2011 Workshop, pages 51\u201355.",
            "year": 2011
        },
        {
            "authors": [
                "Alan Ritter",
                "Mausam",
                "Oren Etzioni",
                "Sam Clark."
            ],
            "title": "Open domain event extraction from Twitter",
            "venue": "Proceedings of the 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 1104\u20131112.",
            "year": 2012
        },
        {
            "authors": [
                "Bart Selman",
                "Henry Kautz",
                "Bram Cohen."
            ],
            "title": "Local Search Strategies for Satisfiability Testing",
            "venue": "D. S. Johnson and M. A. Trick, editors, Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge, pages 521\u2013532. American",
            "year": 1996
        },
        {
            "authors": [
                "Parag Singla",
                "Pedro Domingos."
            ],
            "title": "Discriminative training of Markov logic networks",
            "venue": "Proceedings of the 20th National Conference on Artificial Intelligence, pages 868\u2013873.",
            "year": 2005
        },
        {
            "authors": [
                "David Sontag",
                "Amir Globerson."
            ],
            "title": "Introduction to Dual Decomposition for Inference",
            "venue": "Optimization for Machine Learning.",
            "year": 2011
        },
        {
            "authors": [
                "Ioannis Tsochantaridis",
                "Thomas Hofmann",
                "Thorsten Joachims",
                "Yasemin Altun."
            ],
            "title": "Support vector machine learning for interdependent and structured output spaces",
            "venue": "Proceedings of the 21st International Conference on Machine Learning, pages 104\u2013",
            "year": 2004
        },
        {
            "authors": [
                "Vladimir N. Vapnik."
            ],
            "title": "The Nature of Statistical Learning Theory",
            "venue": "Springer, New York, NY.",
            "year": 1995
        }
    ],
    "sections": [
        {
            "text": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 831\u2013843, October 25-29, 2014, Doha, Qatar. c\u00a92014 Association for Computational Linguistics"
        },
        {
            "heading": "1 Introduction",
            "text": "Event extraction is the task of extracting and labeling all instances in a text document that correspond to a pre-defined event type. This task is quite challenging for a multitude of reasons: events are often nested, recursive and have several arguments; there is no clear distinction between arguments and events; etc. For instance, consider the BioNLP Genia event extraction shared task (Ne\u0301dellec et al.,\n2013). In this task, participants are asked to extract instances of a pre-defined set of biomedical events from text. An event is identified by a keyword called the trigger and can have an arbitrary number of arguments that correspond to pre-defined argument types. The task is complicated by the fact that an event may serve as an argument of another event (nested events). An example of the task is shown in Figure 1. As we can see, event E13 takes as arguments two events, E14 and E12, which in turn has E11 as one of its arguments.\nA standard method that has been frequently employed to perform this shared task uses a pipeline architecture with three steps: (1) detect if a token is a trigger and assign a trigger type label to it; (2) for every detected trigger, determine all its arguments and assign types to each detected argument; and (3) combine the extracted triggers and arguments to obtain events. Though adopted by the top-performing systems such as the highest scoring system on the BioNLP\u201913 Genia shared task (Kim et al., 2013), this approach is problematic for at least two reasons. First, as is typical in pipeline architectures, errors may propagate from one stage to the next. Second, since each event/argument is identified and assigned a type independently of the others, it fails to capture the relationship between a trigger and its neighboring triggers, an argument and its neighboring arguments, etc.\nMore recently, researchers have investigated joint inference techniques for event extraction using Markov Logic Networks (MLNs) (e.g., Poon and Domingos (2007), Poon and Vanderwende (2010), Riedel and McCallum (2011a)), a statistical relational model that enables us to model the dependencies between different instances of a data sample. However, it is extremely challenging to make joint inference using MLNs work well in practice (Poon and Domingos, 2007). One reason is that it is generally difficult to model sophisticated linguistic features using MLNs. The diffi-\n831\nculty stems from the fact that some of these features are extremely high dimensional (e.g., Chen and Ng (2012), Huang and Riloff (2012b), Li et al. (2012), Li et al. (2013b), Li et al. (2013c)), and to reliably learn weights of formulas that encode such features, one would require an enormous number of data samples. Moreover, even the complexity of approximate inference on such models is quite high, often prohibitively so. For example, a trigram can be encoded as an MLN formula, Word(w1, p\u22121)\u2227 Word(w2, p) \u2227 Word(w3, p + 1)\u21d2 Type(p, T ). For any given position (p), this formula has W 3 groundings, where W is the number of possible words, making it too large for learning/inference. Therefore, current MLN-based systems tend to include a highly simplified model ignoring powerful linguistic features. This is problematic because such features are essential for event extraction.\nOur contributions in this paper are two-fold. First, we propose a novel model for biomedical event extraction based on MLNs that addresses the aforementioned limitations by leveraging the power of Support Vector Machines (SVMs) (Vapnik, 1995; Joachims, 1999) to handle high-dimensional features. Specifically, we (1) learn SVM models using rich linguistic features for trigger and argument detection and type labeling; (2) design an MLN composed of soft formulas (each of which encodes a soft constraint whose associated weight indicates how important it is to satisfy the constraint) and hard formulas (constraints that always need to be satisfied, thus having a weight of \u221e) to capture the relational dependencies between triggers and arguments; and (3) encode the SVM output as prior knowledge in the MLN in the form of soft formulas, whose weights are computed using the confidence values generated by the SVMs. This formulation naturally allows SVMs and MLNs to complement each other\u2019s strengths and weaknesses: learning\nin a large and sparse feature space is much easier with SVMs than with MLNs, whereas modeling relational dependencies is much easier with MLNs than with SVMs.\nOur second contribution concerns making inference with this MLN feasible. Recall that inference involves detecting and assigning the type label to all the triggers and arguments. We show that existing Maximum-a-posteriori (MAP) inference methods, even the most advanced approximate ones (e.g., Selman et al. (1996), Marinescu and Dechter (2009), Sontag and Globerson (2011) ), are infeasible on our proposed MLN because of their high memory cost. Consequently, we identify decompositions of the MLN into disconnected components and solve each independently, thereby drastically reducing the memory requirements.\nWe evaluate our approach on the BioNLP 2009, 2011 and 2013 Genia shared task datasets. On the BioNLP\u201913 dataset, our model significantly outperforms state-of-the-art pipeline approaches and achieves the best F1 score to date. On the BioNLP\u201911 and BioNLP\u201909 datasets, our scores are slightly better and slightly worse respectively than the best reported results. However, they are significantly better than state-of-the-art MLNbased systems."
        },
        {
            "heading": "2 Background",
            "text": ""
        },
        {
            "heading": "2.1 Related Work",
            "text": "As a core task in information extraction, event extraction has received significant attention in the natural language processing (NLP) community. The development and evaluation of large-scale learningbased event extraction systems was propelled in part by the availability of annotated corpora produced as part of the Message Understanding Conferences (MUCs), the Automatic Content Extraction (ACE) evaluations, and the BioNLP shared\ntasks on event extraction. Previous work on event extraction can be broadly divided into two categories, one focusing on the development of features (henceforth feature-based approaches) and the other focusing on the development of models (henceforth model-based approaches).\nFeature-based approaches. Early work on feature-based approaches has primarily focused on designing local sentence-level features such as token and syntactic features (Grishman et al., 2005; Ahn, 2006). Later, it was realized that local features were insufficient to reliably and accurately perform event extraction in complex domains and therefore several researchers proposed using high-level features. For instance, Ji and Grishman (2008) used global information from related documents; Gupta and Ji (2009) extracted implicit time information; Patwardhan and Riloff (2009) used broader sentential context; Liao and Grishman (2010; 2011) leveraged document-level cross-event information and topic-based features; and Huang and Riloff (2012b) explored discourse properties.\nModel-based approaches. The model-based approaches developed to date have focused on modeling global properties and seldom use rich, highdimensional features. To capture global event structure properties, McClosky et al. (2011a) proposed a dependency parsing model. To extract event arguments, Li et al. (2013b) proposed an Integer Linear Programming (ILP) model to encode the relationship between event mentions. To overcome the error propagation problem associated with the pipeline architecture, several joint models have been proposed, including those that are based on MLNs (e.g., Poon and Domingos (2007), Riedel et al. (2009), Poon and Vanderwende (2010)), structured perceptrons (e.g., Li et al. (2013c)), and dual decomposition with minimal domain adaptation (e.g., Riedel and McCallum (2011a; 2011b)).\nIn light of the high annotation cost required by supervised learning-based event extraction systems, several semi-supervised, unsupervised, and rulebased systems have been proposed. For instance, Huang and Riloff (2012a) proposed a bootstrapping method to extract event arguments using only a small amount of annotated data; Lu and Roth (2012) developed a novel unsupervised sequence labeling model; Bui et al. (2013) implemented a rule-based approach to extract biomedical events; and Ritter et al. (2012) used unsupervised learning to extract events from Twitter data.\nOur work extends prior work by developing a rich framework that leverages sophisticated featurebased approaches as well as joint inference using MLNs. This combination gives us the best of both worlds because on one hand, it is challenging to model sophisticated linguistic features using MLNs while on the other hand, feature-based approaches employing sophisticated high-dimensional features suffer from error propagation as the model is generally not rich enough for joint inference."
        },
        {
            "heading": "2.2 The Genia Event Extraction Task",
            "text": "The BioNLP Shared Task (BioNLP-ST) series (Kim et al. (2009), Kim et al. (2011a) and Ne\u0301dellec et al. (2013)) is designed to tackle the problem of extracting structured information from the biomedical literature. The Genia Event Extraction task is arguably the most important of all the tasks proposed in BioNLP-ST and is also the only task organized in all three events in the series.\nThe 2009 edition of the Genia task (Kim et al., 2009) was conducted on the Genia event corpus (Kim et al., 2008), which only contains abstracts of the articles that represent domain knowledge around NF\u03baB proteins. The 2011 edition (Kim et al., 2011b) augmented the dataset to include full text articles, resulting in two collections, the abstract collection and the full text collection. The 2013 edition (Kim et al., 2013) further augmented the dataset with recent full text articles but removed the abstract collection entirely.\nThe targeted event types have also changed slightly over the years. Both the 2009 and 2011 editions are concerned with nine fine-grained event sub-types that can be categorized into three main types, namely simple, binding and regulation events. These three main event types can be distinguished by the kinds of arguments they take. A simple event can take exactly one protein as its Theme argument. A binding event can take one or more proteins as its Theme arguments, and is therefore slightly more difficult to extract than a simple event. A regulation event takes exactly one protein or event as its Theme argument and optionally one protein or event as its Cause argument. If a regulation event takes another event as its Theme or Cause argument, it will lead to a nested event. Regulation events are considered the most difficultto-extract among the three event types owing in part to the presence of an optional Cause argument and their recursive structure. The 2013 edition intro-\nduced a new event type, protein-mod, and its three sub-types. Theoretically, a protein-mod event takes exactly one protein as its Theme argument and optionally one protein or event as its Cause argument. In practice, however, it rarely occurs: there are only six protein-mod events having Cause arguments in the training data for the 2013 edition. Consequently, our model makes the simplifying assumption that a protein-mod event can only take one Theme argument, meaning that we are effectively processing protein-mod events in the same way as simple events."
        },
        {
            "heading": "2.3 Markov Logic Networks",
            "text": "Statistical relational learning (SRL) (Getoor and Taskar, 2007) is an emerging field that seeks to unify logic and probability, and since most NLP techniques are grounded either in logic or probability or both, NLP serves as an ideal application domain for SRL. In this paper, we will employ a popular SRL approach called Markov logic networks (MLNs) (Domingos and Lowd, 2009). At a high level, an MLN is a set of weighted first-order logic formulas (fi, wi), where wi is the weight associated with formula fi. Given a set of constants that model objects in the domain, it defines a Markov network or a log-linear model (Koller and Friedman, 2009) in which we have one node per ground first-order atom and a propositional feature corresponding to each grounding of each first-order formula. The weight of the feature is the weight of the corresponding first-order formula.\nFormally, the probability of a world \u03c9, which represents an assignment of values to all ground atoms in the Markov network, is given by:\nPr(\u03c9) = 1 Z exp (\u2211 i wiN(fi, \u03c9) ) where N(fi, \u03c9) is the number of groundings of fi that evaluate to True in \u03c9 and Z is a normalization constant called the partition function.\nThe key inference tasks over MLNs are computing the partition function (Z) and the mostprobable explanation given evidence (the MAP task). Most queries, including those required by event extraction, can be reduced to these inference tasks. Formally, the partition function and the MAP tasks are given by:\nZ = \u2211 \u03c9 exp (\u2211 i wiN(fi, \u03c9) ) (1)\narg max \u03c9 P (\u03c9) = arg max \u03c9 \u2211 i wiN(fi, \u03c9) (2)"
        },
        {
            "heading": "3 Pipeline Model",
            "text": "We implement a pipeline event extraction system using SVMs. This pipeline model serves two important functions: (1) providing a baseline for evaluation and (2) producing prior knowledge for the joint model.\nOur pipeline model consists of two steps: trigger labeling and argument labeling. In the trigger labeling step, we determine whether a candidate trigger is a true trigger and label each true trigger with its trigger type. Then, in the argument labeling step, we identify the arguments for each true trigger discovered in the trigger labeling step and assign a role to each argument.\nWe recast each of the two steps as a classification task and employ SVMmulticlass (Tsochantaridis et al., 2004) to train the two classifiers. We describe each step in detail below."
        },
        {
            "heading": "3.1 Trigger Labeling",
            "text": "A preliminary study of the BioNLP\u201913 training data suggests that 98.7% of the true triggers\u2019 head words1 are either verbs, nouns or adjectives. Therefore, we consider only those words whose part-ofspeech tags belong to the above three categories as candidate triggers. To train the trigger classifier, we create one training instance for each candidate trigger in the training data. If the candidate trigger is not a trigger, the class label of the corresponding instance is None; otherwise, the label is the type of the trigger. Thus, the number of class labels equals the number of trigger types plus one. Each training instance is represented by the features described in Table 1(a). These features closely mirror those used in state-of-the-art trigger labeling systems such as Miwa et al. (2010b) and Bjo\u0308rne and Salakoski (2013).\nAfter training, we apply the resulting trigger classifier to classify the test instances, which are created in the same way as the training instances. If a test instance is predicted as None by the classifier, the corresponding candidate trigger is labeled as a non-trigger; otherwise, the corresponding candidate trigger is posited as a true trigger whose type is the class value assigned by the classifier.\n1Head words are found using Collins\u2019 (1999) rules."
        },
        {
            "heading": "3.2 Argument Labeling",
            "text": "The argument classifier is trained as follows. Each training instance corresponds to a candidate trigger and one of its candidate arguments.2 A candidate argument for a candidate trigger ct is either a protein or a candidate trigger that appears in the same sentence as ct. If ct is not a true trigger, the label of the associated instance is set toNone. On the other hand, if ct is a true trigger, we check whether the candidate argument in the associated instance is indeed one of ct\u2019s arguments. If so, the class label of the instance is the argument\u2019s role; otherwise, the class label is None. The features used for representing each training instance, which are modeled after those used in Miwa et al. (2010b) and Bjo\u0308rne and Salakoski (2013), are shown in Table 1(b).\nAfter training, we can apply the resulting classifier to classify the test instances, which are created in the same way as the training instances. If a test instance is assigned the class None by the classifier, the corresponding candidate argument is classified as not an argument of the trigger. Other-\n2Following the definition of the GENIA event extraction task, the protein names are provided as part of the input.\nwise, the candidate argument is a true argument of the trigger whose role is the class value assigned by the classifier."
        },
        {
            "heading": "4 Joint Model",
            "text": "In this section, we describe our Markov logic model that encodes the relational dependencies in the shared task and uses the output of the pipeline model as prior knowledge (soft evidence). We begin by describing the structure of our Markov logic model, and then describe the parameter learning and inference algorithms for it."
        },
        {
            "heading": "4.1 MLN Structure",
            "text": "Figure 2 shows our proposed MLN for BioNLP event extraction, which we refer to as BioMLN. The MLN contains six predicates.\nThe query predicates in Figure 2(a) are those whose assignments are not given during inference and thus need to be predicted. Predicate TriggerType(sid,tid,ttype!) is true when the token located in sentence sid at position tid has type ttype. \u2206ttype, which denotes the set of constants (or objects) that the logical variable ttype\ncan be instantiated to, includes all possible trigger types in the dataset plus None (which indicates that the token is not a trigger). The \u201c!\u201d symbol models commonsense knowledge that only one of the types in the domain \u2206ttype of ttype is true for every unique combination of sid and tid. Similarly, predicate ArgumentRole(sid,aid,tid,arole!) asserts that a token in sentence sid at position aid plays exactly one argument role, denoted by arole, with respect to the token at position tid. \u2206arole includes the two argument types, namely, Theme and Cause plus the additional None that indicates that the token is not an argument.\nThe hidden predicates in Figure 2(b) are \u201cclusters\u201d of trigger types. Predicate Simple(sid,tid) is true when the token in sentence sid at position tid corresponds to one of the Simple event trigger types (BioNLP\u201913 has 9 simple events, BioNLP\u201909/\u201911 have 5) or a binding event trigger type. Similarly, Regulation(sid,tid) asserts that the token in sentence sid at position tid corresponds to any of the three regulation event trigger types.\nThe evidence predicates in Figure 2(c) are those that are always assumed to be known during inference. We define two evidence predicates based on dependency structures. Word(sid,tid,word) is true when the word in sentence sid at position tid is equal to word. DepType(sid,aid,tid,dtype) asserts that dtype is the dependency type in the de-\npendency parse tree that connects the token at position tid to the token at position aid in sentence sid. If the word at tid and the word at aid are directly connected in the dependency tree, then dtype is the label of dependency edge with direction; otherwise dtype is None.\nThe MLN formulas, expressing commonsense, prior knowledge in the domain (Poon and Vanderwende, 2010; Riedel and McCallum, 2011a), are shown in Fig. 2(d). All formulas, except Formula (9), are hard formulas, meaning that they have infinite weights. Note that during weight learning, we only learn the weights of soft formulas.\nFormulas (1) and (2) along with the \u201c!\u201d constraint in the predicate definition ensure that the token types are mutually exclusive and exhaustive. Formula (3) asserts that every trigger should have an argument of type Theme, since a Theme argument is mandatory for any event. Formula (4) models the constraint that a Simple orBinding trigger has no arguments of type Cause since only regulation events have a Cause. Formula (5) asserts that non-triggers have no arguments and vice-versa. Formula (6) models the constraint that if a token is both an argument of t and a trigger by itself, then t must belong to one of the three regulation trigger types. This formula captures the recursive relationship between triggers. Formulas (7) and (8) connect the hidden predicates with the query predicates. Formula (9) is a soft formula encoding\nthe relationship between triggers and arguments in a dependency parse tree. It joins a word and the dependency type label that connects the word token to the argument token in the dependency parse tree with the trigger types and argument types of the two tokens. The \u201c+\u201d symbol indicates that each grounding of Formula (9) may have a different weight."
        },
        {
            "heading": "4.2 Weight Learning",
            "text": "We can learn BioMLN from data either discriminatively or generatively. Since discriminative learning is much faster than generative learning, we use the former. In discriminative training, we maximize the conditional log-likelihood (CLL) of the query and the hidden variables given an assignment to the evidence variables. In principle, we can use the standard gradient descent algorithm for maximizing the CLL. In each iteration of gradient descent, we update the weights using the following equation (cf. Singla and Domingos (2005) and Domingos and Lowd (2009)):\nwt+1j = w t j \u2212 \u03b1(Ew(nj)\u2212 nj) (3)\nwhere wtj represents the weight of the j th formula in the tth iteration, nj is the number of groundings in which the jth formula is satisfied in the training data, Ew(nj) is the expected number of groundings in which the jth formula is satisfied given the current weight vector w, and \u03b1 is the learning rate.\nAs such, the update rule given in Equation (3) is likely to yield poor accuracy because the number of training examples of some types (e.g., None) far outnumber other types. To rectify this ill-conditioning problem (Singla and Domingos, 2005; Lowd and Domingos, 2007), we divide the gradient with the number of true groundings in the data, namely, we compute the gradient using (Ew(nj)\u2212nj)\nnj .\nAnother key issue with using Equation (3) is that computing Ew(nj) requires performing inference over the MLN. This step is intractable, #P-complete in the worst case. To circumvent this problem and for fast, scalable training, we instead propose to use the voted perceptron algorithm (Collins, 2002; Singla and Domingos, 2005). This algorithm approximates Ew(nj) by counting the number of satisfied groundings of each formula in the MAP assignment. Computing the MAP assignment is much easier (although still NP-hard in the worst case) than computing Ew(nj), and as a result the\nvoted perceptron algorithm is more scalable than the standard gradient descent algorithm. In addition, it converges much faster."
        },
        {
            "heading": "4.3 Testing",
            "text": "In the testing phase, we combine BioMLN with the output of the pipeline model (see Section 3) to obtain a new MLN, which we refer to as BioMLN+. For every candidate trigger, the SVM trigger classifier outputs a vector of signed confidence values (which is proportional to the distance from the separating hyperplane) of dimension \u2206ttype with one entry for each trigger type. Similarly, for every candidate argument, the SVM argument classifier outputs a vector of signed confidence values of dimension \u2206arole with one entry for each argument role. In BioMLN+, we model the SVM output as soft evidence, using two soft unit clauses, TriggerType(i,+j,+t) and ArgumentRole(i,+k,+j,+a). We use the confidence values to determine the weights of these clauses. Intuitively, higher (smaller) the confidence, higher (smaller) the weight.\nSpecifically, the weights of the soft unit clauses are set as follows. If the SVM trigger classifier determines that the trigger in sentence i at position j belongs to type t with confidence Ci,j , then we attach a weight of Ci,j\u03b1ni to the clause TriggerType(i,j,t). Here, ni denotes the number of trigger candidates in sentence i. Similarly, if the SVM argument classifier determines that the token at position k in sentence i belongs to the argument role a with respect to the token at position j, with confidence C \u2032i,k,j , then we attach a weight of C\u2032i,k,j\n\u03b2 \u2211ni j=1mij to the clause ArgumentRole(i, k, j,a). Here, mij denotes the number of argument candidates for the jth trigger candidate in sentence i. \u03b1 and \u03b2 act as scale parameters for the confidence values ensuring that the weights don\u2019t get too large (or too small)."
        },
        {
            "heading": "4.4 Inference",
            "text": "As we need to perform MAP inference, both at training time and at test time, in this subsection we will describe how to do it efficiently by exploiting unique properties of our proposed BioMLN.\nNaively, we can perform MAP inference by grounding BioMLN to a Markov network and then reducing the Markov network by removing from it all (grounded propositional) formulas that are inconsistent with the evidence. On the re-\nduced Markov network, we can then compute the MAP solution using standard MAP solvers such as MaxWalkSAT (a state-of-the-art local search based MAP solver) (Selman et al., 1996) and Gurobi3 (a state-of-the-art, parallelized ILP solver).\nThe problem with the above approach is that grounding the MLN is infeasible in practice; even the reduced Markov network is just too large. For example, assuming a total of |\u2206sid| sentences and a maximum of N tokens in a sentence, Formula (3) alone has O(|\u2206sid|N3) groundings. Concretely, at training time, assuming 1000 sentences with 10 tokens per sentence, Formula (3) itself yields one million groundings. Clearly, this approach is not scalable. It turns out, however, that the (ground) Markov network can be decomposed into several disconnected components, each of which can be solved independently. This greatly reduces the memory requirement of the inference step. Specifically, for every grounding of sid, we get a set of nodes in the Markov network that are disconnected from the rest of the Markov network and therefore independent of the rest of the network. Formally,\nProposition 1. For any world \u03c9 of the BioMLN,\nPM(\u03c9) = PMi(\u03c9i)PM\\Mi(\u03c9 \\ \u03c9i) (4) where \u03c9i is the world \u03c9 projected on the groundings of sentence i andMi is BioMLN grounded only using sentence i.\nUsing Equation (4), it is easy to see that the MLN M can be decomposed into |\u2206sid| disjoint MLNs, {Mk}|\u2206sid|k=1 . The MAP assignment toM can be\ncomputed using, |\u2206sid|\u22c3 i=1 ( arg max \u03c9i PMi(\u03c9i) ) . This result ensures that to approximate the expected counts Ew(nj), it is sufficient to keep exactly one sentence\u2019s groundings in memory. Specifically, Ew(nj) can be written as \u2211|\u2206sid| k=1 Ew(n k j ), where Ew(nkj ) indicates the expected number of satisfied groundings of the jth formula in the kth sentence. Since the MAP computation is decomposable, we can estimate Ew(nkj ) using MAP inference on just the kth sentence."
        },
        {
            "heading": "5 Evaluation",
            "text": ""
        },
        {
            "heading": "5.1 Experimental Setup",
            "text": "We evaluate our system on the BioNLP\u201913 (Kim et al., 2013), \u201911 (Kim et al., 2011a) and \u201909 (Kim\n3http://www.gurobi.com/\net al., 2009) Genia datasets for the main event extraction shared task. Note that this task is the most important one for Genia and therefore has the most active participation. Statistics on the datasets are shown in Table 2. All our evaluations use the online tool provided by the shared task organizers. We report scores obtained using the approximate span, recursive evaluation.\nTo generate features, we employ the supporting resources provided by the organizers. Specifically, sentence split and tokenization are done using the GENIA tools, while part-of-speech information is provided by the BLLIP parser that uses the self-trained biomedical model (McClosky, 2010). Also, we create dependency features from the parse trees provided by two dependency parsers, the Enju parser (Miyao and Tsujii, 2008) and the aforementioned BLLIP parser that uses the selftrained biomedical model, which results in two sets of dependency features.\nFor MAP inference, we use Gurobi, a parallelized ILP solver. After inference, a postprocessing step is required to generate biomedical events from the extracted triggers and arguments. Specifically, for binding events, we employ a learning-based method similar to Bjo\u0308rne and Salakoski (2011), while for the other events, we employ a rule-based approach similar to Bjo\u0308rne et al. (2009). Both the SVM baseline system and the combined MLN+SVM system employ the same post-processing strategy.\nDuring weight learning, in order to combat the problem of different initializations yielding radically different parameter estimates, we start at several different initialization points and average the weights obtained after 100 iterations of gradient descent. However, we noticed that if we simply choose random initialization points, the variance of the weights was quite high and some initialization points were much worse than others. To counter this, we use the following method to systematically\ninitialize the weights. Let ni be the number of satisfied groundings of formula fi in the training data and mi be the total number of possible groundings of fi. We use a threshold \u03b3 to determine whether we wish to make the initial weight positive or negative. If nimi \u2264 \u03b3, then we choose the initial weight uniformly at random from the range [\u22120.1, 0]. Otherwise, we chose it from the range [0, 0.1]. These steps ensure that the weights generated from different initialization points have smaller variance. Also, in the testing phase, we set the scale parameters for the soft evidence as \u03b1 = \u03b2 = max\nc\u2208C |c|, where\nC is the set of SVM confidence values."
        },
        {
            "heading": "5.2 Results on the BioNLP\u201913 Dataset",
            "text": "Among the three datasets, the BioNLP\u201913 dataset is most \u201crealistic\u201d one because it is the only one that contains full papers and no abstracts. As a result, it is also the most challenging dataset among the three. Table 3 shows the results of our system along with the results of other top systems published in the official evaluation of BioNLP\u201913. Our system achieves the best F1-score (an improvement of 2.64 points over the top-performing system) and has a much higher recall (mainly because our system detects more regulation events which outnumber other event types in the dataset) and a slightly higher precision than the winning system. Of the top five teams, NCBI is the only other joint inference system, which adopts joint pattern matching to predict triggers and arguments at the same time. These results illustrate the challenge in using joint inference effectively. NCBI performed much worse than the SVM-based pipeline systems, EVEX and TEES2.1. It was also worse than BIOSEM, a rulebased system that uses considerable domain expertise. Nevertheless, it was better than DLUTNLP, another SVM-based system.\nFigure 3 compares our baseline pipeline model with our combined model. We can clearly see that the combined model has a significantly better F1 score than the pipeline model on most event types.\nThe regulation events are considered the most complex events to detect because they have a recursive structure. At the same time, this structure yields a large number of joint dependencies. The advantage of using a rich model such as MLNs can be clearly seen in this case; the combined model yields a 10 point and 6 point increase in F1-score on the test data and development data respectively compared to the pipeline model."
        },
        {
            "heading": "5.3 Results on the BioNLP\u201911 Dataset",
            "text": "Table 4 shows the results on the BioNLP\u201911 dataset. We can see that our system is marginally better than Miwa12, which is a pipeline-based system. It is also more than two points better than Riedel11, a state-of-the-art structured prediction-based joint inference system. Reidel11 incorporates the Stanford predictions (McClosky et al., 2011b) as features in the model. On the two hardest, most complex tasks, detecting regulation events (which have recursive structures and more joint dependencies than other event types) and detecting binding events (which may have multiple arguments), our system performs better than both Miwa12 and Riedel11.4 Specifically, our system\u2019s F1 score for regulation events is 46.84, while those of Miwa12 and Riedel11 are 45.46 and 44.94 respectively. Our system\u2019s F1 score for the binding event is 58.79, while those of Miwa12 and Riedel11 are 56.64 and 48.49 respectively. These results clearly demonstrate the effectiveness of enforcing joint dependencies along with high-dimensional features."
        },
        {
            "heading": "5.4 Results on the BioNLP\u201909 Dataset",
            "text": "Table 5 shows the results on the BioNLP\u201909 dataset. Our system has a marginally lower score (by 0.11 points) than Miwa12, which is the best performing system on this dataset. Specifically, our system achieves a higher recall but a lower precision than Miwa12. However, note that Miwa12 used coreference features while we are able to achieve\n4Detailed results are not shown for any of these three datasets due to space limitations.\nsimilar accuracy without the use of co-reference data. The F1 score of Miwa10, which does not use co-reference features, is nearly 2 points lower than that of our system. Our system also has a higher F1 score than Reidel11, which is the best joint inference-based system for this task.\nOn the regulation events, our system (47.55) outperforms both Miwa12 (45.99) and Riedel11 (46.9), while on the binding event, our system (59.88) is marginally worse than Miwa12 (59.91) and significantly better than Riedel11 (52.6). As mentioned earlier, these are the hardest events to extract. Also, existing MLN-based joint inference systems such as RiedelMLN and PoonMLN do not achieve stateof-the-art results because they do not leverage complex, high-dimensional features."
        },
        {
            "heading": "6 Summary and Future Work",
            "text": "Markov logic networks (MLNs) are a powerful representation that can compactly encode rich relational structures and ambiguities (uncertainty). As a result, they are an ideal representation for complex NLP tasks that require joint inference, such as event extraction. Unfortunately, the superior representational power greatly complicates inference and learning over MLN models. Even the most advanced methods for inference and learning in MLNs (Gogate and Domingos, 2011) are un-\nable to handle complex, high-dimensional features, and therefore existing MLN systems primarily use low-dimensional features. This limitation severely affects the accuracy of MLN-based NLP systems, and as a result, in some cases their performance is inferior to pipeline methods that do not employ joint inference.\nIn this paper, we presented a general approach for exploiting the power of high-dimensional linguistic features in MLNs. Our approach involves reliably processing and learning high-dimensional features using SVMs and encoding their output as low-dimensional features in MLNs. We showed that we could achieve scalable learning and inference in our proposed MLN model by exploiting decomposition. Our results on the BioNLP shared tasks from \u201913, \u201911, and \u201909 clearly show that our proposed combination is extremely effective, achieving the best or second best score on all three datasets.\nIn future work, we plan to (1) improve our joint model by incorporating co-reference information and developing model ensembles; (2) transfer the results of this investigation to other complex NLP tasks that can potentially benefit from joint inference; and (3) develop scalable inference and learning algorithms (Ahmadi et al., 2013)."
        },
        {
            "heading": "Acknowledgments",
            "text": "This work was supported in part by the AFRL under contract number FA8750-14-C-0021, by the ARO MURI grant W911NF-08-1-0242, and by the DARPA Probabilistic Programming for AdvancedMachine Learning Program under AFRL prime contract number FA8750-14-C-0005. Any opinions, findings, conclusions, or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views or official policies, either expressed or implied, of DARPA, AFRL, ARO or the US government."
        }
    ],
    "title": "Relieving the Computational Bottleneck: Joint Inference for Event Extraction with High-Dimensional Features",
    "year": 2014
}