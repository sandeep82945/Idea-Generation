{
    "abstractText": "Machine Learning is at the forefront of scientific progress in Healthcare and Medicine. To accelerate scientific discovery, it is important to have tools that allow progress iterations to be collaborative, reproducible, reusable and easily built upon without \u201creinventing the wheel\u201d for each task. FuseMedML, or fuse, is a Python framework designed for accelerated Machine Learning (ML) based discovery in the medical domain. It is highly flexible and designed for easy collaboration, encouraging code reuse. Flexibility is enabled by a generic data object design where data is kept in a nested (hierarchical) Python dictionary (NDict), allowing to efficiently process and fuse information from multiple modalities. Functional components allow to specify input and output keys, to be read from and written to the nested dictionary. Easy code reuse is enabled through key components implemented as standalone packages under the main fuse repo using the same design principles. These include fuse.data a flexible data processing pipeline, fuse.dl reusable Deep Learning (DL) model architecture components and loss functions, and fuse.eval a library for evaluating ML models.",
    "authors": [
        {
            "affiliations": [],
            "name": "Alex Golts"
        },
        {
            "affiliations": [],
            "name": "Moshe Raboh"
        },
        {
            "affiliations": [],
            "name": "Yoel Shoshan"
        },
        {
            "affiliations": [],
            "name": "Sagi Polaczek"
        },
        {
            "affiliations": [],
            "name": "Simona Rabinovici-Cohen"
        },
        {
            "affiliations": [],
            "name": "Efrat Hexter"
        }
    ],
    "id": "SP:779e96817991a49e7a811ec85d07a534975ff995",
    "references": [
        {
            "authors": [
                "V. Barros",
                "T. Tlusty",
                "E. Barkan",
                "E. Hexter",
                "D. Gruen",
                "M. Guindy",
                "M. Rosen-Zvi"
            ],
            "title": "Virtual biopsy by using artificial intelligence\u2013based multimodal modeling of binational mammography",
            "venue": "data. Radiology,",
            "year": 2200
        },
        {
            "authors": [
                "M.J. Cardoso",
                "W. Li",
                "R. Brown",
                "N. Ma",
                "E. Kerfoot",
                "Y. Wang",
                "B. Murray",
                "A. Myronenko",
                "C. Zhao",
                "D. Yang",
                "V. Nath",
                "Y. He",
                "Z. Xu",
                "A. Hatamizadeh",
                "W. Zhu",
                "Y. Liu",
                "M. Zheng",
                "Y. Tang",
                "A. ... Feng"
            ],
            "title": "MONAI: An open-source framework for deep learning in healthcare",
            "year": 2022
        },
        {
            "authors": [
                "A. Golts",
                "D. Khapun",
                "D. Shats",
                "Y. Shoshan",
                "F. Gilboa-Solomon"
            ],
            "title": "An ensemble of 3D u-net based models for segmentation of kidney and masses in CT scans",
            "year": 2022
        },
        {
            "authors": [
                "I. Jubran",
                "M. Raboh",
                "S. Perek",
                "D. Gruen",
                "E. Hexter"
            ],
            "title": "A glimpse into the future: Disease progression simulation for breast cancer in mammograms",
            "year": 2021
        },
        {
            "authors": [
                "A. Paszke",
                "S. Gross",
                "F. Massa",
                "A. Lerer",
                "J. Bradbury",
                "G. Chanan",
                "T. Killeen",
                "Z. Lin",
                "N. Gimelshein",
                "L. Antiga",
                "A. Desmaison",
                "A. Kopf",
                "E. Yang",
                "Z. DeVito",
                "M. Raison",
                "A. Tejani",
                "S. Chilamkurthy",
                "B. Steiner",
                "L. Fang",
                "S. ... Chintala"
            ],
            "title": "PyTorch: An imperative style, high-performance deep learning library",
            "year": 2019
        },
        {
            "authors": [
                "P. Pati",
                "G. Jaume",
                "N. Brancati",
                "H. M\u00fcller",
                "D. Riccio",
                "G. De Pietro",
                "A. Foncubierta",
                "M. Raboh",
                "A.M. Anniciello",
                "G. Scognamiglio",
                "F. Feroce",
                "M. Frucci",
                "M. Gabrani"
            ],
            "title": "BRIGHT Challenge - BReast tumor Image classification on Gigapixel HisTopathological images. https://research.ibm.com/haifa/Workshops/BRIGHT",
            "year": 2022
        },
        {
            "authors": [
                "S. Rabinovici-Cohen",
                "X.M. Fern\u00e1ndez",
                "B. Grandal Rejo",
                "E. Hexter",
                "O. Hijano Cubelos",
                "J. Pajula",
                "H. P\u00f6l\u00f6nen",
                "F. Reyal",
                "M. Rosen-Zvi"
            ],
            "title": "Multimodal prediction of fiveyear breast cancer recurrence in women who receive neoadjuvant chemotherapy",
            "venue": "Cancers,",
            "year": 2022
        },
        {
            "authors": [
                "S. Rabinovici-Cohen",
                "T. Tlusty",
                "X.M. Fern\u00e1ndez",
                "B.G. Rejo"
            ],
            "title": "Early prediction of metastasis in women with locally advanced breast cancer",
            "venue": "(Vol. 12033,",
            "year": 2022
        },
        {
            "authors": [
                "Golts"
            ],
            "title": "FuseMedML: a framework for accelerated discovery in machine learning based biomedicine",
            "venue": "Journal of Open Source Software,",
            "year": 2023
        },
        {
            "authors": [
                "Y. Shoshan",
                "C. Weight",
                "M. Rosen-Zvi"
            ],
            "title": "KNIGHT Challenge - Kidney clinical Notes and Imaging to Guide and Help personalize Treatment and biomarkers discovery. https://research.ibm.com/haifa/Workshops/KNIGHT",
            "year": 2022
        },
        {
            "authors": [
                "M. Raboh",
                "D. Levanony",
                "P. Dufort",
                "A. Sitek"
            ],
            "title": "Context in medical imaging: the case of focal liver lesion classification",
            "venue": "Medical imaging 2022: Image processing (Vol. 12032,",
            "year": 2022
        },
        {
            "authors": [
                "T. Tlusty",
                "M. Ozery-Flato",
                "V. Barros",
                "E. Barkan",
                "M. Amit",
                "D. Gruen",
                "M. Guindy",
                "T. Arazi",
                "M. Rozin",
                "M. Rosen-Zvi",
                "E. Hexter"
            ],
            "title": "Pre-biopsy multi-class classification of breast lesion pathology in mammograms",
            "year": 2021
        },
        {
            "authors": [
                "Y. Zhao",
                "Z. Qiao",
                "C. Xiao",
                "L. Glass",
                "J. Sun"
            ],
            "title": "PyHealth: A python library for health predictive models. CoRR, abs/2101.04209",
            "year": 2021
        },
        {
            "authors": [
                "Golts"
            ],
            "title": "FuseMedML: a framework for accelerated discovery in machine learning based biomedicine",
            "venue": "Journal of Open Source Software,",
            "year": 2023
        }
    ],
    "sections": [
        {
            "text": "FuseMedML: a framework for accelerated discovery in machine learning based biomedicine\nAlex Golts1*\u00b6, Moshe Raboh1*, Yoel Shoshan1*, Sagi Polaczek1, Simona Rabinovici-Cohen1, and Efrat Hexter1\n1 IBM Research - Haifa, Israel \u00b6 Corresponding author * These authors contributed equally. DOI: 10.21105/joss.04943\nSoftware \u2022 Review \u2022 Repository \u2022 Archive\nEditor: Jacob Schreiber Reviewers:\n\u2022 @anupamajha1 \u2022 @suragnair\nSubmitted: 16 November 2022 Published: 22 January 2023\nLicense Authors of papers retain copyright and release the work under a Creative Commons Attribution 4.0 International License (CC BY 4.0)."
        },
        {
            "heading": "Summary",
            "text": "Machine Learning is at the forefront of scientific progress in Healthcare and Medicine. To accelerate scientific discovery, it is important to have tools that allow progress iterations to be collaborative, reproducible, reusable and easily built upon without \u201creinventing the wheel\u201d for each task. FuseMedML, or fuse, is a Python framework designed for accelerated Machine Learning (ML) based discovery in the medical domain. It is highly flexible and designed for easy collaboration, encouraging code reuse. Flexibility is enabled by a generic data object design where data is kept in a nested (hierarchical) Python dictionary (NDict), allowing to efficiently process and fuse information from multiple modalities. Functional components allow to specify input and output keys, to be read from and written to the nested dictionary. Easy code reuse is enabled through key components implemented as standalone packages under the main fuse repo using the same design principles. These include fuse.data - a flexible data processing pipeline, fuse.dl - reusable Deep Learning (DL) model architecture components and loss functions, and fuse.eval - a library for evaluating ML models."
        },
        {
            "heading": "Statement of need",
            "text": "Medical research often involves multiple modalities (e.g., imaging, clinical data, biochemical representations) and tasks (e.g., classification, segmentation, clinical condition prediction). In our experience working on numerous such projects, we have identified three key challenges: 1. Setting up or implementing a new baseline model can be time-consuming, even when similar projects have already been completed by the same lab. 2. Transferring individual components across projects can be difficult, leading to researchers frequently \u201creinventing the wheel.\u201d 3. Collaborating between projects across modalities and domains, such as imaging and molecules, is often challenging.\nTo address these challenges, FuseMedML was developed with the goal of simplifying and streamlining medical research projects.\nBefore open sourcing it, we used fuse internally in multiple research projects (Raboh, Levanony, et al., 2022), (Rabinovici-Cohen, Tlusty, et al., 2022), (Rabinovici-Cohen, Fern\u00e1ndez, et al., 2022), (Jubran et al., 2021), (Tlusty et al., 2021), (Golts et al., 2022), (Barros et al.) and experienced significant improvement in development time, reusability and collaboration. We were also able to meaningfully measure our progress and statistical significance of our results with off-the-shelf fuse.eval components that facilitate metrics\u2019 confidence interval calculation and model comparison. These tools have enabled us to organize two challenges as part of the 2022 International Symposium on Biomedical Imaging (ISBI) (Raboh, Golts, et al., 2022), (Pati et al., 2022).\nGolts et al. (2023). FuseMedML: a framework for accelerated discovery in machine learning based biomedicine. Journal of Open Source Software, 8(81), 4943. https://doi.org/10.21105/joss.04943.\n1"
        },
        {
            "heading": "State of the field",
            "text": "FuseMedML is a comprehensive machine learning library that focuses on the biomedical domain. It offers a range of tools covering the entire development process, including data preparation, model training, and evaluation. Built on top of popular machine learning frameworks such as PyTorch (Paszke et al., 2019) and PyTorch Lightning (Falcon & The PyTorch Lightning team, 2019), FuseMedML also includes flexible domain-specific capabilities to complement these frameworks. Overall, FuseMedML aims to facilitate machine learning discoveries within the healthcare and life science sectors. One way in which fuse can complement PyTorch is through its generic design concept (See Figure 1) of storing arbitrary types of data in a specialized nested dictionary. This is a key driver of flexibility, allowing minimal code modifications when moving building blocks between different projects. Concretely, fuse has a dataset class that extends the PyTorch dataset, and a model wrapper class that enables PyTorch models to operate on batch_dicts rather than tensors. In the case of PyTorch Lightning, fuse integrates with it directly as it builds upon its comprehensive trainer class, also allowing users to define their models and data modules in PyTorch Lightning style, with flexible levels of customizability.\nThere are existing PyTorch-based ML libraries that similarly to fuse cater to researchers in the biomedical domain. Two examples of such prominent libraries are MONAI (Cardoso et al., 2022) and PyHealth (Zhao et al., 2021). MONAI is primarily focused on medical imaging applications. PyHealth on the other hand mainly focuses on health records data. fuse is designed to support different types of medical data and multimodal use cases involving imaging, clinical and biochemical data. As with generic ML frameworks like PyTorch and PyTorch Lightning, fuse can also coexist with the more specific libraries like MONAI, PyHealth or others. A user may opt to borrow parts from different libraries and complement them with components from fuse. As another example, a user may want to use the data ops of fuse which are generic and flexible, or its data caching mechanism, which allows to separate processing into a static and dynamic pipelines, controlling the desired stages to be cached."
        },
        {
            "heading": "Packages",
            "text": "fuse.data FuseMedML\u2019s data package is designed for building a flexible and powerful data pipeline with reusable building blocks called ops. See Figure 2 for a simple example for how such a building block can be used across different projects. Each op class\u2019s __call__ function gets as an input a sample_dict, a dictionary that stores all the necessary information about a sample processed so far. Typically, an op\u2019s constructor gets keys that specify what it should consider in sample_dict and where to store the output. Similarly, a minibatch is represented by a batch_dict. A special kind of ops are \u201cMeta ops\u201d. They can be thought of as a form of wrapper op around\nGolts et al. (2023). FuseMedML: a framework for accelerated discovery in machine learning based biomedicine. Journal of Open Source Software, 8(81), 4943. https://doi.org/10.21105/joss.04943.\n2\na regular, lower level op or function, to help achieve a special behavior such as repeating that low level op, applying it with random values and more. \u201cMeta ops\u201d also help avoid writing boilerplate code.\nA data pipeline may consist of a static_pipeline and a dynamic_pipeline. The output of the static_pipeline can be cached to optimize running time and GPU utilization. The dynamic_pipeline is responsible for \u201conline\u201d processing that we don\u2019t want to cache, such as random augmentations. An instance of a fuse dataset class, which inherits from the PyTorch dataset class is then created from defined static and dynamic pipelines. The data package also includes generic utilities such as a PyTorch based sampler enabling batch class balancing and a tool for splitting data into folds according to predefined criteria.\nfuse.dl FuseMedML\u2019s DL package works with PyTorch models, only modifying them to interact with a batch_dict. For training, fuse.dl utilizes PyTorch-Lightning, either through an already made LightningModuleDefault class that inherits from Pytorch-Lightning\u2019s LightningModule class, or by allowing users who seek maximal customizability to implement their own custom LightningModule and operate in close resemblance to the standard PyTorch-Lightning workflow or use alternative training loop implementations. fuse.dl also offers generic core DL components such as model architectures and losses, implemented in fuse style. See an example model architecture definition in Figure 3.\nGolts et al. (2023). FuseMedML: a framework for accelerated discovery in machine learning based biomedicine. Journal of Open Source Software, 8(81), 4943. https://doi.org/10.21105/joss.04943.\n3\nFigure 3: In this example a model architecture is defined using the ModelMultiHead class. It contains of a 3D ResNet backbone represented by the BackboneResnet3D class and a 3D classification head represented by the Head3D class. Note the user can define a list of heads, to support a multi task use case. The inputs to the backbone and classification heads are defined in the fuse style described earlier, using the batch_dict key names with the relevant data. This enables easy reuse of similar model architectures between projects.\nfuse.eval FuseMedML\u2019s evaluation package is a standalone library for evaluating machine learning models using various performance metrics and comparing the results between models. It offers advanced capabilities such as a generic confidence interval wrapper for any metric, a generic one-versus-all extension for converting any binary metric to a multi-class scenario, and metrics for comparing models while considering statistical significance. The package also includes model calibration tools and a pipeline for combining a sequence of metrics with possible dependencies. In addition, the evaluation package supports automatic per-fold evaluation and subgroup analysis, and can handle large data sets through batching and multiprocessing. See Figure 4 for an example of an evaluation metric pipeline that can be reused across projects.\nGolts et al. (2023). FuseMedML: a framework for accelerated discovery in machine learning based biomedicine. Journal of Open Source Software, 8(81), 4943. https://doi.org/10.21105/joss.04943.\n4"
        },
        {
            "heading": "Extensions",
            "text": "The core technology of FuseMedML and its component packages is general, while domainspecific functionality is contained within extensions. One such extension, fuse-imaging, is currently available and extends the FuseMedML data package with operations useful for medical imaging, as well as implementations of public medical datasets."
        }
    ],
    "title": "FuseMedML: a framework for accelerated discovery in machine learning based biomedicine",
    "year": 2023
}