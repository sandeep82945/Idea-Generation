{
    "abstractText": "The tightly coupled navigation system is commonly used in UAV products and land vehicles. It adopts the Kalman filter to combine raw satellite observations, including the pseudorange, pseudorange rate and Doppler frequency, with the inertial measurements to achieve high navigational accuracy in GNSS-challenged environments. The accurate estimation of measurement noise covariance can ensure the quick convergence of the Kalman filter and the accuracy of the navigation results. Existing tightly coupled integrated navigation systems employ either constant noise covariance or simple noise covariance updating methods, which cannot accurately reflect the dynamic measurement noises. In this article, we propose an adaptive measurement noise estimation algorithm using a transformer and residual denoising autoencoder (RDAE), which can dynamically estimate the covariance of measurement noise. The residual module is used to solve the gradient degradation problem. The DAE is adopted to learn the essential characteristics from the noisy ephemeris data. By introducing the attention mechanism, the transformer can effectively learn the time and space dependency of long-term ephemeris data, and thus dynamically adjusts the noise covariance with the predicted factors. Extensive experimental results demonstrate that our method can achieve sub-meter positioning accuracy in the outdoor open environment. In a GNSS-degraded environment, our proposed method can still obtain about 3 m positioning accuracy. Another test on a new dataset also confirms that our proposed method has reasonable robustness and adaptability.",
    "authors": [
        {
            "affiliations": [],
            "name": "Hongfu Xu"
        },
        {
            "affiliations": [],
            "name": "Haiyong Luo"
        },
        {
            "affiliations": [],
            "name": "Zijian Wu"
        },
        {
            "affiliations": [],
            "name": "Fan Wu"
        },
        {
            "affiliations": [],
            "name": "Linfeng Bao"
        },
        {
            "affiliations": [],
            "name": "Fang Zhao"
        }
    ],
    "id": "SP:50b19cc3d14b677bdb1fc9f3602b1777d25db881",
    "references": [
        {
            "authors": [
                "D. Titterton",
                "J. Weston"
            ],
            "title": "Strapdown Inertial Navigation Technology; Institution of Engineering and Technology",
            "year": 2004
        },
        {
            "authors": [
                "A. Noureldin",
                "T.B. Karamat",
                "M.D. Eberts",
                "A. El-Shafie"
            ],
            "title": "Performance Enhancement of MEMS-Based INS/GPS Integration for Low-Cost Navigation Applications",
            "venue": "IEEE Trans. Veh. Technol",
            "year": 2009
        },
        {
            "authors": [
                "I. Skog",
                "P. Handel"
            ],
            "title": "In-Car Positioning and Navigation Technologies\u2014A Survey",
            "venue": "IEEE Trans. Intell. Transp. Syst",
            "year": 2009
        },
        {
            "authors": [
                "H. Liu",
                "S. Nassar",
                "N. El-Sheimy"
            ],
            "title": "Two-Filter Smoothing for Accurate INS/GPS Land-Vehicle Navigation in Urban Centers",
            "venue": "IEEE Trans. Veh. Technol",
            "year": 2010
        },
        {
            "authors": [
                "P.D. Groves"
            ],
            "title": "Principles of GNSS, Inertial, and Multisensor Integrated Navigation Systems\u2014Second Edition",
            "venue": "J. Navig",
            "year": 2013
        },
        {
            "authors": [
                "D.A. Grejner-Brzezinska",
                "C.K. Toth",
                "H. Sun",
                "X. Wang",
                "C. Rizos"
            ],
            "title": "A Robust Solution to High-Accuracy Geolocation: Quadruple Integration of GPS, IMU, Pseudolite, and Terrestrial Laser Scanning",
            "venue": "IEEE Trans. Instrum. Meas",
            "year": 2011
        },
        {
            "authors": [
                "G. Hu",
                "S. Gao",
                "Y. Zhong"
            ],
            "title": "A derivative UKF for tightly coupled INS/GPS integrated navigation",
            "venue": "ISA Trans",
            "year": 2015
        },
        {
            "authors": [
                "H. Han",
                "J. Wang",
                "M. Du"
            ],
            "title": "GPS/BDS/INS tightly coupled integration accuracy improvement using an improved adaptive interacting multiple model with classified measurement update",
            "venue": "Chin. J. Aeronaut",
            "year": 2018
        },
        {
            "authors": [
                "S. Peyraud",
                "D. Betaille",
                "S. Renault",
                "M. Ortiz",
                "F. Mougel",
                "D. Meizel",
                "F. Peyret"
            ],
            "title": "About Non-Line-Of-Sight satellite detection and exclusion in a 3D map-aided localization",
            "year": 2013
        },
        {
            "authors": [
                "A. Dhital",
                "G. Lachapelle",
                "J.B. Bancroft. Bancroft"
            ],
            "title": "Improving the Reliability of Personal Navigation Devices in Harsh Environments",
            "venue": "In Proceedings of the 2015 International Conference on Indoor Positioning and Indoor Navigation (IPIN), Banff, AB, Canada,",
            "year": 2015
        },
        {
            "authors": [
                "Y. Huang",
                "Y. Zhang",
                "Z. Wu",
                "N. Li",
                "J. Chambers"
            ],
            "title": "A Novel Adaptive Kalman Filter with Inaccurate Process and Measurement Noise Covariance Matrices",
            "venue": "IEEE Trans. Autom. Control",
            "year": 2018
        },
        {
            "authors": [
                "R.M. Yashpal Singh"
            ],
            "title": "Relative Study of Measurement Noise Covariance R and Process Noise Covariance Q of the Kalman Filter in Estimation",
            "venue": "IOSR J. Electr. Electron. Eng",
            "year": 2015
        },
        {
            "authors": [
                "S.Y. Cho",
                "W.S. Choi"
            ],
            "title": "Robust Positioning Technique in Low-Cost DR/GPS for Land Navigation",
            "venue": "IEEE Trans. Instrum. Meas",
            "year": 2006
        },
        {
            "authors": [
                "X. Gao",
                "D. You",
                "S. Katayama"
            ],
            "title": "Seam Tracking Monitoring Based on Adaptive Kalman Filter Embedded Elman Neural Network During High-Power Fiber Laser Welding",
            "venue": "IEEE Trans. Ind. Electron",
            "year": 2012
        },
        {
            "authors": [
                "H. Qiusheng",
                "C. Wei",
                "Y. Xu"
            ],
            "title": "An Improved Adaptive Kalman Filtering Algorithm for balancing vehicle",
            "venue": "In Proceedings of the 2017 Chinese Automation Congress (CAC), Jinan, China,",
            "year": 2017
        },
        {
            "authors": [
                "V.A. Bavdekar",
                "A.P. Deshpande",
                "S.C. Patwardhan"
            ],
            "title": "Identification of process and measurement noise covariance for state and parameter estimation using extended Kalman filter",
            "venue": "J. Process Control",
            "year": 2011
        },
        {
            "authors": [
                "C. Hide",
                "T. Moore",
                "M. Smith"
            ],
            "title": "Adaptive Kalman Filtering for Low-cost INS/GPS",
            "venue": "J. Navig",
            "year": 2003
        },
        {
            "authors": [
                "H. Zhang",
                "Y.H. Chang",
                "H. Che"
            ],
            "title": "Measurement-based adaptive Kalman filtering algorithm for GPS/INS integrated navigation system",
            "venue": "J. Chin. Inert. Technol",
            "year": 2010
        },
        {
            "authors": [
                "B. Ge",
                "H. Zhang",
                "L. Jiang",
                "Z. Li",
                "M.M. Butt"
            ],
            "title": "Adaptive Unscented Kalman Filter for Target Tracking with Unknown Time-Varying Noise Covariance",
            "venue": "Sensors 2019,",
            "year": 2019
        },
        {
            "authors": [
                "B. Ge",
                "H. Zhang",
                "W. Fu",
                "J. Yang"
            ],
            "title": "Enhanced Redundant Measurement-Based Kalman Filter for Measurement Noise Covariance Estimation in INS/GNSS Integration",
            "venue": "Remote Sens. 2020,",
            "year": 2020
        },
        {
            "authors": [
                "R. Sun",
                "Z. Zhang",
                "Q. Cheng",
                "W.Y. Ochieng"
            ],
            "title": "Pseudorange error prediction for adaptive tightly coupled GNSS/IMU navigation in urban areas. GPS Solut",
            "year": 2021
        },
        {
            "authors": [
                "D. Ding",
                "K.F. He",
                "W.Q. Qian",
                "Q.-Y. Fan"
            ],
            "title": "A Bayesian Adaptive Unscented Kalman Filter for Aircraft Parameter and Noise Estimation",
            "venue": "J. Sens",
            "year": 2021
        },
        {
            "authors": [
                "X. Bao",
                "H. Chen",
                "J. Li"
            ],
            "title": "Adaptive Tracking Algorithm with Radar Position Errors and Measurement Noise Covariance Matrix",
            "venue": "In Proceedings of the 2021 33rd Chinese Control and Decision Conference (CCDC), Kunming, China,",
            "year": 2021
        },
        {
            "authors": [
                "T. Haarnoja",
                "A. Ajay",
                "S. Levine",
                "P. Abbeel"
            ],
            "title": "Backprop KF: Learning Discriminative Deterministic State Estimators",
            "venue": "In Proceedings of the 30th International Conference on Neural Information Processing Systems (NIPS 2016),",
            "year": 2016
        },
        {
            "authors": [
                "K. Liu",
                "K. Ok",
                "W. Vega-Brown",
                "N. Roy"
            ],
            "title": "Deep Inference for Covariance Estimation: Learning Gaussian Noise Models for State Estimation",
            "venue": "In Proceedings of the 2018 IEEE International Conference on Robotics and Automation (ICRA), Brisbane, Australia,",
            "year": 2018
        },
        {
            "authors": [
                "H. Coskun",
                "F. Achilles",
                "R. DiPietro",
                "N. Navab",
                "F. Tombari"
            ],
            "title": "Long Short-Term Memory Kalman Filters: Recurrent Neural Estimators for Pose Regularization",
            "venue": "In Proceedings of the IEEE International Conference on Computer Vision (ICCV), Venice, Italy,",
            "year": 2017
        },
        {
            "authors": [
                "X. Gao",
                "H. Luo",
                "B. Ning",
                "F. Zhao",
                "L. Bao",
                "Y. Gong",
                "Y. Xiao",
                "J. Jiang"
            ],
            "title": "RL-AKF: An Adaptive Kalman Filter Navigation Algorithm Based on Reinforcement Learning for Ground Vehicles",
            "year": 2020
        },
        {
            "authors": [
                "F. Wu",
                "H. Luo",
                "H. Jia",
                "F. Zhao",
                "Y. Xiao",
                "X. Gao"
            ],
            "title": "Predicting the Noise Covariance with a Multitask Learning Model for Kalman Filter-Based GNSS/INS Integrated Navigation",
            "venue": "IEEE Trans. Instrum. Meas",
            "year": 2021
        },
        {
            "authors": [
                "A. Noureldin",
                "T.B. Karamat",
                "J. Georgy"
            ],
            "title": "Global Positioning System. In Fundamentals of Inertial Navigation, Satellite-Based Positioning and Their Integration; Spring",
            "year": 2013
        },
        {
            "authors": [
                "P. Misra",
                "P. Enge"
            ],
            "title": "Global Positioning System: Signals, Measurements and Performance; Ganga-Jamuna Press: Lincolin",
            "venue": "IL, USA,",
            "year": 2001
        },
        {
            "authors": [
                "K.W. Chiang",
                "T.T. Duong",
                "J.K. Liao"
            ],
            "title": "The performance analysis of a real-time integrated INS/GPS vehicle navigation system with abnormal GPS measurement elimination",
            "venue": "Sensors",
            "year": 2013
        },
        {
            "authors": [
                "A. Gelb"
            ],
            "title": "Applied Optimal Estimation",
            "year": 1974
        },
        {
            "authors": [
                "P. Vincent",
                "H. Larochelle",
                "Y. Bengio",
                "P.-A. Manzagol"
            ],
            "title": "Extracting and composing robust features with denoising autoencoders",
            "venue": "In Proceedings of the 25th International Conference on Machine Learning(ICML), Helsinki, Finland,",
            "year": 2008
        },
        {
            "authors": [
                "S. Hochreiter",
                "J. Schmidhuber"
            ],
            "title": "Long short-term memory",
            "venue": "Neural Comput",
            "year": 1997
        },
        {
            "authors": [
                "S. Akhlaghi",
                "N. Zhou",
                "Z. Huang"
            ],
            "title": "Adaptive Adjustment of Noise Covariance in Kalman Filter for Dynamic State Estimation",
            "venue": "In Proceedings of the 2017 IEEE Power & Energy Society General Meeting, Chicago, IL, USA,",
            "year": 2017
        }
    ],
    "sections": [
        {
            "text": "Citation: Xu, H.; Luo, H.; Wu, Z.;\nWu, F.; Bao, L.; Zhao, F. Towards\nPredicting the Measurement Noise\nCovariance with a Transformer and\nResidual Denoising Autoencoder for\nGNSS/INS Tightly-Coupled\nIntegrated Navigation. Remote Sens.\n2022, 14, 1691. https://doi.org/\n10.3390/rs14071691\nAcademic Editor: Chung-yen Kuo\nReceived: 7 March 2022\nAccepted: 28 March 2022\nPublished: 31 March 2022\nPublisher\u2019s Note: MDPI stays neutral\nwith regard to jurisdictional claims in\npublished maps and institutional affil-\niations.\nCopyright: \u00a9 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed under the terms and\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nKeywords: tightly coupled integrated navigation; measurement noise estimation; transformer; adaptive Kalman filtering\n1. Introduction\nIn the GNSS/INS integrated system, INS is an autonomous navigation system that relies on airborne equipment to complete navigation tasks autonomously [1\u20133]. However, the accumulation of position errors over time leads to poor accuracy. GNSS can obtain stable solutions in an open-sky environment, but its accuracy is severely reduced in the urban canyon with high-rise buildings, inside tunnels and under dense tree canopies [4]. Therefore, combining the above two systems together can effectively leverage their respective advantages to form a navigation system with long-term stability, self-restraint, and high-frequency output [3\u20136]. Regarding the integration of GNSS/INS, the most common mode is the loosely coupled (LC) mode [7]. The implementation of LC mode is relatively simple, but in the case of GNSS it must be receiving more than four satellites. However, the tightly coupled (TC) method is to directly fuse the GNSS raw output observations with the INS output, so the tightly coupled mode can still provide GNSS signal updates when fewer than four satellites are received [8].\nRemote Sens. 2022, 14, 1691. https://doi.org/10.3390/rs14071691 https://www.mdpi.com/journal/remotesensing\nRemote Sens. 2022, 14, 1691 2 of 22\nThe TC integrated system can obtain better positioning accuracy in harsh environments. At this time, satellite signals may be blocked, making the statistical characteristics of measurement noise uncertain and time-varying. Inaccurate estimation of measurement noise covariance causes filter divergence [9]. A TC integration system uses the GNSS raw observation data (pseudorange and pseudorange rate measurements) as a reference to evaluate and correct the INS error [10]. For the measurement noise covariance in a tightly coupled integrated navigation system, traditional methods generally assume that it is a fixed a priori constant value, but it cannot truly represent the actual statistical characteristics of the measurement noise during actual operation. In actual navigation system applications, in order to be able to deal with the instability of the measurement noise covariance matrix [11], the adaptive Kalman filter (AKF) that can estimate R online should be used to ensure the positioning accuracy and continuity of the navigation results [12]. In recent years, deep learning domain knowledge has been widely used in natural language processing and computer vision [13]. These methods discover complex structures through specific backpropagation and error correction mechanisms to instruct the machine how to change its internal parameters for learning features. Because a neural network has an ability to learn data relationships, for this article a neural network algorithm was designed in the TC integrated system. The algorithm can automatically learn the measurement noise parameters online and make adaptive adjustments according to the actual environment, so that the Kalman filter can perform accurate position estimation. Conventionally, due to the inaccurate statistical characteristics of noise, the model cannot reflect the real physical process, so the observed values do not correspond to the model, which in turn leads to filter divergence [14]. In practical application scenarios, it is inaccurate to assume that the noise is fixed. Therefore, adaptively adjusting the statistical characteristics of noise for different actual environments is more in line with the navigation process and improves the positioning performance in challenging environments. For solving the problem of noise covariance estimation in the GNSS/INS integrated system, various adaptive adjustment methods have been developed in different scenarios [15]. Cho and Choi combined Sigma-point KF (SPKF) with a receding-horizon strategy to propose a new filtering scheme that is beneficial for reducing initial estimation error and temporal unknown bias [16]. Gao et al. [17] proposed a strategy of seam tracking monitoring, in which the Sage\u2013Husa AKF is given to estimate the statistical characteristics of noise, and the filter parameters are adjusted to achieve an adaptive ability in the case of noise changes. He et al. [18] proposed a method to estimate the covariance matrix of measurement noise using a simplified Sage\u2013Husa filter. Meng et al. [15] presented an adaptive unscented Kalman filter (UKF) with a noise statistic estimator to make up for some of the shortcomings of the standard UKF. Furthermore, covariance matching technology uses innovative covariance or residual covariance to reasonably estimate the covariance of the process noise and measurement noise at each sampling moment [19]. When the statistical characteristics of noise need to be estimated, using the IAE method to estimate the covariance reduces the navigation accuracy, and even causes a risk of filtering divergence [20]. In response to this problem, Zhang et al. [21] proposed an INS/GNSS integrated navigation system adaptive estimation (RMAE) method based on redundant measurements, which uses the INS solution as redundant measurements to estimate the measurement noise covariance matrix. Due to the advantages of this aspect, in order to solve the coupling problem of estimating the measurement value and the process noise covariance at the same time, Ge et al. [22] proposed a scheme combining the RMAE method with the estimation algorithm of process noise covariance. To improve the position accuracy and reliability, Ge et al. [23] proposed a strategy for the mitigation of GNSS measurement disturbances in which the time-varying covariance of measurement noise is estimated by RMAE and Burg methods according to the statistical characteristics of the difference sequences. Sun et al. [24] proposed a pseudorange error prediction method based on an ensemble bagged regression tree that updates the measurement noise covariance for tightly coupled GNSS/IMU navigation systems in urban\nRemote Sens. 2022, 14, 1691 3 of 22\nareas. Ding et al. [25] combined Bayesian inference methods with unscented Kalman filters to propose a new algorithm for estimating aerodynamic parameters and noise in aircraft dynamical systems. Bao et al. [26] established an adaptive maneuvering target-tracking method using the interactive multiple method (IMM) for maneuver identification, and, at the same time, introduced the Sage\u2013Husa adaptive filtering algorithm to estimate the measurement noise covariance in real time. Due to the powerful data representation capabilities of neural networks in computer vision and natural language processing, there have been some methods combining neural networks with KF to improve the positioning accuracy of INS/GNSS integrated navigation systems. Haarnoja et al. [27] designed a neural network suitable for state estimation by using covariance matrices to convey the expected degree of uncertainty in observations. Liu et al. [28] introduced deep inference for covariance estimation (DICE) to predict the covariance of a sensor measurement from raw sensor data. The model restricts covariance predictions to positive definite values using a deep convolutional neural network to learn a noise model of sensor measurements. Coskun et al. [29] proposed the LSTM Kalman filter (LSTM-KF), a new architecture which can learn the motion model and all noise parameters of the Kalman filter, thus allowing us to train our models with less data successfully. In the LC integrated navigation system, Gao et al. [30] introduced reinforcement learning to estimate the process noise covariance adaptively. The algorithm takes the navigation system as the environment, takes the negative value of the positioning error as the reward and uses the deep deterministic policy as the gradient to obtain the optimal estimation. Wu et al. [31] proposed an algorithm based on a multi-task learning model, which can estimate the processing noise covariance and measurement noise covariance of a Kalman filter simultaneously. We propose a transformer-based noise covariance prediction model, which exploits an attention mechanism to learn the uncertainty of current raw satellite observations, and combines it with a Kalman filter to adaptively adjust the measurement noise covariance. Before the data enters the transformer network model, we use the residual denoising autoencoder (RDAE) to filter the original data. This method can make the model obtain better generalization ability, and make the task of adaptive adjustment of measurement noise covariance better. We conducted extensive experiments on practical road test data to evaluate our proposed navigation algorithm. Experimental results indicate that our proposed method is superior to the traditional algorithm of adjusting the covariance matrix of measurement noise, and obtains the best performance in comparison with other networks. The remainder of this paper is organized as follows: Section 2 briefly introduces the INS/GNSS tightly coupled integrated system and our proposed algorithm; Section 3 demonstrates and presents an analysis of the algorithm based on actual road tests; Section 4 discusses the experimental results; and Section 5 presents the final conclusion.\n2. Materials and Methods\nIn this study, the tightly coupled navigation system was considered to have a higher performance than the loosely coupled navigation system. We first describe the standard tightly coupled integrated system [32], the block diagram of which is shown in Figure 1. As shown in Figure 1, the difference between pseudorange and pseudorange rate measurements from the GNSS and corresponding INS prediction values are fed into the KF to estimate the INS error. Then, the output result of the INS is corrected according to the correlation error to obtain the final navigation and positioning result.\nRemote Sens. 2022, 14, 1691 4 of 22e ote Sens. 2022, 14, x FOR PEER REVIEW 4 4\nRF Signal Processing\nIntegration Kalman Filter\nPseudorange Pseudorange rate\nComputer\nCorrelation & Tracking Loops\nMechanizationIMU\nGPS Receiver\nINS Ephemeris\nGPS Pseudorange and Pseudorange rate\nINS Pseudorange and Pseudorange rate\nINS Position, Velocity, Attitude\nIntegrated Navigation\nSolution\nPosition, Velocity, Attitude CorrectionsBias corrections\n+\n+\n-\n-\nFigure 1. A tightly coupled GNSS/INS integration architecture.\n2.1. Tightly Coupled Integration Dynamic Model The state transition equation of the inertial navigation system is as follows: \ud835\udeff\ud835\udc4b = \ud835\udc39 \ud835\udc4b + \ud835\udc3a \ud835\udf14 (1)\nwhere the state vector \ud835\udeff\ud835\udc4b = [\ud835\udeff\ud835\udc5f, \ud835\udeff\ud835\udc63, \ud835\udf11, \ud835\udc4f , \ud835\udc4f ] includes the position error The term \ud835\udc39 is the dynamic coefficient matrix of the INS error with the following\nformula:\n\ud835\udc39 = \u23a3\u23a2\u23a2\u23a2 \u23a2\u23a10 \u00d7 \ud835\udc39 0 \u00d70 \u00d7 0 \u00d7 \ud835\udc390 \u00d7 \ud835\udc39 0 \u00d7 0 \u00d7 0 \u00d70 \u00d7 \ud835\udc45\ud835\udc45 0 \u00d70 \u00d7 0 \u00d7 0 \u00d70 \u00d7 0 \u00d7 0 \u00d7 \ud835\udc39 0 \u00d70 \u00d7 \ud835\udc39 \u23a6\u23a5\u23a5 \u23a5\u23a5\u23a4 (2)\nwhere are the correlation matrices of the position, velocity and attitude error equations, respectively; the formula is as follows:\n\ud835\udc39 = 0 ( ) 0( ) 0 00 0 1 , \ud835\udc39 = 0 \ud835\udc53 \u2212\ud835\udc53\u2212\ud835\udc53 0 \ud835\udc53\ud835\udc53 \u2212\ud835\udc53 0 , \ud835\udc39 = \u23a3\u23a2\u23a2 \u23a2\u23a1 0 ( ) 0( ) 0 0 ( ) 0 1\u23a6\u23a5\u23a5 \u23a5\u23a4 (3) \ud835\udc45 is the rotation matrix from the b-frame to the l-frame; \ud835\udc39 \ud835\udc39 are the correlation matrices of the error models of the gyroscope and accelerometer, which conform to a first-order Markov process.\nThe state transition equation of the GNSS is as follows: \ud835\udeff\ud835\udc4b = \ud835\udc39 \ud835\udc4b + \ud835\udc3a \ud835\udf14 (4) where the state vector of the GNSS model \ud835\udeff\ud835\udc4b = [\u2206\ud835\udc61 \u2206\ud835\udc61 ] includes the receiver clock error \u2206\ud835\udc61 and clock drift \u2206\ud835\udc61 . The coefficient matrix of GNSS error is \ud835\udc39 = 0 10 0 (5)\nThe error models of the INS and GNSS are combined as follows: \ud835\udeff\ud835\udc4b = \ud835\udc39\ud835\udeff\ud835\udc4b + \ud835\udc3a\ud835\udf14 (6)\ud835\udeff\ud835\udc4b\ud835\udeff\ud835\udc4b = \ud835\udc39 00 \ud835\udc39 \ud835\udeff\ud835\udc4b\ud835\udeff\ud835\udc4b + \ud835\udc3a\ud835\udc3a \ud835\udf14 (7)\nFigure 1. A tightly coupled GNSS/INS integration architecture.\n. . i tl le I te ratio a ic odel\nst t tr siti ti f t e i ertial avigation syste is as follo s:\n\u03b4 .\nXI = FI XI + GI\u03c9I (1)\nwhere the state vector \u03b4 . X = [ \u03b4r, \u03b4v, \u03d5, ba, bg ] includes the position error\nThe term FI is the dynamic coefficient matrix of the INS error with the following formula:\nFI =  03\u00d73 Fr 03\u00d73 03\u00d73 03\u00d73 Fv 03\u00d73 F\u03b5 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 Rlb Rlb 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\nF\u03c9 03\u00d73 03\u00d73 Ff\n (2)\nhere Fr, Fv, F\u03b5 are the correlation matrices of the position, velocity and attitude error ti , res ecti el ; t e for ula is as fol o s:\nFr =  0 1 (RM+h) 0\n1 (RM+h) cos \u03d5 0 0 0 0 1\n, Fv =  0 fu \u2212 fn\u2212 fu 0 fe\nfn \u2212 fe 0\n, Fr  0\n1 (RM+h) 0 \u22121 (RN+h) 0 0 \u2212 tan \u03d5 (RN+h) 0 1  ( ) Rlb is the rotation matrix from the b-frame to the l-frame; F\u03c9 Ff are the correlation matrices of the error models of the gyroscope and accelerometer, which conform to a first-order Markov process.\nThe state transition equation of the GNSS is as follows:\n\u03b4 .\nXG = FGXG + GG\u03c9G ( ) where the state vector of the GNSS model \u03b4XG = [ \u2206tr \u2206 . tr ] includes the receiver clock error \u2206tr and clock drift \u2206 . tr. The coefficient matrix of GNSS error is\nFG = [\n0 1 0 0\n] (5)\nThe error models of the INS and GNSS are combined as follows:\n\u03b4 . X = F\u03b4X + G\u03c9 (6)\nRemote Sens. 2022, 14, 1691 5 of 22\n[ \u03b4 . XI\n\u03b4 .\nXG\n] = [ FI 0 0 FG ][ \u03b4XI \u03b4XG ] + [ GI GG ] \u03c9 (7)\n2.2. Tightly Coupled Integration Measurement Model\nThe error model of measurement is expressed as\n\u03b4Zk = Hk\u03b4Xk + \u03b5k (8)\nwhere Hk is the measurement matrix, which defines the change rule of the observation vector with the state, and the formula is as follows:\nHk = H\u03c1M\u00d73 0M\u00d73 0M\u00d79 0M\u00d73 H . \u03c1 M\u00d73 0M\u00d79\n\u22121M\u00d71 0M\u00d71 0M\u00d71 \u22121M\u00d71\nH\u03c1M\u00d73 and H . \u03c1 M\u00d73 are converted from unit line of sight vectors. The measurement information is composed of the difference between the observed values of the pseudorange and pseudorange rate obtained by the GNSS and the predicted value calculated by the INS.\n\u03b4Z = [ \u03b4Z\u03c1 \u03b4Z .\u03c1 ] = [ \u03c1INS \u2212 \u03c1GPS. \u03c1INS \u2212 . \u03c1GPS ] (9)\n2.2.1. Pseudorange Measurements\nSince we need to propagate the error state in the KF process, the pseudorange is written in the following format:\n\u03b4Z\u03c1 = \u03c1INS \u2212 \u03c1GPS (10)\nThe pseudorange obtained by the GNSS receiver is modeled [33] as the following formula:\n\u03c1mGPS = r m + c\u2206tr \u2212 c\u2206ts + cIm + cTm + \u03b5m\u03c1 (11)\nwhere rm is the geometric distance, \u2206tr is the receiver\u2019s clock offset, \u2206ts is the satellite\u2019s clock offset, c is the speed of light, Im is the ionospheric delay, Tm is the tropospheric delay and \u03b5m\u03c1 are other errors. The pseudorange calculated from the inertial navigation output and satellite ephemeris information is as follows [34]:\n\u03c1mINS = \u221a (xINS \u2212 xm)2 + (yINS \u2212 ym)2 + (zINS \u2212 zm)2 (12)\nwhere XINS = [xINS, yINS, zINS] T is the output of INS and Xm = [xm, ym, zm]T is the mth satellite\u2019s position.\n2.2.2. Pseudorange Rate Measurements\nThe formula for the measurement value of the pseudorange rate is as follows:\n\u03b4Z .\u03c1 = . \u03c1INS \u2212 . \u03c1GPS (13)\nThe formula for calculating the Doppler shift is as follows:\nDm = [(vm \u2212 v)\u00b7Im]L\nc (14)\nRemote Sens. 2022, 14, 1691 6 of 22\nwhere vm = [ vmx , vmy , vmz ]T is the velocity of the satellite, v = [ vx, vy, vz ]T is the true receiver velocity, L is the satellite\u2019s transmission frequency, Im is the line of sight unit vector from the satellite to the GNSS receiver.\nGiven the Doppler value, the pseudorange rate can be computed as\n. \u03c1 m GPS = \u2212 Dmc L\n(15)\nThe formula for calculating an estimate of the pseudorange rate by the INS is as follows:\n. \u03c1 m INS = I m x (vx,I \u2212 vmx ) + Imy ( vy,I \u2212 vmy ) + Imz (vz,I \u2212 vmz ) (16)\nwhere vx,I , vy,I , vz,I are the receiver\u2019s velocities in the e-frame estimated by the INS.\n2.3. Navigation Fusion with EKF\nThe data output results of the INS and GNSS systems can be fused by EKF. The solution of EKF is a iterative procedure with time update step given by [35] as follows{\nx\u2212k = \u03a6k,k\u22121x + k\u22121\nP\u2212k = \u03a6k,k\u22121P + k\u22121\u03a6 T k,k\u22121 + Qk\u22121\n(17)\nwhere x+k\u22121 is the state estimation at time k\u2212 1 and P + k\u22121 is the estimation covariance. x \u2212 k and P\u2212k denote the state prediction value and prediction covariance value at time k. \u03a6k,k\u22121 is the state transition matrix. Qk\u22121 is the process noise covariance matrix.\nThe measurement updating step is provided as Kk = P\u2212k H T k ( HkP\u2212k H T k + Rk )\u22121 x+k = x \u2212 k + Kk ( \u03b4Zk \u2212 Hkx\u2212k ) P+k = (I \u2212 Kk Hk)P \u2212 k\n(18)\nwhere \u03b4Zk denotes the measurement vector and Hk is the measurement matrix. Kk denotes the Kalman gain and Rk is the noise covariance matrix of measurement.\n2.4. Proposed Methodology\nIn this section, we introduce the framework of the algorithm, which is based on a tightly coupled integration framework, by applying a neural network approach to adjust the measurement covariance matrix R adaptively, as Figure 2 shows. First, for the deep residual denoising auto-encoder, the unsupervised method is used for training, and the signal reconstruction strategy is used to filter the sensor measurement noise; we subsequently use it to extract valuable features for later tasks. Then, we utilize a transformer network to accurately adjust the covariance matrix of the measurement noise in the tightly coupled system adaptively, and our proposed RT algorithm obtains high-precision and high-continuity positioning in challenging and complex environments. Next, we present the details of these modules.\n2.4.1. Residual Denoising Auto-Encoder\nConsidering that the raw data from satellite ephemeris inevitably contain various noises, we use the proposed RDAE neural network for feature extraction, which fundamentally combines the advantages of Resnet and AE, and eliminates the relevant noise in the original sensor data through the method of signal reconstruction. Firstly, the data feature loss phenomenon is simulated by randomly removing features from the original input matrix using some probability distribution. The network uses this missing data to calculate and iterate the error between the refined data and the original. In this way, the network learns the corrupted data. There are two reasons why this corrupted data is very significant: For one, the weight noise trained on corrupted data is relatively small by\nRemote Sens. 2022, 14, 1691 7 of 22\ncomparison with non-corrupted data training. Second, the corrupted data, to some extent, reduces the gap between the training data and the test data. The robustness of the weight trained in this way is improved [36]. As illustrated by Figure 3, the encoder and decoder of RDAE contains Resnet rather than the fully connected layers.\nRemote Sens. 2022, 14, x FOR PEER REVIEW 6 of 24 \ud835\udf0c = \ud835\udc3c \ud835\udc63 , \u2212 \ud835\udc63 + \ud835\udc3c \ud835\udc63 , \u2212 \ud835\udc63 + \ud835\udc3c \ud835\udc63 , \u2212 \ud835\udc63 (16) where \ud835\udc63 , , \ud835\udc63 , , \ud835\udc63 , are the receiver\u2019s velocities in the e-frame estimated by the INS. 2.3. Navigation Fusion with EKF The data output results of the INS and GNSS systems can be fused by EKF. The solution of EKF is a iterative procedure with time update step given by [35] as follows \ud835\udc65 = \u03a6 , \ud835\udc65\ud835\udc43 = \u03a6 , \ud835\udc43 \u03a6 , + \ud835\udc44 (17) where \ud835\udc65 is the state estimation at time \ud835\udc58 \u2212 1 and \ud835\udc43 is the estimation covariance. \ud835\udc65 and \ud835\udc43 denote the state prediction value and prediction covariance value at time \ud835\udc58. \u03a6 , is the state transition matrix. \ud835\udc44 is the process noise covariance matrix. The measurement updating step is provided as \ud835\udc3e = \ud835\udc43 \ud835\udc3b (\ud835\udc3b \ud835\udc43 \ud835\udc3b + \ud835\udc45 )\ud835\udc65 = \ud835\udc65 + \ud835\udc3e (\ud835\udeff\ud835\udc4d \u2212 \ud835\udc3b \ud835\udc65 )\ud835\udc43 = (\ud835\udc3c \u2212 \ud835\udc3e \ud835\udc3b )\ud835\udc43 (18) where \ud835\udeff\ud835\udc4d denotes the measurement vector and \ud835\udc3b is the measurement matrix. \ud835\udc3e denotes the Kalman gain and \ud835\udc45 is the noise covariance matrix of measurement. 2.4. Proposed Methodology\nIn this section, we introduce the framework of the algorithm, which is based on a tightly coupled integration framework, by applying a neural network approach to adjust the measurement covariance matrix R adaptively, as Figure 2 shows. First, for the deep residual denoising auto-encoder, the unsupervised method is used for training, and the signal reconstruction strategy is used to filter the sensor measurement noise; we subsequently use it to extract valuable features for later tasks. Then, we utilize a transformer network to accurately adjust the covariance matrix of the measurement noise in the tightly coupled syst m adaptiv ly, and our proposed RT algorithm obtains high-precision and high-conti uity positioning in challenging and complex environm nts. N xt, we present the details of the e modules.\nIMU De-noising Mechanization\nGPS Receiver\nPseudorange and Pseudorange-rate\ncomputer\nP,V,AEphemeris Data\n+\n_ Kalman Filter\nTransformer Ephemeris Data\n_\n+\nBias corrections Position,Velocity,Attitude Corrections\nIntegrated Navigation\nSolution\nRDAE\nFigure 2. The flowchart of our proposed TC integration of GNSS/INS system.\n2.4.1. Residual Denoising Auto-Encoder\nFigure 2. The flowchart f our pr posed TC integration of GNSS/INS system.\nRemote Sens. 2022, 14, x FOR PEER REVIEW 7 of 24\nConsidering that the raw data from satellite ephemeris inevitably contain various noises, we use the proposed RDAE neural network for feature extraction, which fundamentally combines the advantages of Resnet and AE, and eliminates the relevant noise in the original sensor data through the method of signal reconstruction. Firstly, the data feature loss phenomenon is simulated by randomly removing features from the original input matrix using some probability distribution. The network uses this missing data to calculate and iterate the error between the refined data and the original. In this way, the network learns the corrupted data. There are two reasons why this corrupted data is very significant: For one, the weight noise trained on corrupted data is relatively small by comparison with non-corrupted data training. Second, the c rrupted data, to some extent, reduces the gap between the training data and the test data. The robustness of the weight trained in this way is improved [36]. As illustrated by Figure 3, the encoder and decoder\nof RDAE contains Resnet rather than the fully connected layers.\nOriginal inputs Damaged inputs\nEncoder Decoder\nResnet Reconstructed outputs\nFigure 3. The overview of our proposed RDAE network. The composition of the raw input data at time \ud835\udc61 is \ud835\udc65(\ud835\udc61) =\ud835\udc5f (\ud835\udc61), \ud835\udc63 (\ud835\udc61), \u2206\ud835\udc61 (\ud835\udc61), \ud835\udc34(\ud835\udc61), \ud835\udc3b(\ud835\udc61) (satellite position, satellite speed, receiver clock bias, azimuth, elevation).\nGiven the noisy training samples, \ud835\udc4b = \ud835\udc65(\ud835\udc61) and the corresponding corrupted\nsamples are \ud835\udc4b = \ud835\udc65(\ud835\udc61) (i.e., dropout), where \ud835\udc47\ud835\udc47 is the final time of the training data.\nThe network is trained by minimizing the error between the training data and the output data with the following formula: \ud835\udc3f \ud835\udc4b, \ud835\udc4b = 12 \ud835\udc4b \u2212 \ud835\udc4b (19)\nNext, we perform supervised fine-tuning of the network, then perform this \u201cdenoising\u201d process, and the final feature map of the encoder is applied to the following network tasks.\n2.4.2. Measurement Noise Estimation Based on Transformer In this section, we propose a new algorithm based on a transformer, which can adaptively estimate the measurement noise covariance of GNSS/INS in tightly coupled integrated navigation. When RTK-fixed solutions are available from GNSS signals, as shown in Figure 2, the algorithm we propose is suitable for the training mode. Firstly, the covariance matrix of measurement noise is initialized, and then the network takes \ud835\udc5f , \ud835\udc63 , \u2206\ud835\udc61 , \ud835\udc34, \ud835\udc3b as the inputs of the RT. A Kalman filter is used to optimize the inertial navigation error estimation by integrating the inertial navigation output and GNSS measurement data. The inertial navigation output is corrected using the optimized inertial navigation error estimation results to obtain the estimation results of positioning, velocity and attitude. Regarding the parameter selection of the transformer, the data dimension of the encoder and decoder is 32, which corresponds to the number of GNSSs at the same time; the number of attention\nGive the noisy training samples, X = {x(t)}Tt=1 and the corresponding corrupted\nsamples are X\u0303 = {x\u0303(t)}Tt=1 (i.e., dropout), where T is the final time of the training data. The network is traine by minimizing the error between the traini g dat nd the output data with the following formula:\nL ( X, X\u0303 ) =\n1 2 \u2016X\u2212 X\u0303\u201622 (19)\nNext, we perform supervised fine-tuning of the network, then perform this \u201cdenoising\u201d process, and the final feature map of the encoder is applied to the following network tasks.\n2.4.2. Measurement Noise Estimation Based on Transformer\nIn this section, we propose a new algorithm based on a transformer, which can adaptively estimate the measurement noise covariance of GNSS/INS in tightly coupled i tegrated navigation.\nRemote Sens. 2022, 14, 1691 8 of 22\nWhen RTK-fixed solutions are available from GNSS signals, as shown in Figure 2, the algorithm we propose is suitable for the training mode. Firstly, the covariance matrix of measurement noise is initialized, and then the network takes rs, vs, \u2206tr, A, H as the inputs of the RT. A Kalman filter is used to optimize the inertial navigation error estimation by integrating the inertial navigation output and GNSS measurement data. The inertial navigation output is corrected using the optimized inertial navigation error estimation results to obtain the estimation results of positioning, velocity and attitude. Regarding the parameter selection of the transformer, the data dimension of the encoder and decoder is 32, which corresponds to the number of GNSSs at the same time; the number of attention heads is 8; the number of encoder and decoder layers is 6; the linear layer dimension is 2048. The input data of the network are the position, velocity, clock error, azimuth and elevation of each satellite at each moment. We believe that the observation noise level of the satellite at this moment can be deduced by analyzing the characteristics of these data. In addition, the feature is extracted by the attention analysis mechanism of the data. The length of the vector is 32, which corresponds to the respective data of 32 satellites at the same time. The output sequence of the network has a length of 2 and a dimension of 32, representing the observed noise levels of the pseudorange and pseudorange rate of the 32 satellites, respectively. The network output is used to adjust the R matrix, and the subsequent process of the Kalman filter is also incorporated into the network gradient propagation chain; that is, the other intermediate quantities of the Kalman filter are passed into the network as parameters. Finally, the final position is used for loss calculation and backpropagation. When the car is running in harsh environments, such as viaducts, tree-lined roads or urban canyons, the signal received by the GNSS is relatively weak and the noise is relatively large. At this time, the accurate measurement of the covariance estimation matrix R has a great influence on the results of GNSS/INS integrated navigation. In this study, a transformer network was used to adjust the measurement covariance estimation matrix R adaptively. We compared and analyzed by calculating the maximum, minimum, mean and variance of the positioning error. The relevant details are shown in Algorithm 1.\nAlgorithm 1: Estimation Algorithm for Measurement Noise Covariance.\nInput: Ephemeris data. Output: Positioning result. 1: Procedure: RT-AKF training; 2: Initialize R0, and the weight of the network; 3: For training episode i = 1, . . . N; 4: Predict the pseudorange \u03c1INS and pseudorange rate . \u03c1INS using the INS output and satellite ephemeris information; 5: Operate RDAE, denoising the ephemeris data; 6: Train the transformer to predict the R matrix with the inputs of rs, vs, \u03b4tr, A, H; 7: Update the KF with the predicted R; 8: End for; 9: End procedure.\nLately, RNN and LSTM [37] have been widely used to process time series data, but their training is iterative and serial, and must wait for the current state to be processed before processing the next state, resulting in a high training cost. In this paper, we introduce the transformer to predict the measurement noise covariance matrix R. Compared with RNN and LSTM, our transformer model [38] replaces the sequence-aligned recurrent architecture with a self-attention mechanism, and the training is parallel\u2014that is, all states are trained at the same time\u2014which greatly increases the computational efficiency. The architectural elements of the transformer are shown in Figure 4.\nRemote Sens. 2022, 14, 1691 9 of 22Remote Sens. 2022, 14, x FOR PEER REVIEW 9 of 24\nFigure 4. The transformer model\u2019s architecture.\nThe architecture of the transformer network model is composed of two parts: the encoder and the decoder. The encoder is the process that encodes the input into a mathematical representation of a hidden layer, which the decoder then maps to a sequence. The left side of the image above is one layer of our encoder. The encoder has six layers of this structure. Similarly, the right side of the image is one layer of our decoder. The decoder has six layers of this structure. The output results through the decoder first pass through a linear layer and then enter the softmax layer. Each encoder consists of a multi-head selfattention mechanism and a position feedforward network. Similar to the encoder, each decoder has a multi-head self-attention mechanism, a multi-head contextual attention mechanism and a position feedforward network. The main component of the transformer network model is the unit of the attention mechanism. The transformer encodes the input data as a set of n-dimensional key-value pairs (K,V). The transformer adopts the scaled dot-product attention mode, as show below: \ud835\udc34\ud835\udc61\ud835\udc61\ud835\udc52\ud835\udc5b\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b(\ud835\udc44, \ud835\udc3e, \ud835\udc49) = \ud835\udc60\ud835\udc5c\ud835\udc53\ud835\udc61\ud835\udc5a\ud835\udc4e\ud835\udc65 \ud835\udc44\ud835\udc3e\u221a\ud835\udc5b \ud835\udc49 (20)\nThe transformer model is extensively used in the NLP (natural language processing) fields, such as machine translation, text summarization, speech recognition, etc. Therefore, in order to process text information, the embedding and positional encoding layer are added before the input. On this basis, our network structure has been simplified, and these two layers are directly removed to adapt to our network input, thus speeding up the operation of the network. The network takes the satellite position, satellite speed, receiver clock error, satellite azimuth and elevation as network inputs, and the output of the network is a vector \ud835\udefc, which adaptively adjusts the measurement covariance R, and the formula is defined as follows: \ud835\udc45 = \ud835\udc52 \u2219 \ud835\udc45 (21)\nWe adopted the mean absolute error (MAE) loss function as our objective function, as follows:\nFigure 4. The transfor er odel\u2019s architecture.\nt tr i f t arts:\nt ti f , ic t r t t . .\nt t . i il l , t i t i f t i i l f . s si l rs f t is str t r . t t r s lts t r t r first ss t r\na li ear layer and then enter the softmax layer. Each encoder consists of a multi-head self-attention mechanism and a position feedforward network. Similar to the encoder, each decoder has a multi-head self-attention mechanism, a multi-head contextual attention\nechanis and a position feedfor ard net ork. The ain co ponent of the transfor er network odel is the unit of the attention mechanism. The transformer encodes the input data as a set of n-dimensional key-value pairs (K, V). The transformer adopts the scaled dot-product attention mode, as show below:\nAttention(Q, K, V) = so f tmax (\nQKT\u221a n\n) V (20)\nThe transformer model is extensively used in the NLP (natural language processing) fields, such as machine translation, text summarization, speech recognition, etc. Therefore, in order to process text information, the e bedding and positional encoding layer are added before the input. On this basis, our network structure has been simplified, and these two layers are directly removed to adapt to our network input, thus spee ing up the operation of the network. The network takes the satellite position, satellite speed, receiver clock error, satellite azimuth a d elevation as n twork input , and the output of the netwo k is a v ct \u03b1, which\ndaptively adjusts the measurement covariance R, and the f rmula is defined s foll ws:\nR\u2032 = e\u03b1\u00b7R (21)\nWe adopted the mean absolute error (MAE) loss function as our objective function, as follows:\nLoss = 1 n\nn\n\u2211 i=1\n\u2223\u2223\u03bb\u2032i \u2212 \u03bbi\u2223\u2223 (22)\nRemote Sens. 2022, 14, 1691 10 of 22\nwhere \u03bb\u2032 and \u03bb represent the location coordinates predicted by the network and the real location coordinates respectively. The reference ground truth position is obtained with higher-precision integrated equipment.\n3. Results 3.1. Equipment Installation and Data Collection\nIn order to evaluate the performance of the RT-AKF algorithm when the GNSS signal is unstable, data were collected on the roads of Beijing, China for experimental testing on September 27, 2020. We collected a large number of IMU and GNSS data from ground vehicles equipped with M39 equipment in a typical challenging urban environment. A schematic diagram of the installation of the data collection equipment is shown in Figure 5. M39 is an INS/GNSS integrated system developed by Wuhan MAPP Space-Time Navigation Technology Co. Ltd. (Wuhan, China) with a high-precision GNSS board and a high-precision MEMS gyroscope. The instruments and specifications are given in Table 1. Remote Sens. 2022, 14, x FOR PEER REVIEW 11 of 24\nFigure 5. The equipment installation diagram.\n3.2. Experimental Setup and Trajectory\nIn order to verify the effectiveness of our proposed algorithm, we selected several data segments from the vehicle-mounted data set at different times of two days for experiments. As shown in Figure 6, the trajectory of dataset 0927 was divided into the following two parts: firstly, we took the data section from 12,000 s to 14,500 s as the training set, marked in black; secondly, we took the data section from 14,500s to 17,000 s as the test set, marked in red. The trajectory of dataset 1215, indicated by the red line, was applied as the testing dataset. Meanwhile, in dataset 0927, we selected a long road segment, #1, with a duration of 500s to evaluate and test the performance of different neural networks, which included avenues, viaducts and other complex scenes. Otherwise, four particularly complex scenarios (#2, #3, #4 and #5), marked with green circle, were intentionally selected to evaluate the effectiveness of the algorithm. Road segment #2 was a complex scene where only one or two satellites were received, the quality of the satellite signal was not good and the noise contained was large, resulting in large errors. Road segment #3 was an urban canyon, surrounded by many tall buildings, which may affect GNSS signal reception. Road segment #4 was the tree-lined road section, where tall trees may increase the error of the GNSS signal. Road segment #5 was the viaduct part. The car turned several times from top to bottom, which could well reflect the navigation characteristics in this special scene. From Table 2, we can clearly see the start and end time of each complex road section, the duration of each road section and the actual scenes of these road sections. In dataset 1215, we also picked up two segments, #6 and #7, for conducting experiments; these two segments were the mainly urban canyon environments, surrounded by many high-rise buildings, which may block satellite signals. Through experiments on different experimental datasets, we found that the proposed algorithm was still effective, indicating that the algorithm has good robustness.\nFigure 5. The equip ent installation diagra .\nTable 1. Instruments and Specifications.\nSensors Parameters Accuracy\nM39\nGyro in-run bias stability 8\u25e6/h Gyro angle random walk 0.12\u25e6/sqrt(h) Gyro range \u00b1100\u25e6/s ACC in-run bias stability 0.2 mg\nACC velocity random walk 0.09 m/s/sqrt(h) ACC range \u00b15 g Frequency 200 Hz\nGNSS Position 1 m\nFrequency 1 Hz\nRemote Sens. 2022, 14, 1691 11 of 22\n3.2. Experimental Setup and Trajectory\nIn order to verify the effectiveness of our proposed algorithm, we selected several data segments from the vehicle-mounted data set at different times of two days for experiments. As shown in Figure 6, the trajectory of dataset 0927 was divided into the following two parts: firstly, we took the data section from 12,000 s to 14,500 s as the training set, marked in black; secondly, we took the data section from 14,500s to 17,000 s as the test set, marked in red. The trajectory of dataset 1215, indicated by the red line, was applied as the testing dataset. Meanwhile, in dataset 0927, we selected a long road segment, #1, with a duration of 500s to evaluate and test the performance of different neural networks, which included avenues, viaducts and other complex scenes. Otherwise, four particularly complex scenarios (#2, #3, #4 and #5), marked with green circle, were intentionally selected to evaluate the effectiveness of the algorithm. Road segment #2 was a complex scene where only one or two satellites were received, the quality of the satellite signal was not good and the noise contained was large, resulting in large errors. Road segment #3 was an urban canyon, surrounded by many tall buildings, which may affect GNSS signal reception. Road segment #4 was the tree-lined road section, where tall trees may increase the error of the GNSS signal. Road segment #5 was the viaduct part. The car turned several times from top to bottom, which could well reflect the navigation characteristics in this special scene. From Table 2, we can clearly see the start and end time of each complex road section, the duration of each road section and the actual scenes of these road sections. In dataset 1215, we also picked up two segments, #6 and #7, for conducting experiments; these two segments were the mainly urban canyon environments, surrounded by many high-rise buildings, which may block satellite signals. Through experiments on different experimental datasets, we found that the proposed algorithm was still effective, indicating that the algorithm has good robustness. Remote Sens. 2022, 14, x FOR PEER REVIEW 12 of 24 Tabl 2. Seven Data Segments of Complex Scenarios. Data Segment Time from Start to End for Segment Length of Data Segment (s) Complex Scenarios Dataset 0927 #1 15,500~16,000 500 Long road segment with avenues, viaducts #2 15,000~15,100 100 Poor satellite signal quality #3 16,800~16,900 100 Urban canyon #4 15,500~15,600 100 Foliage-covered areas #5 15,800~15,900 100 Viaducts with continuous turn Dataset 1215 #6 547,000~547,200 200 Urban canyon with low speed #7 548,100~548,200 100 Urban canyon\nFigure 6. The trajectory of the road experiment in dataset 0927 and dataset 1215.\nThe implementation of the entire algorithm was implemented using the Pytorch1.7.1 library. As shown in Figure 7, we selected a 500 s road segment from the test data set and calculated its statistical positioning error. In this experiment, the dropout probability was set to 0.5, the learning rate was set to 0.0001, the epochs were set to 200, the layer was set to six, the number of heads for multi-head attention was eight and the optimization algorithm was Adam.\nFigure 6. The trajectory of the road experiment in dataset 0927 and dataset 1215.\nRemote Sens. 2022, 14, 1691 12 of 22\nThe implementation of the entire algorithm was implemented using the Pytorch1.7.1 library. As shown in Figure 7, we selected a 500 s road segment from the test data set and calculated its statistical positioning error. In this experiment, the dropout probability was set to 0.5, the learning rate was set to 0.0001, the epochs were set to 200, the layer was set to six, the number of heads for multi-head attention was eight and the optimization algorithm was Adam. Remote Sens. 2022, 14, x FOR PEER REVIEW 13 of 24\nFigure 7. The statistical positioning errors with different hyper-parameters. These include (a) position error with different dimensions of the feedforward layer; (b) position error with different number of heads; (c) position error with different layers.\n3.3. Contrastive Experiments with Different Network Models We applied different network models to tightly coupled combined navigation to compare the effect of network models on navigation and positioning results. Four network models performed the practical road data: (1). CNN: CNN mainly extracts local features of data through convolution operations,\nthen classifies, recognizes, predicts or makes decisions based on features. In this study, we used CNN to propose useful features from satellite ephemeris data to predict the measurement noise covariance matrix R.\n(2). LSTM: The LSTM model is a special kind of RNN, which can solve the short-term dependency bottleneck of RNN by introducing the gate mechanism and cell state. Satellite ephemeris information is fed into the network. (3). Transformer: The details of the transformer part are as described in the fourth part above. (4). Transformer + RDAE(RT): The method we proposed in this paper first enters the RDAE part for denoising processing, then feeds into the transformer network model. We selected the experimental road segment #1 of total testing data in Figure 6 for about 500 s to conduct a comparative test of different network models. As shown in Figure 6, the road segment contains some special complex scenarios, such as boulevards, viaducts, etc. Figure 8 shows the position error comparison of different network models, and it can be seen that the error obtained using the RT algorithm was the smallest. The use of\nFigure 7. The statistical positioning errors with different hyper-parameters. These include (a) position error with different dimensions of the feedforward layer; (b) position error with different number of heads; (c) position error with different layers.\nRemote Sens. 2022, 14, 1691 13 of 22\n3.3. Contrastive Experiments with Different Network Models\nWe applied different network models to tightly coupled combined navigation to compare the effect of network models on navigation and positioning results. Four network models performed the practical road data:\n(1). CNN: CNN mainly extracts local features of data through convolution operations, then classifies, recognizes, predicts or makes decisions based on features. In this study, we used CNN to propose useful features from satellite ephemeris data to predict the measurement noise covariance matrix R. (2). LSTM: The LSTM model is a special kind of RNN, which can solve the short-term dependency bottleneck of RNN by introducing the gate mechanism and cell state. Satellite ephemeris information is fed into the network. (3). Transformer: The details of the transformer part are as described in the fourth part above. (4). Transformer + RDAE(RT): The method we proposed in this paper first enters the RDAE part for denoising processing, then feeds into the transformer network model.\nWe selected the experimental road segment #1 of total testing data in Figure 6 for about 500 s to conduct a comparative test of different network models. As shown in Figure 6, the road segment contains some special complex scenarios, such as boulevards, viaducts, etc. Figure 8 shows the position error comparison of different network models, and it can be seen that the error obtained using the RT algorithm was the smallest. The use of RDAE for denoising did have a certain effect compared with Transformer, making it easier to keep the error within a small range for a long time. The position error obtained by the LSTM model was higher than that of the Transformer model. It was highly possible for the CNN model to have large individual position errors. Remote Sens. 2022, 14, x FOR PEER REVIEW 14 of 24 RDAE for denoising did have a certain effect compared with Transformer, making it easier to keep the error within a small range for a long time. The position error obtained by the LSTM model was higher than that of the Transformer model. It was highly possible for the CNN model to have large individual position errors.\n3.4. Evaluation of the Computational Cost of the Network Models The complexity of the network model seriously affects the efficiency of the network model. If the time complexity is too high, the training and prediction of the model will take a lot of time, and the idea and prediction model cannot be quickly verified. If the space complexity is too high, the model will have too many parameters, which can easily lead to overfitting. To calculate the complexity of different network models, we evaluated the computational cost of our proposed algorithm on a computer equipped with 1 GPU (NVDIA GeForce GTX 1060), Intel(R) Core (TM) i7-7700HQ CPU (2.80 GHz) and 8 GB RAM. We list the parameters, training time and prediction time of all the above comparison methods in Table 3. Since the training time of RDAE refers to the time spent in the pretraining phase, we only show the time spent in the RT method. It can be viewed from the table that although RT spent more training time and prediction time than CNN and LSTM, it achieved higher position accuracy performance. Now, the training of an algorithm can be carried out on cloud servers, and considering the increasingly powerful functions of AI chips, future research can be carried out on embedded platforms.\n3.5. Experimental Comparison of Different Methods The effectiveness of our proposed RT-AKF was verified by comparing it with the results of three traditional methods.\ni r 8. siti errors of G SS/ sti t by different neural net orks.\n3.4. Evaluation of the Co putational Cost of the et ork odels\nThe co plexity of the net ork odel seriously affects the efficiency of the net ork odel. If the ti e co plexity is too high, the training and prediction of the odel will take a lot of time, and the idea and prediction model cannot be quickly verified. If the space complexity is too high, the model will have too many parameters, which can easily lead to overfitting. To calculate the complexity of different network models, we evaluated the computational cost of our proposed algorithm on a computer equipped with 1 GPU (NVDIA GeForce GTX 1060), Intel(R) Core (TM) i7-7700HQ CPU (2.80 GHz) and 8 GB RAM. We list the parameters, training time and prediction time of all the above comparison methods in Table 3. Since the training time of RDAE refers to the time spent in the pre-\nRemote Sens. 2022, 14, 1691 14 of 22\ntraining phase, we only show the time spent in the RT method. It can be viewed from the table that although RT spent more training time and prediction time than CNN and LSTM, it achieved higher position accuracy performance. Now, the training of an algorithm can be carried out on cloud servers, and considering the increasingly powerful functions of AI chips, future research can be carried out on embedded platforms.\nThe effectiveness of our proposed RT-AKF was verified by comparing it with the results of three traditional methods.\n(1) RT-AKF: Our proposed method, which uses RDAE to de-noise the original data and a transformer to adaptively estimate the covariance matrix of the measurement noise. (2) C-KF: The Kalman filter directly defines the measured noise covariance as a constant. (3) E-AKF: The Kalman filter method for adaptive estimation of measurement noise covariance using elevation angle. (4) I-AKF [39]: The Kalman filter method for adaptive estimation of measurement noise\ncovariance using innovation.\nFrom the testing dataset part of dataset 0927, we selected four road sections with a length of 100 s for experimental verification. To compare the generalization ability of our algorithm on different datasets, we also selected two sections of road data segment with durations of 200 s and 100 s from the training dataset 1215 as experimental tests. We introduced the MAX (maximum error), MIN (minimum error), \u00b5 (mean error) and \u03c32 (variance of error) metrics to compare and analyze the positioning errors of the models, as Tables 4\u20139 show. In order to better compare and analyze different algorithms intuitively, we have drawn the position error diagram and accuracy comparison diagram of different algorithms, as shown in the following figures.\nRemote Sens. 2022, 14, 1691 15 of 22\nRoad segment #2 is a complex scene where only one or two satellites are received; therefore, the position error will be relatively large. From the experimental results in Figures 9 and 10, we can indicate that our proposed RT-AKF method performed the best compared with other traditional methods. The I-AKF method had the worst performance: the maximum position error even reached 112.08 m, and the average error exceeded 50 m, as shown in Table 4. The reason for the failure of the I-AKF method may be due to the poor quality of the satellite signal, so adaptively adjusting the noise covariance through innovation becomes more inaccurate, so this method fails. Our RT-AKF method had an average error of only 3.03 m and a minimum error of only 0.03 m, which was completely better than the other three traditional methods. Road segment #3 was an urban canyon, which may affect GNSS signal reception. As Figures 11 and 12 show, it can be observed that the position error in the middle section was generally higher than that in other sections. It may be that the satellite signal was blocked at this time, so the method based on I-AKF had the largest error at this time: the largest even reached 14 m. As shown in Table 5, compared with other methods, our proposed method RT-AKF obtained the smallest position error, with an average error of 1.54 m.\nRemote Sens. 2022, 14, 1691 16 of 22\nRemote Sens. 2022, 14, x FOR PEER REVIEW 16 of 24 Strategy Position Error (m) MAX MIN \u00b5 \u03c32 C-KF 6.11 2.49 4.74 0.71 E-KF 6.02 2.39 4.79 0.64 I-AKF 7.89 1.70 5.75 0.64 RT-AKF 4.74 1.47 3.36 0.58 Table 9. Position Error Comparison Using Different Algorithm in Segment #7. Strategy Position Error (m) MAX MIN \u00b5 \u03c32 C-KF 4.46 1.34 2.43 0.70 E-KF 4.43 1.45 2.41 0.68 I-AKF 7.73 0.91 2.56 2.24 RT-AKF 2.82 0.69 1.98 0.37\nRoad segment #2 is a complex scene where only one or two satellites are received; therefore, the position error will be relatively large. From the experimental results in Figures 9 and 10, we can indicate that our proposed RT-AKF method performed the best compared with other traditional methods. The I-AKF method had the worst performance: the maximum position error even reached 112.08 m, and the average error exceeded 50 m, as shown in Table 4. The reason for the failure of the I-AKF method may be due to the poor quality of the satellite signal, so adaptively adjusting the noise covariance through innovation becomes more inaccurate, so this method fails. Our RT-AKF method had an average error of only 3.03 m and a minimum error of only 0.03 m, which was completely better than the other three traditional methods.\nFigure 10. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #2.\nRoad segment #3 was an urban canyon, which may affect GNSS signal reception. As Figures 11 and 12 show, it can be observed that the position error in the middle section was generally higher than that in other sections. It may be that the satellite signal was blocked at this time, so the method based on I-AKF had the largest error at this time: the largest even reached 14 m. As shown in Table 5, compared with other methods, our proposed method RT-AKF obtained the smallest position error, with an average error of 1.54 m.\nFigure 11. Accuracy comparison by different methods in segment #3.\n. iti i rr r of SS\nFigure 10. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #2.\nRoad segment #3 was an urban canyon, which may affect GNSS signal reception. As Figures 11 and 12 show, it can be observed that the position error in the middle section was generally higher than that in other sections. It may be that the satellite signal was blocked at this time, so the method based on I-AKF had the largest error at this time: the largest even reached 14 m. As shown in Table 5, compared with other methods, our proposed method RT-AKF obtained the smallest position error, with an average error of 1.54\nm.\nFigure 11. Accuracy comparison by different methods in segment #3. Figure 11. ccuracy co parison by different ethods in segment #3.\nRemote Sens. 2022, 14, 1691 17 of 22 Remote Sens. 2022, 14, x FOR PEER REVIEW 18 of 24\nFigure 12. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #3.\nRoad segment #4 was the tree-lined road section, where tall trees may increase the error of the GNSS signal. Figure 13 demonstrates that the positioning accuracy with 67% confidence using the RT-AKF algorithm was better than that using the C-KF and the E-KF algorithm, and it was also better than that using the I-AKF algorithm. In spite of the fact that the maximum error obtained by the I-AKF method was larger than that of other methods, the mean error as not the largest. The mean and variance of the error obtained by CKF were both the largest, indicating that the position error obtained by this method fluctuates greatly and is more unstable, as shown in Figure 14 and Table 6.\nFigure 13. Accuracy comparison by different methods in segment #4.\nig re 12. The positioning errors of GNSS/ i iff r t et s i seg ent #3.\ns t tre -li r s cti , t ll trees a i creas t e err r f t e SS sig al. i t t t t t iti i c fidence sing t e T-AKF algorith as bet er than that using the - F a t e - l rit , i as also be ter than that using the I-AKF algorithm. In spite of the fact that the maximum error obtained by the I-AKF method was larger than that of other methods, the mean error as not the largest. The mean nd variance of the error obtained by C-KF were both the largest, indicating t at the position error obtained by this method fluctuates greatly and is more unstable, as shown in Figure 14 and Table 6.\nRemote Sens. 2022, 14, x FOR PEER REVIEW 18 of 24\nFigure 12. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #3.\nRoad segment #4 was the tree-lined road section, where tall trees may increase the error of the GNSS signal. Figure 13 demonstrates that the positioning accuracy with 67% confidence using the RT-AKF algorithm was better than that using the C-KF and the E-KF algorithm, and it was also better than that using the I-AKF algorithm. In spite of the fact that the maximum error obtained by the I-AKF method was larger than that of other methods, the mean error as not the largest. The mean and variance of the error obtained by CKF were both the largest, indicating that the position error obtained by this method fluctuates greatly and is more unstable, as shown in Figure 14 and Table 6.\nRoad segment #5 was the viaduct part. The car rotated several times from top to bottom on the viaduct, which fully reflects the occlusion of the satellite signals in this scene. As Table 7 shows, the maximum and minimum values of the errors obtained were not very different under the comparison of the four methods, but the mean and variance obtained by our proposed method RT-AKF as the smallest. From the experimental results in Figures 15 and 16, the C-KF, E-KF and I-AKF methods achieved similar accuracy at 67% confidence compared with our proposed RT-AKF method; however, the positioning error of I-AKF method at 90% confidence diverged to about 2.8 m. In addition, the maximum position error of the C-KF method at certain moments even reached more than 4 m, indicating that the stability of other methods is poor.\nRemote Sens. 2022, 14, 1691 18 of 22Remote Sens. 2022, 14, x FOR PEER REVIEW 19 of 24\nFigure 14. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #4.\nRoad segment #5 was the viaduct part. The car rotated several times from top to bottom on the viaduct, which fully reflects the occlusion of the satellite signals in this scene. As Table 7 shows, the maximum and minimum values of the errors obtained were not very different under the comparison of the four methods, but the mean and variance obtained by our proposed method RT-AKF as the smallest. From the experimental results in Figures 15 and 16, the C-KF, E-KF and I-AKF methods achieved similar accuracy at 67% confidence compared with our proposed RT-AKF method; however, the positioning error of I-AKF method at 90% confidence diverged to about 2.8 m. In addition, the maximum position error of the C-KF method at certain moments even reached more than 4 m, indicating that the stability of other methods is poor.\nFigure 15. Accuracy comparison by different methods in segment #5.\nf I ti tl l .\nRemote Sens. 2022, 14, x FOR PEER REVIEW 19 of 24\nFigure 14. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #4.\nRoad segment #5 was the viaduct part. The car rotated several times from top to bottom on the viaduct, which fully reflects the occlusion of the satellite signals in this scene. As Table 7 shows, the maximum and minimum values of the errors obtained were not very different under the comparison of the four methods, but the mean and variance obtained by our proposed method RT-AKF as the smallest. From the experimental results in Figures 15 and 16, the C-KF, E-KF and I-AKF methods achieved similar accuracy at 67% confidence compared with our proposed RT-AKF method; however, the positioning error of I-AKF method at 90% confidence diverged to about 2.8 m. In addition, the maximum position error of the C-KF method at certain moments even reached more than 4 m, indi-\ncating that the stability of other methods is poor.\nFigure 15. Accuracy comparison by different methods in segment #5. Fig re 15. ccuracy co parison by iffer t t s i s t .\nRemote Sens. 2022, 14, x FOR PEER REVIEW 20 of 24\nFigure 16. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #5.\nRoad segment #6 was an urban canyon section with a duration of 200 s, and the speed of the car was slower. As Table 8 shows, the maximum and minimum values of the positioning errors were smaller than those obtained by the other three traditional methods, and the average error reached 3.36 m, which was lower than other traditional methods. To infer from the results of the experiment in Figures 17 and 18, we recognize that our proposed RT-AKF method performed the best compared with other traditional methods in the whole road section. Due to the poor signal quality of satellites, the I-AKF method had the worst performance.\nFigure 17. Accuracy comparison by different methods in segment #6.\ni re 16. e siti i err rs f INS tightly coupled integrated by different et o s i segment #5.\nRemote Sens. 2022, 14, 1691 19 of 22\nRoad segment #6 was an urban canyon section with a duration of 200 s, and the speed of the car was slower. As Table 8 shows, the maximum and minimum values of the positioning errors were smaller than those obtained by the other three traditional methods, and the average error reached 3.36 m, which was lower than other traditional methods. To infer from the results of the experiment in Figures 17 and 18, we recognize that our proposed RT-AKF method performed the best compared with other traditional methods in the whole road section. Due to the poor signal quality of satellites, the I-AKF method had the worst performance.\nRemote Sens. 2022, 14, x FOR PEER REVIEW 20 of 24\nFigure 16. The positioning errors of GNSS/INS tightly coupled integrated by different methods in\nsegment #5.\nRoad segment #6 was an urban canyon section with a duration of 200 s, and the speed of the car was slower. As Table 8 shows, the maximum and minimum values of the positioning errors were smaller than those obtained by the other three traditional methods, and the average error reached 3.36 m, which was lower than other traditional methods. To infer from the results of the experiment in Figures 17 and 18, we recognize that our proposed RT-AKF method performed the best compared with other traditional methods in the whole road section. Due to the poor signal quality of satellites, the I-AKF method had the worst performance.\nFigure 18. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #6.\nRoad segment #7 was a straight road shaded by greenery. The mean error obtained by our proposed RT-AKF method was the smallest among the four methods, as Table 9 shows. It can be viewed from Figures 19 and 20 that the overall performance of our method was better than the other three traditional methods: the maximum error as only 2.82 m, which was much smaller than the maximum error of other methods. Road segment #6 and #7 indicate that the effectiveness of our proposed method is verified on different datasets.\nFigure 19. Accuracy comparison by different methods in segment #7.\nFigure 18. The positioning errors of GNS /I ti tl c l i te r t b different ethods in seg ent #6.\nseg ent #7 was a straight road shaded by green ry. The mean erro obtained by our proposed RT-AKF method was the mallest mong the four methods, as Table 9 shows. It can be viewed from Figures 19 and 20 that the overall performance of our method was better than the other three traditional me ho s: the maximum error s only 2.82 m, which was uch smaller than the maximum error of other methods. Road segment #6 and #7 indicate that the effectiven ss of our prop sed method is verified on different datasets.\nRemote Sens. 2022, 14, 1691 20 of 22\nRemote Sens. 2022, 14, x FOR PEER REVIEW 21 of 24 Figure 18. The positioning errors of GNSS/INS tightly coupled integrated by different methods in segment #6.\nRoad segment #7 was a straight road shaded by greenery. The mean error obtained by our proposed RT-AKF method was the smallest among the four methods, as Table 9 shows. It can be viewed from Figures 19 and 20 that the overall performance of our method was better than the other three traditional methods: the maximum error as only 2.82 m, which was much smaller than the maximum error of other methods. Road segment #6 and #7 indicate that the effectiveness of our proposed method is verified on different datasets.\n4. Discussion From the comparison of the above experimental results, we recognize that our proposed method RT-AKF could achieve relatively good performance in various complex scenarios compared with the other three traditional methods. In some extremely complex scenarios, the traditional methods essentially failed, and the error reached tens of meters or more. However, the proposed method RT-AKF could control the mean error around 3m, which is enough to show that our method has strong performance robustness. The experiments on the new testing dataset prove that our proposed method has strong adaptability. Arranging the data on the backend server could reduce the training cost of the algorithm. With the continuous increase of artificial intelligence computing resources in embedded platforms, we believe that in the near future the training and prediction operations of deep learning models could be calculated in a local integrated system.\n5. Conclusions In this article, in order to reflect changes in the environment dynamically, we propose an algorithm based on a transformer and denoising RDAE to estimate the covariance of measurement noise adaptively. For the traditional method, compared with the estimation covariance of the measurement noise in the tightly coupled navigation, it was found that the positioning accuracy obtained by using the novel algorithm proposed by us was higher. The algorithm we proposed could be used on emergency rescue vehicles, road cleaning vehicles, fire-fighting vehicles and medical vehicles. Experiments performed on datasets with challenging environment and comparison with traditional covariance estimation strategies of measurement noise indicated that the RT-AKF method we proposed could achieve better performance in various challenging and complex scenarios, especially when the satellite signal quality was very poor. When the error obtained by other traditional methods reached tens of meters, our method could control the average error to about 3 m, indicating the strong robustness of our proposed method. Another test on a new dataset also confirms that our proposed method has reasonable robustness and adaptability.\nAuthor Contributions: H.X. and F.W. designed the experiments; Z.W. and L.B. performed the experiments; H.X. wrote the paper; F.Z. and H.L. reviewed the paper. All authors have read and agreed to the published version of the manuscript.\n. iti i rr r of SS seg ent #7.\n4. iscussion\nFro the co parison of the above experi ental results, e recognize that our proposed method RT-AKF could achieve relatively good performance in various complex scenarios compared with the other three traditional methods. In some extremely complex scenarios, the traditional methods essentially failed, and the error reached tens of meters or more. However, the proposed method RT-AKF could control the mean error around 3m, which is enough to show that our method has strong performance robustness. The experiments on the new testing dataset prove that our proposed method has strong adaptability. Arranging the data on the backend server could reduce the training cost of the algorithm. With the continuous increase of artificial intelligence computing resources in embedded platforms, we believe that in the near future the training and prediction operations of deep learning models could be calculated in a local integrated system.\n5. Conclusions\nIn this article, in order to reflect changes in the environment dynamically, we propose an algorithm based on a transformer and denoising RDAE to estimate the covariance of measurement noise adaptively. For the traditional method, compared with the estimation covariance of the measurement noise in the tightly coupled navigation, it was found that\nRemote Sens. 2022, 14, 1691 21 of 22\nthe positioning accuracy obtained by using the novel algorithm proposed by us was higher. The algorithm we proposed could be used on emergency rescue vehicles, road cleaning vehicles, fire-fighting vehicles and medical vehicles. Experiments performed on datasets with challenging environment and comparison with traditional covariance estimation strategies of measurement noise indicated that the RT-AKF method we proposed could achieve better performance in various challenging and complex scenarios, especially when the satellite signal quality was very poor. When the error obtained by other traditional methods reached tens of meters, our method could control the average error to about 3 m, indicating the strong robustness of our proposed method. Another test on a new dataset also confirms that our proposed method has reasonable robustness and adaptability.\nAuthor Contributions: H.X. and F.W. designed the experiments; Z.W. and L.B. performed the experiments; H.X. wrote the paper; F.Z. and H.L. reviewed the paper. All authors have read and agreed to the published version of the manuscript.\nFunding: This research was funded by the National Key Research and Development Program under grant 2018YFB0505200, by the Action Plan Project of the Beijing University of Posts and Telecommunications supported by the Fundamental Research Funds for the Central Universities under grant 2019XD-A06, by the National Natural Science Foundation of China under grant 61872046 and 62002026, by the Joint Research Fund for Beijing Natural Science Foundation and Haidian Original Innovation under grant L192004, by the Beijing Natural Science Foundation under grant 4212024 and 4222034, by the Key Research and Development Project from Hebei Province under grant 19210404D and 21310102D, by the Science and Technology Plan Project of Inner Mongolia Autonomous Region under grant 2019GG328, and the Open Project of the Beijing Key Laboratory of Mobile Computing and Pervasive Devices.\nConflicts of Interest: The authors declare no conflict of interest.\nReferences 1. Titterton, D.; Weston, J. Strapdown Inertial Navigation Technology; Institution of Engineering and Technology: London, UK, 2004. 2. GNSS/INS Integration. In Global Positioning Systems, Inertial Navigation, and Integration; John Wiley and Sons: Hoboken, NJ, USA, 2007; pp. 382\u2013424. [CrossRef] 3. Noureldin, A.; Karamat, T.B.; Eberts, M.D.; El-Shafie, A. Performance Enhancement of MEMS-Based INS/GPS Integration for Low-Cost Navigation Applications. IEEE Trans. Veh. Technol. 2009, 58, 1077\u20131096. [CrossRef] 4. Skog, I.; Handel, P. In-Car Positioning and Navigation Technologies\u2014A Survey. IEEE Trans. Intell. Transp. Syst. 2009, 10, 4\u201321. [CrossRef] 5. Liu, H.; Nassar, S.; El-Sheimy, N. Two-Filter Smoothing for Accurate INS/GPS Land-Vehicle Navigation in Urban Centers. IEEE Trans. Veh. Technol. 2010, 59, 4256\u20134267. [CrossRef] 6. Groves, P.D. Principles of GNSS, Inertial, and Multisensor Integrated Navigation Systems\u2014Second Edition. J. Navig. 2013, 67, 191\u2013192. [CrossRef] 7. Grejner-Brzezinska, D.A.; Toth, C.K.; Sun, H.; Wang, X.; Rizos, C. A Robust Solution to High-Accuracy Geolocation: Quadruple Integration of GPS, IMU, Pseudolite, and Terrestrial Laser Scanning. IEEE Trans. Instrum. Meas. 2011, 60, 3694\u20133708. [CrossRef] 8. Hu, G.; Gao, S.; Zhong, Y. A derivative UKF for tightly coupled INS/GPS integrated navigation. ISA Trans 2015, 56, 135\u2013144. [CrossRef] [PubMed] 9. Han, H.; Wang, J.; Du, M. GPS/BDS/INS tightly coupled integration accuracy improvement using an improved adaptive interacting multiple model with classified measurement update. Chin. J. Aeronaut. 2018, 31, 556\u2013566. [CrossRef] 10. Peyraud, S.; Betaille, D.; Renault, S.; Ortiz, M.; Mougel, F.; Meizel, D.; Peyret, F. About Non-Line-Of-Sight satellite detection and exclusion in a 3D map-aided localization algorithm. Sensors 2013, 13, 829\u2013847. [CrossRef] 11. Dhital, A.; Lachapelle, G.; Bancroft, J.B. Bancroft. Improving the Reliability of Personal Navigation Devices in Harsh Environments.\nIn Proceedings of the 2015 International Conference on Indoor Positioning and Indoor Navigation (IPIN), Banff, AB, Canada, 13\u201316 October 2015; pp. 1\u20137. [CrossRef]\n12. Huang, Y.; Zhang, Y.; Wu, Z.; Li, N.; Chambers, J. A Novel Adaptive Kalman Filter with Inaccurate Process and Measurement Noise Covariance Matrices. IEEE Trans. Autom. Control 2018, 63, 594\u2013601. [CrossRef] 13. LeCun, Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436\u2013444. [CrossRef] 14. Yashpal Singh, R.M. Relative Study of Measurement Noise Covariance R and Process Noise Covariance Q of the Kalman Filter in Estimation. IOSR J. Electr. Electron. Eng. 2015, 10, 112\u2013116. [CrossRef] 15. Meng, Y.; Gao, S.; Zhong, Y.; Hu, G.; Subic, A. Covariance matching based adaptive unscented Kalman filter for direct filtering in\nINS/GNSS integration. Acta Astronaut. 2016, 120, 171\u2013181. [CrossRef]\nRemote Sens. 2022, 14, 1691 22 of 22\n16. Cho, S.Y.; Choi, W.S. Robust Positioning Technique in Low-Cost DR/GPS for Land Navigation. IEEE Trans. Instrum. Meas. 2006, 55, 1132\u20131142. [CrossRef] 17. Gao, X.; You, D.; Katayama, S. Seam Tracking Monitoring Based on Adaptive Kalman Filter Embedded Elman Neural Network During High-Power Fiber Laser Welding. IEEE Trans. Ind. Electron. 2012, 59, 4315\u20134325. [CrossRef] 18. Qiusheng., H.; Wei, C.; Xu., Y. An Improved Adaptive Kalman Filtering Algorithm for balancing vehicle. In Proceedings of the 2017 Chinese Automation Congress (CAC), Jinan, China, 20\u201322 October 2017; pp. 5721\u20135725. 19. Bavdekar, V.A.; Deshpande, A.P.; Patwardhan, S.C. Identification of process and measurement noise covariance for state and parameter estimation using extended Kalman filter. J. Process Control 2011, 21, 585\u2013601. [CrossRef] 20. Hide, C.; Moore, T.; Smith, M. Adaptive Kalman Filtering for Low-cost INS/GPS. J. Navig. 2003, 56, 143\u2013152. [CrossRef] 21. Zhang, H.; Chang, Y.H.; Che, H. Measurement-based adaptive Kalman filtering algorithm for GPS/INS integrated navigation system. J. Chin. Inert. Technol. 2010, 18, 696\u2013701. [CrossRef] 22. Ge, B.; Zhang, H.; Jiang, L.; Li, Z.; Butt, M.M. Adaptive Unscented Kalman Filter for Target Tracking with Unknown Time-Varying Noise Covariance. Sensors 2019, 19, 1371. [CrossRef] 23. Ge, B.; Zhang, H.; Fu, W.; Yang, J. Enhanced Redundant Measurement-Based Kalman Filter for Measurement Noise Covariance Estimation in INS/GNSS Integration. Remote Sens. 2020, 12, 3500. [CrossRef] 24. Sun, R.; Zhang, Z.; Cheng, Q.; Ochieng, W.Y. Pseudorange error prediction for adaptive tightly coupled GNSS/IMU navigation in urban areas. GPS Solut. 2021, 26, 28. [CrossRef] 25. Ding, D.; He, K.F.; Qian, W.Q.; Fan, Q.-Y. A Bayesian Adaptive Unscented Kalman Filter for Aircraft Parameter and Noise Estimation. J. Sens. 2021, 2021, 9002643. [CrossRef] 26. Bao, X.; Chen, H.; Li, J. Adaptive Tracking Algorithm with Radar Position Errors and Measurement Noise Covariance Matrix. In Proceedings of the 2021 33rd Chinese Control and Decision Conference (CCDC), Kunming, China, 22\u201324 May 2021; pp. 414\u2013419. 27. Haarnoja, T.; Ajay, A.; Levine, S.; Abbeel, P. Backprop KF: Learning Discriminative Deterministic State Estimators. In Pro-\nceedings of the 30th International Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain, 5\u201310 December 2016.\n28. Liu, K.; Ok, K.; Vega-Brown, W.; Roy, N. Deep Inference for Covariance Estimation: Learning Gaussian Noise Models for State Estimation. In Proceedings of the 2018 IEEE International Conference on Robotics and Automation (ICRA), Brisbane, Australia, 21\u201325 May 2018; pp. 1436\u20131443. 29. Coskun., H.; Achilles., F.; DiPietro., R.; Navab, N.; Tombari, F. Long Short-Term Memory Kalman Filters: Recurrent Neural Estimators for Pose Regularization. In Proceedings of the IEEE International Conference on Computer Vision (ICCV), Venice, Italy, 22\u201329 October 2017; pp. 5525\u20135533. 30. Gao, X.; Luo, H.; Ning, B.; Zhao, F.; Bao, L.; Gong, Y.; Xiao, Y.; Jiang, J. RL-AKF: An Adaptive Kalman Filter Navigation Algorithm Based on Reinforcement Learning for Ground Vehicles. Remote Sens. 2020, 12, 1704. [CrossRef] 31. Wu, F.; Luo, H.; Jia, H.; Zhao, F.; Xiao, Y.; Gao, X. Predicting the Noise Covariance with a Multitask Learning Model for Kalman Filter-Based GNSS/INS Integrated Navigation. IEEE Trans. Instrum. Meas. 2021, 70, 2504013. [CrossRef] 32. Noureldin, A.; Karamat., T.B.; Georgy, J. Global Positioning System. In Fundamentals of Inertial Navigation, Satellite-Based Positioning and Their Integration; Spring: Berlin/Heidelberg, Germany, 2013. [CrossRef] 33. Misra, P.; Enge, P. Global Positioning System: Signals, Measurements and Performance; Ganga-Jamuna Press: Lincolin, IL, USA, 2001. 34. Chiang, K.W.; Duong, T.T.; Liao, J.K. The performance analysis of a real-time integrated INS/GPS vehicle navigation system with abnormal GPS measurement elimination. Sensors 2013, 13, 10599\u201310622. [CrossRef] [PubMed] 35. Gelb, A. Applied Optimal Estimation; MIT Press: Cambridge, MA, USA, 1974. 36. Vincent, P.; Larochelle, H.; Bengio, Y.; Manzagol, P.-A. Extracting and composing robust features with denoising autoencoders. In Proceedings of the 25th International Conference on Machine Learning(ICML), Helsinki, Finland, 5\u20139 July 2008; pp. 1096\u20131103. 37. Hochreiter, S.; Schmidhuber, J. Long short-term memory. Neural Comput. 1997, 9, 1735\u20131780. [CrossRef] [PubMed] 38. Vaswani, A.; Shazeer, N.; Parmar, N.; Uszkoreit, J.; Jones, L.; Gomez, A.N.; Kaiser, \u0141.; Polosukhin, I. Attention Is All You Need. Adv. Neural Inf. Processing Syst. 2017, 30, 5998\u20136008. 39. Akhlaghi, S.; Zhou, N.; Huang, Z. Adaptive Adjustment of Noise Covariance in Kalman Filter for Dynamic State Estimation. In\nProceedings of the 2017 IEEE Power & Energy Society General Meeting, Chicago, IL, USA, 16\u201320 July 2017; pp. 1\u20135."
        }
    ],
    "title": "Towards Predicting the Measurement Noise Covariance with a Transformer and Residual Denoising Autoencoder for GNSS/INS Tightly-Coupled Integrated Navigation",
    "year": 2022
}