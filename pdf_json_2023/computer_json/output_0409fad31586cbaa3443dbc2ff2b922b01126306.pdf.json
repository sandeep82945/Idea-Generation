{
    "abstractText": "This paper considers the main challenges for all components engaged in the driving task suggested by the automation of road vehicles or autonomous cars. Numerous autonomous vehicle developers often invest an important amount of time and effort in fine-tuning and measuring the route tracking to obtain reliable tracking performance over a wide range of autonomous vehicle speed and road curvature diversities. However, a number of automated vehicles were not considered for fault-tolerant trajectory tracking methods. Motivated by this, the current research study of the Differential Lyapunov Stochastic and Decision Defect Tree Learning (DLS-DFTL) method is proposed to handle fault detection and course tracking for autonomous vehicle problems. Initially, Differential Lyapunov Stochastic Optimal Control (SOC) with customizable Z-matrices is to precisely design the path tracking for a particular target vehicle while successfully managing the noise and fault issues that arise from the localization and path planning. With the autonomous vehicle\u2019s low ceilings, a recommendation trajectory generation model is created to support such a safety justification. Then, to detect an unexpected deviation caused by a fault, a fault detection technique known as Decision Fault Tree Learning (DFTL) is built. The DLS-DFTL method can be used to find and locate problems in expansive, intricate communication networks. We conducted various tests and showed the applicability of DFTL. By offering some analysis of the experimental outcomes, the suggested method produces significant accuracy. In addition to a thorough study that compares the results to state-of-the-art techniques, simulation was also used to quantify the rate and time of defect detection. The experimental result shows that the proposed DLS-DFTL enhances the fault detection rate (38%), reduces the loss rate (14%), and has a faster fault detection time (24%) than the state of art methods.",
    "authors": [
        {
            "affiliations": [],
            "name": "S. Subash Chandra Bose"
        },
        {
            "affiliations": [],
            "name": "Badria Sulaiman Alfurhood"
        },
        {
            "affiliations": [],
            "name": "Francesco Flammini"
        },
        {
            "affiliations": [],
            "name": "Rajesh Natarajan"
        },
        {
            "affiliations": [],
            "name": "Sheela Shankarappa Jaya"
        }
    ],
    "id": "SP:b382e812999bdc25f88f78ca80b7423a15565700",
    "references": [
        {
            "authors": [
                "I. Raouf",
                "A. Khan",
                "S. Khalid",
                "M. Sohail",
                "M.M. Azad",
                "H.S. Kim"
            ],
            "title": "Sensor-Based Prognostic Health Management of Advanced Driver Assistance System for Autonomous Vehicles: A Recent Survey",
            "year": 2022
        },
        {
            "authors": [
                "H. Qi",
                "Y. Shi",
                "S. Li",
                "Y. Tian",
                "D.-L. Yu",
                "J.B. Gom"
            ],
            "title": "Fault tolerant control for nonlinear systems using sliding mode and adaptive neural network estimator",
            "venue": "In Soft Computing; Springer: Berlin/Heidelberg,",
            "year": 2020
        },
        {
            "authors": [
                "L. Chen",
                "W. Xiao",
                "P. Li",
                "Q. Zhou"
            ],
            "title": "Fault-tolerant Control for Uncertain Vehicle Active Steering Systems with Time-delay and Actuator Fault",
            "venue": "Int. J. Control. Autom. Syst",
            "year": 2019
        },
        {
            "authors": [
                "R. Liu",
                "M. Wei",
                "N. Sang",
                "J. Wei"
            ],
            "title": "Research on Curved Path Tracking Control for Four-Wheel Steering Vehicle considering Road Adhesion Coefficient",
            "venue": "Math. Probl. Eng",
            "year": 2020
        },
        {
            "authors": [
                "F. Lin",
                "Y. Zhang",
                "Y. Zhao",
                "G. Yin",
                "H. Zhang",
                "K. Wang"
            ],
            "title": "Trajectory Tracking of Autonomous Vehicle with the Fusion of DYC and Longitudinal\u2013Lateral Control. Chin",
            "venue": "J. Mech. Eng",
            "year": 2019
        },
        {
            "authors": [
                "N.H. Amer",
                "H. Zamzuri",
                "K. Hudha",
                "Z.A. Kadir"
            ],
            "title": "Modelling and Control Strategies in Path Tracking Control for Autonomous Ground Vehicles: A Review of State of the Art and Challenges",
            "year": 2016
        },
        {
            "authors": [
                "D. Elliott",
                "W. Keen",
                "L. Miao"
            ],
            "title": "Recent advances in connected and automated vehicles",
            "venue": "J. Traffic Transp. Eng. 2019,",
            "year": 2019
        },
        {
            "authors": [
                "S.A. Bagloee",
                "M. Tavana",
                "M. Asadi",
                "T. Oliver"
            ],
            "title": "Autonomous vehicles: Challenges, opportunities, and future implications for transportation policies",
            "venue": "J. Mod. Transp. 2016,",
            "year": 2016
        },
        {
            "authors": [
                "P.S. Pratama",
                "A.V. Gulakari",
                "Y.D. Setiawan",
                "D.H. Kim",
                "H.K. Kim",
                "S.B. Kim"
            ],
            "title": "Trajectory Tracking and Fault Detection Algorithm for Automatic Guided Vehicle Based on Multiple Positioning Modules",
            "venue": "Int. J. Control. Autom. Syst",
            "year": 2016
        },
        {
            "authors": [
                "A. Fekiha",
                "S. Seelema"
            ],
            "title": "Effective fault-tolerant control paradigm for path tracking in autonomous vehicles",
            "venue": "Syst. Sci. Control. Eng. 2015,",
            "year": 2015
        },
        {
            "authors": [
                "J. Kim",
                "Y. Choi",
                "M. Park",
                "S. Lee",
                "S. Kim"
            ],
            "title": "Multi-sensor-based detection and tracking of moving objects for relative position estimation in autonomous driving conditions",
            "venue": "J. Supercomput",
            "year": 2019
        },
        {
            "authors": [
                "U. Lee",
                "J. Jung",
                "S. Jung",
                "D.H. Shim"
            ],
            "title": "Development of a Self-Driving Car that can handle the adverse weather",
            "venue": "Int. J. Automot. Technol",
            "year": 2018
        },
        {
            "authors": [
                "C. Chen",
                "M. Shu",
                "Y. Wang",
                "R. Liu"
            ],
            "title": "Robust H\u2018 Control for Path Tracking of Network-Based Autonomous Vehicles",
            "venue": "Math. Probl. Eng",
            "year": 2020
        },
        {
            "authors": [
                "E. Yurtsever",
                "J. Lambert",
                "A. Carballo",
                "K. Takeda"
            ],
            "title": "A Survey of Autonomous Driving: Common Practices and Emerging Technologies",
            "venue": "IEEE Access 2020,",
            "year": 2020
        },
        {
            "authors": [
                "M. Fu",
                "J. Ni",
                "X. Li",
                "J. Hu"
            ],
            "title": "Path Tracking for Autonomous Race Car Based on G-G Diagram",
            "venue": "Int. J. Automot. Technol",
            "year": 2017
        },
        {
            "authors": [
                "N.H. Amer",
                "H. Zamzuri",
                "K. Hudha",
                "V.R. Aparow",
                "Z.A. Kadir",
                "A.F.Z. Abidin"
            ],
            "title": "Path tracking controller of an autonomous armoured vehicle using modified Stanley controller optimized with particle swarm optimization",
            "venue": "J. Braz. Soc. Mech. Sci. Eng",
            "year": 2018
        },
        {
            "authors": [
                "H.-G. Park",
                "K.-K. Ahn",
                "M.-K. Park",
                "S.-H. Lee"
            ],
            "title": "Study on Robust Lateral Controller for Differential GPSBased Autonomous Vehicles",
            "venue": "Int. J. Precis. Eng. Manuf",
            "year": 2018
        },
        {
            "authors": [
                "J. Cai",
                "H. Jiang",
                "L. Chen",
                "J. Liu",
                "Y. Cai",
                "J. Wang"
            ],
            "title": "Implementation and Development of a Trajectory Tracking Control System for Intelligent Vehicle",
            "venue": "J. Intell. Robot. Syst. 2018,",
            "year": 2018
        },
        {
            "authors": [
                "F. Gul",
                "W. Rahiman",
                "S.S.N. Alhady"
            ],
            "title": "A comprehensive study for robot navigation Techniques",
            "venue": "Cogent Eng. 2019,",
            "year": 1632
        },
        {
            "authors": [
                "Y. Li",
                "H. Sun",
                "D. Liu",
                "J. Xu",
                "M. Wang"
            ],
            "title": "Autonomous Navigation and Path Tracking Control on Field Roads in Hilly Areas",
            "venue": "J. Sens",
            "year": 2019
        },
        {
            "authors": [
                "C. Caraffi",
                "T. Voj\u0131r",
                "J. Trefny",
                "J. Sochman",
                "J. Matas"
            ],
            "title": "A System for Real-time Detection and Tracking of Vehicles from a Single Car-mounted Camera",
            "venue": "In Proceedings of the International IEEE Conference on Intelligent Transportation Systems,",
            "year": 2012
        },
        {
            "authors": [
                "Z. Liu",
                "H. Jahanshahi",
                "C. Volos",
                "S. Bekiros",
                "S. He",
                "M.O. Alassafi",
                "A.M. Ahmad"
            ],
            "title": "Distributed Consensus Tracking Control of Chaotic Multi-Agent Supply Chain Network: A New Fault-Tolerant, Finite-Time, and Chatter-Free Approach",
            "year": 2021
        },
        {
            "authors": [
                "K. Han",
                "C. Chen",
                "M. Chen",
                "Z. Wang"
            ],
            "title": "Constrained Active Fault Tolerant Control Based on Active Fault Diagnosis and Interpolation Optimization",
            "venue": "Entropy 2021,",
            "year": 2021
        }
    ],
    "sections": [
        {
            "text": "Citation: Bose, S.S.C.;\nAlfurhood, B.S.; L, G.H.; Flammini, F.;\nNatarajan, R.; Jaya, S.S. Decision\nFault Tree Learning and Differential\nLyapunov Optimal Control for Path\nTracking. Entropy 2023, 25, 443.\nhttps://doi.org/10.3390/e25030443\nAcademic Editors: Demba Diallo and\nClaude Delpha\nReceived: 6 February 2023\nRevised: 24 February 2023\nAccepted: 1 March 2023\nPublished: 2 March 2023\nCopyright: \u00a9 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed under the terms and\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nKeywords: optimal control; differential Lyapunov; fault detection; path tracking; autonomous vehicles; machine learning; decision trees"
        },
        {
            "heading": "1. Introduction",
            "text": "Automation is important growth in the automobile industry. Autonomous vehicles (AVs) with superior driver assistance systems offer important benefits to drivers, giving novel transportation use scenarios and implementations. The five basic capabilities, such as localization, perception, planning, vehicle control, and system management, are considered for AVs to drive without human participation. AVs have an electronic system that performs the driving operations. AVs have vital features for the security of current vehicles [1]. With\nEntropy 2023, 25, 443. https://doi.org/10.3390/e25030443 https://www.mdpi.com/journal/entropy\nincreasing demands for secure and quick transportation services for life-saving medical devices, there is a growing emphasis on safety, reliability, sustainability, and steadfastness, which makes it an extremely analytical and active study area among control communities. A neural estimator-based fault tolerant control approach was developed to examine the post-fault and enhance system reliability for nonlinear robotic systems. In order to preserve the system\u2019s stability, sliding mode control was employed through post-fault dynamics. Next, a neural network was applied to regenerate the revamping fault rate and account for the impact of the fault on the functionality of the entire system. Lastly, the Lyapunov approach was to achieve the control law and neural network learning algorithms. In this way, it was promised that the neural evaluator would match the rate of change in terms of the fault and guarantee the tracking control. Since the network modeling capability, it was claimed that a smooth time function was damaged, compromising the accuracy of the fault modeling and the fault tolerance [2]. A fuzzy control with unknown timing and actuator malfunction was proposed to address noise and fault before fault detection. Via sector nonlinearity, Takagi\u2013Sugeno fuzzy model was created to assess the precariousness due to the larger variance in vehicle mass. In addition, a strong controller technique was introduced to solve network-influenced delays and prevent packet failures. A fault-tolerant controller was also created to lessen the actuator failure on the active steering systems of vehicles. The stability was improved by the Lyapunov stability theory. Despite improvements in stability and fault tolerance for car active steering systems, time spent on fault detection was unfocused [3]. The analysis of curved path tracking utilizing the Kalman filter and trigonometric function improved tracking performance [4]. On the other hand, a linear time-varying model was created to enhance the vehicle\u2019s stability [5]. A study of path control techniques for autonomous ground vehicles was examined [6]. Additionally, model predictive control (MPC) was introduced to precisely control vehicle constraints and address the conflict that can arise between tracking and safety measures. The transformation technique used in connected and autonomous vehicles (CAVs) has the potential to reduce accidents involving more cars, enhance the quality of life, and increase the efficiency of transportation networks as a whole [7]. The merits and downsides of the most recent developments in the field of CAVs were thoroughly examined in [8]. A few of the demands, possibilities, and long-term prospects associated with CAVs were examined in [9]. Fault incidence, however, was not covered. Multiple positioning modules for automated cars were shown in [10] via residue. Despite improvements in fault detection, there was no distinction between malfunctioning and normal situations. The linear quadratic regulator technique was used to address this problem, which in turn addressed stability under both abnormal and typical traffic patterns [11]."
        },
        {
            "heading": "1.1. Motivation",
            "text": "Path tracking control enables autonomous vehicles to move in a precise and secure manner and to behave safely in all driving situations. However, the relative research on the autonomous vehicle for route tracking and fault detection is quite limited due to the strong network modeling ability and fault detection rate due to constrained localization and path planning. The goal of this study is to address the issue of fault detection and course tracking for autonomous vehicles. The aforementioned concerns prompted the current study. Motivated by the above references, we focus on the Differential Lyapunov Stochastic and Decision Fault Tree Learning approach for autonomous vehicles, taking into account positional factors, complex environmental factors, day and nighttime lighting patterns, high fault detection rates, and time constraints."
        },
        {
            "heading": "1.2. Contribution in Paper",
            "text": "The following are some of the contributions made by this paper:\n(1) For path tracking with accurate vehicle state using a Luenberger observer and optimal steering using a ceaseless linear model, a Differential Lyapunov Stochastic Optimal Control (SOC) with customizable Z-matrices is given. (2) To increase the fault detection rate with the least amount of time required, decision fault tree learning is employed to acquire the unexpected deviation caused by the fault. (3) Simulations and field tests are used to validate the proposed DLS-DFTL method and the Decision Fault Tree Autonomous Vehicle Fault Detection algorithm."
        },
        {
            "heading": "1.3. Structure of the Paper",
            "text": "In conclusion, this study establishes an unanticipated deviation caused by fault while simultaneously analyzing the optimal control and fault detection of the vehicle. This paper is organized as follows: The related works in the areas of autonomous vehicle path tracking and fault detection are presented in Section 2. The Differential Lyapunov Stochastic and Decision Fault Tree Learning (DLS-DFTL) method\u2019s design is discussed in Section 3. The performance measure is covered in detail in Section 4 with the help of a table and graph structure. Finally, Section 5 concludes the essay."
        },
        {
            "heading": "2. Related Works",
            "text": "The trend in autonomous vehicle technology has fast changed to more advanced strategies with the development and upswing witnessed in deep learning-based techniques. In particular, tracking and defect detection for autonomous self-driving systems have advanced quickly. A deep learning model was developed to address the issue of local position estimation in autonomous vehicles [12]. Fusion algorithms were used to study another strategy for handling faults during bad weather [13]. Linear matrix inequality criteria are used to solve problems with uncertainties and disturbances [14]. An analysis of autonomous vehicles was published [15]. In order to ensure safe driving and handling limits utilizing the G-G diagram (i.e., grip during braking and acceleration), a route-tracking controller for autonomous vehicles was created [16]. Phase Portrait was used to obtain the G-G diagram, and validation was then carried out using an FSAE racing car to guarantee the effectiveness of the suggested controller. Additionally, compared to the standard driving model, errors are found to be much more susceptible due to the differing dynamics and characteristics of autonomous vehicles. This problem was addressed by first modifying the Stanley controller and then integrating it with an improved particle swarm model, therefore reducing the total lateral error rate [17]. In order to reduce the path tracking error, a navigation method based on the Differential Global Positioning System (DGPS) was proposed in [18]. A low-cost nonlinear cycling vehicle model was created to prevent rollover mishaps caused by trajectory tracking control models [19]. It was suggested to conduct a broad inquiry for an autonomous navigation system using deterministic and non-deterministic algorithms [20]. Finally, an external navigation system was combined with an indirect Kalman filter during field road drives in order to accomplish effective automated driving [21]. Novel fault-tolerant, finite-time, and chatter-free approaches were investigated to enhance convergence and stability. However, the fault detection rate was not measured [22]. A novel active fault tolerant control scheme was developed for handling component/actuator faults [1]. A new adaptive event-triggered mechanism was discussed for obtaining a suitable compromise between control performance and real-time transmission consumption [23]. The Lyapunov stability theory was used to minimize the loss rate. However, the fault detection time was enhanced [24,25]. Motivated by the aforementioned research, the Differential Lyapunov Stochastic and Decision Defect Tree Learning (DLS-DFTL) method was used in this paper to construct an effective path-tracking and fault-detection model for autonomous vehicles."
        },
        {
            "heading": "3. Using Decision Fault Tree Learning and Differential Lyapunov Stochastic Analysis",
            "text": "For its safe and reliable operation, a system that is expressly regarded as safety-critical depends heavily on fast processing equipment with complex control mechanisms. If an early fault in this system remains unfixed, it could lead to system collapse, which could cause harm to people, economic hardship, or even an impact on the entire environment. In order to create a path-tracking model for a given target vehicle, a Differential Lyapunov Stochastic Optimal Control (SOC) with movable Z-matrices is provided in this study. Additionally, the method was created in a way that deals with noise and addresses the problems with faults that arise from localization and path planning. In order to support the safety arguments with realistic autonomous vehicle ceilings, a suggested trajectory model is presented for this purpose. The Decision Fault Tree Learning (DFTL) fault detection algorithm was then provided to find an unexpected deviation caused by a fault. The suggested Differential Lyapunov Stochastic and Decision Fault Tree Learning (DLS-DFTL) approach for rapid and precise fault identification is shown schematically in Figure 1.\nThe path tracking for autonomous vehicles is divided into two sections, as shown in the above diagram: localization, Differential Lyapunov Stochastic Optimal Control (SOC) path planning with configurable Z-matrices, and Decision Fault Tree Learning fault detection (DFTL). The following sections contain a detailed discussion of the two models mentioned above."
        },
        {
            "heading": "3.1. Adjustable Z-Matrices in Differential Lyapunov Stochastic Optimal Control (SOC)",
            "text": "The figure depicts the suggested Differential Lyapunov Stochastic Optimal Control (SOC) for path tracking with movable Z-matrices. By using the Luenberger observer, the precise status of the vehicle is assessed after acquiring the path information. The best steering angle is then determined using a perpetual linear model. A precise, powerful vehicle model is necessary to enhance the performance of the Luenberger observer and the unceasing linear model. With the aid of an accurate power vehicle model, the Luenberger observer is plotted while correlating it with sensor noise, and a linear model with a movable Z-matrix is created. Based on dynamic elements related to the vehicle\u2019s speed, a customizable Z-matrix is shown. In this way, the noise, accuracy, and fault tolerance situations in autonomous\nvehicle localization and path planning are manageable. Figure 2 depicts the Differential Lyapunov SOC with reversible Z-matrices in schematic form.\nThe function used to steer a road vehicle is designed to give a ceaseless linear model the best possible control, and it is formulated as follows.\na = Pa + QIn + Rj (1)\nb = Sa + Ti + Uj (2)\nIn Equations (1) and (2) above, \u201ca\u201d is the array of \u201cn\u201d state variables, \u201cIn\u201d is the the control input, \u201cb\u201d is the control output, and \u201cP\u201d through \u201cQ\u201d are the matrices with infinitely many coefficients. Here, the value of \u201cIn\u201d is determinedn to forecast output to \u201cb(t)\u201d in order to reach a target \u201cb des (t)\u201d during a specific time period; \u201ct\u201d remains the control objective. Preliminary conditions are \u201ca 0\u201d at time \u201ct = 0\u201d, and an input I and a significance noise factor \u201cj\u201d are required for the endless linear model. The time response is then mathematically stated as follows.\na(t) = STta0 + \u222b t\n0 ST[m\u2217m]QIndm + \u222b t 0 ST[m\u2217m]Rjdm (3)\nAccording to Equation (3) above, \u201cST\u201d is the state transition matrix at time \u201ct\u201d, and \u201cSTt\u201d is the state transition matrix at time \u201cm*m\u201d. Each coefficient in the state transition matrix represents a portion of the state variable \u201cx\u201d at time \u201ct\u201d that is linearly connected to the state variable \u201cy\u201d at time zero and was differentiated with \u201cdm\u201d. By combining Equations (2) and (3) above, the output response is as follows:\nb(t) = S \u2217 STta0 + S [\u222b t\n0 ST[m\u2217m]\n] [QIn + Rj] (4)\nNext, a Luenberger observer was created, which estimates the states of an observable system while taking error and noise into account during localization and planning (i.e., autonomous vehicle path tracking). The aforementioned endless linear model and the Luenberger observer use discrete input, discrete output, and discrete state space isolate and address the problems with error and noise that impact localization and planning. Additionally, because the suggested method is a dynamic model, it is prospective even with changes in vehicle requirements that have been seen.\nIn this way, the tracking issue and the noise that are present during localization are also effectively resolved. This is mathematically expressed as follows:\nSV\u2032(k + 1) = STdSV\u2032(k) + Ind In\u2032(k) + Od [ b(k)\u2212 b\u2032(k) ] (5)\nAccording to Equation (5) above, \u201cSV\u201d (k) refers to the \u201ck\u201d evaluated state vector for the \u201ckth\u201d input vector \u201cIn\u201d \u201c(k)\u201d, and the \u201ckth\u201d evaluated output vector \u201cb\u201d \u201c(k)\u201d through discrete state matrix \u201cSTd\u201d; discrete input matrix \u201cInd\u201d; and discrete observer matrix \u201cOd\u201d, respectively. Last but not least, the error rate is mathematically represented as follows:\ne(k + 1) = (STd \u2212OdOMd) \u2217 e(k) (6)\nAccording to Equation (6) above, the term \u201ce(k)\u201d is the \u201ckth\u201d error vector for the appropriate output matrix \u201cOMd\u201d. The error, in this case, coincides with zero when \u201cST-OOM\u201d has eigenvalues that are closer to \u201c1\u201d. After examining the tracking characteristics, a configurable Z-matrix was used to determine the relevant distance. The changeable Z-matrix, which may be mathematically stated as follows, gives a tracking property for various vehicle speeds and offers a modest ceiling for the autonomous vehicle without the need for tuning.\nZ = OM = ( omij ) , where omij \u2264 0 (7)\nThe last step was to use a Lyapunov function as a trajectory-tracking function that produces a steady advancement in relation to an equilibrium point. The trajectory function is a Lyapunov with movable Z matrices for a specific target vehicle according to the suggestion trajectory generation model. It is possible to optimize the trajectory by choosing Lyapunov with changeable Z-matrices appropriately. The following is how this is expressed mathematically:\nL\u2032(SVn+1) = minL[ f (SVn, an)] (8)\nThe best action \u201can\u201d from the starting state (i.e., source state) to the equilibrium point was chosen using the function \u201cL\u201d () and state vector \u201cSVn\u201d from Equation (8) above. The following is a list of the Differential Lyapunov Stochastic Optimal Control Localization and Path Tracking\u2019s pseudo code representations as shown in Algorithm 1.\nAlgorithm 1. Path tracking and Differential Lyapunov Stochastic Optimal Control Localization\nInput: control input \u201cIn = VID, VPosx, VPosy, Temp, FSpray\u201d,\nOutput: Dependable and precise route tracking\nStep 1: Initialize ceaseless coefficients \u201cP, Q, R, S, T, U, V\u201d; Step 2: Begin; Step 3: For each control input \u201ci\u201d; Step 4: Evaluate array of \u201cn\u201d state variable using Equation (1); Step 5: Evaluate control output using Equation (2); Step 6: Evaluate ceaseless linear time response using Equation (3); Step 7: Evaluate output response using Equation (4); Step 8: Evaluate state vector for tracking using Equation (5); Step 9: Obtain the error rate using Equation (6); Step 10: Produce adjustable Z-matrix using Equation (7); Step 11: Evaluate Lyapunov function for path tracking using Equation (8); Step 12: End for; Step 13: End.\nTwo different phases are necessary to provide reliable and accurate path tracking, as stated in the method above. The algorithm takes into account the vehicle ID, the vehicle\u2019s horizontal position, and the vehicle\u2019s vertical position, using a never-ending linear model and tracking dynamics with changeable Z-matrices. State space and error are first seen\nusing the Luenberger observer. Next, the error rate is reduced with the changeable Z matrix values, allowing for effective path tracking."
        },
        {
            "heading": "3.2. Decision Fault Tree Learning (DFTL)",
            "text": "Decision Fault Tree Learning is used to detect the presence of any unexpected deviation caused by a fault with the consequent optimal control localization and path tracking (DFTL). Figure 3 depicts the DFTL model\u2019s schematic view.\nThe training data for autonomous path tracking and fault detection consist of \u201cX, Y, and W\u201d, as shown in the above image. Here, \u201cX\u201d stands for the payload set and is mathematically represented as follows.\nX = In = {x1, x2, . . . , xn} (9)\nThe payload set for each autonomous vehicle includes, according to Equation (9), the vehicle ID (VID), vehicle horizontal position (VPos x), vehicle vertical position (VPos y), sunset (SSet), and daylight (DLight), in that order. The control inputs are obtained the same regardless of the number of cars. Next, \u201cY\u201d is the outcome value determining whether a defect was discovered or not, \u201cY0,1\u201d. Finally, \u201cW\u201d is the weight of \u201cn\u201d control input training data and is shown as follows.\nW = {w1, w2, . . . , wn} (10)\nThe decision tree is claimed to have been created using the weighted control input values that were previously assumed. Then, it chooses a random car from among all of them. Finally, it divides the control input training data into \u201cVl\u201d and \u201cVr\u201d and assesses information gain \u201cIG\u201d for developing a decision tree, which is stated as follows.\n\u2206IG = IG(Vn)\u2212 Vl Vn IG(Vl)\u2212 Vr Vn IG(Vr) (11)\nIn Equation (11), \u201cVl\u201d denotes the value of the left child in \u201cVn\u201d, and \u201cVr\u201d denotes the value of the right child in \u201cVn\u201d. Since the information gain value for factors such as sunset\nand sunshine are measured separately, the left and right children are extended accordingly. The evaluation of \u201cIG(V)\u201d follows, as shown below.\nIG(V) = 1\u2212\u2211i\u2208V Wi/ \u2211i\u2208V Wi (12)\nThe distance between two points (VPos x, VPos y) is measured for obtaining divergences using Bregman and is mathematically represented as follows. This is performed with the help of information gain value.\nDF ( VPosx, VPosy ) = F(VPosx)\u2212 F ( VPosy ) (13)\nThe diagnostic rate for finding flaws is mathematically expressed as follows using the obtained divergences.\ndrt = \u2211yi 6=y\u2032i Wi/ \u2211i=1,2,...,n Wi (14)\nThe number of vehicles taken into account for simulation in the communication network is the denominator in Equation (13), and the numerator is determined depending on the performance of the vehicle in the communication network. The numerator is the number of defective vehicles in the communication network if the result of the network is \u201cGOOD\u201d. The number of regular cars in the communication network is represented by the numerator if the results of the communication network are \u201cBAD\u201d. The following provides the Decision Defect Tree Learning (DFTL) pseudo code representation for early autonomous vehicle fault detection as depicted in Algorithm 2.\nAlgorithm 2. Autonomous Vehicle Fault Detection Using a Decision Fault Tree\nInput: Input \u201cIn = VID, VPosx, VPosy, SSet, DLigh\u201d\nOutput: Early fault detection\nStep 1: Begin; Step 2: For each Input \u201cIn\u201d; Step 3: Acquire payload data and weight using Equations (9) and (10); Step 4: Measure information gain for each vehicle using Equation (11); Step 5: Measure distance between two consecutive points (i.e., VPosx, VPosy) using Equation (13); Step 6: Evaluate diagnostic rate for identifying faults using Equation (14); Step 7: Return (number of faulty vehicles \u201c f v\u201d, number of normal vehicles \u201cnv\u201d); Step 8: End for; Step 9: End.\nAs stated in the aforementioned Decision Fault Tree Autonomous Vehicle Fault Detection algorithm, the goal remains in detecting an unexpected deviation caused by fault using a Bregman Divergent Decision Tree and control input (i.e., vehicle ID, vehicle horizontal position, vehicle vertical position, sunset, and daylight). Prior to creating a decision tree based on the control input values, information gain is first measured. The distance between each vehicle is then determined for two distinct coordinates, i.e., vehicle horizontal position and vehicle vertical position, using Bregman Divergence. Finally, the diagnostic rate is used to classify defective and healthy automobiles."
        },
        {
            "heading": "4. Performance Evaluation",
            "text": "The performance analysis of the Differential Lyapunov Stochastic and Decision Fault Tree Learning (DLS-DFTL), as well as the currently used neural estimator-based faulttolerant control [2] and fuzzy control uncertain time-delay active steering [3], are shown in this part. When the number of test datasets is varied, the fault detection rate, fault detection time, and test loss for various cars are measured using the DLS-DFTL and two current methods [2,3] for comparison. By using the TME Motorway Dataset and the Python programming language, the analysis is carried out [22].\nThe dataset used to benchmark DLS-DFTL was acquired utilizing the BRAiVE test vehicle in Northern Italy in December 2011 in collaboration with VisLab (University of Parma, Italy). The \u201cTME Motorway Dataset\u201d was made up of an image acquisition process that includes stereo; 20 Hz frequency2; 1024 \u00d7 768 grayscale lossless compressed images, with Bayer coded color information3 and a 32-degree horizontal field of view; an ego-motion estimate (a confidential computing method); and vehicle annotation and classification produced by a laser scanner. The data shown here are time-stamped and consist of 28 clips that were chosen out of a total of about 27 min of acquisition. This selection procedure takes into account various traffic patterns, lane configurations, degree of road curvature, and lighting. In addition, the dataset has been divided into two separate subsets based on the type of lighting, including daylight and sunset."
        },
        {
            "heading": "4.1. Scenario 1: Performance Evaluation of Defect Detection Rate",
            "text": "The defect detection rate is the first important factor for tracking autonomous vehicles. Here, the term \u201cfault detection rate\u201d refers to the monitoring of an autonomous vehicle and the measurement of the fault detection rate in the event that the path being tracked has a fault. Here, the simulation\u2019s driverless vehicle becomes transformed into frames. The following is how this is mathematically stated.\nFDrate = \u2211ni=1 FF\nFact \u2217 100 (15)\nThe fault detection rate, or \u201cFDrate\u201d, is calculated using the number of defective frames found during testing, or \u201cFF\u201d, and the actual number of faulty frames, or \u201cFact\u201d, as shown in Equation (15) above. It is measured in percentage (%) terms. The fault detection rate for three approaches, including DLS-DFTL and neural estimator-based fault tolerant control [2], is listed in Table 1 below, active steering with unpredictable time delays and fuzzy control [3].\nThe defect detection rate in relation to 250 different frames is shown in Figure 4 above. The horizontal axis in the figure denotes the 25 frames or less, and the vertical axis is the defect detection rate expressed as a percentage (%). The defect detection rate is not directly or inversely related to the frames taken into account for simulation, according to the figure. This is because different movies were extracted at various points in time, and when those videos were translated into frames, the problem that was found also varied. As a result, as the number of frames increases, the defect detection rate neither increases nor decreases. Let us take a hypothetical situation where \u201c5\u201d autonomous vehicles are used to track paths and identify faults. Each autonomous vehicle is divided into five frames, making a\ntotal of twenty-five frames available for simulation. In the aforementioned scenario, \u201c3\u201d autonomous vehicles were found to be defective.\nThe results of simulations for 25 frames indicate that while there were \u201c5\u201d total problematic frames observed, \u201c4\u201d faulty frames were discovered using DLS-DFTL, \u201c3\u201d faulty frames were discovered using [2], and \u201c2\u201d faulty frames were discovered using [3]. From these findings, it can be concluded that DLS-DFTL has a comparative advantage over [2,3] in terms of defect detection rate. Due to the use of the Differential Lyapunov Stochastic Optimal Control (SOC) with the Variable Z-Matrix model, this has occurred. This model\u2019s application for path tracking resulted in the calculation of the ideal steering angle using a continuous linear model. Additionally, the customizable Z-matrix is built around dynamic elements that depend on the vehicle\u2019s speed. With this, it is discovered that the fault detection rate using DLS-DFTL is significantly better than the 23% and 52% rates using [2,3]."
        },
        {
            "heading": "4.2. Scenario 2: Analysis of Fault Detection Time Performance",
            "text": "The defect detection time is the second important statistic for path tracking and fault detection in autonomous vehicles. Early detection of malfunctioning autonomous vehicles is made easier by reliable tracking performance. The measurement of fault detection time is provided below.\nFDtime = \u2211ni=1 Fi \u2217 Time [FD] (16) According to Equation (16) above, the fault detection time (FDtime) is calculated based\non the frames that are taken into account during simulation (Fi) and the amount of time needed to identify a malfunctioning autonomous vehicle (FDtime). It is quantified in milliseconds (ms). The fault detection times for three different methods\u2014DLS-DFTL, neural estimator-based fault tolerant control [2], and fuzzy control uncertain time-delay active steering [3]\u2014are listed in Table 2 below.\nThe three methods\u2014DLS-DFTL, neural estimator-based fault tolerant control [2], and fuzzy control uncertain time-delay active steering [3]\u2014are shown in Figure 5 above in terms of the time it takes to detect faults. The vertical axis depicts the fault detection time, with the horizontal axis showing the frames used for path tracking and defect detection for autonomous vehicles. The fault detection time is determined to be exactly related to the simulation frames used, according to the figure. Therefore, when the number of films used for simulation increases, the frames also increase, and faults may vary depending on the path being tracked, which inevitably lengthens the time it takes to discover faults.\nHowever, simulations with 25 frames revealed that the fault detection time for DLSDFTL was 3.375 ms, 4.625 ms for [2], and 5.357 ms for [3]. According to the simulation results, implementing DLS-DFTL is observed to reduce the fault detection time when compared to [2,3]. The use of the Differential Lyapunov Stochastic Optimal Control Localization and Path Tracking method is what caused the improvement. The endless linear model, with which the state space and error were significantly observed, is the first model to which this technique is applied in order to track an exact path. The reported error rate was then decreased by utilizing configurable Z-matrices, allowing for considerable path tracking and reducing the fault detection time by 31% and 16%, respectively, in comparison to [2,3]."
        },
        {
            "heading": "4.3. Scenario 3: Loss Rate of Performance",
            "text": "The loss rate is the final parameter used in the path tracking and defect detection of autonomous vehicles. The loss rate is the percentage of times that the path tracking and\nfault detection processes miss the malfunctioning autonomous vehicle. The loss rate is calculated as shown below.\nLr = \u2211ni=1 FMO\nFi \u2217 100 (17)\nBased on the total number of frames taken into account for the simulation (Fi) and the missed-out malfunctioning autonomous vehicle\u2019s frame (FMO), the loss rate (Lr) is calculated using Equation (17) above. It is measured in percentage (%) terms. The loss rate for each of the three methods\u2014DLS-DFTL, neural estimator-based fault tolerant control [2], and fuzzy control uncertain time-delay active steering [3]\u2014is listed in Table 3 below.\nThe loss rate for three distinct approaches is shown in Figure 6 above. The chart suggests that increasing the frames causes the loss rate to increase significantly. The loss rate in this context means that the malfunctioning autonomous vehicle went unnoticed. If there are fewer defective autonomous vehicles that go unnoticed, tracking accuracy will not be as good. Additionally, the figure shows that raising the frame count likewise raises the loss rate. However, when compared to [2,3], a comparative study carried out through simulations demonstrates better results when employing DLS-DFTL. In other words, simulations with 25 frames reveal that 85 use DLS-DFTL, while 12% and 16%, respectively, use [2,3].\nDue to the implementation of the Decision Fault Tree Autonomous Vehicle Fault Detection algorithm, the loss rate is said to be decreased when utilizing DLS-DFTL. This method takes into account three different variables. First, information on the anonymous vehicle\u2019s horizontal and vertical positions, as well as the time of day, sunset, and daylight, was used to inform the decision tree. Bregman was then used to calculate the distance between each vehicle for two distinct coordinates, i.e., vehicle horizontal position and vehicle vertical position, and finally, the diagnostic rate was used to distinguish between the faulty and normal autonomous vehicles."
        },
        {
            "heading": "5. Discussion",
            "text": "Though there are numerous talented approaches for tracking control of fault-tolerant methods in the literature, there is still room for the development of existing methods. The aforementioned concerns have prompted the current study. Furthermore, the majority of tracking control methods have important flaws that make their real-world implementation challenging. Hence, this study proposes Differential Lyapunov Stochastic and Decision Fault Tree Learning (DLS-DFTL) for accurate path tracking. Differential Lyapunov Stochastic Optimal Control Localization was utilized to minimize fault detection time via movable Z-matrix. Decision Fault Tree Learning (DFTL) was employed to identify unanticipated deviation caused by the fault. Bregman Divergence was applied to measure distance among every vehicle for two distinct coordinates. In this way, the diagnostic rate identifies faults with lower latency. Because of their advantages, such as guaranteed stability, ease of implementation, higher fault detection rate, lower fault detection time, and loss, the current investigation was prompted by this concern. It was revealed during numerical results that the proposed control technique is suitable for tracking control systems. This study compared the proposed DLS-DFTL with the existing neural estimator-based fault-tolerant control [2] and fuzzy control uncertain time-delay active steering [3] using TME Motorway Dataset based on various parameters, such as fault detection rate, fault detection time, and loss rate. The current results confirm that the proposed DLS-DFTL improves the fault detection rate by 38%, reduces the fault detection time by 24%, and minimizes the loss rate by 14% compared to the existing ones, namely neural estimator-based fault-tolerant control [2] and fuzzy control uncertain time-delay active steering [3] with the aid of TME Motorway Dataset."
        },
        {
            "heading": "6. Conclusions",
            "text": "In this paper, we proposed a powerful Differential Lyapunov Stochastic and Decision Fault Tree Learning (DLS-DFTL) paradigm for tracking vehicle dynamics and handling in the presence of faults. The proposed DLS-DFTL method was designed based on the Differential Lyapunov Stochastic Optimal Control (SOC) with a Variable Z-Matrix model and Decision Fault Tree Autonomous Vehicle Fault Detection algorithm. At first, the Luenberger observer combined the best features of the continuous linear model. Differential Lyapunov Stochastic Optimal Control Localization and Path Tracking were implemented for the autonomous vehicle to achieve reliable performance in the presence of disturbances. Afterward, Decision Fault Tree Learning (DFTL) was applied for early problem identification in autonomous vehicles. The DLS-DFTL approach was applied in Python for precise validation. The numerical results showed that the DLS-DFTL approach outperformed with full proof trajectory tracking, which is capable of monitoring effectively in the literature. Due to the lower loss rate and fault detection time, the DLS-DFTL approach achieved better performance in terms of fault detection rate, fault detection time, and loss rate. Finally, we also showed that the average loss of the proposed mechanisms was very small. In the future, the proposed scheme with two fault-tolerant mechanisms is a promising solution for emerging traffic management of high reliability and low latency.\nAuthor Contributions: Conceptualization, S.S.C.B.; Methodology, S.S.C.B.; Software, S.S.C.B.; Validation, B.S.A.; Formal analysis, B.S.A.; Investigation, G.H.L.; Resources, G.H.L.; Data curation, F.F.; Writing\u2014original draft, F.F.; Writing\u2014review & editing, F.F. and S.S.J.; Visualization, R.N.; Project administration, F.F. and S.S.J.; Funding acquisition, R.N. All authors have read and agreed to the published version of the manuscript.\nFunding: This research was funded by Princess Nourah bint Abdulrahman University Researchers Supporting Project number (PNURSP2023R359), Princess Nourah bint Abdulrahman University, Riyadh, Saudi Arabia.\nInstitutional Review Board Statement: Not applicable.\nInformed Consent Statement: Not applicable.\nData Availability Statement: Not applicable.\nAcknowledgments: The authors would like to thank Princess Nourah bint Abdulrahman University Researchers Supporting Project number (PNURSP2023R359), Princess Nourah bint Abdulrahman University, Riyadh, Saudi Arabia.\nConflicts of Interest: The authors declare no conflict of interest."
        }
    ],
    "title": "Decision Fault Tree Learning and Differential Lyapunov Optimal Control for Path Tracking",
    "year": 2023
}