{
    "abstractText": "Most phenomena related to biomedical tasks are inherently complex, and in many cases, are expressed as signals on biomedical Knowledge Graphs (KGs). In this work, we introduce the use of a new representation framework, the Prime Adjacency Matrix (PAM) for biomedical KGs, which allows for very efficient network analysis. PAM utilizes prime numbers to enable representing the whole KG with a single adjacency matrix and the fast computation of multiple properties of the network. We illustrate the applicability of the framework in the biomedical domain by working on different biomedical knowledge graphs and by providing two case studies: one on drug-repurposing for COVID-19 and one on important metapath extraction. We show that we achieve better results than the original proposed workflows, using very simple methods that require no training, in considerably less time.",
    "authors": [
        {
            "affiliations": [],
            "name": "Konstantinos Bougiatiotis"
        },
        {
            "affiliations": [],
            "name": "Georgios Paliouras"
        }
    ],
    "id": "SP:ac6f121e1ec551d2956fc6d505e12ed1a995f1fe",
    "references": [
        {
            "authors": [
                "M. Zitnik",
                "F. Nguyen",
                "B. Wang",
                "J. Leskovec",
                "A. Goldenberg",
                "M.M. Hoffman"
            ],
            "title": "Machine learning for integrating data in biology and medicine: Principles, practice, and opportunities",
            "venue": "Information Fusion, vol. 50, pp. 71\u201391, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "D.N. Nicholson",
                "C.S. Greene"
            ],
            "title": "Constructing knowledge graphs and their biomedical applications",
            "venue": "Computational and structural biotechnology journal, vol. 18, pp. 1414\u20131428, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "P. Ping",
                "K. Watson",
                "J. Han",
                "A. Bui"
            ],
            "title": "Individualized knowledge graph: a viable informatics path to precision medicine",
            "venue": "Circulation research, vol. 120, no. 7, pp. 1078\u20131080, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "L. Su",
                "Z. Wang",
                "Y. Ji",
                "X. Guo"
            ],
            "title": "A survey based on knowledge graph in fault diagnosis, analysis and prediction: key technologies and challenges",
            "venue": "2020 International Conference on Artificial Intelligence and Computer Engineering (ICAICE), pp. 458\u2013462, IEEE, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "S. Bonner",
                "I.P. Barrett",
                "C. Ye",
                "R. Swiers",
                "O. Engkvist",
                "A. Bender",
                "C.T. Hoyt",
                "W.L. Hamilton"
            ],
            "title": "A review of biomedical datasets relating to drug discovery: a knowledge graph perspective",
            "venue": "Briefings in Bioinformatics, vol. 23, no. 6, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "D.S. Himmelstein",
                "A. Lizee",
                "C. Hessler",
                "L. Brueggeman",
                "S.L. Chen",
                "D. Hadley",
                "A. Green",
                "P. Khankhanian",
                "S.E. Baranzini"
            ],
            "title": "Systematic integration of biomedical knowledge prioritizes drugs for repurposing",
            "venue": "Elife, vol. 6, p. e26726, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "Z. Wu",
                "P. Jain",
                "M. Wright",
                "A. Mirhoseini",
                "J.E. Gonzalez",
                "I. Stoica"
            ],
            "title": "Representing long-range context for graph neural networks with global attention",
            "venue": "Advances in Neural Information Processing Systems, vol. 34, pp. 13266\u201313279, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "K. Bougiatiotis",
                "G. Paliouras"
            ],
            "title": "Efficient multi-relational network representation using primes",
            "venue": "2022.",
            "year": 2022
        },
        {
            "authors": [
                "Y. Liu",
                "M. Hildebrandt",
                "M. Joblin",
                "M. Ringsquandl",
                "R. Raissouni",
                "V. Tresp"
            ],
            "title": "Neural multi-hop reasoning with logical rules on biomedical knowledge graphs",
            "venue": "The Semantic Web: 18th International Conference, ESWC 2021, Virtual Event, June 6\u201310, 2021, Proceedings 18, pp. 375\u2013391, Springer, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "F. MacLean"
            ],
            "title": "Knowledge graphs and their applications in drug discovery",
            "venue": "Expert opinion on drug discovery, vol. 16, no. 9, pp. 1057\u20131069, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "Z. Gao",
                "P. Ding",
                "R. Xu"
            ],
            "title": "Kg-predict: A knowledge graph computational framework for drug repurposing",
            "venue": "Journal of Biomedical Informatics, vol. 132, p. 104133, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "X. Pan",
                "X. Lin",
                "D. Cao",
                "X. Zeng",
                "P.S. Yu",
                "L. He",
                "R. Nussinov",
                "F. Cheng"
            ],
            "title": "Deep learning for drug repurposing: Methods, databases, and applications",
            "venue": "Wiley interdisciplinary reviews: Computational molecular science, vol. 12, no. 4, p. e1597, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "X. Zeng",
                "X. Tu",
                "Y. Liu",
                "X. Fu",
                "Y. Su"
            ],
            "title": "Toward better drug discovery with knowledge graph",
            "venue": "Current Opinion in Structural Biology, vol. 72, pp. 114\u2013126, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "J. Al-Saleem",
                "R. Granet",
                "S. Ramakrishnan",
                "N.A. Ciancetta",
                "C. Saveson",
                "C. Gessner",
                "Q. Zhou"
            ],
            "title": "Knowledge graph-based approaches to drug repurposing for covid-19",
            "venue": "Journal of chemical information and modeling, vol. 61, no. 8, pp. 4058\u20134067, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "G. Edwards",
                "S. Nilsson",
                "B. Rozemberczki",
                "E. Papa"
            ],
            "title": "Explainable biomedical recommendations via reinforcement learning reasoning on knowledge graphs",
            "venue": "arXiv preprint arXiv:2111.10625, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "C. Ma",
                "H. Liu",
                "Z. Zhou",
                "D. Koslicki"
            ],
            "title": "Predicting drug repurposing candidates and their mechanisms from a biomedical knowledge graph",
            "venue": "bioRxiv, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "D.N. Sosa",
                "A. Derry",
                "M. Guo",
                "E. Wei",
                "C. Brinton",
                "R.B. Altman"
            ],
            "title": "A literature-based knowledge graph embedding method for identifying drug repurposing opportunities in rare diseases",
            "venue": "PACIFIC SYMPO- SIUM ON BIOCOMPUTING 2020, pp. 463\u2013474, World Scientific, 2019.",
            "year": 2020
        },
        {
            "authors": [
                "G. Bakal",
                "P. Talari",
                "E.V. Kakani",
                "R. Kavuluru"
            ],
            "title": "Exploiting semantic patterns over biomedical knowledge graphs for predicting treatment and causative relations",
            "venue": "Journal of Biomedical Informatics, vol. 82, pp. 189\u2013 199, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "H. Wang",
                "H. Ren",
                "J. Leskovec"
            ],
            "title": "Relational message passing for knowledge graph completion",
            "venue": "Proceedings of the 27th ACM SIGKDD Conf.on Knowledge Discovery, Data Mining, KDD \u201921, (NY, USA), p. 1697\u20131707, Association for Computing Machinery, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "S. Zheng",
                "J. Rao",
                "Y. Song",
                "J. Zhang",
                "X. Xiao",
                "E.F. Fang",
                "Y. Yang",
                "Z. Niu"
            ],
            "title": "PharmKG: a dedicated knowledge graph benchmark for bomedical data mining",
            "venue": "Briefings in Bioinformatics, vol. 22, 12 2020. bbaa344.",
            "year": 2020
        },
        {
            "authors": [
                "V.N. Ioannidis",
                "X. Song",
                "S. Manchanda",
                "M. Li",
                "X. Pan",
                "D. Zheng",
                "X. Ning",
                "X. Zeng",
                "G. Karypis"
            ],
            "title": "Drkg - drug repurposing knowledge graph for covid-19.",
            "year": 2020
        },
        {
            "authors": [
                "P. Chandak",
                "K. Huang",
                "M. Zitnik"
            ],
            "title": "Building a knowledge graph to enable precision medicine",
            "venue": "Nature Scientific Data, 2023.",
            "year": 2023
        },
        {
            "authors": [
                "A. Ashari",
                "N. Sedaghati",
                "J. Eisenlohr",
                "S. Parthasarath",
                "P. Sadayappan"
            ],
            "title": "Fast sparse matrix-vector multiplication on gpus for graph applications",
            "venue": "SC \u201914: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, pp. 781\u2013792, 2014.",
            "year": 2014
        },
        {
            "authors": [
                "A. Bordes",
                "N. Usunier",
                "A. Garcia-Duran",
                "J. Weston",
                "O. Yakhnenko"
            ],
            "title": "Translating embeddings for modeling multi-relational data",
            "venue": "Advances in neural information processing systems, vol. 26, 2013.",
            "year": 2013
        },
        {
            "authors": [
                "A.K. Menon",
                "C. Elkan"
            ],
            "title": "Link prediction via matrix factorization",
            "venue": "Machine Learning and Knowledge Discovery in Databases: European Conference, ECML PKDD 2011, Athens, Greece, September 5-9, 2011, Proceedings, Part II 22, pp. 437\u2013452, Springer, 2011.",
            "year": 2011
        },
        {
            "authors": [
                "R. Pinder",
                "R. Brogden",
                "T. Speight",
                "G. Avery"
            ],
            "title": "Hexoprenaline: a review of its pharmacological properties and therapeutic efficacy with particular reference to asthma",
            "venue": "Drugs, vol. 14, no. 1, pp. 1\u201328, 1977.",
            "year": 1977
        },
        {
            "authors": [
                "K.M. Williams",
                "G.-S. Cheng",
                "I. Pusic",
                "M.H. Jagasia",
                "L.J. Burns",
                "V.T. Ho",
                "J. Pidala",
                "J. Palmer",
                "L. Johnston",
                "S. Mayer"
            ],
            "title": "Encouraging results of a phase ii trial of inhaled fluticasone propionate, azithromycin, and montelukast (fam) may maintain lung function in bronchiolitis obliterans syndrome (bos) after hematopoietic cell transplantation",
            "venue": "Biology of Blood and Marrow Transplantation, vol. 21, no. 2, pp. S61\u2013 S62, 2015.",
            "year": 2015
        }
    ],
    "sections": [
        {
            "text": "Index Terms\u2014knowledge graph, representation, drug repurposing, metapath extraction, prime adjacency matrix\nI. INTRODUCTION\nIn recent years, the availability of big data has created a movement to develop methods that leverage more holistic views, by simultaneously considering data sources and interactions between their elements [1]. To this end, biomedical Knowledge Graphs (KGs) [2] are becoming increasingly popular for tasks such as personalized medicine [3], predictive diagnosis [4], and drug discovery [5].\nWhen working with these biomedical KGs, one challenge consists of dealing with the highly coupled nature of entities that may be involved in a diverse set of biological pathways, molecular functions, diseases etc [6]. Another challenge is that performing analysis and predictions on these KGs usually enforces the different methodologies to utilize multihop neighbourhoods (e.g. capturing long-range dependencies in message-passing graph convolutional networks [7]). These challenges highlight the need for a framework that will facilitate easy and fast calculations of representations, that also capture the convoluted interactions of the entities.\nTo this end, we introduce the use of the Prime Adjacency Matrix (PAM) [8] representation for biomedical KGs. It was introduced to deal with multi-relational networks to allow for compact representations and fast calculations of multi-hop matrices, making it ideal for applications on biomedical KGs. Through the PAM matrix, we can represent a KG in a single adjacency matrix without loss of information. At its core, is the Fundamental Theorem of Arithmetic, which allows the unique decomposition of any given positive integer to its prime\nfactors. Using this theorem, we can map each unique relation type in the KG to a distinct prime, and then we can construct the PAM capturing all the information about the connectivity of the original KG, without loss.\nHaving a single adjacency matrix for the whole KG allows us to leverage multiple tools from classical network analysis. For example, we can easily calculate the powers of this matrix and generate the multi-hop adjacency matrices for the whole graph. This can be done very efficiently and allows us to scale different methodologies to many large-scale KGs. Moreover, these PAM matrices contain rich structural information about the graph, which is readily available for modeling; simply by looking up the values of the matrices, we can infer properties of the KG.\nIn this work, we motivate the use of PAMs in the biomedical domain by performing two case studies, one focused on drug repurposing for COVID-19 and one focused on \u201cmetapath\u201d extraction that is important for finding meaningful paths for reasoning in KGs [9]. In both cases, we leverage the KG representation as expressed through the PAMs without training any model on the downstream application, to highlight the simplicity and richness of the representations. Moreover, we demonstrate the efficiency of the methodology by applying the framework to a collection of commonly-used biomedical KGs, with diverse structural properties.\nOverall, the main contributions of this work are the following:\n\u2022 We introduce the use of Prime Adjacency Matrices on biomedical knowledge graphs. \u2022 We showcase the efficiency of the framework on multiple knowledge graphs and perform two case studies on downstream tasks, without the need for training a specialized model. \u2022 We make the code and other materials publicly available and outline avenues of future work to facilitate progress in the field1.\nThe rest of the paper is structured as follows: Section II introduces the basics of the PAM framework and also provides some related work on the use cases that we will address. In Section III we will delve into the two use-cases, namely drugrepurposing for COVID-19 and metapath extraction. Finally,\n1It can be accessed from https://github.com/kbogas/PAM CBMS.\nar X\niv :2\n30 5.\n10 46\n7v 1\n[ q-\nbi o.\nQ M\n] 1\n7 M\nay 2\n02 3\nin Section IV, we summarize the main aspects of the methodology employed and propose future work."
        },
        {
            "heading": "II. BACKGROUND AND RELATED WORK",
            "text": "In this section, we introduce the PAM framework, highlight its main features, and then provide related work on the downstream tasks we will address."
        },
        {
            "heading": "A. Prime Adjacency Matrix (PAM)",
            "text": "Let us start with a directed, multi-relational knowledge graph G = {V,R,E}, with V denoting the nodes of the graph (usually of different types), R the distinct relation types and E the set of edges in the graph. These edges are essentially triples of the form {(h, r, t) : h, t \u2208 V, r \u2208 R}, denoting that the node h is connected to the node t, through a relation r.\nWe first associate each unique relation type r \u2208 R with a distinct prime number pr. This is a simple procedure and in its simplest form, we would randomly order the relations and allocate the prime number 2 to the first relation, the prime number 3 to the second one, and so forth with the rest of the prime numbers until all distinct relations were mapped to a number.\nWith this mapping in place, r \u2194 pr,\u2200r \u2208 R, we can construct the Prime Adjacency Matrix (PAM) for this graph P , with shape |V | \u00d7 |V |, in the following form:\nP [i, j] =  \u220f r:(h,r,t)\u2208E pr if \u2203r : (h, r, t) \u2208 E\n0 if \u2200r : (h, r, t) /\u2208 E (1)\nAs we can see in (1), each non-zero element P [i, j] is the product of the primes pr for all relations r that connect node i to j. The Fundamental Theorem of Arithmetic (FTA) states that we can decompose each product to the original primes that constitute it (i.e. the distinct relations that connect the two nodes), thus preserving the full structure of G in P without any loss.\n1) A simple example: Let us consider a simple network, as the one shown in Fig. 1 (a), where we have 3 nodes (i.e. two compounds C1, C2 and a disease D1) and 3 types of relation treats (purple), alleviates (blue) and similar (green). The first step is to simply map each distinct relation to a prime number. Here the mapping is: treats \u2194 3, alleviates \u2194 5 and similar \u2194 7 as shown in Fig. 1 (b).\nThe resulting PAM according to Eq. (1) would be (with node C1 corresponding to index 0 of the matrix, node C2 to index 1, and so forth):\nP = ( 0 7 15 0 0 3 0 0 0 ). We see that the edge C1 7\u2212\u2192 C2 is denoted by P [0, 1] = 7 and C2 3\u2212\u2192 D1 by P [1, 2] = 3. Finally, we have the case where C1 is connected to D1 through the two distinct relations treats and alleviates, which are mapped to the primes 3 and 5 correspondingly. Thus, according to the definition of PAM, we have P [C1, D1] = P [0, 2] = 3 \u2217 5 = 15, which can be uniquely decomposed back to its prime factors, 3, 5, retrieving the original edges without loss.\nEven in this toy graph, the compact PAM representation facilitates interesting observations. For example, we can see all the incoming/outgoing edges and their types by simply looking at the corresponding columns/rows of P . So, looking at P [2, :] and P [:, 2] we see that node D1 is a sink (i.e. has no outgoing edges of any kind). Another graph property that can be easily inferred is the frequency of different relations. If we simply count the frequencies of the prime factors of the non-zero elements of P , we get the distribution of edges per relation type, which is {3 : 2, 5 : 1, 7 : 1}.\n2) Moving to multi-hop matrices: Having a single adjacency matrix for the whole knowledge graph allows us to utilize tools from classical network analysis. Most importantly, we can easily obtain the powers of the adjacency matrix. In a single-relational network, the element (i, j) of the power k of an adjacency matrix, contains the number of paths of length k from node i to node j. Generalizing this property to the PAM representation, where each value in the matrix also represents a specific type of the relation, the values of P k[i, j] allow us to keep track of the relational chains linking two nodes.\nFor instance, the second-order PAM for the example graph of Fig. 1 will be: P 2 = P \u00d7 P = ( 0 0 210 0 0\n0 0 0 ).\nFor this toy example, the only non-zero element is P 2[0, 2] = P 2[C1, D1] = 21 denoting a 2-hop path between C1 and D1. We can see from Fig. 1, that we can get from C1 to node D1 in two hops by following the directed path C1 7\u2212\u2192 C2 3\u2212\u2192 D1. The relations 3 and 7 that are exhibited along this 2-hop path, are directly expressed in the value of P 2[C1, D1] = 21, through its prime factors, as 21 = 3 \u2217 7. Hence, using this representation, the products in P k express the relational k-chains linking two nodes in the graph.\nMoreover, we can easily extract structural characteristics for nodes, pairs, subgraphs, and the whole graph, simply by looking up the PAMs. These can be used for further analysis according to the task at hand. For example, in this toy graph, we know that C1 and D1 are connected through the 2- hop value 21. This value semantically expresses the path: a compound (C1) is similar to a second compound (C2), which treats a disease (D1). However, because we know that C1 directly treats D1, we could support the idea that this semantic\npattern expressed by the value 21, implies that the notion of treats (i.e. 21 =\u21d2 5, meaning that if there exists a path between two nodes of the form {similar,treats}, then these two nodes may also be directly connected through a treats relation).\nThis procedure can be iterated for as many hops as we are interested in, by simply calculating the corresponding P k. The values in each of these matrices will contain aggregated information regarding the relational chains of length k that connect the corresponding nodes. Interesting characteristics about these graphs and their components can then be easily extracted through simple operations."
        },
        {
            "heading": "B. Related Work",
            "text": "1) Drug Repurposing: Drug repurposing is a strategy used for finding a drug from approved drugs to treat a specific disease (i.e. identifying new uses of known drugs), and it is implemented by identifying associations between drugs and diseases or inferring interactions between drugs and targets. Knowledge graphs are introduced to the domain of drug discovery for imposing an explicit structure to integrate heterogeneous biomedical data. The drug repurposing task is then formulated as knowledge graph completion, i.e. predicting unseen relations between two existing entities or predicting a candidate disease node given a drug node [10]. A plethora of methodologies for tackling this problem have been proposed, from graph embeddings [11], to neural [12] and neuro-symbolic [9]. An overview of the different approaches and data sources used in this domain can be found in [13]. It is important to note that interest in these approaches was greatly raised due to the coordinated search for drug repurposing in the context of COVID-19 [14].\n2) Metapath Extraction: Drug repurposing can accelerate the process of drug discovery, however the main practical concern when using computational drug repurposing is the explainability aspect of it, which may hinder adoption in clinical settings [15]. Most methods complement their prediction with intuitive explanations leveraging the semantically-rich KG-based paths that connect drug-disease pairs. For example, in [16] they want to extract \u201cmechanism of action\u201d paths (which are essentially the paths on the knowledge graphs), that can semantically describe an abstract biological process of how a drug treats a disease. In [17] they use an embedding model to score the edges in the graph and provide explanations for predictions via the highest-ranking paths based on confidence scores. On a similar basis, in [18] the authors find important \u201csemantic patterns\u201d that could imply a hidden connection between drugs and diseases, based on the semantic relations exhibited along the paths connecting the drug-disease pairs, as extracted from the literature. In this study, we view these important multi-hop paths under the term of \u201cmetapaths\u201d following the notation of [6], as we will focus on the same KG as theirs, in our application."
        },
        {
            "heading": "III. APPLICATIONS",
            "text": "In the following subsections, we will present applications using the PAM representation. All experiments were run on an Ubuntu Server with Intel Core i7 Quad-Core @ 2.30GHz. At most, 8 threads and 16 GB RAM were reserved for the experiments."
        },
        {
            "heading": "A. Calculating Prime Adjacency Matrices",
            "text": "To showcase the usability of the PAM representation and the simplicity of the calculations needed, we aggregated some commonly-used biomedical knowledge graphs and generated their P k matrices. We selected knowledge graphs of varying properties (i.e. number of nodes, edges, relations, connectivity, etc.) in order to showcase the applicability of the framework.\nThe smaller (in terms of the number of edges) of the KG used is DDB14 [19] which is a medical database containing biomedical entities and their relationships.2. Then, we have PharmKG [20] a multi-relational, attributed biomedical KG, composed of more than 500,000 interconnections between genes, drugs and diseases, which is used mainly for data mining. Then, we have HetioNet [6] which is a biomedical KG with multiple node and relation types, exhibiting also many hub nodes. DRKG [21] is a COVID-specific knowledge graph created from aggregating databases and data from publications for the purpose of drug-repurposing. The largest graph we experimented on is PrimeKG [22], which is a recent KG that presents a holistic view of diseases by integrating more than 20 high-quality biomedical resources representing ten major biological scales.\nThe basic characteristics of the six KGs can be seen in Table I, where the columns represent: the number of nodes, the number of unique types of relations, the total number of edges, the sparsity of the PAM (in percentage) at the 1- and 4-hops and the total time taken to set up and calculate the PAMS up to P 4. The datasets are sorted from small to large, based on the total number of edges in each graph. We can see that for the case of DDB14, which is a small-scale KG, the whole process takes less than a second. For the rest of the medium- and large-scale KGs the whole process takes a few minutes3.\n2It was created based on DiseaseBank http://www.diseasedatabase.com/. 3We stopped the calculations at k = 4, because most KGs started exhibiting increasingly smaller sparsities, denoting an uninformative blur of connectivity between the nodes (most had less than 70% sparsity).\nInterestingly, the time needed to calculate P 4 for PharmKG is disproportionately longer than for Hetionet, which has double the number of edges. This is mainly due to the different structures of the KGs and the great number of nodes in PharmKG. It is important to note that we have not optimized the calculations of the PAMs, opting for simple sparse matrix multiplications between them. More efficient ways can be used to handle large-scale datasets [23]. It is also worth noting that, this procedure needs to be executed only once to calculate the needed P k and then they can be used for multiple downstream tasks. This means that with a few minutes of calculation, we obtain the higher-order associations between nodes, which can reveal valuable patterns for the task at hand."
        },
        {
            "heading": "B. Drug Repurposing Study",
            "text": "To showcase the applicability of the framework, we will use it to do a drug repurposing study for COVID-19 in a simple manner without the need for training a dedicated model. To start with, we will be focusing on DRKG [21], a Drug Repurposing Knowledge Graph for COVID-19, created from structured databases and publications related to COVID-19 (details on DRKG can be seen in Table I). Having constructed this KG, the creators in [21] devised a simple procedure to find possible drugs for the disease4. Specifically, they used 8140 drugs from DrugBank as candidates, that are FDAapproved and with molecular weight more than 250 daltons. Moreover, they use 34 entities in the KGs as representatives of the target disease (e.g. Disease::SARS-CoV2 Spike, Disease::MESH:D045169), which are essentially variants or duplicates of the disease from different databases. Thus, they want to predict possible treatment links between these drug nodes and the disease nodes.\nIn order to do that, they train a graph embedding model (specifically TransE [24]), in order to generate embeddings for the nodes and the relations. Having this model in place, they then score all 8140 \u00d7 34 combinations of drugs and diseases and rank them from the most probable to the least one. In order to evaluate them, they test how many of the top-100 drugs have been also tested in a clinical trial5. They found 5 candidates in their top-100 that were also used in some clinical trial6, and these are shown in Table II.\nOur task is to explore whether the PAM representation makes it easy for us to identify these candidate drugs. To do that, we first construct the 1-hop PAM matrix of DRKG, according to Eq.(1). Then as a very simple predictor, we utilize a matrix factorization method that is commonly used for link prediction [25]. Specifically, we approximate the original matrix P through P\u0303 = U \u2217S \u2217V , a low k-rank approximation of the matrix, where we only use the k first eigenvalues of the eigendecomposition of P to approximate the original matrix.\n4As also described here. 5The clinical trial drugs that were mentioned at the time were 32 and taken from http://www.covid19-trials.com/, as accessed on September\u201921. 6Excluding Ribavirin which was already included as a treatment for SARS in the KG.\nFor our purpose, we chose k = 200 to be on the same scale as the hidden embedding size of h = 400 of the TransE model.\nUsing this approximation, we score all the combinations of drugs and diseases (i.e. we look up the cell values for these pairs in P\u0303 ) and rank them from highest to lowest. Using this simple procedure, we found 9 candidates in the top-100 highest-scoring ones, including all those found using the TransE embeddings, as shown in the PAM-SVD column of Table II. We can see that 3/5 of the drugs proposed by TransE were scored higher through our model. Moreover, if we use as golden truth drugs, the ones that have been used in more recent clinical trials7, the TransE method has 32 hits at its top-100, while the unsupervised PAM-SVD method has 45 hits, again outperforming the trained embeddings model. Also, let us note that the PAM-SVD procedure takes less than two minutes in total in a conventional laptop, for constructing the PAM matrix and calculating the low-rank approximation, while in comparison, the TransE embeddings are trained for multiple epochs until convergence (the authors mention training on an AWS machine with 8 GPUs).\nOverall, we showcased the efficiency and simplicity of using PAM on the task of drug repurposing. As shown, for a medium-scale heterogeneous knowledge graph as DRKG we can have the PAM representation constructed very fast and then perform numerous downstream tasks on top. Moreover, having a single matrix to represent the whole KG in a compact form allows us to leverage well-studied techniques from classical network analysis, such as the low-rank approximation used here. Finally, it is also worth noting that in the above procedure, no training of any model was required, allowing for fast prototyping of ideas."
        },
        {
            "heading": "C. Metapath Extraction Study",
            "text": "As discussed previously, through the PAM representation we can easily calculate the multi-hop paths between two nodes using the values of the P k matrices. These multi-hop paths express the chain of relations that connect two nodes in the graph. These \u201cmetapaths\u201d capture semantics that express specific relationships between the entities and can also be\n7As the ones found in https://go.drugbank.com/covid-19, where 708 drugs are used in clinical trials.\nused to hypothesize and provide explanations for possible links that may connect these entities. To showcase this we will be focusing on HetioNet [6], which was created by integrating more than 29 resources containing diseases, genes, anatomies, pathways, compounds, disease symptoms, and many more. In [6], they devised a methodology to find metapaths in this heterogeneous graph that captures patterns that can be used to identify specific chemical compounds (i.e. drugs) suitable for treating a disease. These metapaths express naturally some mechanisms of pharmacological efficacy. For example, a metapath of the form Compound\u2013binds\u2013Gene\u2013associates\u2013Disease (CbGaD) identifies when a drug binds to a protein, corresponding to a gene, involved in the disease.\nTo find these metapaths, they used the existing Compoundtreats-Disease relations as supervision labels to train machine learning models and extract important metapaths. Through their methodology, they came up with various important metapaths. Those with a length of k = 2 are shown in Table III.\nOur task is to explore whether we can easily identify these metapaths using PAMs. To do that, we first construct P and calculate P 2 for HetioNet. After having mapped the relations to primes the outcome would be something similar to the two paths shown in Fig. 2 (a), where the important metapath Compound\u2013resembles\u2013Compound\u2013treats\u2013Disease (CrCtD) is mapped to the sequence of primes 3, 5, with the relation \u201cresembles\u201d mapped to 3 and \u201ctreats\u201d to 5. This essentially means that this metapath is exhibited in P 2 in the form of P 2[C1, D] = 3 \u2217 5 = 15. Hence, the values found in P 2 express different kinds of metapaths, and we simply need to look up the matrix P 2 to extract them.\nHowever, in order to find the ones that imply that a compound treats a disease, we can utilize the pairs of compounds\nand diseases for which we already know that are also directly connected with a \u201ctreats\u201d relation, in the original knowledge graph. This is the same line of thought as the original work, where they use this knowledge as a supervision signal for training their models.\nOnce again, this is simply translated into looking up the pairs for which P [C,D] = 5 (i.e. \u201ctreats\u201d) in the 1-hop PAM. Following this procedure, we can extract possibly important metapaths M from the cells (C,D) for which P 2[C,D] 6= 0, and P [C,D] = 5. For example, the metapath m1 corresponding to the CrCtD path of Fig. 2 (a) would be expressed as m1 : 15 \u21d2 5, meaning that if we see a compound and a disease connected through the value 15 in P 2 (i.e. the path CrCtD) , it is possible that this compound should be directly connected with the relation 5 (i.e. \u201ctreats\u201d ) with the disease.\nAfter completing this process and finding all possible metapaths M of length 2 that imply the relation \u201ctreats\u201d we ended up with 55 distinct such metapaths. These are more than the ones presented in the original work, because the metapaths in P k essentially express aggregates of paths, due to the summation of products in the values of the cells of P 2. For example, the pattern at the top of Fig. 2 (b) would be expressed as P 2[C1, D] = 3 \u2217 5 + 3 \u2217 5 = 30 and the corresponding metapath generated from this pair of nodes (if C1 was also directly connected with D through a relation 5), would be m2 : 30 \u21d2 5. This metapath is treated as a different one in our approach from the metapath m1 : 15\u21d2 5 as it expresses a different kind of aggregation of paths, in this case, a compound connected to a disease through 2 distinct CrCtD paths.\nThis extra layer of complexity provides us with more flexibility in the patterns that are extracted. For example, the metapath at the bottom of Fig. 2 (b) (with the prime 7 corresponding to the relation \u201cpaliates\u201d) cannot be expressed with the patterns extracted by the original authors, because it is the aggregation of different kinds of paths connecting the same start and end node. However, following our process, it is easy to extract the corresponding metapath m3 : 36\u21d2 5.\nSpecifically, looking for compound-disease pairs that are connected through this m3 metapath we find 8 such pairs in the KG. Out of them, 4/8 pairs are also directly connected with the relation \u201ctreats\u201d (supporting our intuition that this also may be an important metapath). From the rest 4/8, which are not directly connected with the \u201ctreats\u201d relationship, 2 pairs were deemed irrelevant according to biomedical experts. However, for the remaining 2 pairs, the bibliography indicates that the compound in question actually treats the disease to which it is connected through m3. Specifically, we found that the compound Hexoprenaline8 is considered a treatment for the disease asthma [26] and the compound Fluticasone propionate9 can be used with other drugs in treatment for hematologic cancer [27]. This indicates that the more complex metapaths that are extracted with our methodology can also be used for novel drug efficacy predictions.\n8https://go.drugbank.com/drugs/DB08957 9https://go.drugbank.com/drugs/DB00588\nOverall, in this section, we showcased the usefulness of PAMs in the task of metapath mining. For a medium-scale heterogeneous knowledge graph, we can have the high-order PAMs readily available very fast and we can easily extract, through the described look-up and matching process, possibly important metapaths that can be used to offer semantic explainability to novel links proposed by a computational system. Finally, it is also worth noting that in the above procedure, no training of any model was required, as opposed to the original work, in order to find the same important metapaths along with more complex ones."
        },
        {
            "heading": "IV. CONCLUSIONS",
            "text": "In this work, we introduced the Prime Adjacency Matrix (PAM) representation for analysing biomedical knowledge graphs. It allows us to represent whole KGs through a singleadjacency matrix losslessly. This enables us to tackle many downstream tasks on the graph, leveraging tools from classical network analysis. We showcased this by providing brief studies on drug repurposing and metapath extraction. In the future, we aim to further experiment with the representation, firstly by verifying the results of the two case studies presented here in a more rigorous evaluation framework. Also, we will experiment with more complex representations extracted from the PAMs and move on to new tasks, such as drug-targetdisease predictions. Finally, it would be interesting to use the framework for different granularity graphs as well, such as representing small-molecules and tackling molecule property prediction tasks."
        }
    ],
    "title": "Analysing Biomedical Knowledge Graphs using Prime Adjacency Matrices",
    "year": 2023
}