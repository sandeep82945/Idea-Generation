{
    "abstractText": "In dial-a-ride systems involving autonomous vehicles circulating along a circuit, a fleet of vehicles must serve clients who request rides between stations of the circuit such that the total number of pick-up and drop-off operations is minimized. In this paper, we focus on a unitary variant where each client requests a single place in the vehicles and all the clients must be served within a single tour of the circuit. Such unitary variant induces a combinatorial optimization problem for which we introduce a nontrivial special case that is polynomially solvable when the capacity of each vehicle is at most 2 but it is NP-Hard otherwise. We also study the polytope associated with the solutions to this problem. We introduce new families of valid inequalities and give necessary and sufficient conditions under which they are facet-defining. Based on these inequalities, we devise an efficient branch-and-cut algorithm that outperforms the state-of-the-art commercial solvers.",
    "authors": [
        {
            "affiliations": [],
            "name": "Mourad Ba\u00efou"
        },
        {
            "affiliations": [],
            "name": "Rafael Colares"
        },
        {
            "affiliations": [],
            "name": "Herv\u00e9 Kerivin"
        },
        {
            "affiliations": [],
            "name": "Mourad Ba\u00efoua"
        },
        {
            "affiliations": [],
            "name": "Rafael Colaresa"
        },
        {
            "affiliations": [],
            "name": "Herv\u00e9 Kerivina"
        }
    ],
    "id": "SP:d096baa670a87c1e25438ad2e17797d07783e324",
    "references": [
        {
            "authors": [
                "M. Ba\u00efou",
                "R. Colares",
                "H. Kerivin"
            ],
            "title": "The complexity of the Unit Stop Number Problem and its implications to other related problems",
            "venue": "URL: https://hal.archives-ouvertes.fr/hal-03120087. preprint",
            "year": 2021
        },
        {
            "authors": [
                "K. Braekers",
                "A. Caris",
                "G.K. Janssens"
            ],
            "title": "Exact and meta-heuristic approach for a general heterogeneous dial-a-ride problem with multiple depots",
            "venue": "Transportation Research Part B: Methodological",
            "year": 2014
        },
        {
            "authors": [
                "S. Bsaybes",
                "A. Quilliot",
                "A.K. Wagler"
            ],
            "title": "Fleet management for autonomous vehicles using multicommodity coupled flows in time-expanded networks, in: 17th International Symposium on Experimental Algorithms (SEA 2018), Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik",
            "year": 2018
        },
        {
            "authors": [
                "R. Carvajal",
                "S. Ahmed",
                "G. Nemhauser",
                "K. Furman",
                "V. Goel",
                "Y. Shao"
            ],
            "title": "Using diversification, communication and parallelism to solve mixedinteger linear programs",
            "venue": "Operations Research Letters",
            "year": 2014
        },
        {
            "authors": [
                "V. Chvatal"
            ],
            "title": "Edmonds polytopes and a hierarchy of combinatorial problems",
            "venue": "Discrete mathematics",
            "year": 1973
        },
        {
            "authors": [
                "R. Colares"
            ],
            "title": "Exploring combinatorial aspects of the stop number problem",
            "venue": "Ph.D. thesis",
            "year": 2019
        },
        {
            "authors": [
                "J.F. Cordeau"
            ],
            "title": "A branch-and-cut algorithm for the dial-a-ride problem",
            "venue": "Operations Research",
            "year": 2006
        },
        {
            "authors": [
                "J.F. Cordeau",
                "G. Laporte"
            ],
            "title": "The dial-a-ride problem: models and algorithms",
            "venue": "Annals of operations research",
            "year": 2007
        },
        {
            "authors": [
                "B.T. Denton",
                "A.J. Miller",
                "H.J. Balasubramanian",
                "T.R. Huschka"
            ],
            "title": "Optimal allocation of surgery blocks to operating rooms under uncertainty",
            "venue": "Operations research",
            "year": 2010
        },
        {
            "authors": [
                "M.E. Dyer",
                "A.M. Frieze"
            ],
            "title": "Planar 3dm is np-complete",
            "venue": "Journal of Algorithms",
            "year": 1986
        },
        {
            "authors": [
                "D.J. Fagnant",
                "K. Kockelman"
            ],
            "title": "Preparing a nation for autonomous vehicles: opportunities, barriers and policy recommendations",
            "venue": "Transportation Research Part A: Policy and Practice",
            "year": 2015
        },
        {
            "authors": [
                "M. Fischetti",
                "H.W. Hamacher",
                "K. J\u00f8rnsten",
                "F. Maffioli"
            ],
            "title": "Weighted k-cardinality trees: Complexity and polyhedral structure. Networks",
            "year": 1994
        },
        {
            "authors": [
                "M. Fischetti",
                "M. Monaci"
            ],
            "title": "Exploiting erraticism in search",
            "venue": "Operations Research",
            "year": 2014
        },
        {
            "authors": [
                "M.R. Garey",
                "D.S. Johnson"
            ],
            "title": "Computers and intractability. volume 29. W.H",
            "year": 2002
        },
        {
            "authors": [
                "O. Goldschmidt",
                "D.S. Hochbaum",
                "A. Levin",
                "E.V. Olinick"
            ],
            "title": "The sonet edge-partition problem",
            "venue": "Networks: An International Journal",
            "year": 2003
        },
        {
            "authors": [
                "Gomory",
                "R.E"
            ],
            "title": "Outline of an algorithm for integer solutions to linear programs",
            "venue": "Bulletin of the American Mathematical society",
            "year": 1958
        },
        {
            "authors": [
                "S.C. Ho",
                "W. Szeto",
                "Y.H. Kuo",
                "J.M. Leung",
                "M. Petering",
                "T.W. Tou"
            ],
            "title": "A survey of dial-a-ride problems: Literature review and recent developments",
            "venue": "Transportation Research Part B: Methodological",
            "year": 2018
        },
        {
            "authors": [
                "V. Kaibel",
                "M.E. Pfetsch"
            ],
            "title": "Packing and partitioning orbitopes",
            "venue": "Mathematical Programming",
            "year": 2008
        },
        {
            "authors": [
                "R.M. Karp"
            ],
            "title": "Reducibility among combinatorial problems, in: Complexity of computer computations",
            "year": 1972
        },
        {
            "authors": [
                "M.S. Krishnamoorthy"
            ],
            "title": "An np-hard problem in bipartite graphs",
            "venue": "ACM SIGACT News",
            "year": 1975
        },
        {
            "authors": [
                "M. Liu",
                "Z. Luo",
                "A. Lim"
            ],
            "title": "A branch-and-cut algorithm for a realistic dial-a-ride problem",
            "venue": "Transportation Research Part B: Methodological",
            "year": 2015
        },
        {
            "authors": [
                "F. Margot"
            ],
            "title": "Symmetry in integer linear programming, in: 50 Years of Integer Programming 1958-2008",
            "year": 2010
        },
        {
            "authors": [
                "J. Ostrowski",
                "M.F. Anjos",
                "A. Vannelli"
            ],
            "title": "Symmetry in scheduling problems",
            "year": 2010
        },
        {
            "authors": [
                "S.N. Parragh"
            ],
            "title": "Introducing heterogeneous users and vehicles into models and algorithms for the dial-a-ride problem",
            "venue": "Transportation Research Part C: Emerging Technologies",
            "year": 2011
        },
        {
            "authors": [
                "S.N. Parragh",
                "K.F. Doerner",
                "R.F. Hartl"
            ],
            "title": "A survey on pickup and delivery problems",
            "venue": "Journal fu\u0308r Betriebswirtschaft",
            "year": 2008
        },
        {
            "authors": [
                "S. Pelletier",
                "O. Jabali",
                "G. Laporte"
            ],
            "title": "50th anniversary invited article\u2014goods distribution with electric vehicles: review and research perspectives",
            "venue": "Transportation Science",
            "year": 2016
        },
        {
            "authors": [
                "V. Pimenta",
                "A. Quilliot",
                "H. Toussaint",
                "D. Vigo"
            ],
            "title": "Models and algorithms for reliability-oriented dial-a-ride with autonomous electric vehicles",
            "venue": "European Journal of Operational Research",
            "year": 2017
        },
        {
            "authors": [
                "R. Ravi",
                "R. Sundaram",
                "M.V. Marathe",
                "D.J. Rosenkrantz",
                "S.S. Ravi"
            ],
            "title": "Spanning trees\u2014short or small",
            "venue": "SIAM Journal on Discrete Mathematics",
            "year": 1996
        },
        {
            "authors": [
                "S. Ropke",
                "J.F. Cordeau",
                "G. Laporte"
            ],
            "title": "Models and branch-and-cut algorithms for pickup and delivery problems with time windows",
            "venue": "Networks: An International Journal",
            "year": 2007
        },
        {
            "authors": [
                "A. Sabharwal",
                "H. Samulowitz",
                "C. Reddy"
            ],
            "title": "Guiding combinatorial optimization with uct, in: International Conference on Integration of Artificial Intelligence (AI) and Operations Research (OR) Techniques in Constraint Programming",
            "year": 2012
        },
        {
            "authors": [
                "H.D. Sherali",
                "J.C. Smith"
            ],
            "title": "Improving discrete model representations via symmetry considerations",
            "venue": "Management Science",
            "year": 2001
        }
    ],
    "sections": [
        {
            "text": "In dial-a-ride systems involving autonomous vehicles circulating along a circuit, a fleet of vehicles must serve clients who request rides between stations of the circuit such that the total number of pick-up and drop-off operations is minimized. In this paper, we focus on a unitary variant where each client requests a single place in the vehicles and all the clients must be served within a single tour of the circuit. Such unitary variant induces a combinatorial optimization problem for which we introduce a nontrivial special case that is polynomially solvable when the capacity of each vehicle is at most 2 but it is NP-Hard otherwise. We also study the polytope associated with the solutions to this problem. We introduce new families of valid inequalities and give necessary and sufficient conditions under which they are facet-defining. Based on these inequalities, we devise an efficient branch-and-cut algorithm that outperforms the state-of-the-art commercial solvers.\nKeywords: Combinatorial optimization, autonomous vehicles, dial-a-ride, computational complexity, polyhedral study"
        },
        {
            "heading": "1. Introduction",
            "text": "It is undeniable that the demand for faster, cheaper, and more convenient forms of mobility has unceasingly evolved throughout the history of human civilization. Transport systems have also developed along. Today\n\u2217Corresponding author Email addresses: baiou@isima.fr (Mourad Ba\u00efou), rafael.colares@gmail.com\n(Rafael Colares), kerivin@isima.fr (Herv\u00e9 Kerivin)\nPreprint submitted to European Journal of Operational Research February 17, 2022\nmore than ever, mobility represents an important issue when dealing with sustainability challenges. Autonomous vehicles and electric vehicles have been key actors in transforming the transportation sector and reshaping mobility, through new types of business and service models for the former and more environment-friendly alternatives for the latter. Several studies can be found in the literature that link electric autonomous vehicles to improvements of air quality, traffic mitigation, and safety. (See, e.g., Fagnant and Kockelman (2015) and Pelletier et al. (2016).)\nOne of the many issues and challenges of deploying electric autonomous vehicles is the management of fleets of such vehicles when operating in semiclosed or closed sites such as medical complexes, commercial or industrial areas, airports, train stations, and campuses. VIPA, a French acronym standing for Automomous Individual Public Vehicle, is an example of an electric driverless vehicle designed to transport goods or people in such environments. (See, e.g., EasyMile (2015) whose EZ10 shuttles have been operating in a dozen US cities, on a trial basis, for over a year.) VIPA shuttles may perform in three different modes of operation (Bsaybes et al., 2018). In this paper we only focus on the so-called tram mode where same-capacity VIPA shuttles continuously go around a circuit, always in the same direction, and upon requests stop at predefined stations to pick up and drop off users. Each of these dial-a-ride requests, later on called demands, is specified by a pick-up station, a drop-off station, and a load that corresponds to the number of places the user will be needing in a VIPA shuttle.\nDue to infrastructure restrictions, the stations are not located on the circuit but are attached to it as illustrated in Figure 1. This peculiarity significantly impacts the management of the fleet of vehicles. Indeed, a VIPA shuttle responding to a request must slow down and deviate from its original course. This necessary detour increases the travel time of on-board users as well as the shuttle\u2019s battery consumption, a key resource for electrical vehicles. If the detour lengths are supposed to be approximately the same, the quality of service can then be improved by minimizing the total number of stops the VIPA shuttles have to perform. Pimenta et al. (2017) pointed out that a reduction of the total number of stops also ensures a steady flow of vehicles which helps improve the reliability of such VIPA-based systems. The Stop Number Problem (SNP) we consider in this paper hence consists of assigning the demands to the shuttles of a fleet such that no shuttle ever is overloaded and the total number of stops is minimized.\nIn practice, a VIPA-based system obviously needs to dynamically manage an ongoing flow of demands. This is usually handled through online algorithms. However an analysis of the solutions and difficulties one would\n2\nencounter in an offline management (i.e., when all the demands are known beforehand) may help gain important insights into the development of bettersuited online algorithms. A reasonable option therefore is to deeply investigate the offline version of SNP and thus determine where its complexity lies. In this paper, we explore the combinatorial core of SNP through the simplest version of the problem where (i) as many same-capacity vehicles as necessary are available to serve all the demands, (ii) each user only requests a single place (i.e., unit load), and (iii) a vehicle may only serve a demand during its first tour of the circuit (i.e., no waiting tours). This version of SNP, hereafter denoted Unit Stop Number Problem (USNP), is formally defined as follows."
        },
        {
            "heading": "1.1. The Unit Stop Number Problem",
            "text": "We first go over some notation we use throughout this paper. Let the edge set (resp. node set) of an undirected graph G be denoted by E(G) (resp. V (G)) or simply E (resp. V ) when G is clear from the context. For F \u2286 E, let V (F ) denote the set of nodes spanned by the edges in F . For v \u2208 V , the degree of node v in G is denoted degG(v). Given a subset of edges F \u2286 E, the undirected graph (V (F ), F ) induced by F is denoted G(F ).\nLet V = {1, . . . , n} be the set of predefined stations as they appear along the circuit network. Even though all the vehicles leave from a same depot, we assume without loss of generality that the depot does not belong to V . Let E be the set of m unit-load demands, where each demand e is specified by a pick-up station oe \u2208 V and a drop-off station de \u2208 V . Without loss of generality, we assume that each station of V appears as the endpoint of at least one demand of E. We also assume that oe < de for any demand e = (oe, de) in E. Notice that if this is not the case, one can provide an equivalent instance by setting V = {1, . . . , 2n} and replacing demands (oe, de) by (oe, de + n) for any e in E where oe > de. To serve these m demands, we are given a fleet K of p identical vehicles, each of them having the same capacity C \u2208 Z+. Since the decision maker can use\n3\nas many vehicles as needed to reduce the total number of stops, the number p of available vehicles is set to the trivial upper bound m unless otherwise specified. With any USNP instance I = (V,E,C) a graph GI = (V,E) is associated where stations and demands may be referred to as nodes and edges, respectively. When instance I is clear from the context, we may omit the subscript I and only write G. Figure 2 provides an example of an USNP instance and its associated graph.\nDemands having the same pick-up and drop-off stations (e.g., e1 and e2 in Figure 2) are referred to as parallel demands and correspond to multiple edges in GI . Without loss of generality, we suppose that GI is a (loopless) connected multigraph for otherwise solving USNP on GI would reduce to solving as many independent USNPs as GI has connected components.\nFor any F \u2286 E and any v \u2208 V , let \u2206F (v) = {e \u2208 F : oe \u2264 v < de} denote the set of demands of F that need to go through station v. Notice that demands having v as their drop-off station do not belong to \u2206F (v). The demands belonging to \u2206E(v) are said to intersect station v. Every station v whose set \u2206E(v) is inclusionwise maximal (i.e., there is no v\u2032 in V such that \u2206E(v) \u2282 \u2206E(v\u2032)) is referred to as a maximal-intersection station. For the example depicted in Figure 2, \u2206E(1) = {e1, e2},\u2206E(2) = {e1, e2, e3, e4},\u2206E(3) = {e4, e5}, and \u2206E(4) = \u2205, and both stations 2 and 3 are maximal-intersection.\nAny feasible solution to USNP can hence be represented as a partition of E into p (possibly empty) subsets E1, . . . , Ep that satisfies |\u2206Ei(v)| \u2264 C for all i = 1, . . . , p and all v \u2208 V . USNP thus consists of finding a partition {E1, . . . , Ep} that minimizes the cost function\nc(E1, . . . , Ep) = p\u2211 i=1 |V (Ei)|,\nwhere V (Ei) is composed of all the stations where vehicle i stops.\n4"
        },
        {
            "heading": "1.2. Literature review",
            "text": "SNP was first introduced in Pimenta et al. (2017) where it was proven to be (weakly) NP-Hard through a simple reduction from the classic partition problem (Garey and Johnson (2002)). The authors presented a GRASPbased heuristic for SNP along with a branch-and-price method that turned out to be inefficient due to a lack of strong bounds. USNP was also mentioned in Pimenta et al. (2017) where it was conjectured to be NP-hard. This conjecture was proven by Ba\u00efou et al. (2021) where USNP is showed to be NP-hard for any fixed capacity C \u2265 2 even when the graph associated with the instance is planar bipartite.\nUSNP clearly correponds to a specific case of the well-studied Dial-ARide Problem (DARP). Indeed DARP arises from door-to-door transportation services, particularly for elderly and disabled people, and its objective is twofold. It not only consists of assigning demands to vehicles but also of designing minimum-cost vehicle routes to determine a picking-up and delivery order that fulfills client-driven requirements (e.g., time windows, maximum riding time, and vehicle occupancy).\nFrom an exact-method standpoint, a usual strategy for dealing with DARP is to use branch-and-cut algorithms. The first branch-and-cut algorithm for DARP was proposed by Cordeau (2006) who introduced a threeindex formulation and derived families of valid inequalities from well-known inequalities valid for the Vehicle Routing Problem and the Traveling Salesman Problem. Ropke et al. (2007) proposed a tighter two-index formulation and also introduced new families of valid inequalities based on the idea of incompatible time windows. Parragh (2011) and Braekers et al. (2014) adapted known branch-and-cut algorithms to deal with heterogeneous vehicles. Liu et al. (2015) proposed new valid inequalities for taking into account problem-specific properties such as driver lunch breaks. For more extensive and detailed surveys on DARP, the reader is referred to Cordeau and Laporte (2007), Parragh et al. (2008) and Ho et al. (2018).\nA common point in the DARP literature is the use of valid inequalities to tackle scheduling issues such as precedence requirements, time-windows compatibility, or subtour prevention. However these specific aspects of DARP appear irrelevant to USNP where they are implicitly taken into account since the vehicles must serve all the demands within a single tour of a predefined circuit. These inequalities, necessary for DARP, therefore become of no interest when dealing with USNP.\nIt is also worth noticing that the combinatorics behind USNP is closely related to other well-studied telecommunication problems such as the traffic\n5\ngrooming problem as pointed out by Ba\u00efou et al. (2021) and the k-edge partitioning problem. For these relations require a deeper understanding of the solutions to USNP, they are postponed to Section 2."
        },
        {
            "heading": "1.3. Our contribution",
            "text": "In the next section, the complexity of USNP is investigated and connections with other well-studied problems are drawn. We present special cases where the problem can be solved in polynomial time as well as cases where USNP is proven to be NP-Hard. In Section 3 a polyhedral analysis is conducted and yields new facet-defining inequalities that strengthen an integer-programming formulation known in the literature. Section 4 is devoted to a branch-and-cut framework with a focus on symmetry and variable management, and separation problems. Computational results demonstrating the efficiency of our branch-and-cut approach are provided at the end of that section. In Section 5, we conclude the paper pointing out interesting directions of research. Notice that many results presented along this study can be extended to other related problems. These extensions are exposed when necessary. The complete proofs of theorems are provided in the Appendix."
        },
        {
            "heading": "2. Complexity analysis",
            "text": "USNP is trivially solvable in polynomial time if C = 1. Ba\u00efou et al. (2021) have proven that USNP becomes NP-hard for any fixed capacity C \u2265 2 even when the associated graph G is planar bipartite. In this section we focus on a variant of USNP where all the demands intersect some station v\u2032 \u2208 V , that is, \u2206E(v\u2032) = E. Let Intersection-USNP (I-USNP) denote this variant. Notice that in I-USNP, each vehicle overall serves at most C demands. This last fact will be deeply explored throughout this paper and is the main argument behind both the development of our complexity results and our polyhedral study. The study of I-USNP is therefore crucial since it helps to better understand and solve the more general USNP.\nRemark 1. For every I-USNP instance I = (V,E,C), the set of stations V can be partitioned into U = {1, . . . , v\u2032} and V \\ U = {v\u2032 + 1, . . . , n}, where v\u2032 \u2208 V is the unique station with \u2206E(v\u2032) = E. In this case every demand in E has its pick-up station in U and its drop-off station in V \\ U , and the associated graph GI = (V,E) hence is bipartite.\nWe now show that I-USNP can be solved in O(m) time for C \u2264 2. Surprisingly, for C \u2265 3, even this very restrictive variant remains NP-Hard.\n6"
        },
        {
            "heading": "2.1. Polynomial cases",
            "text": "For every v \u2208 V , let \u03b4+(v) = {e \u2208 E : oe = v} (resp. \u03b4\u2212(v) = {e \u2208 E : de = v}) denote the set of demands having v as their pick-up (resp. dropoff) station. It can therefore be easily seen that at least \u2308 max{|\u03b4+(v)|,|\u03b4\u2212(v)|}\nC \u2309 vehicles need to stop at station v. Consequently a lower bound on the number of stops is \u2211\nv\u2208V\n\u2308 max{|\u03b4+(v)|, |\u03b4\u2212(v)|}\nC\n\u2309 . (1)\nNotice that for I-USNP, either \u03b4+(v) = \u2205 or \u03b4\u2212(v) = \u2205 for every station v \u2208 V . Moreover, each vehicle serves no more than C demands in I-USNP. It then follows that when C = 1, sequentially assigning a demand to an available vehicle solves I-USNP. The number of stops of this trivial solution equals 2m and by (1), it is optimal. The next theorem states that for C = 2, I-USNP can be solved in polynomial time as opposed to general USNP.\nTheorem 1. Intersection-USNP can be solved in O(m) time when C = 2.\nProof. Consider an instance I = (V,E, 2) of I-USNP. Suppose E has two parallel demands e and e\u2032. We claim that there exists an optimal solution wherein e and e\u2032 are served by the same vehicle. Assume on the contrary that e and e\u2032 are served by different vehicles in every optimal solution. Let {E\u22171 , . . . , E\u2217p} be an optimal solution with, without loss of generality, e \u2208 E\u22171 and e\u2032 \u2208 E\u22172 . We trivially have |E\u22171 | = 2 for otherwise {E\u22171 \u222a {e\u2032}, E\u22172 \\ {e\u2032}, E\u22173 , . . . , E\u2217p} would be a feasible solution with no more stops than {E\u22171 , . . . , E\u2217p}. Similarly |E\u22172 | = 2. Let {f} = E\u22171 \\{e} and {f \u2032} = E\u22172 \\ {e\u2032}. Consider now the feasible solution {{e, e\u2032}, {f, f \u2032}, E\u22173 , . . . , E\u2217p} and let \u03b1 = |V ({f, f \u2032})|. We have\nc({e, e\u2032}, {f, f \u2032}, E\u22173 , . . . , E\u2217p}) = c(E\u22171 , . . . , E\u2217p)\u2212(|V (E\u22171)|+ |V (E\u22172)|)+2+\u03b1. (2) If e and f or e\u2032 and f \u2032 are parallel demands, we then have |V (E\u22171)| + |V (E\u22172)| = 2 + \u03b1 and {{e, e\u2032}, {f, f \u2032}, E\u22173 , . . . , E\u2217p} is optimal by (2). If none of the sets E\u22171 and E\u22172 is composed of parallel demands, we have |V (E\u22171)|+ |V (E\u22172)| \u2265 6 \u2265 2 + \u03b1, the last inequality coming from \u03b1 \u2264 4. Solution {{e, e\u2032}, {f, f \u2032}, E\u22173 , . . . , E\u2217p} hence is optimal. Consequently we may assume that in the optimal solution {E\u22171 , . . . , E\u2217p}:\ni. the first p\u2032 \u2264 p vehicles serve pairs of parallel demands, that is, subsets E\u2217i are composed of parallel demands for 1 \u2264 i \u2264 p\u2032, and\nii. \u22c3p\ni=p\u2032+1E \u2217 i contains no parallel demands.\n7\nPacking together pairs of parallel demands (i.e., computing E\u2217i for 1 \u2264 i \u2264 p\u2032) can be done in linear time. So we now consider the I-USNP instance I \u2032 = (V,E\u2032, 2), where E\u2032 = E \\ \u22c3p\u2032 i=1E \u2217 i contains no parallel demands. We now show that an optimal solution {E\u2032\u22171 , . . . , E\u2032\u2217p } to I \u2032 can be constructed in O(m) time which results in I also being solved in O(m) time.\nWe assume, w.l.o.g., that for every vehicle i, G(E\u2032\u2217i ) is a connected graph, for otherwise the two demands assigned to vehicle i could be split between two vehicles and the obtained solution would be as good as {E\u2032\u22171 , . . . , E\u2032\u2217p }. Therefore, solving I \u2032 amounts to maximizing the number of subsets E\u2032\u2217i containing two connected demands. To do so, consider the line-graph of GI\u2032 , where every node represents a demand and two nodes are adjacent if their associated demands share an endpoint. A matching M in such line-graph provides a feasible solution to I \u2032. Indeed, every edge in M corresponds to the pair of demands served by a vehicle. The remaining demands (i.e., the ones associated with the nodes incident to no edges in M) can be each assigned to different vehicles. Consequently solving the maximum-cardinality matching problem in the line-graph of GI\u2032 clearly solves I \u2032.\nNotice that every edge in the line-graph of GI\u2032 corresponds to a 2-path (i.e., a simple path of length 2) in GI\u2032 . The maximum-cardinality matching problem in the line-graph of GI\u2032 thus is equivalent to the maximum edgedisjoint 2-path packing problem in GI\u2032 . Masuyama and Ibaraki (1991) gave an algorithm, that runs in O(m) time, to solve the latter problem."
        },
        {
            "heading": "2.2. NP-hardness",
            "text": "After having proven that I-USNP can be solved in polynomial time for C \u2264 2, the question of whether or not I-USNP is NP-Hard for larger capacities arises naturally. We first point out that I-USNP can be solved in polynomial time for C \u2264 2 mainly because of two properties its optimal solutions satisfy. The first one is related to the number of nonempty vehicles used in an optimal solution.\nLet pmin \u2264 p denote the minimum number of vehicles necessary to serve the m demands of a USNP instance and let popt \u2265 pmin denote the minimum number of nonempty vehicles used by an optimal solution. For the demands can be viewed as (half closed - half open) intervals of the real line, pmin clearly can be computed in polynomial time by a first-fit algorithm where the demands are picked out according to the order of their increasing pick-up station. More precisely, we have pmin = maxv\u2208V {\u2308 |\u2206E(v)|\nC\n\u2309} .\n8\nProperty 1. For C \u2264 2, there exists an optimal solution of IntersectionUSNP whose number of nonempty vehicles equals the minimum number of necessary vehicles (i.e., popt = pmin).\nIndeed, for C = 2, whenever two vehicles only serve one demand each, those two demands can be merged into a single vehicle and the obtained solution is as good as the initial one. Consequently the optimal solution obtained through the procedure described in the proof of Theorem 1 can easily be tweaked to only use pmin vehicles. Therefore popt = pmin for IUSNP when C = 2.\nBased on empirical observation, Pimenta et al. (2017) claimed that Property 1 holds for USNP whatever the value of C is. This claim was disproven by Ba\u00efou et al. (2021) who gave a counter-example for which popt > pmin.\nFor I-USNP with C \u2265 3, we now show that this property may not always be satisfied. To do so, we consider the instance of I-USNP with C = 3 depicted in Figure 3. This instance is composed of 3 sets of 3 parallel demands, all being picked up at station 1, and 3 pairs of demands \u03b4+(2), \u03b4+(3), and \u03b4+(4). Notice that v\u2032 = 4. By assigning each of the 6 foregoing sets to different vehicles we obtain a feasible solution using 6 vehicles and yielding 15 stops. Since the lower bound (1) on the number of stops equals 15, this solution is optimal.\nThe minimum number of necessary vehicles clearly is pmin =\n\u2308\n|\u2206(v\u2032)|\nC \u2309\n=\u2308\n15 3 \u2309 = 5. We claim that no optimal solution using pmin vehicles exists. In\nany solution with 15 stops, exactly \u2308 max{|\u03b4\u2212(v)|,|\u03b4+(v)|}\nC\n\u2309 vehicles must stop\nat every station v \u2208 V , that is, one vehicle stops at each of the stations 2, 3, and 4, two vehicles at each of the stations 5, 6, and 7, and three vehicles at station 1. Moreover if only five vehicles are used then every vehicle needs to serve three demands. For i \u2208 {2, 3, 4}, both demands in \u03b4+(i) together with one of the parallel demands hence need to be assigned to the same\n9\nvehicle. We thus already have three vehicles that stop at station 1 but six of the parallel demands have not been assigned yet. Consequently at least two more vehicles need to stop at station 1. The number of vehicles stopping at station 1 therefore exceeds the three vehicles required in any optimal solution. So, no optimal solution with 5 vehicles exists.\nA second property of optimal solutions to I-USNP, that seems quite intuitive, is about parallel demands being assigned to the same vehicle providing no overloading happens.\nProperty 2. For any pair of parallel demands, there exists an optimal solution to Intersection-USNP, C = 2, where these parallel demands are served by the same vehicle.\nThe optimal solution to I-USNP with C = 2 described in the proof of Theorem 1 relies on Property 2. However for larger values of C, this second property does not have to be satisfied by any optimal solution to I-USNP as illustrated by the following counter-example. Consider the instance of IUSNP with C = 4 described in Figure 4. This instance contains two parallel demands, namely d and e. The solution {E1, E2} with E1 = {a, b, c, d} and E2 = {e, f, g, h} is feasible to this instance and yields 8 stops. Notice that parallel demands d and e are not assigned to the same vehicle. If these parallel demands were assigned to the same vehicle then no feasible solution with less than 9 stops would exist. In fact, every subset of 3 or 4 demands of {a, b, c, f, g, h} assigned to the same vehicle would result in at least 4 stops for that vehicle, and every subset of 2 demands in at least 3 stops. Overall, the total number of stops would be at least 9.\nThe fact that Properties 1 and 2 do not hold for higher capacities starts to indicate that solving I-USNP might not be that easy. Before proving that I-USNP with C \u2265 3 is indeed NP-Hard, we draw a tight connection between I-USNP and the well-known k-Edge-Partitioning Problem (k-EPP).\n10\nIn the literature, k-EPP appears as a uniform version of the intra-ring synchronous optical network design problem (Goldschmidt et al., 2003). This latter problem is a network design problem arising from the deployment of synchronous optical networks (i.e., a North-American standardized communication protocol, known as SONET, used to transmit a large amount of data over relatively large distances using optical fibers). In SONET networks, a set of telecommunication centers are linked in a circular way by a cable composed of optic fibers, called rings, each having a fixed capacity. Given a set of demands, each specified by two distinct centers and a requested bandwidth, the intra-ring synchronous optical network design problem consists of assigning the demands to the rings such that the total bandwidth assigned to a ring does not exceed its capacity. For each ring, an electronic termination called Add-Drop Multiplexer (ADM) must be placed at each center being the endpoint of at least one demand assigned to this ring. Notice that several demands assigned to the same ring and incident to the same center may use the same ADM. Due to the high cost of an ADM and the insignificant cost of using or opening a ring, the intra-ring synchronous optical network design problem aims at minimizing the number of installed ADMs.\nWhen all the requested bandwidths are equal and each ring can serve up to k demands, the intra-ring synchronous optical network design problem is known as k-EPP. This problem is formally defined as follows. Given a simple graph G = (V,E), where V represents the set of n centers and E the set of m demands (no parallel edges are allowed) and an integer k \u2265 1, find a partition of E into R subsets E1, . . . , ER such that |Ei| \u2264 k for i \u2208 {1, . . . , R} and \u2211R i=1 |V (Ei)| is minimized. Notice that if G is bipartite then k-EPP is equivalent to I-USNP with no parallel demands. Goldschmidt et al. (2003) proved that k-EPP is NP-Hard for general graphs and any fixed k \u2265 3. Unfortunately, their proof cannot be directly applied to bipartite graphs. A characterization of the complexity of I-USNP cannot thus be deduced from the one of k-EPP. We next prove that I-USNP is indeed NP-Hard even when G is planar bipartite. Therefore, the complexity result of k-EPP may be extended to the more restricted class of planar bipartite graphs.\nTo this end, we use a reduction from the 3-Dimensional Matching Problem (3DMP) which can be stated as follows. Given three disjoint sets X,Y, Z with |X| = |Y | = |Z| = q and a set T \u2286 X \u00d7 Y \u00d7 Z of triples, 3DMP problem consists of deciding whether or not there exists a 3-dimensional matching, that is, a subset M \u2286 T such that |M | = q and every element of S = X \u222a Y \u222a Z appears in exactly one triple of M . 3DMP is a wellknown NP-hard problem (Karp, 1972). In Dyer and Frieze (1986), 3DMP\n11\nwas showed to be NP-hard even when the bipartite graph G = (T, S,E), where E = \u22c3 t=(x,y,z)\u2208T {(t, x), (t, y), (t, z)}, is restricted to be planar. An illustration of graph G is given in Figure 5.\nTheorem 2. Intersection-USNP is NP-Hard for any fixed odd capacity C \u2265 3 even when G is restricted to be planar bipartite.\nProof. Consider a 3DMP instance as described above such that bipartite graph G is planar. Let k \u2265 1. We first transform G into a graph G\u2032 = (V \u2032, E\u2032) associated with an instance I = (V \u2032, E \u2032,\u2208\u2225 +\u221e) of I-USNP as follows. For every node v \u2208 Y \u222aZ, we replace edge (t, v) in E with a path P tv of length k and add degG(v)\u2212 1 node-disjoint paths P 1v , . . . , P degG(v)\u22121 v of length k+ 1, all having v as an endnode. For every node x \u2208 X, we add degG(x)\u22121 nodedisjoint paths P 1x , . . . , P degG(x)\u22121 x of length 2k, all having x as an endnode. The number of nodes in G\u2032 clearly equals (6k + 1)|T | \u2212 (4k \u2212 1)q and its number of edges (2k+1)(3|T | \u2212 2q). Notice that since G is planar bipartite, so is G\u2032. See Figure 6 for an illustration of graph G\u2032.\n12\nTo obtain instance I of I-USNP, the stations in V \u2032 now need to be labeled such that there exists a station v\u2032 where all demands intersect. From G\u2032 being bipartite, V \u2032 can be partitioned into independent sets W and W . A feasible labeling of V \u2032 thus consists of first mapping the nodes in W onto {1, . . . , |W |} and then those in W onto {|W | + 1, . . . , |V \u2032|}. Notice that v\u2032 is the node in W with the largest label. The construction of I can clearly be done in polynomial time. We claim that this 3DMP instance has a 3-dimensional matching of cardinality q if and only if I-USNP instance I has a solution with |E\u2032|+ |E\n\u2032| 2k+1 stops.\nConsider a solution {E\u20321, . . . , E\u2032p} to I with |E\u2032|+ |E\u2032| 2k+1 stops. By definiton, |E\u2032i| \u2264 2k + 1 for all i \u2208 {1, . . . , p}. Since G\u2032 contains no cycle of size less than 2k + 2, every nonempty subgraph G\u2032(E\u2032i) is a forest with fi \u2265 1 components and every nonempty vehicle i \u2208 {1, . . . , p} thus makes |E\u2032i| + fi stops. The total number of stops of this given solution therefore is |E\u2032| + \u2211p i=1 fi. We then obtain \u2211p i=1 fi = |E\u2032| 2k+1 = pmin, that is, only pmin vehicles are nonempty and each of them serves 2k + 1 demands and stops 2k + 2 times. Consequently for every station v in X \u222a Y \u222a Z, the degG(v)\u22121 paths P 1v , . . . , P degG(v)\u22121 v are assigned to different vehicles. Each of these 3|T | \u2212 q vehicles also serves either P tv if v \u2208 Y \u222aZ or (t, v) if v \u2208 X as G\u2032(E\u20321), . . . , G\u2032(E\u2032p) are trees with 2k + 1 edges if nonempty. This last property of G\u2032(E\u20321), . . . , G\u2032(E\u2032p), along with the number of nonempty vehicles being |E\n\u2032| 2k+1 , then implies that each of the remaining q nonempty vehicles\nserves an edge (t, x) and two paths P ty and P tz for some t = (x, y, z) \u2208 T . The loads of these last q vehicles clearly induce a 3-dimensional matching of cardinality q in G.\nConversely from any 3-dimensional matching of cardinality q in G, a solution to I with |E\u2032|+ |E\n\u2032| 2k+1 stops can easily be obtained by following the\nforegoing process in a reverse order.\nCorollary 1. k-EPP is strongly NP-Hard even when G is restricted to be planar bipartite.\nUsing a similar idea as in the proof of Theorem 2, we prove the NPHardness of I-USNP for all even values of C greater than or equal to 6.\nTheorem 3. Intersection-USNP is NP-Hard for any fixed even capacity C \u2265 6 even when G is restricted to be planar bipartite.\nProof. The proof follows a similar approach as in Theorem 2. Let k \u2265 1. To obtain an I-USNP instance I with C = 2k + 4 from a 3DMP instance\n13\nwith planar bipartite graph G, we construct graph G\u2032 = (V \u2032, E\u2032) from G by (i) replacing every edge (t, v), v \u2208 Y \u222a Z, with a path P tv of length k + 1, (ii) replacing every edge (t, x), x \u2208 X, with a P tv of length 2, (iii) attaching degG(v) \u2212 1 node-disjoint paths P 1v , . . . , P degG(v)\u22121 v of length k + 3 to every node v \u2208 Y \u222a Z, and (iv) attaching deg(x) \u2212 1 disjoint paths P 1x , . . . , P degG(x)\u22121 x of length 2k + 2 to every node x \u2208 X. See Figure 7 for an illustration of bipartite planar graph G\u2032 when C = 10 (i.e., k = 3).\nWith a partition of V \u2032 into two independent sets, we associate a feasible labeling of the nodes in V \u2032 and we thus obtain instance I = (V \u2032, E\u2032, 2k + 4) in polynomial time. Using similar arguments as in the proof of Theorem 2 we prove that the 3DMP instance has a 3-dimensional matching of cardinality q if and only if I-USNP instance I has a solution with |E\u2032|+ |E\n\u2032| 2k+4 .\nThe only value of C for which the computational complexity of I-USNP remains open is C = 4. The key argument the proofs of Theorems 2 and 3 rely on is twofold: G\u2032 contains no cycle of size less than C + 1 and G\u2032 contains for every node t \u2208 T , a tree with C edges that covers t and its three associated nodes in X \u222a Y \u222a Z. This was achieved through successive subdivisions of the edges of G. If C was equal to 4, only one of the three edges in {(t, x), (t, y), (t, z)} could be subdivided for each t = (x, y, z) \u2208 T and cycles of size 4 might thus appear. That therefore prevents us from using a similar argument as in the two foregoing proofs to prove that I-USNP with C = 4 is NP-Hard on planar bipartite graphs. Since there is no reason to believe a polynomial-time algorithm could be devised for I-USNP with C = 4, we consequently conjecture.\nConjecture 1. The Intersection-USNP is NP-Hard for C = 4 even when\n14\nrestricted to the case where G is a planar bipartite graph."
        },
        {
            "heading": "3. Polyhedral Analysis",
            "text": "This section is devoted to a polyhedral study of USNP. A usual approach when tackling NP-Hard problems is to first model them as Mixed Integer Programs (MIPs) and then apply branch-and-cut based algorithms. A natural integer programming formulation for USNP presented in Pimenta et al. (2017) is described below\nmin \u2211 v\u2208V \u2211 i\u2208K yiv (3) subject to\u2211 i\u2208K\nxie = 1 \u2200e \u2208 E, (4)\u2211 e\u2208\u2206E(v) xie \u2264 C \u2200v \u2208 V, i \u2208 K, (5) xie \u2212 yiv \u2264 0 \u2200i \u2208 K, e \u2208 E, v \u2208 {oe, de}, (6) xie \u2208 {0, 1} \u2200e \u2208 E, i \u2208 K, (7) yiv \u2208 {0, 1} \u2200v \u2208 V, i \u2208 K. (8)\nFor every vehicle i \u2208 K and every demand e \u2208 E, the variable xie indicates whether or not demand e is served by vehicle i (i.e., xie = 1 iff e \u2208 Ei). The variable yiv represents the fact that vehicle i stops or not at station v (i.e., yiv = 1 iff v \u2208 V (Ei)). Objective function (3) minimizes the total number of stops. The assignment constraints (4) ensure that every demand is served by exactly one vehicle. The capacity constraints (5) guarantee that the vehicle\u2019s capacity never is violated all along the circuit. The stop constraints (6) impose that a vehicle must stop at the pick-up and drop-off stations of every demand assigned to it. Finally, constraints (7) and (8) make the x- and y-variables be binary. The formulation (3)-(8) is hereinafter referred to as USNP-XY. Its linear relaxation is obtained by replacing constraints (7) and (8) by the inequalities\n0 \u2264 xie \u2264 1 \u2200e \u2208 E, i \u2208 K, (9) 0 \u2264 yiv \u2264 1 \u2200v \u2208 V, i \u2208 K. (10)\nGiven an instance I = (V,E,C) of USNP, let USNP(V,E,C) denote the convex hull of the solutions to (4)-(8) and P(V,E,C) denote the feasible set\n15\nof the linear relaxation of USNP-XY, that is,\nP(V,E,C) = {(x, y) \u2208 Rmp \u00d7 Rnp : (x, y) satisfies (4)-(6),(9) and (10)}.\nThe next theorem states the dimension of polytope USNP(V,E,C) and gives the necessary and sufficient conditions for inequalities (5), (6), (9), and (10) to be facet-defining for USNP(V,E,C); the proofs are omitted, since they use standard techniques. (See Colares (2019).)\nTheorem 4. Let G = (V,E) be a graph and K be a set of p vehicles of same capacity C \u2208 Z+ such that p > pmin.\n(i) dim(USNP(V,E,C)) = (n+m)p\u2212m.\n(ii) Inequality (5) associated with station v \u2208 V and vehicle i \u2208 K is facetdefining for USNP(V,E,C) if and only if\na. \u2206E(v) \\\u2206E(u) \u0338= \u2205 for every station u \u2208 V \\ v and b. |\u2206E(v) \\ \u03b4(u)| \u2265 C for every station u \u2208 V .\n(iii) Inequalities (6) are facet-defining for USNP(V,E,C).\n(iv) Inequality xie \u2265 0 for demand e \u2208 E and vehicle i \u2208 K is facet-defining for USNP(V,E,C) if and only if p \u2265 3.\n(v) Inequality yiv \u2264 1 for station v \u2208 V and vehicle i \u2208 K is facet-defining for USNP(V,E,C)."
        },
        {
            "heading": "3.1. The weakness of formulation USNP-XY",
            "text": "The strength of formulations for USNP can be measured by the dual (lower) bounds its linear relaxations provide. The larger the bound is, the stronger the formulation is. We next investigate how strong formulation USNP-XY is.\nTheorem 5. Let zP (V,E,C) = min{ \u2211 v\u2208V \u2211 i\u2208k yiv : (x, y) \u2208 P (V,E,C)}. We have zP (V,E,C) = |V | = n.\nProof. We first show that zP (V,E,C) \u2265 n. For every station v \u2208 V , consider a demand ev \u2208 \u03b4+(v)\u222a \u03b4\u2212(v). Summing up the p inequalities (6) associated with v and ev yields \u2211 i\u2208K y i v \u2265 \u2211 i\u2208K x i ev . The n inequalities thus obtained, combined with (4), gives \u2211 i\u2208K yiv \u2265 1 \u2200v \u2208 V\n16\nand therefore zP (V,E,C) \u2265 n. To complete the proof we now provide a feasible solution (x\u0304, y\u0304) whose cost equals n. Let x\u0304ie = 1 p for all e \u2208 E, i \u2208 K, and y\u0304 i v = 1 p for all v \u2208 V, i \u2208 K. Solution (x\u0304, y\u0304) clearly satisfies constraints (4)-(6), (9), and (10). Therefore, (x\u0304, y\u0304) is a feasible solution whose cost is \u2211 v\u2208V \u2211 i\u2208K y\u0304 i v = |V |.\nNotice that n = |V | is a trivial lower bound on the number of stops. Since each station is assumed to be the pick-up or drop-off station for at least one demand, it indeed must be visited by at least one vehicle. The following example illustrates how the lower bound given in Theorem 5 may be very weak. Consider an instance where all demands go from station 1 to station 2. The optimal value of the linear relaxation of USNP-XY is equal to 2, while the optimal value of USNP-XY is 2 \u2308 m C \u2309 . In other words one may find a relative integrality gap as large as 1\u2212 1\u2308mC \u2309 . This negative result actually indicates that there exists quite some room for improvements on formulation USNP-XY. We therefore investigate new valid inequalities to strengthen it."
        },
        {
            "heading": "3.2. Strong capacity inequalities",
            "text": "The first family of inequalities we introduce relies on using C as an upper bound on the number of demands a vehicle may pick up (or drop off) at a station providing it stops there.\nTheorem 6. The strong capacity inequalities\u2211 e\u2208\u03b4\u2212(v)\nxie \u2212 Cyiv \u2264 0 \u2200v \u2208 V, i \u2208 K, (11)\u2211 e\u2208\u03b4+(v) xie \u2212 Cyiv \u2264 0 \u2200v \u2208 V, i \u2208 K. (12)\nare valid for USNP(V,E,C). Moreover, inequalities (11) (resp. (12)) associated with v \u2208 V are facet-defining if and only if |\u03b4\u2212(v)| \u2265 C + 1 (resp. |\u03b4+(v)| \u2265 C + 1).\nProof. Let i \u2208 K be a vehicle and v \u2208 V be a station. We first prove the validity of (11) and (12). If vehicle i does not stop at station v (i.e., yiv = 0) then it cannot serve any demand whose pick-up (or drop-off) station is v. If vehicle i stops at station v (i.e., yiv = 1), then its capacity only allows vehicle i to serve at most C demands whose pick-up (or drop-off) station is v. Inequalities (11) and (12) hence are valid for USNP(V,E,C).\nThe proof of necessary and sufficient conditions under which inequalities (11) and (12) are facet-defining for USNP(V,E,C) is given in the Appendix.\n17\nUsing Chv\u00e0tal-Gomory procedure (Chvatal, 1973; Gomory et al., 1958), we derive new valid inequalities from (4), (11), and (12).\nTheorem 7. The following min-stop inequalities\u2211 i\u2208K yiv \u2265 \u2308 max{|\u03b4\u2212(v)|, |\u03b4+(v)|} C \u2309 \u2200v \u2208 V (13)\nare valid for USNP(V,E,C).\nProof. Let v \u2208 V be a station. Summing up the p inequalities (11) associated with v yields \u2211\ne\u2208\u03b4\u2212(v) \u2211 i\u2208K xie \u2212 C \u2211 i\u2208K yiv \u2264 0.\nBy (4), we have \u2211\ne\u2208\u03b4\u2212(v) \u2211 i\u2208K xie = |\u03b4\u2212(v)|. After having divided the previous\ninequality by C and then rounded-up the constant term |\u03b4 \u2212(v)| C , we obtain\u2211 i\u2208K yiv \u2265 \u2308 |\u03b4\u2212(v)| C \u2309 . A similar argument gives \u2211 i\u2208K yiv \u2265 \u2308 |\u03b4+(v)| C \u2309 from (12).\nAdding inequalities (13) to formulation USNP-XY guarantees that its linear relaxation\u2019s optimal value is at least the lower bound provided by (1). It is also worth noticing that inequalities (11)-(13) cut off the fractional extreme point considered in the proof of Theorem 5. To assess the effectiveness of considering such inequalities in our formulation, we compare the root node\u2019s relative MIP gaps provided by CPLEX 12.8 when inequalities (11)-(13) are added or not to formulation USNP-XY.\nTo the best of our knowledge, there are no standard test sets for USNP in the literature. We therefore created our own set of 54 USNP instances that is used throughout our study. Each instance is randomly generated with respect to scenarios based on a number of demands m \u2208 {30, 35, 40, 45, 50, 55}, a capacity C \u2208 {2, 5, 8}, and a density \u03c1 = mn \u2208 {1.5, 3.0, 4.5}. Each generated instance is then referred to as m_C_\u03c1.\nTable 1 summarizes the results we obtained for instances with C = 5 and either low density (i.e., \u03c1 = 1.5) or high density (i.e., \u03c1 = 4.5). For each formulation (i.e., USNP-XY and USNP-XY with (11)-(13)), Table 1 presents the lower bounds LBr and upper bound UBr obtained after having processed the root node of our branch-and-cut framework. The relative MIP gaps UBr\u2212LBrUBr then are given in columns labeled gapr(%), and for formulation USNP-XY with (11)-(13) we also provide the numbers of added Strong Capacity inequalities (11)-(12) in column labeled cut.\n18\nInequalities (11)-(13) appear quite effective for high-density instances, with an average lower-bound increase of 52.48%, a reduction in the upperbound values, and consequently smaller relative MIP gaps. For low-density instances, the benefits of adding (11)-(13) seem very slim if any. Even though the lower bound averagely increased by 1.68%, half the upper bounds did worsen which thus led to larger relative MIP gaps. Such deterioration in the upper bounds is due to the way CPLEX handles its calls for primal heuristics.\nFor relatively sparse graphs, inequalities (11)-(13) may fail to effectively strengthen formulation USNP-XY as illustrated in Table 1 when \u03c1 = 1.5. The most symptomatic instances are those where the degree of each node is at most C. Inequalities (11)-(13) then become redundant and therefore yield no reinforcement of formulation USNP-XY. The instance given in Figure 8 where C = 2 illustrates this fact. The lower bound provided by the linear relaxation of USNP-XY with (11)-(13) is n, as stated in Theorem 5, while the optimal value to (3)-(8) equals 3n2 . To overcome this limitation, we introduce a new family of facet-defining inequalities that are based on the notion of k-cardinality tree.\n3.3. k-cardinality tree inequalities Given a positive integer k, a k-cardinality tree is an undirected, connected, and acyclic graph having exactly k edges (Fischetti et al., 1994). Let CT (G, k) denote the set of edge sets that induce k-cardinality trees of G,\n19\nthat is, CT (G, k) = {S \u2286 E(G) : G(S) is a k-cardinality tree}.\nTheorem 8. The k-cardinality tree inequalities\u2211 e\u2208S x i e \u2212 \u2211 u\u2208V (S)(degG(S)(u)\u2212 1)yiu \u2264 0 \u2200i \u2208 K, v \u2208 V, S \u2286 \u2206E(v)\nwith S \u2208 CT (G,C + 1) (14)\nare valid for USNP(V,E,C).\nProof. Let i \u2208 K be a vehicle, v \u2208 V be a station, and S \u2286 \u2206E(v) with T = G(S) being a (C + 1)-cardinality tree. We prove that the associated inequality (14) can be obtained as a rank-1 Chv\u00e1tal-Gomory cut. Select an arbitrary node r of T and think about T as a tree rooted at r. For every pair of distinct nodes t and u of T , we write t \u227a u if t lies on the path of T from r to u. For every node u \u2208 V (T ), let Tu denote the subtree of T rooted at u. (Note that Tr = T .) Consider the following linear combination of inequalities (5), (6), and (9)\n(C \u2212 |E(Tu)|)(xie \u2212 yit) \u2264 0 \u2200e = (t, u) \u2208 S, t \u227a u, |E(Tu)|(xie \u2212 yiu) \u2264 0 \u2200e = (t, u) \u2208 S, t \u227a u,\u2211\ne\u2208\u2206E(v) x i e \u2264 C,\n\u2212xie \u2264 0 \u2200e \u2208 \u2206E(v) \\ S.\nThe sum of the above inequalities results in (C + 1) \u2211 e\u2208S xie \u2212 (C + 1) \u2211 v\u2208V (S) (degG(S)(v)\u2212 1)yiv \u2264 C.\nDividing it by (C+1) and rounding down the right-hand side yields (14).\nFor the instance given in Figure 8 where C = 2, the optimal value of the linear relaxation of formulation USNP-XY reinforced with k-cardinality tree inequalities (14) equals 3m2 (i.e., the relative MIP gap has vanished). Figure 9 plots the root node\u2019s relative MIP gaps we obtained by considering either USNP-XY with (11)-(13) or USNP-XY with (11)-(14) for the foregoing\n20\ninstances where C = 2 and \u03c1 = 1.5. The addition of (14) makes these gaps drop below 40% when they were around 60% before.\nThe next theorem provides necessary and sufficient conditions under which inequalities (14) are facet-defining for USNP(V,E,C).\nTheorem 9. The k-cardinality tree inequalities (14) are facet-defining if and only if\n(i.) there does not exist a node u \u2208 V (S) such that S \u2282 \u03b4\u2212G(u) or S \u2282 \u03b4+G(u), and\n(ii.) there does not exist an edge (u1, u2) \u2208 E \\ S such that u1 and u2 are the only internal nodes of G(S).\nProof. The complete proof can be found in the Appendix.\nAlthough not used in the branch-and-cut framework described in Section 4, it is worth mentioning that a generalization of k-cardinality tree inequalities to S \u2286 E such that G(S) is a forest with |S \u2229\u2206E(v)| = C+1 have been introduced by Colares (2019)."
        },
        {
            "heading": "3.4. Girth inequalities",
            "text": "So far, we only have made use of sparsest structures, such as stars and trees, to derive valid inequalities for USNP(V,E,C). We now introduced new families of valid inequalities by looking at some denser structures. The girth\n21\nof a graph G corresponds to the length of its smallest cycle. If G is a graph of girth k, then G(S) is a forest for any S \u2286 E(G) such that |S| \u2264 k \u2212 1. Our next family of valid inequalities is based on this remark. Let G(G, k) denote the set of edge sets that induce subgraphs of girth at least k, that is, G(G, k) = {S \u2286 E(G) : G(S) has girth at least k}.\nTheorem 10. The girth inequalities\u2211 e\u2208S(C + 1)x i e \u2212 \u2211 u\u2208V (S)Cy i u \u2264 0 \u2200i \u2208 K, v \u2208 V, S \u2286 \u2206E(v)\nwith S \u2208 G(G,C + 1) (15)\nare valid for USNP(V,E,C).\nProof. Let i \u2208 K be a vehicle, v \u2208 V be a station, and S \u2286 \u2206E(v) with G(S) of girth greater than or equal to C+1. Consider an arbitrary feasible solution (x\u0304, y\u0304) \u2208 USNP(V,E,C)\u2229Z(n+m)p and let Si \u2286 S denote the set of demands of S served by vehicle i in the solution (x\u0304, y\u0304), that is, Si = {e \u2208 S : x\u0304ie = 1}. If Si = \u2205, then (15), associated with i, v, and S, is obviously satisfied by (x\u0304, y\u0304). Hence assume |Si| \u2265 1. By definition,\u2211\ne\u2208S (C + 1)x\u0304ie = \u2211 e\u2208Si (C + 1) = C|Si|+ |Si|.\nSince S \u2286 \u2206E(v), we must have |Si| \u2264 C. G[S] having girth greater than or equal to C + 1 thus implies that G[Si] must be a forest and vehicle i hence stops at at least |Si|+ 1 stations in V (S). Therefore,\u2211\nu\u2208V (S)\nCy\u0304iu \u2265 \u2211\nu\u2208V (Si)\nC \u2265 (|Si|+ 1)C = C|Si|+ C.\nConsequently,\u2211 e\u2208S (C + 1)x\u0304ie = C|Si|+ |Si| \u2264 C|Si|+ C \u2264 \u2211 u\u2208V (S) Cy\u0304iu,\nand our proof is complete.\nUsing Chv\u00e0tal-Gomory procedure, we derive new valid inequalities from girth inequalities (15).\nTheorem 11. The following inequalities\u2211 u\u2208V (S) \u2211 i\u2208K yiu \u2265 |S|+ \u2308 |S| C \u2309 \u2200v \u2208 V, S \u2286 \u2206E(v) with S \u2208 G(G,C+1) (16)\nare valid for USNP(V,E,C).\n22\nProof. Let v \u2208 V be a station and S \u2286 \u2206E(v) with G(S) of girth greater than or equal to C + 1. Summing up the p inequalities (15) yields\u2211\nu\u2208V (S) \u2211 i\u2208K Cyiu \u2265 \u2211 e\u2208S \u2211 i\u2208K (C + 1)xie.\nUsing (4),we then obtain\u2211 u\u2208V (S) \u2211 i\u2208K yiu \u2265 C + 1 C \u2211 e\u2208S \u2211 i\u2208K xie = C + 1 C |S| = |S|+ |S| C .\nRounding up |S|+ |S|C thus give inequalities (16). Note that S \u2208 G(G,C+1) implies |S| > C.\nIf (V,E,C) is an instance of I-USNP with G = (V,E) of girth greater than or equal to C + 1, then Theorem 11 immediately provides\nm+ \u2308m C \u2309 as a lower bound on the total number of stops."
        },
        {
            "heading": "4. Branch-and-cut and computational results",
            "text": "The branch-and-cut framework we have developed from the results obtained in Section 3 is hereafter presented. To boost its performance, several features, such as (i) breaking the symmetry inherent in USNP, (ii) eliminating variables, (iii) relaxing variables, and (iv) integrating the strengthening inequalities of Section 3, have been carefully handled and are next reviewed."
        },
        {
            "heading": "4.1. Symmetry",
            "text": "In Margot (2010), a MIP is defined as being symmetric if its variables can be permuted without changing the problem\u2019s structure. In our case, since vehicles are considered to be identical, USNP hides a complete symmetry with respect to vehicles. In other words, a feasible solution {E1, . . . , Ep} ensures the existence of p! distinct equivalent solutions since every permutation of {E1, . . . , Ep} is feasible and has the same number of stops.\nNumerous authors have highlighted the importance of eliminating, or at least reducing, symmetry that may appear in MIPs (e.g., Sherali and Smith (2001); Kaibel and Pfetsch (2008); Denton et al. (2010); Ostrowski et al. (2010)). When solving a symmetric MIP through a branch-and-bound-based procedure, isomorphic subproblems are encountered in the enumeration tree\n23\nyielding a useless duplication of efforts and slowing down the resolution process.\nKaibel et al. (2011) proposed a linear-time algorithm called Orbitopal Fixing that completely removes symmetry for partition problems. At each node of the enumeration tree, the method fixes variables based on both a predefined lexicographic order and the already-fixed variables at this current node. With respect to USNP, such lexicographic order would amount to impose that (i.) the e-th demand, e \u2208 {1, . . . ,m}, must be assigned to one of the first e vehicles, and (ii.) a demand e \u2208 E cannot be assigned to an empty vehicle i if there exists another empty vehicle i\u2032 such that i\u2032 < i. In our branch-and-cut framework to solve USNP, we have applied this Orbitopal-Fixing approach at every branching step. Classic symmetrybreaking constraints were also investigated but did not perform as well as the Orbitopal-Fixing approach. Detailed results on this feature may be found in Colares (2019)."
        },
        {
            "heading": "4.2. Variable elimination",
            "text": "In Section 2, we have showed that, unlike stated by Pimenta et al. (2017), the minimum number of vehicles needed to obtain an optimal solution to USNP may differ from the minimum number of vehicles needed to obtain a feasible solution, that is, popt \u0338= pmin. For this reason, the number of available vehicles p has been so far assumed to be m. Notice however, that the number of variables in our formulation is directly related to the number of available vehicles. More precisely, formulation USNP-XY uses (m + n)p variables. Providing a tighter upper bound on popt would therefore allow to considerably reduce the number of variables in the formulation. Moreover, as mentioned in the previous section, the symmetry inherent in USNP is closely related to the number of available vehicles, for each feasible solution corresponds to p! equivalent solutions. The benefits of decreasing the value of p would hence be twofold: reducing the number of variables in formulation USNP-XY and lessening the MIP symmetry. The next theorem provides a better upper bound on popt.\nTheorem 12. For any USNP instance I = (V,E,C), we have\npopt \u2264\n\u2308 m\u230a\nC 2\n\u230b + 1\n\u2309 .\nProof. Consider a USNP instance I for which popt = \u2308 m\n\u230aC2 \u230b+1\n\u2309 + 1.\n24\nLet {E1, . . . , Epopt , . . . , Ep} be an optimal solution for I where without loss of generality, Ei \u0338= \u2205 for 1 \u2264 i \u2264 popt and Ei = \u2205 for popt+1 \u2264 i \u2264 p. We clearly have |Ei1 |+ |Ei2 | > C for any distinct vehicles 1 \u2264 i1, i2 \u2264 popt since otherwise, merging both vehicles i1 and i2 would yield an optimal solution using one less vehicle. Therefore, at most one vehicle i \u2208 {1, . . . , popt} serves less than \u230a C 2 \u230b +1 demands, that is, this vehicle serves 1 \u2264 d \u2264 \u230a C 2 \u230b demands.\nAll the other (popt\u22121) vehicles serve at least \u230a C 2 \u230b +1 demands each, implying\nm \u2265 (popt \u2212 1) (\u230a C\n2\n\u230b + 1 ) + d = (\u2308 m\u230a\nC 2\n\u230b + 1\n\u2309)(\u230a C\n2\n\u230b + 1 ) + d. (17)\nSince m = (popt \u2212 1)\n(\u230a C\n2\n\u230b + 1 ) + r\nwith 0 \u2264 r < \u230a C 2 \u230b + 1, we obtain from (17) d \u2264 0, a contradiction to vehicle\ni being nonempty. Therefore, popt \u2264 \u2308 m\n\u230aC2 \u230b+1\n\u2309 .\nIt is worth noticing that the upper bound on popt given in Theorem 12 is tight for some USNP instances. Indeed, if we consider an instance of Intersection-USNP composed of C disjoint sets of \u230a C 2 \u230b +1 parallel demands, then the optimal solution consists of assigning each set to a different vehicle\nand hence, popt = \u2308 m\n\u230aC2 \u230b+1\n\u2309 = C."
        },
        {
            "heading": "4.3. Variable relaxation",
            "text": "It can be easily seen that once the x-variables are fixed to 0-1 values (i.e., once the set of demands each vehicle serves is known), the problem of deciding where the vehicles stop becomes trivial. For every vehicle i \u2208 K and every station v \u2208 V , we simply set variable yiv to max{xie : e is incident to v}. This means that the integrality constraints (8) for the y-variables can be dropped. Let USNP-X denote the formulation defined by (3)-(7),(10).\nThe opposite question of deciding whether or not an optimal assignment of demands to vehicles can be deduced in polynomial time once the stops of each vehicle are known is not straightforward. Such question may be answered by showing that the polytope associated with P (V,E,C) when the y-variables are fixed to 0-1 values is integral. We next positively answer this question for I-USNP but we provide a counterexample for general USNP.\nFor any y\u0304 \u2208 {0, 1}n\u00d7p let\nPx(V,E,C, y\u0304) = {(x, y) \u2208 P (V,E,C) : y = y\u0304}\n25\ndenote the face of the polytope P (V,E,C) induced by y being fixed to y\u0304.\nTheorem 13. Given an instance (V,E,C) of Intersection-USNP and a vector y\u0304 \u2208 {0, 1}n\u00d7p, the polyhedron Px(V,E,C, y\u0304) is integral. Proof. Since (V,E,C) is an instance of I-USNP, the capacity constraints (5) reduce to \u2211\ne\u2208E xie \u2264 C \u2200i \u2208 K. (18)\nThe coefficient matrix of the system (4),(18) corresponds to the node-edge incidence matrix of the complete bipartite graph whose node set is E \u222aK, and hence is well-known for being totally unimodular. Since appending the identity matrix to a totally-unimodular matrix preserves the totallyunimodular property and so does duplicating a row or multiplying a row by -1, the coefficient matrix of the system defining Px(V,E,C, y\u0304) also is totally unimodular. Consequently, Px(V,E,C, y\u0304) is an integral polytope.\nThe complete bipartite graph the proof of Theorem 13 relies on cannot be achieved for USNP instances. The total unimodularity of the system defining Px(V,E,C, y\u0304) then is not preserved for those instances. The following example shows that if there is no station v \u2208 V for which \u2206E(v) = E, then Px(V,E,C, y\u0304) may have a fractional extreme point. Consider the instance depicted in Figure 10 with C = 1. If y\u0304 = 1, then the following fractional solution x\u0304 is an extreme point of Px(V,E, 1,1) as it is the unique solution to the system of inequalities defining Px(V,E, 1,1) that are binding at x\u0304:\nx\u03041e = { 1 2 if e \u2208 {a, c, d}, 0 if e \u2208 {b}, x\u0304 2 e = { 1 2 if e \u2208 {a, b}, 0 if e \u2208 {c, d},\nx\u03043e = { 1 2 if e \u2208 {b, d}, 0 if e \u2208 {a, c}, x\u0304 4 e = { 1 2 if e \u2208 {c}, 0 if e \u2208 {a, b, d}.\na\nb c\nd\n1 2 3 4\nFigure 10: Counter-example USNP instance to prove the nonintegrality of polyhedron Px(V,E,C, y\u0304) when C = 1.\nFor USNP, keeping the integrality of the y-variables while relaxing that of the x-variables therefore does not guarantee the integrality of the associate solution. So let USNP-Y denote the formulation USNP-XY with the additional rules that prioritizes branching on a y-variable over an x-variable.\n26\nIn our computational experiments we therefore consider three formulations, USNP-XY, USNP-X, and USNP-Y that, although equally strong as their linear relaxations are identical, differ in how the integrality constraints (7),(8) and the branching rules are managed. In USNP-XY, no particular branching rule is applied and the optimization solver uses its default rules to choose which variable it branches on. In USNP-X, where (8) are relaxed, only x-variables can be branched on. In USNP-Y, branching on an x-variable is only possible once all the y-variables have values in {0, 1}. Notice that the information derived from fixing either an x-variable or a y-variable is much different. On the one hand, for a station v \u2208 V and a vehicle i \u2208 K, fixing yiv to 0 implies xie = 0 for every demand e \u2208 \u03b4(v). On the other hand, for a demand e \u2208 E and a vehicle i \u2208 K, fixing xie to 1 only implies yioe = y i de\n= 1. Furthermore, the denser the associated graph G is the larger is the difference between the numbers of x- and y-variables. We may therefore expect USNP-Y to produce better results when G is dense.\nTable 2 provides a sample of the results obtained with each formulation for the instances described in Section 3.2 where C = 5. In this experiment, Orbitopal Fixing symmetry-breaking method is applied and the number of available vehicles is set to the new upper bound on popt given by Theorem 12. For each formulation, the total number of binary variables is given in column bin. The total amount of time (in seconds) required by the branch-and-cut framework is displayed in column CPU. A time limit of 2 hours is imposed and once exceeded, the relative MIP gap is displayed in column gap. The number of nodes (in thousands) explored in the enumeration tree is given in column node.\nAs expected, formulation USNP-Y clearly outperforms the other two formulations for instances with dense graphs (i.e., \u03c1 = 4.5). Considering only instances with \u03c1 = 4.5, formulation USNP-Y was generally able to either solve faster the problem to optimality or provide smaller relative MIP gaps when compared to USNP-XY and USNP-X. For sparse instances (i.e., \u03c1 = 1.5), formulation USNP-Y did not outperform USNP-X or USNP-XY. Even if neither USNP-XY nor USNP-X seems to perform consistently better than the other for sparse instances in Table 2, a deeper analysis over the whole set of sparse instances shows that formulation USNP-X has, in average, slightly better performance. For this reason in the follow-up experiments, we have decided to only apply formulation USNP-X when the instance is sparse (i.e., \u03c1 = 1.5). For every other instance, we have chosen to only apply formulation USNP-Y."
        },
        {
            "heading": "4.4. Integrating cuts",
            "text": "We now look at how the strengthening valid inequalities (11), (12), (13), (14), (15), and (16) are managed throughout our branch-and-cut framework. Since the strong-capacity inequalities (11), (12), and (13) appear in polynomial numbers, storing them in a pool and checking whether they all are satisfied remains an efficient way of handling them. For the k-cardinality tree inequalities (14) and the girth inequalities (15), and (16), we next focus on their separation problems. Recall that for a family F of valid inequalities, the separation problem for F consists of either finding an inequality in F violated by a given a vector (x\u0304, y\u0304) \u2208 R(m+n)\u00d7p or proving that (x\u0304, y\u0304) satisfies all the inequalities in F .\nTheorem 14. The separation problem for the k-cardinality tree inequalities (14) is NP-Hard.\nProof. We give a reduction from the k-Minimum Spanning Tree decision problem (k-MST) which can be defined as follows. Given a graph G = (V,E) with edge-weight vector w \u2208 RE and a scalar B, does there exist a tree T = (V \u2032, E\u2032) spanning exactly k edges (i.e., so that |E\u2032| = k) with total weight at most B? This problem can be solved in polynomial time when G is itself a tree or when k is a fixed constant, but it is NP-Hard in the general case. (See Fischetti et al. (1994); Ravi et al. (1996).) Notice that for proving the NP-Hardness of k-MST, Fischetti et al. (1994) used a reduction from the Steiner Tree problem that preserves bipartiteness. Since the Steiner Tree problem is NP-Hard even on bipartite graphs (see Garey and Johnson (2002, p. 208)), k-MST also is NP-Hard on bipartite graphs.\n28\nConsider thus a k-MST instance specified by a bipartite graph G = (V,E), negative edge-weights w \u2208 RE , and a scalar B \u2208 R, and the I-USNP instance (V,E, k \u2212 1). Let (x\u0304, y\u0304) \u2208 R(m+n)\u00d7p be defined by x\u0304ie = \u2212we for every vehicle i \u2208 K and every demand e \u2208 E, and y\u0304iv = \u2212 Bk\u22121 for every vehicle i \u2208 K and every station v \u2208 V . We now show that any tree T \u2032 of G spanning exactly k edges such that w(E(T \u2032)) \u2264 B\u2212\u03f5 for \u03f5 > 0 corresponds to a k-cardinality tree inequality violated by (x\u0304, y\u0304). Let T be any k-cardinality tree in G. Notice that by definition, |V (T )| = k+1. Since all the y-variables have the same value, we then obtain\u2211\nu\u2208V (T )\n(degT (u)\u2212 1)y\u0304iu = \u2211\nu\u2208V (T )\ndegT (u)y\u0304 i u \u2212 \u2211 u\u2208V (T ) y\u0304iu\n= \u22122k B k \u2212 1 + (k + 1) B k \u2212 1 = \u2212B.\nTherefore, the k-cardinality inequality (14) associated with vehicle i \u2208 K and set E(T ) \u2208 CT (G, k) of demands is equivalent to\u2211\ne\u2208E(T )\nx\u0304ie \u2264 \u2212B.\nIf this inequality is violated by (x\u0304, y\u0304), then the k-cardinality tree T solves k-MST since \u2211 e\u2208E(T ) x\u0304 i e = \u2212w(E(T )). Conversely, any k-cardinality tree T of G such that w(E(T )) \u2264 B \u2212 \u03f5 induces a k-cardinality tree inequality violated by (x\u0304, y\u0304).\nSince the separation of inequalities (14) is NP-Hard, we have chosen to heuristically solve it through a simple greedy procedure. Given a solution (x\u0304, y\u0304) \u2208 R(m+n)\u00d7p and a vehicle i \u2208 K, this heuristic constructs a maximumweight (C+1)-cardinality tree of graphs G[\u2206E(v)] with the restriction of x\u0304i to \u2206E(v) as edge weights and the restriction of \u2212y\u0304i to V (\u2206E(v)) as node costs, for v \u2208 V , by iteratively adding the highest-valued edge to the tree. Such algorithm runs in O(Cm) time.\nTheorem 15. The separation problem for girth inequalities (15) is NP-Hard.\nProof. We show that the separation problem for the girth inequalities (15) is equivalent to the Hamiltonian Cycle (HC) problem. Given a graph G = (V,E), HC problem consists of finding a cycle H = (V, S) of G. This problem was shown to be NP-Hard even if G is bipartite (see Krishnamoorthy (1975)).\nFrom a bipartite graph G = (V,E), construct an I-USNP instance (V,E, |V | \u2212 1) and define (x\u0304, y\u0304) \u2208 R(m+n)\u00d7p as follows. For every vehicle i \u2208 K\n29\nand every demand e \u2208 E, let x\u0304ie = 1|V | and for every vehicle i \u2208 K and every station v \u2208 V , let y\u0304iv = 1|V | . We show that any girth inequality violated by (x\u0304, y\u0304) induces an Hamiltonian Cycle in G and conversely.\nLet S \u2286 E be the edge set of an Hamiltonian cycle H of G. The left-hand side of inequality (15) associated with vehicle i \u2208 K and set S \u2208 G(G, |V |) of demands then satisfies\u2211\ne\u2208S |V |x\u0304ie \u2212 \u2211 u\u2208V (S) (|V | \u2212 1)y\u0304iu = |V | \u2212 (|V | \u2212 1) > 0\nand this girth inequality is violated by (x\u0304, y\u0304). To complete the proof, let S \u2286 E be such that the girth of G[S] is greater than or equal to |V | and G[S] is not an Hamiltonian cycle of G. Then, G[S] is acyclic and hence |V | \u2265 |V (S)| \u2265 |S|+1. The left-hand side of inequality (15) associated with vehicle i \u2208 K and set S \u2208 G(G, |V |) of demands then satisfies \u2211\ne\u2208S |V |x\u0304ie \u2212 \u2211 u\u2208V (S) (|V | \u2212 1)y\u0304iu = |S| \u2212 |V (S)| |V | \u2212 1 |V | \u2264 0.\nConsequently if a girth inequality induced by a set S \u2286 E and violated by (x\u0304, y\u0304) is found, then the cycle G[S] solves HC problem.\nSince the separation problem for inequalities (15) is NP-Hard, we propose a greedy procedure to solve it heuristically. Given a solution (x\u0304, y\u0304) \u2208 R(m+n)\u00d7p and a vehicle i \u2208 K, this heuristic is based on the idea of building a maximum-cost spanning tree T of graphs G[\u2206E(v)] with the restriction of (C+1)x\u0304i to \u2206E(v) as edge weights, for v \u2208 V , and then including additional edges to T such that the resulting graph does not contain any cycle of size less than or equal to C. The proposed algorithm runs in O(m log n) time and is also used to heuristically separate inequalities (16)."
        },
        {
            "heading": "4.5. Numerical experiments",
            "text": "To implement the features described in this section, we have made use of the callback functionality of CPLEX 12.8. When doing so, CPLEX deactivates some of its default settings (e.g., dynamic search and dual reductions). For a fair comparison, a dummy callback is used to deactivate such features in our baseline CPLEX solver. This is a common practice in the literature for proving the efficiency of branching, cutting planes, and node-selection methods. (See, e.g., Carvajal et al. (2014), Sabharwal et al. (2012), Fischetti and Monaci (2014).) Table 3 provides a performance comparison of\n30\nthe branch-and-cut framework described in Section 4 (displayed as scenario branch-and-cut) and the formulation USNP-XY solved using CPLEX\u2019s traditional branch-and-cut algorithm (displayed as scenario CPLEX).\nColumns timeg, LBg, UBg, gapg, and Nodes provide information on the global optimization process by showing, respectively, the total amount of time (in seconds), the lower and upper bounds obtained at the end of the optimization process, the relative MIP gap and the total number of nodes investigated in the enumeration tree. Column CP refers to the total number of cuts CPLEX automatically generated during the whole optimization process. Columns cutSC , cutKT , and cutG indicate the total numbers of violated strong capacity inequalities (11)-(13), k-cardinality tree inequalities (14), and girth inequalities (15)-(16), respectively, added during the optimization process. Finally, columns cuttot and timecut provide the total number of added user-defined cuts (11)-(16) and the total amount of time spent solving the separation problems for (14)-(16), respectively. All numerical experiments were performed on a 3.1 GHz Intel Xeon E5 computer with 32 Gb of memory.\nThe results achieved by branch-and-cut clearly outperform the ones obtained with CPLEX. Indeed, while only one out of the 54 instances described in Section 3.2 could be solved to optimality within the time limit of 2 hours by CPLEX, branch-and-cut could optimally solve 24 of them. The only instance solved by CPLEX required almost 40 minutes while branch-and-cut solved it in only 2 seconds. Moreover, the number of nodes explored to prove optimality for such instance went down from 538,000 to 100.\nEven if the total number of explored nodes required to prove optimality is greatly reduced with branch-and-cut, the time spent at each node of the enumeration tree might considerably increase. Despite the fact that the linear-relaxation size (i.e., the numbers of variables and constraints) is significantly reduced by the elimination of variables and the integration of symmetry-breaking methods described in Section 4, longer node evaluation does not come as a surprise since many violated cuts are added to the formulation, yielding several re-optimization of the node\u2019s linear program. Notice that for some unsolved instances (e.g., 55_2_3.0), branch-and-cut spent the whole optimization process at the root node, searching for violated cuts and re-optimizing the root\u2019s linear program with such new cuts. Such behavior reveals a trade-off between quickly solving the nodes\u2019 linear programs and hence further exploring the enumeration tree, or instead, strengthening the nodes\u2019 formulations with the continuous search for violated cuts. Using our separation heuristics, we believe we have found a good balance between these two aspects. Indeed, for the 30 instances that could not be solved\n31\nto optimality within the time limit by any of the two approaches, the average lower bound obtained by CPLEX was 20.45 compared with 35.13 for branch-and-cut. Moreover, the average relative MIP gap went down from 48.12% with CPLEX to 12.04% with branch-and-cut.\nIt is important to highlight that even if the CPLEX automatic cut generation was not disabled in branch-and-cut, very few cuts were introduced through this feature when compared with CPLEX. In average, 105 such cuts were added using CPLEX while only 2 such cuts were added in branch-and-cut. This reveals that the vast majority of the cuts automatically added by CPLEX might be actually dominated by the ones added through our separation routines. This presumption is enhanced by the fact that the cuts we add are often facet-defining inequalities. Moreover, our heuristics presented in Section 4.4 have proved to be quite effective in the search for violated cuts. Indeed, we added in average 2445.3 k-cardinality tree inequalities (14) and 505.8 girth inequalities (15)-(16) during the whole optimization process. The relatively small number of generated girth inequalities generated is explained by the fact their separation routine is run only when no violated strong capacity inequality nor k-cardinality tree inequality is identified. This explains why no girth inequality was included for some instances (e.g., 55_2_3.0). The total number of cuts added was, in average, of 2983.4 cuts."
        },
        {
            "heading": "5. Concluding remarks",
            "text": "In this paper we have focused on USNP for which we have obtained some complexity results and new facet-defining inequalities that, combined with variable elimination and symmetry-breaking rules, have significantly improved the behavior of our branch-and-cut framework. These valid inequalities can be easily generalized to SNP, that is, when demands may request as many places as needed and the vehicles may perform several tours of the circuit. Intensive computational experiments would then definitely assess the impact that such inequalities would have on the performance of our branch-and-cut framework to solve SNP (and for other related problems such as the k-Edge Partitioning as well). Future research lines may also involve the investigation of reformulating our formulation to provide tighter linear relaxations. This might be a way to bypass the need of so many additional cuts to reinforce the formulation.\nFor the complexity aspect, we have showed that I-USNP for C = 2 can be solved in polynomial time by reducing it to a maximum-cardinality matching problem. It follows that a complete description of the I-USNP\n33\npolytope for C = 2 can be obtained from the matching polytope. The study of the projection of that polytope onto R(m+n)p (i.e., the (x, y)-space of natural variables) may reveal new families of facet-defining inequalities for SNP. Finally, the answer to our conjecture stating that the I-USNP is NP-Hard for C = 4 even when G is restricted to be planar bipartite remains an open question that deserves attention."
        },
        {
            "heading": "Acknowledgments",
            "text": "This work was funded by a public grant overseen by the French National Research Agency as part of the \u201cInvestissements d\u2019Avenir\u201d through the IMobS3 Laboratory of Excellence (ANR-10-LABX-0016) and the IDEXISITE initiative CAP 20-25 (ANR-16-IDEX-0001). Financial support was also received from the European Union through the European Regional Development Fund (ERDF) program and by the Auvergne-Rh\u00f4ne-Alpes region."
        },
        {
            "heading": "Appendix A. Additional notations",
            "text": "Next we present the complete proofs of Theorems 6 and 9. Before doing so we introduce some additional notation and present two auxiliary lemmas.\nDefinition 1 (Idleness). Given an instance I = (V,E,C) of USNP and a solution (x\u0304, y\u0304) in USNP(V,E,C), vehicle i \u2208 K is said to be perfectly idle if x\u0304ie = 0 for every e \u2208 E and y\u0304iv = 0 for every v \u2208 V .\nDefinition 2 (Sequential permutation). Given an instance I = (V,E,C) of USNP, a solution (x\u0304, y\u0304) in USNP(V,E,C), and a subset of vehicles S = {s1, . . . , s|S|} \u2286 K, the solution (x\u0302, y\u0302) in USNP(V,E,C) is said to be a sequential permutation of (x\u0304, y\u0304) over S if for every i \u2208 K and every e \u2208 E\nx\u0302ie =  x\u0304 s\u2113+1 e if i = s\u2113 with \u2113 \u2208 {1, . . . , |S| \u2212 1},\nx\u0304s1e if i = s|S|, x\u0304ie if i \u0338\u2208 S,\nand for every i \u2208 K and every v \u2208 V\ny\u0302iv =  y\u0304 s\u2113+1 v if i = s\u2113 with \u2113 \u2208 {1, . . . , |S| \u2212 1}, y\u0304s1v if i = s|S|, y\u0304iv if i \u0338\u2208 S.\nNotice that if S = K, a solution {E\u03021, . . . , E\u0302p} is said to be a sequential permutation of solution {E\u03041, . . . , E\u0304p} if for every i \u2208 {1, . . . , p}, we have E\u0302i = E\u0304i+1. (All the indices are interpreted modulo p.)\n34"
        },
        {
            "heading": "Appendix B. Auxiliary lemmas",
            "text": "Lemma 1. Given an instance (V,E,C) of USNP, a station v\u2032 \u2208 V , and a vehicle i\u2032 \u2208 K, let (x\u0304, y\u0304) in USNP(V,E,C) with y\u0304i\u2032v\u2032 = 0, and let (x\u0302, y\u0302) be the solution in USNP(V,E,C) such that x\u0302 = x\u0304 and for every i \u2208 K and every v \u2208 V,\ny\u0302iv =  y\u0304iv if i \u2208 K \\ i\u2032, y\u0302i\n\u2032 v if i = i\u2032 and v \u2208 V \\ v\u2032, 1 if i = i\u2032 and v = v\u2032."
        },
        {
            "heading": "If both (x\u0304, y\u0304) and (x\u0302, y\u0302) belong to the same face",
            "text": "F \u2032 = { (x, y) \u2208 USNP(V,E,C) : \u03b1Tx+ \u03b2T y = \u03b3 } ,\nthen \u03b2i\u2032v\u2032 = 0. Proof. If (x\u0304, y\u0304) \u2208 F \u2032, the following equality holds\u2211 e\u2208E \u2211 i\u2208K \u03b1iex\u0304 i e + \u2211 v\u2208V \u2211 i\u2208K \u03b2ivy\u0304 i v = \u03b3. (B.1)\nIf (x\u0302, y\u0302) \u2208 F \u2032, the following equality holds\u2211 e\u2208E \u2211 i\u2208K \u03b1iex\u0304 i e + \u2211 v\u2208V \u2211 i\u2208K \u03b2ivy\u0304 i v + \u03b2 i\u2032 v\u2032 = \u03b3. (B.2)\nBy subtracting (B.1) from (B.2), one obtains \u03b2i\u2032v\u2032 = 0.\nLemma 2. Given an instance (V,E,C) of USNP, a demand e\u2032 \u2208 E and vehicle i\u2032 \u2208 K, let (x\u0304, y\u0304) \u2208 USNP(V,E,C) be a solution where vehicle i\u2032 is perfectly idle, and let (x\u0302, y\u0302) \u2208 USNP(V,E,C) constructed by transferring demand e\u2032 that was served by some vehicle k \u2208 K \\ {i\u2032} to vehicle i\u2032. If both (x\u0304, y\u0304) and (x\u0302, y\u0302) belong to the same face\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) : \u03b1Tx+ \u03b2T y = \u03b3 } ,\nthen \u03b1i\u2032e\u2032 + \u03b2 i\u2032 oe\u2032 + \u03b2i \u2032 de\u2032 = \u03b1ke\u2032 . Proof. If (x\u0304, y\u0304) \u2208 F \u2032, the following equality holds\u2211 e\u2208E \u2211 i\u2208K \u03b1iex\u0304 i e + \u2211 v\u2208V \u2211 i\u2208K \u03b2ivy\u0304 i v = \u03b3. (B.3)\nIf (x\u0302, y\u0302) \u2208 F \u2032, the following equality holds\u2211 e\u2208E \u2211 i\u2208K \u03b1iex\u0304 i e \u2212 \u03b1ke\u2032 + \u03b1i \u2032 e\u2032 + \u2211 v\u2208V \u2211 i\u2208K \u03b2ivy\u0304 i v + \u03b2 i\u2032 oe\u2032 + \u03b2i \u2032 de\u2032 = \u03b3. (B.4)\nBy subtracting (B.3) from (B.4), one obtains \u03b1i\u2032e\u2032 + \u03b2 i\u2032 oe\u2032 + \u03b2i \u2032 de\u2032 = \u03b1ke\u2032 .\n35"
        },
        {
            "heading": "Appendix C. Proof of Theorem 6.",
            "text": "Theorem 6. The following holds:\n(i) Strong Capacity inequalities (11) (resp. (12)) are valid for USNP(V,E,C), and\n(ii) are facet-defining if and only if |\u03b4\u2212(v)| (resp. |\u03b4+(v)|) \u2265 C + 1. Proof. Let i \u2208 K be a vehicle and v \u2208 V be a station. We first prove the validity of (11) and (12). If vehicle i does not stop at station v (i.e., yiv = 0) then it cannot serve any demand whose pick-up (or drop-off) station is v. If vehicle i stops at station v (i.e., yiv = 1), then its capacity only allows vehicle i to serve at most C demands whose pick-up (or drop-off) station is v. Inequalities (11) and (12) hence are valid for USNP(V,E,C).\nWe now prove the necessary and sufficient conditions for the face F induced by inequality (11) associated with i and v to be a facet of UNSP(V,E,C). The proof for the face induced by inequality (12) is analogous. Assume |\u03b4\u2212(v)| \u2264 C. Summing up the |\u03b4\u2212(v)| inequalities (6) associated with i and v then yields the inequality\u2211\ne\u2208\u03b4\u2212(v)\nxie \u2212 |\u03b4\u2212(v)|yiv \u2264 0\nwhich dominates (11) if |\u03b4\u2212(v)| < C since\u2211 e\u2208\u03b4\u2212(v) xie \u2212 Cyiv \u2264 \u2211 e\u2208\u03b4\u2212(v) xie \u2212 |\u03b4\u2212(v)|yiv \u2264 0.\nNotice that if C = |\u03b4\u2212(v)| then F \u228a {(x, y) \u2208 USNP(V,E,C) : xie \u2212 yiv = 0} \u228a USNP(V,E,C) for all e \u2208 \u03b4\u2212(v). The necessity of |\u03b4\u2212(v)| \u2265 C + 1 for inequality (11) to be facet-defining of USNP(V,E,C) thus is proven.\nFor the sufficiency of this condition, we prove that if |\u03b4\u2212(v)| \u2265 C+1, then F is an inclusionwise maximal proper face of USNP(V,E,C). More specifically, we show that if F \u2286 F \u2032, where F \u2032 is a proper face of USNP(V,E,C) defined as\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) :\n\u2211 e\u2208E \u2211 k\u2208K \u03b1kex k e + \u2211 u\u2208V \u2211 k\u2208K \u03b2kuy k u = \u03b3\n} ,\nfor \u03b1 \u2208 Rmp, \u03b2 \u2208 Rnp, and \u03b3 \u2208 R, then F \u2032 is induced by a linear combination of inequality (11) associated with i and v, and equations (4), that is,\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K \u03bbex k e + \u2211 e\u2208\u03b4\u2212(v) \u03c9xie \u2212 \u03c9Cyiv = \u2211 e\u2208E \u03bbe  , 36\nfor \u03c9 \u2208 R and \u03bb \u2208 Rm. This implies F = F \u2032. To do so, we follow this six-step process:\n(i) show all the components of vector \u03b2, but \u03b2iv, equal 0;\n(ii) for every demand e \u2208 E, show all the components \u03b1ke , but \u03b1ie, of vector \u03b1, equal \u03bbe;\n(iii) for every demand e \u2208 E not having v as its drop-off station and every vehicle k \u2208 K, show all the components \u03b1ke of vector \u03b1 equal \u03bbe;\n(iv) for every two demands e1 and e2 in E having v as their drop-off station and every vehicle k \u2208 K different from i, show \u03b1ie1 \u2212 \u03bbe1 = \u03b1 i e2 \u2212 \u03bbe2 ;\n(v) for every demand e having v as its drop-off station and every vehicle k \u2208 K different from i, show \u03b1ie \u2212 \u03bbe = \u03c9 = \u2212 \u03b2iv C ;\n(vi) for every vehicle k \u2208 K different from i, show \u03b3 = \u2211 e\u2208E \u03bbe.\nStep (i) Let (x\u0304, y\u0304) \u2208 USNP(V,E,C) be such that vehicle i is perfectly idle. We immediately have (x\u0304, y\u0304) \u2208 F . Lemma 1 then yields\n\u03b2iu = 0 \u2200u \u2208 V \\ {v}.\nFor every vehicle k \u2208 K \\ {i}, consider (x\u0303, y\u0303) in USNP(V,E,C) such that k is perfectly idle and C demands of \u03b4\u2212(v) are served by vehicle i. Clearly (x\u0303, y\u0303) \u2208 F . Lemma 1 then implies \u03b2ku = 0 for every u \u2208 V . We therefore have\n\u03b2ku = 0 \u2200u \u2208 V, k \u2208 K \\ {i}.\nDefining \u03c9 = \u2212\u03b2 i v C , we thus obtain\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) :\n\u2211 e\u2208E \u2211 k\u2208K \u03b1kex k e \u2212 \u03c9Cyiv = \u03b3\n} .\nStep (ii) For every vehicle k \u2208 K \\ {i}, consider (x\u0303, y\u0303) \u2208 F defined in Step (i). Since |\u03b4\u2212(v)| \u2265 C + 1, we may additionally suppose that demand e \u2208 E is served by vehicle k\u2032 \u2208 K \\ {i, k}, that is, x\u0303k\u2032e = 1. Lemma 2 then yields \u03b1ke = \u03b1k \u2032 e . Since vehicles k and k\u2032 were arbitrarily chosen in K \\ {i} and demand e in E, we have\n\u03b1ke = \u03bbe \u2200e \u2208 E, k \u2208 K \\ {i},\n37\nwith \u03bbe \u2208 R. Face F \u2032 can therefore be rewritten as\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex k e + \u2211 e\u2208E \u03b1iex i e \u2212 \u03c9Cyiv = \u03b3  . Step (iii) Consider (x\u0304, y\u0304) \u2208 F defined in Step (i). Suppose demand e \u2208 E \\ \u03b4\u2212(v) is served by vehicle k \u2208 K \\ {i}, that is, x\u0304ke = 1. From Lemma 2, we obtain \u03b1ie = \u03b1ke . Consequently we have\n\u03b1ie = \u03bbe \u2200e \u2208 E \\ \u03b4\u2212(v)\nand\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex k e + \u2211 e\u2208E\\\u03b4\u2212(v) \u03bbex i e\n+ \u2211\ne\u2208\u03b4\u2212(v)\n\u03b1iex i e \u2212 \u03c9Cyiv = \u03b3  . (C.1)\nStep (iv) Consider (x\u0303, y\u0303) \u2208 F defined in Step (i). Let S denote the set of C demands of \u03b4\u2212(v) that are served by vehicle i. Notice that \u03b4\u2212(v) \\ S \u0338= \u2205. Suppose that demand e1 \u2208 \u03b4\u2212(v) \\ S is the only demand served by vehicle k1 \u2208 K \\ {i}. Since F \u2286 F \u2032, we have\u2211\ne\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0303 k e + \u2211 e\u2208E\\\u03b4\u2212(v) \u03bbex\u0303 i e + \u2211 e\u2208\u03b4\u2212(v) \u03b1iex\u0303 i e \u2212 \u03c9Cy\u0303iv = \u03b3.\nLet (x\u0302, y\u0302) be the solution obtained from (x\u0303, y\u0303) by swapping demand e1 and any demand e2 \u2208 S. We clearly have (x\u0302, y\u0302) also belong to F and\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0303 k e+ \u2211 e\u2208E\\\u03b4\u2212(v) \u03bbex\u0303 i e+ \u2211 e\u2208\u03b4\u2212(v) \u03b1iex\u0303 i e\u2212\u03c9Cy\u0303iv\u2212\u03bbe1+\u03b1ie1\u2212\u03b1 i e2+\u03bbe2 = \u03b3.\nFrom (C.1), we then deduce \u03b1ie1 \u2212 \u03bbe1 = \u03b1 i e2 \u2212 \u03bbe2 . Consequently, we obtain\n\u03b1ie1 \u2212 \u03bbe1 = \u03b1 i e2 \u2212 \u03bbe2 \u2200e1 \u2208 \u03b4 \u2212(v), e2 \u2208 \u03b4\u2212(v).\nStep (v) Consider (x\u0304, y\u0304) \u2208 F defined in Step (i). We then have\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0304 k e = \u03b3. (C.2)\n38\nSuppose now that C demands of \u03b4\u2212(v) are served by vehicle k \u2208 K \\ {i}. Let S denote the set of these C demands. The solution obtained from (x\u0304, y\u0304) by making all the demands in S be served by vehicle i clearly belongs to F . We therefore have\u2211\ne\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0304 k e + \u2211 e\u2208S \u03b1ie \u2212 \u2211 e\u2208S \u03bbe \u2212 \u03c9C = \u03b3. (C.3)\nSubtracting (C.2) from (C.3) yields\u2211 e\u2208S (\u03b1ie \u2212 \u03bbe)\u2212 \u03c9C = 0.\nUsing Step (iv), this equation implies\n\u03b1ie \u2212 \u03bbe = \u03c9 = \u2212 \u03b2iv C\n\u2200e \u2208 \u03b4\u2212(v)\nand consequently\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K \u03bbex k e + \u2211 e\u2208\u03b4\u2212(v) \u03c9xie \u2212 \u03c9Cyiv = \u03b3  . Step (vi) Consider (x\u0304, y\u0304) \u2208 F defined in Step (i). Construct (p \u2212 2)\nsolutions, starting from (x\u0304, y\u0304) \u2208 F , by sequentially permuting the vehicles in K \\ {i}. Since vehicle i is perfectly idle in these (p\u2212 1) solutions, they all belong to F and satisfy the following equation\u2211\ne\u2208E \u2211 k\u2208K\\{i} \u03bbex k e = \u03b3. (C.4)\nNotice that this construction guarantees that no demand in E is assigned twice to the same vehicle of K \\ {i} in these (p\u2212 1) solutions. Summing up the equations associated with these (p\u2212 1) solutions then yields\n(p\u2212 1) \u2211 e\u2208E \u03bbe = (p\u2212 1)\u03b3,\nthat is, \u03b3 = \u2211 e\u2208E \u03bbe. We therefore deduce\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K \u03bbex k e + \u2211 e\u2208\u03b4\u2212(v) \u03c9xie \u2212 \u03c9Cyiv = \u2211 e\u2208E \u03bbe  and thereby F \u2032 = F .\n39"
        },
        {
            "heading": "Appendix D. Proof of Theorem 9",
            "text": "Theorem 9. The k-cardinality tree inequalities (14) are facet-defining if and only if\n(i.) there does not exist a node u \u2208 V (S) such that S \u2282 \u03b4\u2212G(u) or S \u2282 \u03b4+G(u), and\n(ii.) there does not exist an edge (u1, u2) \u2208 E \\ S such that u1 and u2 are the only internal nodes of G(S).\nProof. Let i \u2208 K be a vehicle, v \u2208 V be a station, and S \u2286 \u2206E(v) with S \u2208 CT (G,C + 1).\nWe first prove the necessity. Suppose there exists u \u2208 V (S) such that S \u2282 \u03b4\u2212G(u) or S \u2282 \u03b4 + G(u), that is, G(S) is a star with internal node u. Since degG(S)(u) = C + 1, inequality (14) reads\u2211 e\u2208S xie \u2212 Cyiu \u2264 0\nwhich is dominated by either (11) or (12). Suppose there exists an edge e\u2032 = (u1, u2) \u2208 E \\ S with u1 and u2 being the only internal nodes of G(S). (See Figure D.11.) By definition, degG(S)(u1)\u2212 1 + degG(S)(u2)\u2212 1 = C. Since S \u222a e\u2032 \u2286 \u2206E(v) and hence xie\u2032 + \u2211 e\u2208S xie \u2264 C, the inequality\nxie\u2032 + \u2211 e\u2208S xie \u2212 \u2211 u\u2208V (S) (degG(S)(u)\u2212 1)yiu \u2264 0\nis valid and clearly dominates (14). (Notice that such idea can be used to lift inequalities (14) whenever Condition (ii.) does not hold.)\nLet F be the face of USNP(V,E,C) induced by inequality (14) associated with i, v, and S. For the sufficiency of Conditions (i.) and (ii.), we show that\n40\nif F \u2286 F \u2032, where F \u2032 is a proper face of USNP(V,E,C) defined as\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) :\n\u2211 e\u2208E \u2211 k\u2208K \u03b1kex k e + \u2211 u\u2208V \u2211 k\u2208K \u03b2kuy k u = \u03b3\n} ,\nfor \u03b1 \u2208 Rmp, \u03b2 \u2208 Rnp, and \u03b3 \u2208 R, then F \u2032 is induced by a linear combination of inequality (14) associated with i, v, and S and equations (4), that is,\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) :\n\u2211 e\u2208E \u2211 k\u2208K \u03bbex k e + \u2211 e\u2208S \u03c9xie\n\u2212 \u2211\nu\u2208V (S) \u03c9(degG(S)(u)\u2212 1)yiu = \u2211 e\u2208E \u03bbe  , for \u03c9 \u2208 R and \u03bb \u2208 Rm. This implies F = F \u2032.\nWe first notice that if there exists u \u2208 V (S) such that S = \u03b4\u2212G(u) or S = \u03b4+G(u), then inequality (14) is nothing but inequality (11) or (12) associated with station u and vehicle i. By Theorem Appendix C, F thus is a facet of USNP(V,E,C). So, in the remainder of the proof, Condition (i.) corresponds to G(S) not being a star. We now follow this seven-step process:\n(i) for every station u \u2208 V and every vehicle k \u2208 K different from i, show \u03b2ku = 0;\n(ii) for every demand e \u2208 E and every two vehicles k and k\u2032 in K different from i, show \u03b1ke = \u03b1k \u2032 e ;\n(iii) for every station u \u2208 V not being an internal node of G(S), show \u03b2iu = 0;\n(iv) for every vehicle k \u2208 K different from i, show \u03b3 = \u2211 e\u2208E \u03b1ke ;\n(v) for every two demands e1 and e2 in S and every vehicle k \u2208 K different from i, show \u03b1ie1 \u2212 \u03b1 k e1 = \u03b1 i e2 \u2212 \u03b1 k e2 ;\n(vi) for every demand e \u2208 E \\ S and every vehicle k \u2208 K, show \u03b1ie = \u03b1ke ;\n(vii) for every station u \u2208 V (S), every demand e \u2208 S, and every vehicle k \u2208 K different from i, show \u03b2iu = \u2212(degG(S)(u)\u2212 1)(\u03b1ie \u2212 \u03b1ke).\n41\nStep (i) For every vehicle k \u2208 K \\ {i} and every demand e\u2032 \u2208 S, consider (x\u0304, y\u0304) \u2208 USNP(V,E,C) such that vehicle k is perfectly idle and all the demands in S \\ {e\u2032} are served by vehicle i. We immediately have (x\u0304, y\u0304) \u2208 F . Lemma 1 then yields \u03b2ku = 0 for every u \u2208 V . We therefore deduce\n\u03b2ku = 0 \u2200u \u2208 V, k \u2208 K \\ {i}.\nFace F \u2032 can now be rewritten as\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) :\n\u2211 e\u2208E \u2211 k\u2208K \u03b1kex k e + \u2211 u\u2208V \u03b2iuy i u = \u03b3\n} .\nStep (ii) For every vehicle k \u2208 K \\{i} and every demand e\u2032 \u2208 S, consider (x\u0304, y\u0304) \u2208 USNP(V,E,C) defined in Step (i). We may additionally suppose that demand e \u2208 E is served by vehicle k\u2032 \u2208 K \\ {i, k}, that is, x\u0303k\u2032e = 1. Lemma 2 then yields \u03b1ke = \u03b1k \u2032 e . Since vehicles k and k\u2032 were arbitrarily chosen in K \\ {i} and demand e in E, we have\n\u03b1ke = \u03bbe \u2200e \u2208 E, k \u2208 K \\ {i},\nwith \u03bbe \u2208 R. Face F \u2032 can therefore be rewritten as\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex k e + \u2211 e\u2208E \u03b1iex i e + \u2211 u\u2208V \u03b2iuy i u = \u03b3  . Step (iii) Let I(S) denote the set of internal nodes of G(S), that is, I(S) = {u \u2208 V (S) : degG(S) \u2265 2}. Let (x\u0303, y\u0303) \u2208 USNP(V,E,C) be such that vehicle i is perfectly idle. We immediately have (x\u0303, y\u0303) \u2208 F . For every station u \u2208 V (S) \\ I(S), Lemma 1 yields \u03b2iu = 0. Therefore, face F \u2032 can now be rewritten as\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex k e + \u2211 e\u2208E \u03b1iex i e + \u2211 u\u2208I(S) \u03b2iuy i u = \u03b3  . Step (iv) Consider (x\u0303, y\u0303) \u2208 F defined in Step (iii). Construct (p \u2212 2) solutions, starting from (x\u0303, y\u0303) \u2208 F , by sequentially permuting the vehicles in K \\ {i}. Since vehicle i is perfectly idle in these (p\u2212 1) solutions, they all belong to F and satisfy the following equation\u2211\ne\u2208E \u2211 k\u2208K\\{i} \u03bbex k e = \u03b3.\n42\nNotice that this construction guarantees that no demand in E is assigned twice to the same vehicle of K \\ {i} in these (p\u2212 1) solutions. Summing up the equations associated with these (p\u2212 1) solutions then yields\n(p\u2212 1) \u2211 e\u2208E \u03bbe = (p\u2212 1)\u03b3,\nthat is, \u03b3 = \u2211 e\u2208E \u03bbe. We therefore deduce\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex k e + \u2211 e\u2208E \u03b1iex i e\n+ \u2211\nu\u2208I(S)\n\u03b2iuy i u = \u2211 e\u2208E \u03bbe  . Step (v) For every demand e1 \u2208 S, let (x\u0302, y\u0302) \u2208 USNP(V,E,C) be such that all the demands in S\\{e1} are served by vehicle i. Suppose that demand e1 is the only demand served by vehicle k \u2208 K \\ {i}. Since (x\u0302, y\u0302) \u2208 F , the equation \u2211\ne\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0302 k e + \u2211 e\u2208E \u03b1iex\u0302 i e + \u2211 u\u2208I(S) \u03b2iuy\u0302 i u = \u2211 e\u2208E \u03bbe\nholds. Considering the solution in F , obtained from (x\u0302, y\u0302) by swapping e1 and any demand e2 \u2208 S \\ {e1} yields\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0302 k e + \u2211 e\u2208E \u03b1iex\u0302 i e + \u2211 u\u2208I(S) \u03b2iuy\u0302 i u \u2212 \u03bbe1 + \u03b1ie1 \u2212 \u03b1 i e2 + \u03bbe2 = \u2211 e\u2208E \u03bbe.\nholds. Therefore \u03b1ie1 \u2212 \u03bbe1 = \u03b1 i e2 \u2212 \u03bbe2 . Consequently, we obtain\n\u03b1ie = \u03bbe + \u03c9 \u2200e \u2208 S\nwith \u03c9 \u2208 R, and face F \u2032 can then be rewritten as\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex k e + \u2211 e\u2208E\\S \u03b1iex i e\n+ \u2211 e\u2208S (\u03bbe + \u03c9)x i e + \u2211 u\u2208I(S) \u03b2iuy i u = \u2211 e\u2208E \u03bbe  . 43\nStep (vi) Let e\u2032 be any demand in E \\ S. We consider three cases depending on whether e\u2032 has zero, one, or two stations of I(S) appearing as its endpoints (i.e., |I(S) \u2229 {oe\u2032 , de\u2032}| equals 0, 1, or 2). Case 1: Demand e\u2032 is incident with no internal nodes of G(S). Consider (x\u0303, y\u0303) \u2208 F defined in Step (iii). The equation\u2211\ne\u2208E \u2211 k\u2208K\\i \u03bbex\u0302 k e = \u2211 e\u2208E \u03bbe\nclearly holds. Suppose that demand e\u2032 is served by vehicle k \u2208 K \\ {i}. The solution, obtained from (x\u0303, y\u0303) by making demand e\u2032 be served by vehicle i, still belongs to F , and hence\u2211\ne\u2208E \u2211 k\u2208K\\i \u03bbex\u0304 k e + \u03b1 i e\u2032 \u2212 \u03bbe\u2032 = \u2211 e\u2208E \u03bbe.\nTherefore, \u03b1ie\u2032 = \u03bbe\u2032 for every demand e \u2032 \u2208 E \\S such that I(S)\u2229{oe\u2032 , de\u2032} = \u2205. Case 2: Demand e\u2032 is incident with exactly one internal node u of G(S). Consider any leaf node r \u2208 V (S) such that u and r are not adjacent in G(S). Since G(S) is not a star, node r always exists. Thinking about G(S) as a tree rooted at r, let Tu denote the subtree of G(S) rooted at u. We clearly have |E(Tu)| < C. Let (x\u0306, y\u0306) \u2208 USNP(V,E,C) be such that the only demands served by vehicle i are those in E(Tu). We then have\u2211\ne\u2208S x\u0306ie = |E(Tu)|\nand since u \u2208 I(S),\u2211 t\u2208V (S) (degG(S)(t)\u2212 1)y\u0306it = \u2211 t\u2208V (Tu) (degG(S)(t)\u2212 1) = |E(Tu)|.\nConsequently, (x\u0306, y\u0306) \u2208 F and the equation\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0306 k e + \u2211 e\u2208E\\S \u03b1iex\u0306 i e + \u2211 e\u2208S (\u03bbe + \u03c9)x\u0306 i e + \u2211 t\u2208I(S) \u03b2it y\u0306 i t = \u2211 e\u2208E \u03bbe\nholds. Suppose that demand e\u2032 is served by vehicle k \u2208 K \\ {i}. Since |E(Tu)| < C, the solution, obtained from (x\u0306, y\u0306) by making demand e\u2032 be served by vehicle i, still belongs to F , and hence\u2211 e\u2208E \u2211 k\u2208K\\{i} \u03bbex\u0306 k e+ \u2211 e\u2208E\\S \u03b1iex\u0306 i e+ \u2211 e\u2208S (\u03bbe+\u03c9)x\u0306 i e+ \u2211 t\u2208I(S) \u03b2it y\u0306 i t+\u03b1 i e\u2032\u2212\u03bbe\u2032 = \u2211 e\u2208E \u03bbe.\n44\nThus \u03b1ie\u2032 = \u03bbe\u2032 for every demand e \u2032 \u2208 E \\S such that |I(S)\u2229 {oe\u2032 , de\u2032}| = 1. Case 3: Demand e\u2032 is incident with two internal nodes u and u\u2032 of G(S). Suppose first that e\u2032 is parallel to no demands in S. Let P denote the path between u and u\u2032 in G(S). Path P clearly has at least one internal node. Thinking about G(S) as a tree rooted at any internal node of P , let Tu and Tu\u2032 be the subtrees of G(S) rooted at u and u\u2032, respectively. Since |E(Tu)|+|E(Tu\u2032)| < C, following a similar approach as in Case 2 with respect to the solution in USNP(V,E,C) where the only demands served by vehicle i are those in E(Tu) \u222a E(Tu\u2032) yields \u03b1ie\u2032 = \u03bbe\u2032 for every demand e\u2032 \u2208 E \\ S such that {oe\u2032 , de\u2032} \u2286 I(S) and e\u2032 is parallel to no demands in S.\nSuppose now that there exists a demand in S whose endpoints are u and u\u2032. Consider any node r \u2208 I(S) \\ {u, u, }. By Condition (ii.), node r exists. W.l.o.g., suppose that u is closer to r in G(S) than u\u2032 is. Since |E(Tu)| < C, following a similar approach as in Case 2 with respect to the solution in USNP(V,E,C) where the only demands served by vehicle i are those in E(Tu) yields \u03b1ie\u2032 = \u03bbe\u2032 for every demand e\n\u2032 \u2208 E \\ S such that {oe\u2032 , de\u2032} \u2286 I(S) and e\u2032 is parallel a demand in S. This completes Step (vi) and face F \u2032 can now be rewritten as\nF \u2032 = (x, y) \u2208 USNP(V,E,C) :\u2211 e\u2208E \u2211 k\u2208K \u03bbex k e + \u2211 e\u2208S \u03c9xie + \u2211 u\u2208I(S) \u03b2iuy i u = \u2211 e\u2208E \u03bbe  . Step (vii) Consider any leaf node r of G(S) and think about G(S) as a tree rooted at r. Let u\u2032 be the parent in G(S) of a deepest leaf node of G(S) and Tu\u2032 be the subtree of G(S) rooted at u\u2032. Notice that Tu\u2032 is star and since G(S) is not a star, |E(Tu\u2032)| = degG(S)(u\u2032) \u2212 1 < C. Let (x\u0307, y\u0307) \u2208 USNP(V,E,C) be such that the only demands served by vehicle i are those in E(Tu\u2032). We then have (x\u0307, y\u0307) \u2208 F and the equation\u2211\ne\u2208E\\E(Tu\u2032 )\n\u2211 k\u2208K\\{i} \u03bbex\u0307 k e + \u2211 e\u2208E(Tu\u2032 ) (\u03bbe + \u03c9) + \u03b2 i u\u2032 = \u2211 e\u2208E \u03bbe\nholds. Constructing (p\u2212 2) solutions from (x\u0307, y\u0307) by sequentially permuting the vehicles in K \\ {i} and applying the same reasoning as in Step (iv), we obtain\n(p\u2212 1) \u2211\ne\u2208E\\E(Tu\u2032 )\n\u03bbe + (p\u2212 1) \u2211\ne\u2208E(Tu\u2032 )\n(\u03bbe + \u03c9) + (p\u2212 1)\u03b2iu\u2032 = (p\u2212 1) \u2211 e\u2208E \u03bbe,\nthat is, \u03b2iu\u2032 = \u2212 \u2211\ne\u2208E(Tu\u2032 )\n\u03c9 = \u2212|E(Tu\u2032)|\u03c9 = \u2212(degG(S)(u\u2032)\u2212 1)\u03c9.\n45\nFor any internal node u of G(S), let Tu denote the subtree of G(S) rooted at u and C(u) denote the set of nodes adjacent to u in Tu. We clearly have\nE(Tu) = \u22c3\nc\u2208C(u)\n(E(Tc) \u222a {(u, c)}).\nWe now use this decomposition of the edge sets of the subtrees of G(S) rooted at the internal nodes and a similar approach as above for determining \u03b2iu\u2032 to recursively obtain \u03b2iu for u \u2208 I(S). Starting from the internal nodes of G(S) only having leaf nodes in their rooted subtree and moving towards the only internal node adjacent to r in G(S), we deduce for any internal node u \u2208 I(S)\n\u03b2iu+ \u2211\nc\u2208C(u) \u2211 u\u2032\u2208V (Tc) \u03b2iu\u2032 = \u2212(degG(S)(u)\u22121)\u03c9\u2212 \u2211 c\u2208C(u) \u2211 u\u2032\u2208V (Tc) (degG(S)(u \u2032)\u22121)\u03c9.\nthat is, \u03b2iu = \u2212(degG(S)(u)\u22121)\u03c9 for every u \u2208 V (S). Therefore, face F \u2032 can finally be rewritten as\nF \u2032 = { (x, y) \u2208 USNP(V,E,C) :\n\u2211 e\u2208E \u2211 k\u2208K \u03bbex k e + \u2211 e\u2208S \u03c9xie\n\u2212 \u2211\nu\u2208V (S) \u03c9(degG(S)(u)\u2212 1)yiu = \u2211 e\u2208E \u03bbe  which concludes the proof."
        }
    ],
    "title": "Complexity, Algorithmic, and Computational Aspects of a Dial-a-Ride Type Problem",
    "year": 2023
}