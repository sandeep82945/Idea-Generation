{
    "abstractText": "This paper investigates the semantic extraction taskoriented dynamic multi-time scale user admission and resource allocation in mobile edge computing (MEC) systems. Amid prevalence artificial intelligence applications in various industries, the offloading of semantic extraction tasks which are mainly composed of convolutional neural networks of computer vision is a great challenge for communication bandwidth and computing capacity allocation in MEC systems. Considering the stochastic nature of the semantic extraction tasks, we formulate a stochastic optimization problem by modeling it as the dynamic arrival of tasks in the temporal domain. We jointly optimize the system revenue and cost which are represented as user admission in the long term and resource allocation in the short term respectively. To handle the proposed stochastic optimization problem, we decompose it into short-time-scale subproblems and a long-timescale subproblem by using the Lyapunov optimization technique. After that, the short-time-scale optimization variables of resource allocation, including user association, bandwidth allocation, and computing capacity allocation are obtained in closed form. The user admission optimization on long-time scales is solved by a heuristic iteration method. Then, the multi-time scale user admission and resource allocation algorithm is proposed for dynamic semantic extraction task computing in MEC systems. Simulation results demonstrate that, compared with the benchmarks, the proposed algorithm improves the performance of user admission and resource allocation efficiently and achieves a flexible tradeoff between system revenue and cost at multi-time scales and considering semantic extraction tasks.",
    "authors": [
        {
            "affiliations": [],
            "name": "Yuanpeng Zheng"
        },
        {
            "affiliations": [],
            "name": "Tiankui Zhang"
        },
        {
            "affiliations": [],
            "name": "Jonathan Loo"
        }
    ],
    "id": "SP:85513282fb4ef5a4879f53e981f4eaace3f91f30",
    "references": [
        {
            "authors": [
                "Y. Guo",
                "F.R. Yu",
                "J. An",
                "K. Yang",
                "C. Yu",
                "V.C.M. Leung"
            ],
            "title": "Adaptive Bitrate Streaming in Wireless Networks With Transcoding at Network Edge Using Deep Reinforcement Learning",
            "venue": "IEEE Trans. Veh. Technol., vol. 69, no. 4, pp. 3879-3892, Apr. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "S. Jo\u0161ilo",
                "G. D\u00e1n"
            ],
            "title": "Computation Offloading Scheduling for Periodic Tasks in Mobile Edge Computing",
            "venue": "IEEE Trans. Netw., vol. 28, no. 2, pp. 667-680, Apr. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "L. Lei",
                "C. Chen",
                "Q. Pei",
                "S. Maharjan",
                "Y. Zhang"
            ],
            "title": "Vehicular edge computing and networking: A survey.",
            "venue": "Mobile Netw. Appl., vol.26,",
            "year": 2021
        },
        {
            "authors": [
                "J. Du",
                "L. Zhao",
                "J. Feng",
                "X. Chu"
            ],
            "title": "Computation offloading and resource allocation in mixed fog/cloud computing systems with minmax fairness guarantee",
            "venue": "IEEE Trans. Commun., vol. 66, no. 4, pp. 1594-1608, Apr. 2018.",
            "year": 2018
        },
        {
            "authors": [
                "J. Feng",
                "Q. Pei",
                "F.R. Yu",
                "X. Chu",
                "J. Du",
                "L. Zhu"
            ],
            "title": "Dynamic Network Slicing and Resource Allocation in Mobile Edge Computing Systems",
            "venue": "IEEE Trans. Veh. Technol., vol. 69, no. 7, pp. 7863-7878, Jul. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "S. Zarandi",
                "H. Tabassum"
            ],
            "title": "Delay Minimization in Sliced Multi-Cell Mobile Edge Computing (MEC) Systems",
            "venue": "IEEE Commun. Lett., vol. 25, no. 6, pp. 1964-1968, Jun. 2021.",
            "year": 1964
        },
        {
            "authors": [
                "G. Faraci",
                "C. Grasso",
                "G. Schembra"
            ],
            "title": "Design of a 5G Network Slice Extension With MEC UAVs Managed With Reinforcement Learning",
            "venue": "IEEE J. Sel. Areas Commun., vol. 16, no. 7, pp. 2356-2371, Oct. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "J.Y. Hwang",
                "L. Nkenyereye",
                "N.M. Sung"
            ],
            "title": "IoT service slicing and task offloading for edge computing",
            "venue": "IEEE Internet Things J., vol. 44, no. 4, pp. 1-14, Apr. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "X. Cao",
                "J. Xu",
                "R. Zhang"
            ],
            "title": "Mobile edge computing for cellularconnected UAV: Computation offloading and trajectory optimization",
            "venue": "IEEE 19th International Workshop Signal Process. Adv. Wireless Commun. (SPAWC), pp. 1-5, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "M.A. Hossain",
                "N. Ansari"
            ],
            "title": "Energy Aware Latency Minimization for Network Slicing Enabled Edge Computing",
            "venue": "IEEE Trans. Green Commun. Netw., pp. 1-10, May. 2021.",
            "year": 2021
        },
        {
            "authors": [
                "T. Zhang",
                "Y. Xu",
                "J. Loo",
                "D. Yang",
                "L. Xiao"
            ],
            "title": "Joint Computation and Communication Design for UAV-Assisted Mobile Edge Computing in IoT,",
            "venue": "IEEE Transactions on Industrial Informatics,",
            "year": 2020
        },
        {
            "authors": [
                "H. Xie",
                "Z. Qin",
                "G.Y. Li",
                "B.H. Juang"
            ],
            "title": "Deep learning enabled semantic communication systems",
            "venue": "IEEE Trans. Signal Process., vol. 69, pp. 2663-2675, Apr. 2021.",
            "year": 2021
        },
        {
            "authors": [
                "H. Xie",
                "Z. Qin"
            ],
            "title": "A lite distributed semantic communication system for internet of things",
            "venue": "IEEE J. Sel. Areas Commun., vol. 39, no. 1, pp. 142-153, Nov. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "H. Qi",
                "E.R. Sparks",
                "A. Talwalkar"
            ],
            "title": "PALEO: A Performance Model for Deep Neural Networks",
            "venue": "International Conf. Learn. Representations (ICLR), 2016.",
            "year": 2016
        },
        {
            "authors": [
                "D. Justus",
                "J. Brennan",
                "S. Bonner",
                "A.S. McGough"
            ],
            "title": "Predicting the computational cost of deep learning models.",
            "venue": "IEEE International Conf. Big Data,",
            "year": 2018
        },
        {
            "authors": [
                "D. Bienstock",
                "G. Mu\u00f1oz",
                "S. Pokutta"
            ],
            "title": "Principled deep neural network training through linear programming",
            "venue": "arXiv preprint arXiv:1810.03218, Oct. 2020.",
            "year": 1810
        },
        {
            "authors": [
                "M. Bianchini",
                "F. Scarselli"
            ],
            "title": "On the complexity of neural network classifiers: A comparison between shallow and deep architectures",
            "venue": "IEEE Tran. Neural Netw. Learn. Syst., vol. 25, no. 8, pp. 1553-1565, Jan. 2014.",
            "year": 2014
        },
        {
            "authors": [
                "F. Guo",
                "F.R. Yu",
                "H. Zhang",
                "H. Ji",
                "M. Liu",
                "V.C.M. Leung"
            ],
            "title": "Adaptive resource allocation in future wireless networks with blockchain and mobile edge computing",
            "venue": "IEEE Trans. Wireless Commun., vol. 19, no. 3, pp. 1689-1703, Mar. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "Y. Xiao",
                "M. Krunz"
            ],
            "title": "Dynamic network slicing for scalable fog computing systems with energy harvesting",
            "venue": "IEEE J. Sel. Areas Commun., vol. 36, no. 12, pp. 2640-2654, Dec. 2018.",
            "year": 2018
        },
        {
            "authors": [
                "N. Van Huynh",
                "D. Thai Hoang",
                "D.N. Nguyen",
                "E. Dutkiewicz"
            ],
            "title": "Optimal and fast real-time resource slicing with deep dueling neural networks",
            "venue": "IEEE J. Sel. Areas Commun., vol. 37, no. 6, pp. 1455-1470, Jun. 2019.",
            "year": 2019
        },
        {
            "authors": [
                "G. Sun",
                "H. Al-Ward",
                "G.O. Boateng",
                "G. Liu"
            ],
            "title": "Autonomous cache resource slicing and content placement at virtualized mobile edge network",
            "venue": "IEEE Access, vol. 7, pp. 84727-84743, Jun. 2019. 13",
            "year": 2019
        },
        {
            "authors": [
                "M.J. Neely"
            ],
            "title": "Stochastic network optimization with application to communication and queueing systems",
            "venue": "Synth. Lect. Commun.. San Rafael, CA, USA: Morgan & Claypool Publishers, 2010.",
            "year": 2010
        },
        {
            "authors": [
                "S. Boyd"
            ],
            "title": "Convex optimization problems",
            "venue": "Lecture slides and notes. 2008. [Online]. Available: http://web.stanford.edu/class/ee364a/lectures. html.",
            "year": 2008
        },
        {
            "authors": [
                "M. Grant",
                "S. Boyd",
                "Y. Ye"
            ],
            "title": "CVX: MATLAB software for disciplined convex programming",
            "venue": "2014. [Online]. Available: http://cvxr.com/cvx/.",
            "year": 2014
        },
        {
            "authors": [
                "S. Boyd"
            ],
            "title": "Interior-point methods",
            "venue": "Lecture slides and notes. 2008. [Online]. Available: http://web.stanford.edu/class/ee364a/lectures.html.",
            "year": 2008
        },
        {
            "authors": [
                "3GPP"
            ],
            "title": "Technical Specification Group Radio Access Network; Small cell enhancements for E-UTRA and E-UTRAN Physical layer aspects",
            "venue": "TR 36.872, Release 15, pp. 9, 76-77, Dec. 2013.",
            "year": 2013
        },
        {
            "authors": [
                "3GPP"
            ],
            "title": "Technical Specification Group Radio Access Network; Evolved Universal Terrestrial Radio Access (E-UTRA); Further advancements for E-UTRA physical layer aspects",
            "venue": "TR 36.814, Release 9, pp. 94-96, Mar. 2017.",
            "year": 2017
        },
        {
            "authors": [
                "J. Li",
                "Q.L. Dong",
                "M. Liao"
            ],
            "title": "Study on the Scenarios and Future Development of URLLC",
            "venue": "Mob. Commun., vol. 44, no. 2, pp. 20-24, Dec. 2020.",
            "year": 2020
        },
        {
            "authors": [
                "S. Zarandi",
                "H. Tabassum"
            ],
            "title": "Delay minimization in sliced multi-cell mobile edge computing (MEC) systems",
            "venue": "IEEE Commun. Lett., vol. 25, no. 6, pp. 1964-1968, Jan. 2021.",
            "year": 1964
        }
    ],
    "sections": [
        {
            "text": "Index Terms\u2014Semantic extraction task, resource allocation, MEC, dynamic optimization.\nI. INTRODUCTION\nIn recent years, mobile edge computing (MEC), which supports not only computing but also communications and storage, has become a key technology to solve many related problems with specific requirements [1], [2]. By being closer to the edge of network than traditional cloud computing systems, MEC can obviously improve the quality of user experience, including optimization of delay and energy consumption [3]. Devices can significantly reduce their response\nThis work was supported by National Natural Science Foundation of China under Grants 61971060. (Corresponding author: Tiankui Zhang)\nYuanpeng Zheng, Tiankui Zhang are with the School of Information and Communication Engineering, Beijing University of Posts and Telecommunications, Beijing 100876, China (e-mail: {zhangtiankui, zhengyuanpeng}@bupt.edu.cn).\nJonathan Loo is with the School of Computing and Engineering, University of West London, London W5 5RF, U.K. (e-mail: jonathan.loo@uwl.ac.uk).\ntimes and energy consumption by offloading the computing tasks to nearby edge network, hence resource capacity and scheduling of MEC systems become a very important issue, especially in the context of the increasing number of intelligent tasks. The rapid development of network edge applications such as the Internet of Things (IoT) indicates change of service requirements and diversity of tasks, nevertheless, few existing works consider the various performance requirements of these dynamics applications [4] and the characteristics of computing tasks [5]. Therefore, how to efficiently allocate resource to support the dynamics demand of services is still an unaddressed problem.\nHence, in the context of massive IoT devices deployment, limited terminal computing capacity and battery capacity, and increasingly complex computing tasks, existing works on resource allocation in MEC systems has become specific and multidimensional [6]\u2013[11]. S. Zarandi et al. [6] investigated a way of combining MEC and network slicing, and proposed the optimization of the weighted sum of the difference between the observed delay and the delay requirement. By consider edge users and large data volume, a power consumption and delay optimization problem in unmanned aerial vehicle (UAV) assisted MEC systems was addressed by G. Faraci et al. [7]. As a key scenario, an efficient method of MEC and network slice integration which is deployed on the IoT platform was proposed by J. Y. Hwang et al. [8] to maximize the effect of decreasing delay and traffic prioritization. X. Cao et al. [9] introduced a new MEC setup where an UAV is served by cellular ground base stations for computation offloading to minimize the UAV\u2019s task completion time considering computing capacity. Considering computing tasks, the MEC techniques combined with network slicing and non-orthogonal multiple access was leveraged by M. A. Hossain et al. [10] to minimize the total latency of the computing tasks with energy constraints. T. Zhang et al. [11] considered that a UAV equipped with an MEC server is deployed to serve a number of terminal devices of Internet of Things in a finite period, which aims to minimize the total energy consumption including communication-related energy, computation-related energy and UAV\u2019s flight energy by optimizing the bits allocation. Obviously, the above works do not consider the influence of the stochastic nature and specific computing capacity consumption of computing tasks on user admission and resource allocation. The research on specific tasks have become important in MEC systems considering communication bandwidth and computing capacity allocation. Ignoring the characteristics will result in\n2 some errors in real scenario and hence can not satisfy delay requirements well.\nThe rise of semantic communication research in recent years has brought more requirements to the MEC field. Meanwhile, it proposes more scenarios of specific tasks in MEC systems and a few studies on quantification of computational complexity of intelligent tasks has been discussed [12]\u2013[17]. Some works proposed practical schemes to deploy semantic communication to MEC systems. H. Xie et al. [12] proposed a brand new framework of semantic communication where a deep learning based semantic communication system for text transmission combined with deep learning, natural language processing and semantic layer communication was constructed. After that, H. Xie et al. [13] considered a semantic communication system which is constructed between edge and IoT devices where MEC servers trains and updates the semantic communication model based on deep learning, and the IoT devices collect and transmit data based on the training model. H. Qi et al. [14] investigated a model named PALEO which was applied to analyse performance of deep neural network (DNN). Nevertheless, D. Justus et al. [15] indicated that the presentation of computational complexity of PALEO was not accurate because of many other influence factors, and proposed an alternative strategy which predicted execution time by training a deep learning network including network features and hardware features. An approximation strategy of optimization of DNN training was proposed by D. Bienstock et al. [16], which modelled DNN as a directed graph to control approximation error of computational complexity. M. Bianchini et al. [17] proposed a new approach to study how the depth of feedforward neural networks impacts on their ability in implementing high complexity functions and indicated how the complexity depends on the number of hidden units and the used activation function. It is shown that the resource allocation problems for the semantic communication including the communication bandwidth and the computing capacity with the dynamic arrival of task in MEC systems has not been fully researched and it is hard but important to present characteristics and complexity of intelligent computing tasks.\nThere are still some studies consider the dynamic of mobile network and the stochastic nature of computing tasks [4], [18]\u2013[20]. F. Guo et al. [18] designed the framework where the service requirements of some IoT applications have been changing. In [19], Y. Xiao et al. considered the dynamic of fog computing networks to maximize the utilization efficiency of available resources while balancing the workloads among fog nodes. The real-time dynamics of the network resource requests have been discussed in [20] by N. Van Huynhet al. and obtain the optimal resource allocation policy under the dynamics of the frequency of request. J. Feng et al. [4] considered the stochastic nature of tasks and proposed an architecture that maximizing revenue of network provider in MEC systems, where a multi-time scale scheme was adopted to increase revenue on the basis of QoS guarantee. However, it is necessary to integrate the stochastic nature of tasks and quantification of complexity of computing tasks in MEC systems. Semantic extraction tasks which are mainly composed of convolutional neural networks (CNN) of computer\nvision gradually become the mainstream on dynamic resource allocation. In conclusion, modelling dynamic and computing capacity of semantic extraction tasks in MEC systems has not been considered yet according to the above works."
        },
        {
            "heading": "A. Motivation and Contribution",
            "text": "As mentioned above, the combination of dynamic multitime admission and resource allocation in MEC systems with specific computing tasks, i.e., semantic extraction tasks, is still an unaddressed research area, which motivate this contribution. In this paper, we formulate a stochastic optimization problem by modelling it as dynamic arrival of tasks in temporal domain considering the stochastic nature of the semantic extraction tasks. In order to investigate the dynamic arrival and stochastic nature of tasks, we adopt multi-time scale to represent traffic variations. Based on the dynamic model, we optimize the average utility over time that consists of the system revenue and cost which depends on user admission in the long term and resource allocation in the short term. We also model computing characteristic of semantic extraction task as a formula based on the structure of CNN. The primary contributions of this paper are as follows: \u2022 We formulate a stochastic optimization problem for dy-\nnamic user admission and resource allocation considering the stochastic nature of semantic extraction tasks in MEC systems. We set up a queue model to represent dynamic of semantic extraction tasks and define the operator\u2019s utility which consists of long-time-scale revenue depending on the number of users and short-time-scale cost depending on power consumption in order to achieve continuous revenue in temporal domain with as little cost as possible at each time slot. For this study, we adopt a formula based on the structure of CNN to quantify the relationship between input data and computational complexity of semantic extraction tasks. \u2022 We solve the highly coupled problem without any prior knowledge of traffic distributions or channel information with the assistance of the Lyapunov optimization with maximisation of the number of users and minimisation of power consumption. We decoupled manifold optimization variables on the dimension of time scale and propose a multi-time scale user admission and resource allocation algorithm for semantic extraction tasks where the dynamic user admission subproblem is in the long term and user association subproblem, bandwidth allocation subproblem and computing capacity allocation subproblem are in the short term. The dynamic user admission subproblem in long term is settled by a heuristic iteration method and resouce allocation subproblems in short term are solved in closed forms. \u2022 We demonstrate the simulation results which verify that our framework is applicable to semantic scenario in MEC systems and the proposed algorithm has significant effect for the multi-time scale problem solving. It is shown that, compared with the benchmarks, the proposed algorithm improves the performance of user admission and resource allocation efficiently and achieves a flexible trade-off\n3\nSBS SBS SBS\nSBS\nComputation offloading\nBase station\nMEC server\nInterference link Admission in T\nResource allocation in \u03c4 Time slot Users with different tasks"
        },
        {
            "heading": "B. Organization",
            "text": "The rest of this paper is organized as follows. In Section II, we introduce system model and problem formulation. In Section III, we decompose the coupling problem into resource allocation in the short-time slot and user admission in the long-time slot. The performance of the proposed algorithm is evaluated by the simulation in Section IV, which is followed by our conclusions in Section V."
        },
        {
            "heading": "II. STOCHASTIC OPTIMISATION PROBLEM FORMULATION",
            "text": "We consider that fog radio access network (F-RAN) is built on MEC systems, and communication and computing between terminals and MEC are for specific semantic extraction tasks, as shown in Fig. 1. We equip MEC servers on small base stations (SBS) to form MEC systems, which is assembled as KS = {1,...,k,...,K}. In order to consider dynamic allocation of resources in temporal domain to dynamically meet the demands of multiple task slices, we design two types of time slots based on the time-slotted system where one is a long time slot (LTS) and the other is a short time slot (STS). In this paper, our system contains multiple LTSs which are dedicated to user admission and the length of the LTS is T. We assume that each LTS contains p STSs which are dedicated to resource allocation and the length of STS is \u03c4 , i.e., T = p\u03c4 . At LTS l, we denote the set of users by US = {1,...,u,...,U}, and the set of specific tasks by MS = {1,...,m,...,M}. At the beginning of each LTS the network operator can decide user admission and at the beginning of each STS resource allocation policies is given. Let the admission control variable of the user u accessing MEC systems be yu(l) \u2208 {0, 1}, where yu(l) = 1 denotes user u is admitted by MEC systems and yu(l) = 0 means the opposite. The multi-time scale system will be discussed in detail in the following sections of this section. Let the bandwidth resource of each SBS be Wk, computing capacity of each MEC be Fk. The delay limit for semantic extraction tasks is set to t\u0303m."
        },
        {
            "heading": "A. Communication Model",
            "text": "In our system, we adopt a more convenient communication model [21] which can be easily modified to other general models to complete our design. At STS t, the indicator variable for user u accessing to SBS k is denoted by xuk \u2208 {0, 1}. Assume that a user can only access one SBS in a short time slot, then the uplink transmission rate of user u accessing SBS k is given by\nruk(t) = wuk(t)log2\n( 1 + puguk(t)\nIuk(t) + \u03c32\n) , (1)\n4 where wuk(t) is uplink bandwidth resource obtained by user u, guk(t) is channel gain between SBS k and user u, pu is the transmit power from user u to SBS k, and Iuk(t) is the cochannel interference from users connected to other SBS, i.e. Iuk = \u2211 i\u2208KS ,i6=k gui(t)pu. \u03c3\n2 is the noise power. We denote the raw data that user u connected to SBS k collects as au(t), such as pictures of the industrial environment that need to be semantically segmented and given instructions. The raw data is transmitted to SBS through the uplink channel. Therefore the transmission delay of the raw data collected by user u in the wireless link is\ntcommu (t) = au(t)\nru(t) , (2)\nwhere ru(t) = \u2211K k=1 xuk(t)ruk(t).\nIn our model, computing tasks arrive randomly in each STS t and form a queue, we let A(t) = (Au(t)) denote the random arrival process of tasks of user u. For processing convenience, we assume that A(t) is independently and identically distributed between STS t and has arrival rate \u03bb, so that E{A(t)} = \u03bb for all STSs. Let QI(ts) denote the amount of tasks in the current queue that need to be unloaded. The dynamics of the task offloading queue can be given by\nQI(t+ 1) =max { QI(t)\u2212\nU\u2211 u=1 yu(l)ru(t)\u03c4, 0\n}\n+ U\u2211 u=1 yu(l)Au(t),\n(3)\nwhere max represents queue accumulation of QI exists only when the queue arrival is greater than the queue departure, otherwise it is 0.\nAt STS t, user u transmits its collected raw data au(t) such as various captured images, etc., to the SBS for a specific semantic extraction task m to generate semantic extracted feature data. Then the MEC feeds the semantic data back to the user for further operation via the downlink channel. In the context of the image semantic segmentation task in our scenario, the feature data is extremely small compared to raw data au(t), therefore the downlink transmission delay can be neglected."
        },
        {
            "heading": "B. Semantic Extraction Task",
            "text": "The design of semantic extraction task oriented MEC systems becomes increasingly important as intelligent tasks become mainstream, especially lightweight semantic communication network combined with IoT [13]. In this paper, we consider some image recognition applications of industrial Internet where the image semantic extraction algorithm based on CNN is mainly used. The computational complexity of those applications primarily depends on not only input raw data but also CNN. Semantic extraction tasks in scenario of MEC systems needs to be considered separately from the general task to this extent.\nIn our system, we design a computing model for semantic extraction tasks which is specific to CNN. The needed computing resource of CNN is determined by the amount of\ndata and model parameters associated with the input of the convolutional layer, and the network model parameters are task-specific [14]. We denote the model parameter of task m as nm, and the specific value is determined by the number of filters of CNN. Therefore, for ease of representation, the basic computing model for semantic extraction tasks at STS t is expressed as\nFum(au(t)) =log\n( au(t)\n3N\n) \u00b7 ( nmau(t)\nN + au(t)\n+ nmau(t)\n3\n) + au(t)nm (Gigacycle), (4)\nwhere the constant 3 is the number of channels and N is the number of input feature maps. The above equation represents the approximate function of raw data volume and needed computing resource. Therefore, we set needed computing resource of user u as\nFu(au(t)) = M\u2211 m=1 zum(t)Fum(au(t)) (Gigacycle), (5)\nwhich means the computing amount needed processing of user u."
        },
        {
            "heading": "C. Computing Model",
            "text": "We propose a complete system-level computing model for semantic extraction tasks. Let the indicator variable for task m of user u at STS t be zum(t) \u2208 {0, 1}, where zum(t) = 1 the task of user u is m and zum(t) = 0 is the opposite. zum(t) is known as the content of the user\u2019s request and\u2211M m=1 zum(t) = 1. We set the computing capacity that is allocated by SBS k for user u as fuk(t). Then the computing latency incurred by user u to perform tasks on SBS is given by\ntcompu (t) = Fu(au(t))\nfu(t) , (6)\nwhere fu(t) = \u2211K k=1 xuk(t)fuk(t) (Gigacycle/s), which represents the computing capacity that MEC allocate to user u to proccess offloading tasks.\nAt STS t, the processing of computing tasks also requires consideration of the latency generated by the bus transfer of data between the hardware within the system [14], [15], which is denoted as\ntbusu (t) = au(t)\nBbus , (7)\nwhere Bbus represents the bus bandwidth of the hardware devices within the SBS. Therefore, the total delay for user u to access SBS k to complete the task processing is given by\ntu(t) = t comm u (t) + t comp u (t) + t bus u (t). (8)\nWe consider the computational power consumption of SBS k to handle the user u offloading task, which is expressed as\nPuk(t) = Kescf3uk(t), (9)\nwhere Kesc is the effective switched capacitance of the MEC server. Then the total power consumption of system is\nP (t) = \u2211 u,k xuk(t)Puk(t). (10)\n5 In our model, we consider transmission between multiple hardware connected by bus inside the MEC server. This type of transmission can also have an impact on the task queue, therefore we model this impact as the bus transfer queue. The bus transfer queue is after the task offloading queue and is independent of it. Let QII(t) denote the number of tasks currently in the bus transfer, the dynamics of bus transfer queue is expressed as\nQII(t+ 1) = max { QII(t)\u2212\nU\u2211 u=1 yu(l)Bbus\u03c4, 0\n}\n+ min { U\u2211 u=1 yu(l)ru(t),QI(t) } ,\n(11)\nwhere max represents queue accumulation of QII exists only when the queue arrival is greater than the queue departure, otherwise it is 0, and min represents the effect of queue arrival and queue accumulation of QI on accumulation of QII in tandem queue.\nThereafter computing tasks are offloaded to the MEC for processing. Assuming that there is sufficient cache in MEC systems to store offloaded but unprocessed tasks, the dynamics of the computational processing queue is given by\n\u03a6(t+ 1) = max { \u03a6(t)\u2212\nU\u2211 u=1 yu(l)fu(t), 0\n} + min {\u2211 u\nFu(yu(l)Bbus)(t), \u2211 u Fu(QII(t))\n} ,\n(12)\nwhere max represents queue accumulation of \u03a6 exists only when the queue arrival is greater than the queue departure, otherwise it is 0, and min represents the effect of queue arrival and queue accumulation of QII on accumulation of \u03a6 in tandem queue."
        },
        {
            "heading": "D. Utility Model and Problem Formulation",
            "text": "In this paper, we consider the trade-off between the revenue and the cost of the optimization system, where the revenue depends on the number of admitted users associated with the admitted control weighting parameter and the cost depends on the computational energy consumption. The admitted control weighting parameter determined by the importance of users to revenue is expressed as vu, which is given by\nvu(l) =\np(l+1)\u22121\u2211 t=pl M\u2211 m=1 zum(t)t\u0303m\nT , (13)\nwhich can be seen as the importance distribution for users at LTS l determined by the average task delay limit. Then the revenue expression is\nGL(l) = U\u2211 u=1 vu(l)yu(l), (14)\nwhere GL(l) express that the influence of admitted users to revenue is determined by weighting parameter vu. We\ninvestigate that the computing energy cost of the system in long time slot T is\nGS(l) = p(l+1)\u22121\u2211 t=pl P (t). (15)\nIn that case the system utility is expressed as\nG(l) = GL(l)\u2212 \u03b7GS(l), (16)\nRemark 1. From (14)(15), we notice that \u03b7 is the parameter for adjusting the revenue and cost weights. Hence, different values of \u03b7 may effect the trade-off between the revenue in LTS and the cost in STS and stabilize the system utility. However, other comparison algorithms do not have this characteristic of balancing revenue and cost because of different treatment methods of admission and resource allocation. Therefore, our proposed algorithm can perform well under different values of \u03b7 in (16).\nFurthermore, we denote the average utility as\nG = lim Z\u2192\u221e\n1\nZ Z\u22121\u2211 l=0 E{G(l)}, (17)\nwhere G represent the average utility of system on all time slots and is for constructing Lyapunov stochastic optimization problem in the following.\nAccording to our model above, we investigate the operator\u2019s utility maximization problem in MEC systems by jointly controlling system admission y(l), user association x(t), bandwidth allocation w(t) and computing capacity allocation f(t). In particular, we formulate it as the following stochastic optimization problem.\nmax y(l),x(t),w(t),f(t) G\ns.t. (C1) : yu(l) \u2208 {0, 1},\u2200u, l, (C2) : xuk(t) \u2208 {0, 1},\u2200u, k, t,\n(C3) : K\u2211 k=1 xuk 6 1,\u2200u, t,\n(C4) : yu(l)tu(t) 6 M\u2211 m=1 zum(t)t\u0303m,\u2200u, t,\n(C5) : U\u2211 u=1 xuk(t)wuk(t) 6Wk,\u2200k, t,\n(C6) : U\u2211 u=1 xuk(t)fuk(t) 6 Fk,\u2200k, t, (C7) : QI <\u221e, QII <\u221e,\u03a6 <\u221e,\u2200t.\n(18)\nIn (18), (C2) and (C3) indicate that a user can only access one SBS. (C4) is the delay requirements of tasks. (C5) and (C6) denote the limit of bandwidth and computing capacity of each SBS. (C7) represents that the data rate should be greater than or equal to the arrival rate of all data queues and processing queues, i.e. the mean rate stability [22].\n6 user\nassociation\n\u03c4 \u2026\ncomputing\ncapacity allocation\nbandwidth allocation\niteratio n\nuser\nassociation\ncomputing\ncapacity allocation\nbandwidth allocation\nT\nuser\nadmission\nthe proposed\nalgorithm\n\u2026\n\u03c4\nuser\nassociation\n\u03c4 \u2026\ncomputing\ncapacity allocation\nbandwidth allocation\nuser\nassociation\ncomputing\ncapacity allocation\nbandwidth allocation\nT\nuser\nadmission\nthe proposed\nalgorithm\n\u2026\n\u03c4\nFig. 2. Framework of the two time-slot algorithm."
        },
        {
            "heading": "III. PROBLEM SOLUTION AND ALGORITHM DESIGN",
            "text": "Since our optimization problem (18) is stochastic and complex in temporal domain and mixed in multi-time scale, we need to solve it by decomposing the two time-slot problem into many single time-slot subproblems with the help of Lyapunov framework as illustrated in Fig. 2. Besides, an algorithm for the user admission problem will be designed. Next, we will show the proposed algorithm is capable of achieving the revenuecost trade-off in MEC systems."
        },
        {
            "heading": "A. The Lyapunov Optimization-Based Algorithm",
            "text": "We propose a algorithm based on the Lyapunov optimization and substitute the queue formula proposed in Section II into Lyapunov framework. Let \u0398(t) = [QI(t),QII(t),\u03a6(t)] be a concatenated vector, and we define the Lyapunov function as\nL(\u0398(t)) = 1\n2\n[ QI 2(t) + QII 2(t) + \u03a62(t) ] . (19)\nThen the LTS conditional Lyapunov drift \u2206T (\u0398(l)) is given by\n\u2206T (\u0398(l)) = E[L(\u0398(l + T )\u2212\u0398(l))|\u0398(l)], (20)\nwhere \u0398(l) = {QI(t),QII(t),\u03a6(t), t \u2208 [l, l + T \u2212 1]}. Then, the drift-plus-penalty expression of (19) can be expressed as\n\u2206T (\u0398(l))\u2212 V E{G(l)|\u0398(l)}. (21)\nRemark 2. From (21), we notice that the control parameter V > 0 which is from normalized form of Lyapunov optimization represents the extent of drift-plus-penalty and controls the weight of penalty. In our proposed algorithm, the larger parameter V increases the weight of penalty, i.e., system utility and causes a increase in the final optimization value. Hence, adjusting parameter V can balance the importance of queue stability and system utility and acquire an ideal result we want.\nWe derive the following theorem to provide an upper bound on the above drift-plus-penalty expression.\nTheorem 1: Suppose G(t) is i.i.d. over slots. For arbitrary y(l), x(t), w(t), f(t), all parameters V > 0, and all possible values of \u0398(l), \u2206T (\u0398(l))\u2212V E{G(l)|\u0398(l)} is upper bounded by\n\u2206T (\u0398(l))\u2212 V E{G(l)|\u0398(l)}\n6 C \u2212 p(l+1)\u22121\u2211 t=pl QI(t)E {[ U\u2211 u=1 yu(l)ru(t)\u03c4 \u2212 U\u2211 u=1 yu(l)Au(t) ] \u2223\u2223\u2223\u2223\u2223\u0398(l) } \u2212 l+T\u22121\u2211 t=1 QII(t)E {[ U\u2211 u=1 yu(l)Bbus\u03c4 \u2212 U\u2211 u=1 yu(l)ru(t)\n] \u2223\u2223\u2223\u2223\u2223\u0398(l) } \u2212 l+T\u22121\u2211 t=1 \u03a6(t)E {[ U\u2211 u=1 yu(l)fu(t)\u2212 \u2211 u Fu(yu(l)Bbus)\n(t) ]\u2223\u2223\u2223\u2223\u2223\u0398(l) } \u2212 V E {[ GL(l)\u2212 \u03b7 p(l+1)\u22121\u2211 t=pl P (t) ]\u2223\u2223\u2223\u2223\u2223\u0398(l) } ,\nwhere\nC > 1\n2 { U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl ru(t)\u03c4 2 + [ U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl\nAu(t)\n]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl Bbus\u03c4 2 + max u\u2208US(l) [ yu(l) p(l+1)\u22121\u2211 t=pl\nru(t)\n]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl fu(t) 2 + max u\u2208US(l) [ p(l+1)\u22121\u2211 t=pl\nFu(yu(l)Bbus)(t) ]2} (22)\nProof : Please refer to Appendix A. The stochastic optimization theory indicates that a stochastic optimization problem can be solved by minimizing the upper bound of its drift-plus-penalty expression subject to the same constraints except the stability one in [22]. Therefore, we need to minimize right-hand-side of (III-A) to solve (18) subject to (C1)-(C6), because (C7) is a stability constraint. Therefore, the original multi-time scale optimization problem for long-term revenue can be equivalently transformed into an optimization of revenue on multiple LTSs after the above process. Then, we can get the following optimization problem which is expressed by\nmax y(l),x(t),w(t),f(t) [QII(t)\u2212QI(t)] U\u2211 u=1 yu(l)ru(t)\u2212QII(t)\n\u2211 u,k yu(l)Bbus\u03c4 \u2212\u03a6(t) U\u2211 u=1 yu(l)fu(t) + \u03a6(t) \u2211 u Fu(yu(l)\nBbus)(t) + V \u03b7P (t)\ns.t.(C1)\u2212 (C6). (23)\nFrom the principle of opportunistically minimizing an expectation, minimizing f(t) can ensure that E{f(t)|\u0398(t)} is minimized. Therefore for the objective function in (23), we\n7 can obtain by ignoring constant C, QI (t) U\u2211 u=1 yu (l)Au (t) and GL (l) in (III-A) and removing the conditional expectations in (III-A). Since user admission is in long time scale, we use subproblem separation to separate the long and short time scale problems for ease of processing. The subproblems in long and short time scale will be solved later by iterative integration. Obviously, user association, bandwidth allocation and computing capacity allocation are highly coupled with each other in (23). We further decompose these optimization variables to develop low-complexity algorithms in the following subsections."
        },
        {
            "heading": "B. Solution of Resource Allocation Subproblem in Short Time Scale",
            "text": "We obtain the solution of the coupled optimization problem (23) by integrating the algorithms through iterative optimization. Under given user association x(t) and bandwidth allocation w(t), the computing resource allocation subproblem can be expressed by\nmax f(t) \u03a6(t) U\u2211 u=1 yufu(t)\u2212 V \u03b7 \u2211 u,k xuk(t)\u03baescf 3 uk(t)\ns.t. (C4) : fu(t) > yuFu(au(t)) U\u2211 u=1 zumt\u0303m \u2212 yu au(t)Bbus \u2212 yu au(t) rU (t) ,\u2200u, t,\n(C6) : U\u2211 u=1 xuk(t)fuk(t) 6 Fk,\u2200k, t.\n(24)\nwhere the other terms of equation (23) are constants under the above condition. Obviously, the objective function of (24) is concave and its constraints are linear, so it is a convex optimization problem. Therefore we can obtain the optimized solution f\u2217(t) directly through the convex optimization method [23] in polynomial time using standard CVX tools [24].\nUnder given w(t) and f(t) we can obtain the user association problem which is denoted as\nmin x(t) [QII(t)\u2212QI(t)] U\u2211 u=1 yuru(t) + V \u03b7 \u2211 u,k xuk(t)\u03baescf 3 uk(t)\ns.t. (C2)\u2212 (C3). (25)\nIt can be converted to\nmin x(t) (QII(t)\u2212QI(t)) U\u2211 u=1 yuruk(t) + V \u03b7 \u2211 u,k \u03baescf 3 uk(t)  xuk(t)\ns.t. (C2)\u2212 (C3), (26)\nwhose optimal solution can be expressed as\nxuk =\n{ 1, k = k\u2217,\n0, k 6= k\u2217, (27)\nwhere\nk\u2217 = arg min k\u2208KS\n{ (QII(t)\u2212QI(t))yuruk(t) + V \u03b7\u03baescf3uk(t) } (28)\nNext, if user association x(t) and computing capacity allocation f(t) are known, then the bandwidth allocation subproblem can be given by\nmin w(t) \u2211 u,k [(QII(t)\u2212QI(t)]xuk(t) log2 ( 1 + gukPu Iuk(t) + \u03c32 ) wuk(t)\ns.t. (C4)\u2032 : \u2211 k xuk(t)wuk(t) log2 ( 1 + gukPu Iuk(t) + \u03c32 ) >\nau(t)\nt\u0303m \u2212 tcompu (t)\u2212 tbusu (t) ,\u2200u, t, (C5) : \u2211 u\u2208U xuk(t)wuk(t) 6Wk,\u2200k, t.\n(29)\nIt can be seen that the objective function of the problem is a linear function, and the constraints are linear, so it is a linear programming problem, and the solution w(t) can be directly obtained by optimization methods such as the interior point method [25] by using standard CVX tools.\nWe use the idea of the greedy algorithm to iterate the above three solutions for the subproblem and arrive at the suboptimal solution, which is summarized in Algorithm 1.\nAlgorithm 1 Iterative Algorithm for Resource Allocation for Given Admission.\n1: repeat 2: Set initial STS t = l and obtain the current queue state QI(t), QII(t), and \u03a6(t). 3: Set q = 0, user association x0(t) and computing capacity allocation f0(t). 4: Set l = 0 and the iteration constraints \u03b5 > 0. 5: Obtain w0(t) by solving bandwidth allocation subproblem through x0(t) and f0(t). 6: Obtain the value of optimization problem (23), i.e. N0(t). 7: repeat 8: q = q + 1. 9: Obtain xq(t) by solving user association subproblem\nthrough wq\u22121(t) and fq\u22121(t). 10: Obtain fq(t) by solving computing capacity allocation subproblem through wq\u22121(t) and xq(t). 11: Obtain wq(t) by solving bandwidth allocation subproblem through xq(t) and fq(t). 12: Obtain the value of Nq(t). 13: until\n\u2223\u2223Nq(t)\u2212Nq\u22121(t)\u2223\u2223 6 \u03b5. 14: t = t+ 1. 15: Update QI(t), QII(t), and \u03a6(t). 16: until t = l + T \u2212 1.\n8"
        },
        {
            "heading": "C. Solution of User Admission Subproblem in Long Time Scale",
            "text": "The original problem (18) can be decomposed into two subproblems on the time scale, one is (23) and the other can be denoted as\nmax y(l)\nGL(l)\u2212 \u03b7GS(l)\ns.t. (C1) : yu(l) \u2208 {0, 1},\u2200u, (C8) : feasibility of problem (23).\n(30)\nObviously, this problem is a nonlinear 0-1 integer programming problem, and the constraint (C8) needs to determine the solvability of (23). Therefore it cannot be solved by conventional methods. According to the above condition that the random arrival process of tasks of user u is independently and identically distributed between STSs, the constraint (C8) can be transformed into (C4) and (C7). The Lyapunov architecture makes the above solution , i.e. Algorithm 2, satisfy (C7), so we solely need to transform (C8) into (C4) there. Then, (30) can be expressed as\nmax y(l) U\u2211 u=1 vu(l)yu(l)\u2212 \u03b7 p(l+1)\u22121\u2211 t=pl P (t)\ns.t. (C1) : yu(l) \u2208 {0, 1},\u2200u,\n(C4) : yu(l)tu(t) 6 M\u2211 m=1 zum(t)t\u0303m,\u2200u, t \u2208 [l, l + T \u2212 1].\n(31)\nThe optimization problem (31) is a linear 0-1 integer programming problem and can be solved by iterating with (23). The whole procedure is shown in Algorithm 2.\nAlgorithm 2 User Admission Algorithm. 1: Set initial LTS l. 2: repeat 3: Set j = 0, and determine the initial y0u(l) that satisfies\nthe condition. 4: Solve (23) through Algorithm 1 and obtain x(t), w(t) and f(t). 5: j = j + 1. 6: Obtain the iteration consequence yju(l) by solving (31). 7: Calculate the value of G(l). 8: until G(l) no longer changes significantly. 9: l = l + 1."
        },
        {
            "heading": "D. Dynamic Solution to the Optimization Problem",
            "text": "As mentioned above, we decompose the original complex stochastic optimization problem (18) into two subproblems. As shown in Fig.2, we propose a short-time-slot resource allocation algorithm and a long-time-slot user admission algorithm to solve it. Due to the specificity of the two time-slot iteration algorithm, we need to solve the problem offline and adopt the strategies online. The detailed procedure to solve (18) is summarized in Algorithm 3.\nAlgorithm 3 Multi-time Scale User Admission and Resource Allocation algorithm.\n1: In each LTS l = iT, i = 0, 1, .... obtain the current queue state QI(tk). 2: Determine the user admission yu(l) by calling Algorithm 2. 3: In each STS t \u2208 [l, l + T ], obtain user association x(t), bandwidth allocation w(t) and computing capacity allocation f(t) according to (23) by calling Algorithm 1. 4: t = t+ 1. 5: Update the current queue value QI(t), QII(t), and \u03a6(t)\naccording to (3), (11) and (12)."
        },
        {
            "heading": "E. Analysis of the Proposed Algorithms",
            "text": "In this subsection, we analyse the temporal computational complexity and the convergence of the proposed algorithms.\nIn Algorithm 1, we adopt alternating iteration of three subproblems and obtain the solutions in closed form by convex optimization. According to the greedy algorithm and convex optimization theory [26], iteration of three convex subproblems can ensure |Nq(t) \u2212 Nq\u22121(t)| 6 \u03b5 quickly. Therefore, the convergence of Algorithm 1 is obvious but only sub-optimality can be guaranteed [5]. From the perspective of complexity, the complexity of (24), (25) and (29) are O(U3K), O(UK) and O((UK)3.5)) [26]. We assume the number of iterations is L1, then the complexity of Algorithm 1 is O((U3K +UK + (UK)3.5)L1). This decoupled algorithm can make good use of convex optimization methods to solve complex coupling problem (23).\nIn Algorithm 2, since (31) a linear 0-1 integer programming problem and iterating with (23), we assume the number of iterations is L2, then the complexity is O((U2 + \u03b31)L2) where \u03b31 is the complexity of Algorithm 1. Obviously, the convergence of the Algorithm 2 depends on Algorithm 1 since the iteration is performed with it. Therefore, the proposed algorithm can reach convergence after several iterations as Algorithm 1 converges quickly. Algorithm 3 indicates that above algorithms run on time slots, therefore at LTS l the complexity of Algorithm 3 is O((U2+\u03b31)L2p). In the way, the complex stochastic optimization problem (18) is decomposed into low-complexity subproblems iteratively solved."
        },
        {
            "heading": "IV. SIMULATION RESULT",
            "text": "In this section, we first set the simulation parameters and then demonstrate simulation results to evaluate the performance of the proposed algorithms."
        },
        {
            "heading": "A. Simulation Parameters",
            "text": "As mentioned above, we consider system level simulation of uplink in a small cell F-RAN according to a 3GPP normative document of small cell network [27]. Four SBSs are deployed in a small cell area, with a total coverage area of 200m\u00d7200m. The SBSs provide admission and resource allocation for users. We model the path loss of radio access link of the small cell network and use a hexagonal cellular deployment model. The distance between the user and the SBS is within the standard\n9 of the 3GPP document and only the outdoor access link exists. At STS t, let duk(t) be the distance between SBS k and user u, and users all moves randomly within the area at a speed of 3km/h. Note that the path loss between SBS k and user u is dependent on the link state of LoS and NLoS. When it is a LoS link, the path loss is given by\n\u00b5 LoS/NLoS uk (t) =22.0log10(duk(t)) + 28.0\n+ 20log10(F q),\n(32)\nand when it is a NLoS link, the path loss is given by\n\u00b5 LoS/NLoS uk (t) =36.7log10(duk(t)) + 22.7\n+ 26log10(F q),\n(33)\nwhere F q indicates the carrier frequency. The LoS probability that determines the LoS/NLoS link state is denoted as\npLoSuk (t) = min\n( 18\nduk(t) , 1\n)( 1\u2212 e\u2212 duk(t) 36 ) + e\u2212 duk(t) 36 ,\n(34) therefore the NLoS probability is pNLoSuk (t) = 1 \u2212 pLoSuk (t). Then the channel gain can be expressed as\nguk(t) = ( pLoSuk 10 \u00b5LoSuk + pNLoSuk 10 \u00b5NLoSuk )\u22121 . (35)\nIn our proposed algorithm, we notice that the parameter p of T = p\u03c4 in our algorithm represents the relationship between the length of LTSs and STSs. Hence, too small p will affect the effect of multi-time scales and optimization of the algorithm and too large p will increase the running time of our algorithm but the improved algorithm performance is not significant. Therefore, we set the appropriate values of T and \u03c4 . Part of simulation parameters are summarized in Table II [28].\nAccording to the computing delay requirements of some services of ultra reliable low latency communications and combining task scenarios [29], [30], we set the basis delay requirement as 20 ms. Furthermore, we assume three task types whose delay requirements and model parameters progressive by task type and are equally distributed to the task set. The\n2 4 6 8 10 12 14 16 18 20\nNumber of iterations\n-16\n-14\n-12\n-10\n-8\n-6\n-4\n-2\n0\nV a\nlu e\no f\nA lg\no ri th\nm 3\n1011\nV = 10 V = 20 V = 30 V = 40\nFig. 3. Convergence of the proposed Algorithm\ndelay limits and model parameters of the tasks are shown in Table III."
        },
        {
            "heading": "B. Convergence of the Proposed Algorithm",
            "text": "For convenience, we integrate the value of STS iteration and the value LTS iteration, i.e., the system revenue and cost at each STS, to show our overall convergence. Fig. 3 shows the convergence of the proposed algorithm under different parameters V . From Fig. 3, we can see that the convergence of the proposed Algorithm is fast and the trend is basically fixed after convergence. Since Algorithm 1 is nested into Algorithm 2 for computing, Algorithm 1 will stop as system utility of Algorithm 2 converges and the trend will be basically fixed after convergence. Also, a larger V indicates a larger penalty weight in Lyapunov drift plus penalty which increases the weight of GS(l) relative to the overall queue stability and thus increases the impact of power consumption, therefore it leads to a change in the value of the utility which increases and a more volatile fluctuation after convergence as V becomes larger, which is a good proof of Remark 2."
        },
        {
            "heading": "C. Performance of the Proposed Algorithm",
            "text": "To verify the performance of the proposed algorithm, we will consider the following schemes: \u2022 Fixed Allocation (FA): The scheme only optimizes user\nadmission. \u2022 Fixed Channel (FC): The scheme is that user association\nand bandwidth allocation are fixed and optimize access variables and computational resource allocation.\n10\n\u2022 Traditional Computing (TC) [5]: The scheme allocates computing resources based on input data size according to the traditional computing model.\nWe demonstrate the amount of admitted users varying with three different task types in Fig. 4. As we can see, different values of t\u0303m affect the amount of admitted users. From (13), we notice that t\u0303m affects the system revenue and can cause that our algorithm will choose more valuable users. This characteristic is also shown in figure and the amount of admitted users of task 2 is more than other tasks. In our system, integrated user value is affected by the needed computing resource Fum besides t\u0303m and therefore users of task 2 become the most valuable in our parameters. However, our proposed algorithm can handle the difference between three types of tasks well and make user admission stable as we can see in Fig. 4 compared with other contrast algorithms.\nThe characteristics of system utility with total number of users under different bandwidth values as Fig. 5 shows, it can be found that it increases with the total number of users and slower after the total number of users is greater than 70. To better indicate the momentum of the system utility, we\nadd the blue dotted line which represent the ratio of admitted users of our proposed algorithm as right vertical axis in Fig. 5 shows. When the total number of users is small, the resources are sufficient and resource allocation can be efficient, so the system utility will increase quickly as the total number of users increases. However, when the total number of users is large, the resources are limited and resouce alloction will not be efficient, therefore the rising tendency of utility will be reduced. The radio of admitted users will decrease first and then become stable after the total number of users is 70, which shows the increasing momentum of system utility will become slow when the total number of users become large. The comparison algorithms all have this property, but the trend is different for different algorithms. To make figure concise as far as possible, we do not show the ratio of admitted users of the comparison algorithms which has been compared in Fig. 4. There is a slight but insignificant increase in system utility for higher bandwidth values, therefore the bandwidth value change has a small impact on the system.\nWe compare system utility with computing capacity under different bandwidth values in Fig. 6, and it can be seen that\n11\nthere is a maximum value in Fk = 190 Gigacycle/s. This is because system utility depends on the number of association users and power consumption and our algorithm needs to make a trade-off between them. When Fk reaches a certain amount, our proposed algorithm can take it to a better tradeoff utility value. However when Fk continues to rise, the fairness design of this algorithm will allow more users to admit and thus generate more power consumption. Therefore it will lead to a decrease in the value of utility. While Fk increases to a certain magnitude, the number of associated users will not continue to increase due to bandwidth resource, so the change is no longer significant. This property is also present in comparison algorithms, mainly because the utility defined in this paper are indirectly influenced by the allocation of multiple resources. The increase in computing resource has little effect on total utility, so its change is insignificant and even has the characteristic of decreasing with its increase. We can see in this graph again that higher bandwidth values do not have a significant impact on total utility.\nWe plot the trade-off between system revenue and system cost vs. \u03b7 in Fig. 7. The system utility (16) indicate that our algorithm can balance system revenue and cost, and in this figure we can see that our proposed algorithm can get better trade-off than comparison algorithm while \u03b7 increases, which verifies Remark 1. There is obvious increase on system revenue and decrease on negative system cost when \u03b7 increases in our proposed algorithm but this trend is not that significant in other comparison, which means our proposed algorithm can significantly attach importance to user admission and stabilize the system utility. Therefore, the system utility is increased by balancing revenue at LTSs and cost at STSs in the proposed algorithm and make systems increasingly stable compared with other algorithms."
        },
        {
            "heading": "V. CONCLUSION",
            "text": "In this paper, we studied the the dynamical resource allocation problem of specific characteristic of tasks in MEC systems. Specially, the stochastic optimization problem we proposed was decomposed into user admission at LTS and resource allocation at STS by the Lyapunov optimization technique and we decoupled the optimization variables for efficient algorithm design and solve each subproblem at low complexity. Simulation results has demonstrated that, compared with the benchmarks, the proposed algorithm improves the performance of user admission and resource allocation efficiently and achieves a flexible trade-off between system revenue and cost at multi-time scales and considering semantic extraction tasks.\nAPPENDIX"
        },
        {
            "heading": "A PROOF OF THEOREM 1",
            "text": "First of all, we have that {max [A\u2212B, 0] + C}2 \u2264 A2 + B2 + C2 \u2212 2A (B \u2212 C) always holds if A \u2265 0, B \u2265 0 and C \u2265 0. Suppose V > 0, then squaring both sides of (3) yields\nQI(l + T \u2212 1)2 6 QI(t)2 + \u2211 u,k yu(l) p(l+1)\u22121\u2211 t=pl xuk(t)ruk(t)\u03c4 2\n+  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl Au(t) 2 \u2212 2p(l+1)\u22121\u2211 t=pl QI(t) \u2211 u,k yu(l) xuk(t)ruk(t)\u03c4 \u2212 U\u2211 u=1 yu(l)Au(t) ] . (36)\nFor (11), similarly, we have\nQII(l + T \u2212 1)2 6 QII(t)2 + \u2211 u,k yu(l) p(l+1)\u22121\u2211 t=pl Bbus\u03c4 2\n+ max u\u2208US(l),k\u2208KS yu(l)p(l+1)\u22121\u2211 t=pl ruk(t) 2 \u2212 2p(l+1)\u22121\u2211 t=pl\nQII(t)\u2211 u,k yu(l)Bbus\u03c4 \u2212 U\u2211 u=1 yu(l)xuk(t)ruk(t)  . (37) For (12), we also have\n\u03a6(l + T \u2212 1)2 6 \u03a6(t)2 + \u2211 u,k yu(l) p(l+1)\u22121\u2211 t=pl xuk(t)fuk(t) 2\n+ max u\u2208US(l) p(l+1)\u22121\u2211 t=pl M\u2211 m=1 zum(t)Fum(yu(l)Bbus) 2 \u2212 2p(l+1)\u22121\u2211 t=pl\n\u03a6(t) \u2211 u,k yu(l)xu,k(t)fu,k(t)\u2212 \u2211 u Fu(yu(l)Bbus)(t)  . (38)\nBy organizing the above inequalities, we can obtain\nQI(l + T \u2212 1)2 \u2212QI(t)2\n2 6\n1\n2 {[\u2211 u,k yu(l) p(l+1)\u22121\u2211 t=pl xuk(t)ruk(t)\n\u03c4 ]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl Au(t) 2}\u2212 p(l+1)\u22121\u2211 t=pl QI(t) \u2211 u,k yu(l)\nxuk(t)ruk(t)\u03c4 \u2212 U\u2211 u=1 yu(l)Au(t)\n] , (39)\nQII(l + T \u2212 1)2 \u2212QII(t)2\n2 6\n1\n2 {[\u2211 u,k yu(l) p(l+1)\u22121\u2211 t=pl Bbus\n\u03c4 ]2 + max u\u2208US(l),k\u2208KS yu(l)p(l+1)\u22121\u2211 t=pl ruk(t) 2}\u2212 p(l+1)\u22121\u2211 t=pl\nQII(t) \u2211 u,k yu(l)Bbus\u03c4 \u2212 U\u2211 u=1 yu(l)xuk(t)ruk(t)  , (40) and\n\u03a6(l + T \u2212 1)2 \u2212\u03a6(t)2\n2 6\n1\n2 {[\u2211 u,k yu(l) p(l+1)\u22121\u2211 t=pl xuk(t)fuk(t) ]2\n+ max u\u2208US(l) p(l+1)\u22121\u2211 t=pl Fu(yu(l)Bbus)(t) 2}\u2212 p(l+1)\u22121\u2211 t=pl \u03a6(t)\n12\n\u2211 u,k yu(l)xu,k(t)fu,k(t)\u2212 \u2211 u Fu(yu(l)Bbus)(t)  . (41) Summing the above three equations yields\nL(\u0398(l + T )\u2212\u0398(l))\n6 1\n2 { U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl ru(t)\u03c4 2 + [ U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl\nAu(t)\n]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl Bbus\u03c4 2 + max u\u2208US(l) [ yu(l)\np(l+1)\u22121\u2211 t=pl ru(t)\n]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl fu(t) 2 + max u\u2208US(l) [ p(l+1)\u22121\u2211 t=pl Fu(yu(l)Bbus)(t) ]2} \u2212 p(l+1)\u22121\u2211 t=pl QI(t) \u2211 u,k yu(l)\nxuk(t)ruk(t)\u03c4 \u2212 U\u2211 u=1 yu(l)Au(t) ] \u2212 p(l+1)\u22121\u2211 t=pl QII(t) \u2211 u,k yu(l)Bbus\u03c4 \u2212 U\u2211 u=1 yu(l)xuk(t)ruk(t) ] \u2212 p(l+1)\u22121\u2211 t=pl \u03a6(t) \u2211 u,k\nyu(l)xu,k(t)fu,k(t)\u2212 \u2211 u Fu(yu(l)Bbus)(t)\n] . (42)\nWe take conditional expectation to the above inequality and can obtain\n\u2206T (\u0398(l))\u2212 V E{G(l)|\u0398(l)}\n6 C \u2212 p(l+1)\u22121\u2211 t=pl QI(t)E {[ U\u2211 u=1 yu(l)ru(t)\u03c4 \u2212 U\u2211 u=1 yu(l)Au(t) ] \u2223\u2223\u2223\u2223\u2223\u0398(l) } \u2212 l+T\u22121\u2211 t=1 QII(t)E {[ U\u2211 u=1 yu(l)Bbus\u03c4 \u2212 U\u2211 u=1 yu(l)ru(t)\n] \u2223\u2223\u2223\u2223\u2223\u0398(l) } \u2212 l+T\u22121\u2211 t=1 \u03a6(t)E {[ U\u2211 u=1 yu(l)fu(t)\u2212 \u2211 u Fu(yu(l)Bbus)\n(t) ]\u2223\u2223\u2223\u2223\u2223\u0398(l) } \u2212 V E  [ GL(l)\u2212 \u03b7 p(l+1)\u22121\u2211 t=pl P (t) ]\u2223\u2223\u2223\u2223\u2223\u0398(l)  ,\n(43)\nwhere\nC > 1\n2 { U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl ru(t)\u03c4 2 + [ U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl\nAu(t)\n]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl Bbus\u03c4 2 + max u\u2208US(l) [ yu(l) p(l+1)\u22121\u2211 t=pl\nru(t)\n]2 +  U\u2211 u=1 yu(l) p(l+1)\u22121\u2211 t=pl fu(t) 2 + max u\u2208US(l) [ p(l+1)\u22121\u2211 t=pl\nFu(yu(l)Bbus)(t)\n]2} . (44)\nThen we complete the proof of Theorem 1."
        }
    ],
    "title": "Dynamic Multi-time Scale User Admission and Resource Allocation for Semantic Extraction in MEC Systems",
    "year": 2022
}