{
    "abstractText": "Detection of chaos in time series is of utmost importance in many scientific fields. Indeed, the presence of chaos and its significance, especially in multidimensional systems, plays an essential role in the control and analysis of such systems, and in their practical use in a variety of applications. In this paper, we demonstrate a new methodology for the detection of chaos in time series using a reservoir computing (RC) paradigm called conceptor-driven network (ConDN). Case studies on the known chaotic attractors (i.e. Lorenz, Rossler, Chua) of integer (conventional) and non-integer (fractional-order) orders, as well as a physically simulated and designed spintronic device (NCVO) are used in this study to validate the proposed chaos detection approach. The proposed chaos detection approach is tested on clean and noisy time series of the mentioned attractors. It outperforms the 0-1 chaos detection test and the largest Lyapunov exponent (LLE) estimation approach especially in the high noise-level conditions. In addition, the proposed approach is capable of differentiating the time series generated by the systems whose dynamics is at the edge of chaos. The simplicity of use of the proposed chaos detection approach can be counted, as well, as one of its main advantages over traditional chaos detection methods. INDEX TERMS chaos detection, time series, reservoir computing, conceptors;",
    "authors": [
        {
            "affiliations": [],
            "name": "Ali Rida ISMAIL"
        },
        {
            "affiliations": [],
            "name": "Slavisa JOVANOVIC"
        }
    ],
    "id": "SP:4c66542624cd56ffd46edf979084c9a3cbe5c0b8",
    "references": [
        {
            "authors": [
                "M.S.D. Cattani",
                "I.L. Caldas",
                "S.L. de Souza",
                "K.C. Iarosz"
            ],
            "title": "Deterministic chaos theory: Basic concepts",
            "venue": "Revista Brasileira De Ensino De Fisica, vol. 39, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "U. Parlitz"
            ],
            "title": "Estimating lyapunov exponents from time series",
            "venue": "2016.",
            "year": 2016
        },
        {
            "authors": [
                "M. Balcerzak",
                "D. Pikunov",
                "A. Dabrowski"
            ],
            "title": "The fastest, simplified method of lyapunov exponents spectrum estimation for continuous-time dynamical systems",
            "venue": "Nonlinear Dynamics, vol. 94, pp. 3053\u20133065, sep 2018.",
            "year": 2018
        },
        {
            "authors": [
                "J. Awrejcewicz",
                "A. Krysko",
                "N. Erofeev",
                "V. Dobriyan",
                "M. Barulina",
                "V. Krysko"
            ],
            "title": "Quantifying chaos by various computational methods. part 1: Simple systems",
            "venue": "Entropy, vol. 20, p. 175, mar 2018.",
            "year": 2018
        },
        {
            "authors": [
                "J. Pathak",
                "Z. Lu",
                "B.R. Hunt",
                "M. Girvan",
                "E. Ott"
            ],
            "title": "Using machine learning to replicate chaotic attractors and calculate lyapunov exponents from data",
            "venue": "Chaos: An Interdisciplinary Journal of Nonlinear Science, vol. 27, p. 121102, dec 2017.",
            "year": 2017
        },
        {
            "authors": [
                "E.G. Nepomuceno",
                "S.A.M. Martins",
                "M.J. Lacerda",
                "E.M.A.M. Mendes"
            ],
            "title": "On the use of interval extensions to estimate the largest lyapunov exponent from chaotic data",
            "venue": "Mathematical Problems in Engineering, vol. 2018, pp. 1\u20138, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "G.A. Gottwald",
                "I. Melbourne"
            ],
            "title": "The 0-1 test for chaos: A review",
            "venue": "Chaos Detection and Predictability, pp. 221\u2013247, Springer Berlin Heidelberg, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "J.R. Tempelman",
                "F.A. Khasawneh"
            ],
            "title": "A look into chaos detection through topological data analysis",
            "venue": "Physica D: Nonlinear Phenomena, vol. 406, p. 132446, may 2020.",
            "year": 2020
        },
        {
            "authors": [
                "M. Casdagli"
            ],
            "title": "Nonlinear prediction of chaotic time series",
            "venue": "Physica D: Nonlinear Phenomena, vol. 35, pp. 335\u2013356, may 1989.",
            "year": 1989
        },
        {
            "authors": [
                "A.S. Weigend"
            ],
            "title": "Time Series Prediction. Routledge, may 2018",
            "year": 2018
        },
        {
            "authors": [
                "A.D. Pano-Azucena",
                "E. Tlelo-Cuautle",
                "B. Ovilla-Martinez",
                "L.G. de la Fraga",
                "R. Li"
            ],
            "title": "Pipeline FPGA-based implementations of ANNs for the prediction of up to 600-steps-ahead of chaotic time series",
            "venue": "Journal of Circuits, Systems and Computers, vol. 30, p. 2150164, dec 2020.",
            "year": 2020
        },
        {
            "authors": [
                "E. Tlelo-Cuautle",
                "A.M. Gonz\u00e1lez-Zapata",
                "J.D. D\u00edaz-Mu\u00f1oz",
                "L.G. de la Fraga",
                "I. Cruz-Vega"
            ],
            "title": "Optimization of fractional-order chaotic cellular neural networks by metaheuristics",
            "venue": "The European Physical Journal Special Topics, jan 2022.",
            "year": 2022
        },
        {
            "authors": [
                "C.-S. Poon",
                "M. Barahona"
            ],
            "title": "Titration of chaos with added noise",
            "venue": "Proceedings of the National Academy of Sciences, vol. 98, pp. 7107\u20137112, jun 2001.",
            "year": 2001
        },
        {
            "authors": [
                "J.B. Gao",
                "J. Hu",
                "W.W. Tung",
                "Y.H. Cao"
            ],
            "title": "Distinguishing chaos from noise by scale-dependent lyapunov exponent",
            "venue": "Phys. Rev. E, vol. 74, p. 066204, Dec 2006.",
            "year": 2006
        },
        {
            "authors": [
                "A.R. Ismail",
                "S. Jovanovic",
                "S. Petit-Watelot",
                "H. Rabah"
            ],
            "title": "Application of reservoir computing for the modeling of nano-contact vortex oscillator",
            "venue": "Electronics, vol. 8, p. 1315, nov 2019.",
            "year": 2019
        },
        {
            "authors": [
                "J.P. Eckmann",
                "S.O. Kamphorst",
                "D. Ruelle",
                "S. Ciliberto"
            ],
            "title": "Liapunov exponents from time series",
            "venue": "Phys. Rev. A, vol. 34, pp. 4971\u20134979, Dec 1986.",
            "year": 1986
        },
        {
            "authors": [
                "S. Mehdizadeh"
            ],
            "title": "A robust method to estimate the largest lyapunov exponent of noisy signals: A revision to the rosenstein\u2019s algorithm",
            "venue": "Journal of Biomechanics, vol. 85, pp. 84\u201391, mar 2019.",
            "year": 2019
        },
        {
            "authors": [
                "H. Jaeger"
            ],
            "title": "Conceptors: an easy introduction",
            "venue": "2014.",
            "year": 2014
        },
        {
            "authors": [
                "H. Jaeger"
            ],
            "title": "Using conceptors to manage neural long-term memories for temporal patterns",
            "venue": "Journal of Machine Learning Research, vol. 18, no. 13, pp. 1\u201343, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "T. Furlanello",
                "J. Zhao",
                "A.M. Saxe",
                "L. Itti",
                "B. Tjan"
            ],
            "title": "Active long term memory networks",
            "venue": "ArXiv, vol. abs/1606.02355, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "S.A. Deka",
                "D.M. Stipanovi\u0107",
                "B. Murmann",
                "C.J. Tomlin"
            ],
            "title": "Longshort term memory neural network stability and stabilization using linear matrix inequalities",
            "venue": "2019 IEEE International Symposium on Circuits and Systems (ISCAS), pp. 1\u20134, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "E.N. Lorenz"
            ],
            "title": "Deterministic nonperiodic flow",
            "venue": "Journal of the Atmospheric Sciences, vol. 20, no. 2, pp. 130\u2013141, 1963.",
            "year": 1963
        },
        {
            "authors": [
                "C. Stegemann",
                "H.A. Albuquerque",
                "R.M. Rubinger",
                "P.C. Rech"
            ],
            "title": "Lyapunov exponent diagrams of a 4-dimensional chua system",
            "venue": "vol. 21, p. 033105, sep 2011.",
            "year": 2011
        },
        {
            "authors": [
                "K.M. Ibrahim",
                "R.K. Jamal",
                "F.H. Ali"
            ],
            "title": "Chaotic behaviour of the rossler model and its analysis by using bifurcations of limit cycles and chaotic attractors",
            "venue": "vol. 1003, p. 012099, may 2018.",
            "year": 2018
        },
        {
            "authors": [
                "R.-D. Ene",
                "C. Pop",
                "C. Petri\u015for"
            ],
            "title": "Systematic review of geometrical approaches and analytical integration for chen\u2019s system",
            "venue": "vol. 8, p. 1530, sep 2020.",
            "year": 2020
        },
        {
            "authors": [
                "A.D. Pano-Azucena",
                "E. Tlelo-Cuautle",
                "G. Rodriguez-Gomez",
                "L.G. de la Fraga"
            ],
            "title": "FPGA-based implementation of chaotic oscillators by applying the numerical method based on trigonometric polynomials",
            "venue": "AIP Advances, vol. 8, p. 075217, jul 2018.",
            "year": 2018
        },
        {
            "authors": [
                "C. Li",
                "G. Chen"
            ],
            "title": "Chaos and hyperchaos in the fractional-order r\u00f6ssler equations",
            "venue": "Physica A: Statistical Mechanics and its Applications, vol. 341, pp. 55\u201361, oct 2004.",
            "year": 2004
        },
        {
            "authors": [
                "J.G. Lu",
                "G. Chen"
            ],
            "title": "A note on the fractional-order chen system",
            "venue": "Chaos, Solitons & Fractals, vol. 27, pp. 685\u2013688, feb 2006.",
            "year": 2006
        },
        {
            "authors": [
                "S. Petit-Watelot",
                "J.-V. Kim",
                "A. Ruotolo",
                "R.M. Otxoa",
                "K. Bouzehouane",
                "J. Grollier",
                "A. Vansteenkiste",
                "B.V. de Wiele",
                "V. Cros",
                "T. Devolder"
            ],
            "title": "Commensurability and chaos in magnetic vortex oscillations",
            "venue": "Nature Physics, vol. 8, pp. 682\u2013687, jul 2012.",
            "year": 2012
        },
        {
            "authors": [
                "A. Vansteenkiste",
                "J. Leliaert",
                "M. Dvornik",
                "M. Helsen",
                "F. Garcia-Sanchez",
                "B.V. Waeyenberge"
            ],
            "title": "The design and verification of MuMax3",
            "venue": "AIP Advances, vol. 4, p. 107133, oct 2014.",
            "year": 2014
        },
        {
            "authors": [
                "S. Petit-Watelot",
                "R.M. Otxoa",
                "M. Manfrini"
            ],
            "title": "Electrical properties of magnetic nanocontact devices computed using finite-element simulations",
            "venue": "Applied Physics Letters, vol. 100, p. 083507, feb 2012.",
            "year": 2012
        },
        {
            "authors": [
                "J. L\u00e9tang",
                "S. Petit-Watelot",
                "M.-W. Yoo",
                "T. Devolder",
                "K. Bouzehouane",
                "V. Cros",
                "J.-V. Kim"
            ],
            "title": "Modulation and phase-locking in nanocontact vortex oscillators",
            "venue": "Phys. Rev. B, vol. 100, p. 144414, Oct 2019.",
            "year": 2019
        },
        {
            "authors": [
                "T. Devolder",
                "D. Rontani",
                "S. Petit-Watelot",
                "K. Bouzehouane",
                "S. Andrieu",
                "J. L\u00e9tang",
                "M.-W. Yoo",
                "J.-P. Adam",
                "C. Chappert",
                "S. Girod",
                "V. Cros",
                "M. Sciamanna",
                "J.-V. Kim"
            ],
            "title": "Chaos in magnetic nanocontact vortex oscillators",
            "venue": "Physical Review Letters, vol. 123, oct 2019.",
            "year": 2019
        },
        {
            "authors": [
                "A. Wolf",
                "J.B. Swift",
                "H.L. Swinney",
                "J.A. Vastano"
            ],
            "title": "Determining lyapunov exponents from a time series",
            "venue": "Physica D: Nonlinear Phenomena, vol. 16, pp. 285\u2013317, jul 1985. 14 VOLUME 4, 2016",
            "year": 1985
        }
    ],
    "sections": [
        {
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nINDEX TERMS chaos detection, time series, reservoir computing, conceptors;\nI. INTRODUCTION\nChaos is a natural or artificial non-linear behaviour found in systems. Such a behaviour is seemingly unpredictable without possibility to converge to a stationary or a periodic function of time, although it is actually governed by deterministic laws. The main reason behind such unpredictability is the high sensitivity a chaotic system shows to initial conditions. Indeed, an infinitesimal deviation of the system\u2019s starting point may lead to a massive change of its dynamics. Accordingly, a chaotic system can be characterized as [1]: bounded (dynamics stay inside an orbit rather than escaping off to infinity), deterministic (dynamics can be analytically described where same initial conditions give same behaviour over time), and sensitive (small perturbations to the system are exponentially amplified).\nThe detection of chaos in time series in the case of highdimensional and noisy systems is not a trivial task. The common approach of detecting chaos in such time series is the computation of the largest Lyapunov exponent (LLE) whose sign informs about the chaotic (or periodic) behaviour.\nAlthough instability mechanisms of chaotic systems are rigorously described with the Lyapunov exponent (and vectors), its computation remains very challenging even today despite the numerous algorithms and methods proposed in the literature. One way to compute the LLE is to use the so-called direct methods [2]. These methods, by tracking the evolution of the distance between neighboring orbits, afford a graphical feedback whether local exponential divergence due to different reasons (i.e. measurement noise, length of timeseries) is properly identified or not. On the other hand, the full spectrum of Lyapunov exponents can be extracted by the dot products of perturbations vectors and their derivatives. The n Lyapunov exponents are estimated by the integration of n\u2212 1 perturbations and by using basic computing operations such as summation, subtraction, multiplication, and division. This yields to faster and more efficient results compared to the methods involving the calculation of perturbations lengths logarithms and Gram-Schmidt orthonormalization, especially in low-dimensional problems [3]. Machine learning has also been investigated in LLE computation. An\nVOLUME 4, 2016 1\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\napproach is demonstrated in [4], where a single layer feedforward network of given parameters is trained on the timeseries to be inspected. Then, the parameters of the initial network are varied and the network is retrained. The output signals produced by the two networks are analyzed and compared for the extraction of the entropy characteristics of the input time-series. A different methodology, based on the use of reservoir computing, is shown in [5]. A reservoir of a recurrent neural network is first built and trained on a given input time-series. In the testing phase, the reservoir becomes capable of producing an image of the input time series whose behaviour can be defined using the parameters of the neural network. Thus, the Lyapunov exponent estimation can be calculated using classical ways. The main advantages of the latter method is that it is applicable even in model-free cases, where data could be of unknown source or too noisy to be exploited; besides it is sufficient to be fed by short time-series where large ones are generated by the network on which the computation of Lyapunov exponents is done. Analytical modelling is an additional option for the computation of Lyapunov exponents [6]. This can be done by identifying a model for the available data using NARMAX (Non-linear Autoregressive Models) representation, and then extract the interval extensions that will be used to calculate the lower bound error. Eventually, the logarithm of the lower bound error is fitted by a simple linear function from which the LLE is extracted. Nevertheless, the poor reliability of these different methods when applied to noisy time series often limits their use to clean time series from theoretical systems.\nAnother approach for chaos detection in time series is the 0-1 test proposed by Gottwald and Melbourne in [7]. The advantage of this method over the largest Lyapunov exponent is the possibility to detect chaos even when the knowledge about state-space variables of the observed system is incomplete or unknown, which is the case of many real systems. The 0-1 test shows its limits in noisy time series, especially when the gauge-measurements needed for a reliable detection and corresponding to the regular system behaviour, cannot be obtained (often in real world systems). Recently, Tempelman and Khasawneh presented an enhanced version of the Gottwald and Melbourne\u2019s 0-1 test where by using topological data analysis its reliability for highnoise levels time series is greatly improved [8]. Another class of chaos detection approaches is the use of nonlinear prediction. This method is originally established for short-term generation of non linear time-series. However, by applying a long-term non-linear prediction technique on a given signal and calculating the accuracy (error between real and predicted signal), the differentiation between chaotic and regular dynamics can be attained. This notion of chaos detection can be achieved using a variety of approaches found in the literature such as radial basis function [?], neural networks [10], [11]. In [11], the authors propose three ANNbased designs (MLP, NARX, and ESN) with their FPGA implementation for the chaotic time series prediction. The authors presented optimized hardware pipeline architectures\nof the considered models allowing high speed computation and optimal chaotic time series prediction. The frequency analysis as well, and particularly Fourrier transform (FT), could serve for the task of chaos detection in time-series as presented recently by Tlelo-Cuautle et al. in [12]. The authors used this FT-based chaos detection to accelerate the optimization process of fractional-order chaotic networks driven by metaheuristics such as differential evolution and particle swarm optimization. They observed that chaotic time series are usually related to high amplitude FT presentations whereas regular time series are of low amplitude presentations. Indeed, chaos detection in time series is still a widely open research problem, because chaos can be induced by noise as well as some standard random processes may have deterministic origin [?].\nIn this paper, we propose an alternative reservoircomputing based approach for chaos detection. By introducing a time series under investigation as input without any additional parameters, the insights about the chaotic or regular behaviour of the time series are produced. Case studies on the known chaotic attractors (Lorenz, Rossler, Chua, Chen and Lu), obtained using integer (conventional) and non-integer (fractional) orders of derivations, as well as a real world spintronic device, are used in this study to validate its effectiveness. The simplicity of use of our proposed method combined with high robustness to noise are its main advantages. The preliminary results of this work has been presented at ISCAS 2021 in [15]. In this paper, a more in-depth analysis of the presented approach as well as an extended experimental section including real emergent chaotic devices has been provided.\nThe rest of the paper is organized as follows: Section II gives background details about the computation of the Largest Lyapunov Exponent (LLE), 0-1 test, and conceptordriven networks. The proposed chaos detection approach is presented in Section III. In section IV and section V we demonstrate and discuss respectively the effectiveness and robustness of our proposed method on several theoretical and real worlds systems including fractional order systems. Finally, Section VI gives concluding remarks and presents some future perspectives."
        },
        {
            "heading": "II. BACKGROUND",
            "text": ""
        },
        {
            "heading": "A. LARGEST LYAPUNOV EXPONENT",
            "text": "One way to detect chaos in a time series (or in a system at its origin) is to calculate its Largest Lyapunov Exponent (LLE). The LLE measures the exponential rate of divergence of adjoining trajectories on the system\u2019s attractor. Generally, the calculation of the LLE passes through two main stages: (1) constructing an appropriate state space that captures the system\u2019s dynamics, and (2) measuring the strength of divergence of the points on the state space. For that, two random neighboring points from the state space are taken as initial points, and their separating distance is continuously measured. The common challenge that all LLE\u2019s estimation algorithms face is the influence of noise, especially\n2 VOLUME 4, 2016\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nwhen dealing with experimental data where the possibility of choosing false neighbors increases. One way to tackle this problem is to consider multiple neighboring points and average their distances from the reference ones. In addition, other factors making the computation of the LLE very challenging and which may lead to its false estimation are inherent noise, system uncertainties and perturbations as well as the inappropriate choice of parameters [16].\nThe Rosenstein\u2019s approach is one of the algorithms for the estimation of the LLE from small data sets [17]. It starts with the placement of M groups of neighboring points whose initial separation dj\u2212ave(0) is taken as the average of Euclidean distances of all points to the reference one (j \u2208 [1,M ]):\ndj\u2212ave(0) = E([dj1(0), dj2(0), ..djn(0)]) (1)\nwhereE denotes the mean, and djn is the distance separating the nth nearest neighbor Xjn from the reference point XJ\u0302 :\ndjn(0) = ||Xjn \u2212XJ\u0302 || (2)\nwhere ||.|| is the Euclidean norm. Note that all nearest points have to be located from the reference point at a distance at least equal to the mean period of the time-series under inspection (i.e a nearest point should be located on a trajectory different from that of the reference point).\nThe evolution of the average distance between neighboring points is commonly defined using the Largest Lyapunov Exponent \u03bbmax as follows:\nd(t) = dave(0)e \u03bbmaxt (3)\nwhere dave(0) is the initial separation of the neighboring points. Using Equation 3, one can write for the jth pair:\ndj\u2212ave(i) \u2248 dave(0)e\u03bbmax(i\u2206t) (4)\nApplying a logarithmic function on both sides, we get:\nln[dj\u2212ave(i)] \u2248 ln[dave(0)] + \u03bbmax(i\u2206t) (5)\nThe above equation describes M parallel lines whose slopes are relatively proportional to \u03bbmax. Finally, \u03bbmax can be accurately estimated by applying the least-squares fit on the averaged line defined as follows:\ny(i) = 1\n\u2206t E[dj\u2212ave(i)] (6)\nwhere E[dj\u2212ave(i)] is the average over all pairs of j.\nB. 0-1 TEST The 0-1 test is a chaos detection method firstly introduced by Gottwald and Melbourne for the analysis of deterministic dynamical systems [7]. Unlike the LLE methods, the 0-1 test uses time series to distinguish between regular and chaotic dynamics with no need to reconstruct the phase space. The final result of this test is either 1 or 0 indicating the presence of chaos or its absence respectively. A recipe of the 0-1 test can be summarized in computing the following quantities: Translation Variables pc(n) and qc(n), Mean Square Displacement Dc(n), and Asymptotic Growth Rate Kc(n).\nGiven a discrete time series \u03c6(j) for j \u2208 [1, N ], the translation variables pc(n) and qc(n) are computed as follows:\npc(n) = n\u2211 j=1 \u03c6(j) cos(jc) & qc(n) = n\u2211 j=1 \u03c6(j) sin(jc) (7)\nfor n \u2208 [1, N ] and c \u2208 (0, \u03c0). The number of c values taken in the test, is denoted by Nc. In practice, Nc = 100 seems to be sufficient [7]. The translation variables are bounded if the underlying dynamics is regular (periodic or quasiperiodic) whereas they behave asymptotically like Brownian motion for mutlidimensional chaotic systems.\nThe mean square displacement Dc(n), a second quantity needed for the 0-1 test, describes the diffuseness of a given behaviour. For regular dynamic systems, Dc(n) is a bounded function of time, whereas it scales linearly with time for chaotic systems. Thus, the growth rate of Dc(n) is the main criterion used for chaos detection. Dc(n) is defined as follows:\nDc(n) = lim N\u2192\u221e\n1\nN N\u2211 r=1 {[(pc(j + n)\u2212 pc(j)]2\n+ [qc(j + n)\u2212 qc(j)]2} (8) \u2212 Vosc(c, n)\nfor n \u2264 ncut where ncut \u2264 N . In practice, ncut = N/10 is a common choice [7]. The term Vosc(c, n) is added for less non-linearity during convergence:\nVosc(c, n) = lim N\u2192\u221e\n1\nN N\u2211 j=1 \u03c6(j)]2 1\u2212 cosnc 1\u2212 cos c\n(9)\nFinally, the asymptotic growth rate Kc, which describes the strength of the correlation ofDc(n) with the linear growth, is estimated. This is done by the linear regression of the log \u2212 log plot of Dc(n). Accordingly, one can write:\nKc = lim n\u2192\u221e\nlog D\u0303c(n)\nlog(n) (10)\nwhere D\u0303c(n) = Dc(n)\u2212min n {Dc(n)}ncutn=1 , is set to eliminate the negative values. Graphically, the slope of the straight line fitting the graph of logDc(n) versus log n is an approximation of Kc.\nThis process is repeated Nc times, where each time c takes a new random value in the open set (0, \u03c0). Note that this set could be reduced for the sake of test validity. Consequently, the median of all Kc values is computed to obtain K: K = 0 signifies regular dynamics, whereas K = 1 indicates the presence of chaos. It should be noted that the dataset N should be of a sufficient data length so that an asymptotic behaviour of Dc(n) takes place. Although its few requirements in application, the 0-1 Test is however not always reliable. The used data should not be oversampled nor downsampled, otherwise false results can be obtained. Furthermore, the parameter c has to be tuned in a convenient range to avoid resonance that could yield to Kc 6\u2208 [0, 1].\nVOLUME 4, 2016 3\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nC. CONCEPTOR-DRIVEN NETWORK\nConceptor-Driven Network (ConDN) is a recent Reservoir Computing approach, firstly introduced by Jaeger in 2014 [18], [19]. It is based on the principle of long short-term memories (LTMs) [20], [21] initially established for the prediction of continuous time-series. Its general structure, as shown in Figure 1, is an enhanced version of the echo-state network (ESN) [11], also established for prediction task. A ConDN consists of four layers: a K-dimensional input layer, an N \u00d7N reservoir, a conceptor layer of dimensionsN \u00d7N , and a single-unit output layer. The conceptor layer, found between the reservoir and the output layer as shown in Fig. 1, presents the main difference in such networks with respect to the conventional ESNs. K time-varying input signals, each of length L, are introduced to the network via the input layer. An input time series, also called a pattern, is indexed by j \u2208 [1,K] and denoted by pj(n). The reservoir placed between the two layers, is a Recurrent Neural Network (RNN) at which, the connections between nodes are spontaneous and in all directions. The conceptor layer involves a group of matrices called conceptors Cj(n), where each represents, if trained, a given input pattern pj(n).\nIn the installation phase, anN -neurons RNN is established by randomly creating a dynamic reservoir described by a tuple (W in, W \u2217, b) where W in is the input N \u00d7K weights matrix; W \u2217 is the internal N \u00d7 N connection matrix; and b is a bias vector of length N . Afterwards, the readout weights matrix W out is computed by introducing into the network, as an input, a random time-varying signal. The main reason behind this choice is to find an optimal output matrix that could perform well for any input patterns. For that, a Ldimensional white noise signal v(n) enters the network to run the system according to the following state-update equation:\nxv(n+ 1) = tanh(W \u2217xv(n) +W inv(n) + b) (11)\nThe resultant state vector xv is used then to find the optimal estimation of W out by minimizing the following quadratic\nloss by linear regression:\nL\u2211 n=1 (W outx\u03bd(n)\u2212 \u03bd(n))2 (12)\nThe second phase represents the loading phase. In this phase, the ConDN starts to recognize the input patterns pj(n).K time varying signals are separately inserted into the network to compute their corresponding intermediate state vectors xj(n) using the following state-update equation:\nxj(n+ 1) = tanh(W \u2217xj(n) +W inpj(n) + b) (13)\nThe collected states from Equation 13 hold the dynamical characteristics of the original input patterns. Thus, it becomes possible to expel the input drivers pj(n) and build instead one matrix that involves all the states xj(n). For that, the input weights matrix W \u2217 is replaced by the input internalization weights matrix W by minimizing the quadratic loss below after the washout period n0 ends:\nK\u2211 j=1 L\u2211 n=n0 \u2016W \u2217xj(n) +W inpj(n)\u2212Wxj(n)\u20162 (14)\nThe intermediate states generated from Equation 13 are used as well for the computation of the conceptor matrices Cj . These matrices guide the system in the testing phase rather than the input signals pj(n):\nx(n+ 1) = Cj tanh(Wx(n) + b) (15)\nIn mathematical terms, Cj works as an identity matrix for the term f(Wxj(n) + b), whereas it is a null matrix for the\n4 VOLUME 4, 2016\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nterms holding other states. Accordingly, the optimal values of the conceptor matrices Cj can be computed using the following quadratic loss:\nL(Cj) = E\u2016Cjxj(n)\u2212 xj(n)\u20162 + (\u03b3j)\u22122\u2016Cj\u20162fro (16)\nwhere E is the mathematical mean, \u2016.\u20162fro is the squared Frobenius matrix norm, and \u03b3j is the aperture parameter that specifies the internal structure of Cj . A conceptor matrix Cj is close to the identity matrix I if \u03b3j is large. Conversely, when the aperture is small, the Cj is close to the null matrix O. This mutation can be evidently observed in Equation 16. When Cj \u2248 I , the first term converges to its minimal value. By contrast, the second terms vanishes in the case Cj \u2248 O. The minimization of the quadratic loss above leads to the following optimal solution of Cj :\nCj = Rj(Rj + (\u03b3j)\u22122I)\u22121 (17)\nRj = E[xj(n)xj(n)T ] being the correlation matrix whose state vector xj is already collected for the computation of the internal matrix W (Eqs. 13 and 14).\nFinally, in the testing phase, any pattern pj(n) can be reestimated by the ConDN by running first the state-update equation (Eq. 15) followed by the linear output equation below:\ny(n) = W outx(n) \u2248 p(n) (18)\nFigure 2 summarizes the described main steps of the ConDN process in flowchart form.\nIII. PROPOSED CHAOS DETECTION APPROACH The proposed ConDN-based chaos-detection method is summarized in Algorithm 1. The inputs of this method are two vectors: p - representing a time series whose dynamics should be analyzed (regular or chaotic); and s - representing an ordered sampling vector whose elements si, i \u2208 [1, |s|] provide sampling factors to use for the sampling of the initial time series p. Note that, |s| denotes the length of s.\nThe first phase of this approach is to build the database of input signals needed to feed the ConDN network. This database is built by using the time series p and sampling factors si (si \u2208 s, i \u2208 [1, |s|]). The first element of this ordered sampling vector is always 1 (s1 = 1) meaning that the initial time series without sampling is always a part of the database of input signals. The size of the sampling vector s should be at least 2, i.e |s| \u2265 2. In the case |s| = 2, the second element of the sampling factor is s2 = 2, meaning that the initial time series is sampled by a factor of 2. For |s| > 2, all other values of sampling factors are allowed and should be in increasing order in the vector s. Let us assume the size |s| = NS > 2 for the following explanation. The result of this first phase are NS signals qi, i \u2208 s of different size |q1| > |q2| > \u00b7 \u00b7 \u00b7 > |qNp |. A ConDN network must be fed with the signals of the same size. Thus, the size equalizing of the signals qi, i \u2208 s from the first phase is mandatory. The size of the smallest signal qi, i \u2208 s corresponding to the highest sampling factor s|s| = Np must be used for\nAlgorithm 1: ConDN-based chaos detection method. 1 ConDN-based Chaos Detection (p, s)\ninputs : Time series to analyze p; Ordered sampling vector s = [1, 2, . . . , Np];\noutput: Dynamics variation \u2206 or fitting parameter a 2 // Time series sampling 3 for i \u2208 s do 4 qi \u2190 Sampling (p, i) 5 \u21d2 |q1| > |q2| > \u00b7 \u00b7 \u00b7 > |qNp | 6 // Sampled time series length equalizing 7 for i \u2208 s do 8 pi \u2190 qi[1:|qNp |] 9 \u21d2 |p1| = |p2| = \u00b7 \u00b7 \u00b7 = |pNp |\n10 // ConDN input matrix P 11 P = [p1p2 . . . pNp ] 12 // C - overall conceptor matrix 13 C \u2190 ConDN (P ), where C = [C1C2 . . . CNp ] 14 // conceptor matrix Ci corresponding to pi, i \u2208 s 15 // S - overall SVD matrix 16 S\u2190 SVD (C), where S = [S1S2 . . . SNp ] 17 // SVD matrix Si corresponding to Ci, i \u2208 s 18 T \u2190 Trace (S), where T = [t1t2 . . . tNp ] 19 ti = tr(Si) = \u2211N j S i jj , i \u2208 s 20 if (one-shot) then 21 // s = [1, 2] 22 \u22061 = t\ns2 \u2212 ts1 ; 23 \u2206 = [\u22061] 24 return \u2206; 25 else 26 // s = [1, 2, \u00b7 \u00b7 \u00b7 , Np] 27 for i \u2208 [1, |s| \u2212 1] do 28 \u2206i = t\nsi+1 \u2212 ts1 ; 29 \u2206 = [\u22061,\u22062, \u00b7 \u00b7 \u00b7 ,\u2206|s|\u22121] 30 (a, \u03c4)\u2190 Fitting(\u2206, s) 31 return a;\nthis operation. As the result of the equalizing operation, we have NS signals pi, i \u2208 s of the same length, which can be presented in a matrix form P = [p1p2 . . . pNp ] as shown in Algorithm 1, line 11. In the next phase, the prepared input signals matrix P is fed to an already installed ConDN network (see Section II-C for more details). The training phase of the ConDN networks is carried out on these input signals. As a result of this training phase, the conceptor matrices C = [C1C2 . . . CNP ] are generated, where Ci, i \u2208 s is anN\u00d7N conceptor matrix corresponding to the input signal pi, i \u2208 s. The size of the conceptor matrix is equal to the size of the ConDN\u2019s reservoir (see Section II-C). Afterwards, each generated conceptor matrix Cj undergoes a singular value decomposition (SVD) as shown in Algorithm 1, line 16:\nCi = U iSiU i T , i \u2208 s (19)\nwhere Si is the diagonal matrix of SVD at which the eigenvalues ofCi are arranged on its diagonal in descending order. The matrices Si, i \u2208 s contain the precious information about the dynamics of the input signals pi, i \u2208 s and are\nVOLUME 4, 2016 5\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nused to determine their either regular or chaotic behaviour. For each matrix Si, i \u2208 s, we compute then the value of trace ti = tr(Si), i \u2208 s corresponding to the summation of all eigenvalues on its diagonal, as illustrated in line 19 of Algorithm 1. Large values of ti, i \u2208 s are expected to arise in the case of chaotic patterns, whereas small values indicate the absence or the low level of chaos. Moreover, the values of ti, i \u2208 s are expected to increase with higher sampling factors si, i \u2208 s in the case of chaotic patterns, and to remain stable and low otherwise. In the last phase, by using the computed trace values from the previous phase, the dynamics variation vector \u2206 can be computed. The elements of \u2206 are computed from the trace vector T = [t1t2 . . . tNP ] of sizeNS by subtracting the value of ts1 = t1 from all other elements starting from its second element ts2 . Thus, the size of the vector \u2206 is NS \u2212 1 where \u2206j = tsj+1 \u2212 t1, j \u2208 [1, NS \u2212 1].\nThe results obtained in the dynamics variation vector \u2206 can be analyzed in two ways: a quick estimation of the nature (regular or chaotic) of the input time series called one-shot sampling method; or a much deeper analysis based on the fitting results of the relationship \u2206(s) called multiple-shots sampling method. In the first method, the sampling vector s has only two values s = [1, 2], meaning that the initial time series p is sampled only once with a factor of 2. The two signals or patterns (the initial time series p1 and sampled by 2 p2) once equalized in length are introduced to the ConDN, and allow to obtain, after the ConDN training, two conceptor matrices C1 and C2 corresponding to each input pattern respectively. By computing the SVD matrices S1 and S2 of these conceptors as well as their trace values t1 and t2, the dynamics variation vector \u2206 can be obtained. \u2206 has only one element \u22061 corresponding to the difference t2\u2212 t1, as shown in line 23 of Algorithm 1. If p (or p1 and p2) is chaotic, two distinct values of t1 and t2 are expected, and thus a large value of \u22061. On the other side, sampling should not largely affect the value of trace in the non-chaotic case, yielding to a small value of \u22061.\nIn the multiple-shots sampling method, the sampling vector s has more than two values s = [1, 2, \u00b7 \u00b7 \u00b7 , Np] and is used for a much deeper analysis of the evolution of the obtained dynamics variation vector \u2206 with sampling s. For NS = |s| different sampling factors in s, the proposed approach will generate a dynamics variation vector \u2206 of size NS \u2212 1, as shown in line 29 of Algorithm 1. The evolution of \u2206 with sampling s should follow a capacitor charging function trend (see Equation 20) in both, regular and chaotic behaviour case, with much higher values of fitting parameters a and \u03c4 in the latter case due to the rapid increase in the value of the trace in correspondence with the increase of the sampling factor.\n\u2206 = a(1\u2212 e\u2212(s\u22121)/\u03c4 ) (20)\nIV. CHAOS DETECTION RESULTS In this section, the proposed chaos detection approach has been tested and validated on known chaotic systems described with differential equations of integer and fractional\norders that can be tuned to generate regular dynamics also, as well as on an emergent non-linear spintronic device called Nano-Contact Vortex Oscillator (NCVO), which is still not fully described with analytical expressions. For some of the case studies, the proposed approach has been compared with the 0-1 Test approach detailed in Section II-B."
        },
        {
            "heading": "A. CASE STUDIES",
            "text": ""
        },
        {
            "heading": "1) Known chaotic attractors",
            "text": "Five known chaotic systems of integer orders were considered in this study: Lorenz, Chua, Rossler, Chen, and Lu [22]\u2013 [25]. We also include the two fractional-order (FO) systems: FO Rossler and FO Chen [26]\u2013[28]. A 3D representation of their attractors in the chaotic state is shown in Figure 3. They describe continuous-time dynamics of these systems and are defined with non-linear ordinary differential equations as follows: \u2022 Lorenz System:\nx\u0307 = \u03b1(y \u2212 x) y\u0307 = x(\u03b2 \u2212 z)\u2212 y z\u0307 = xy \u2212 \u03b3z (21)\n\u2022 Chua System:\nx\u0307 = \u03b1(y \u2212 x+ x\u2212W (w)x) y\u0307 = x\u2212 y + z z\u0307 = \u2212\u03b2y \u2212 \u03b3z w\u0307 = x (22)\nwhere W (w) = f(\u03b4, \u03b6, w(t))\n\u2022 Rossler System:\nx\u0307 = \u2212y \u2212 z y\u0307 = x+ \u03b1y\nz\u0307 = \u03b2 + z(x\u2212 \u03b3) (23)\n\u2022 Chen System:\nx\u0307 = \u03b1(y \u2212 x) y\u0307 = x\u2212 xz + \u03b3y z\u0307 = xy \u2212 \u03b2z (24)\n\u2022 Lu System:\nx\u0307 = \u03b1(y \u2212 x) y\u0307 = \u2212xz + \u03b3y z\u0307 = xy \u2212 \u03b2z (25)\n\u2022 FO Rossler System:\ndqx dtq = \u2212y \u2212 z dqy dtq = x+ \u03b1y dqz dtq = \u03b2 + z(x\u2212 \u03b3) (26)\n6 VOLUME 4, 2016\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nwhere q \u2208 [0, 1] is the derivation order.\n\u2022 FO Chen System:\ndqx dtq = \u03b1(y \u2212 x) dqy dtq = x\u2212 xz + \u03b3y dqz dtq = xy \u2212 \u03b2z (27)\nwhere q \u2208 [0, 1] is the derivation order. The parameters and orders shown in the ordinary differential equations above affect the shape of an attractor and it may even vanish at some values. For that, we consider for each integer-order system two sets of parameters: the first one reinforces its chaotic dynamics whereas the second one its regular (or non-chaotic) dynamics. Some parameters are kept unchanged among the two sets. For the fractional-order systems, we fix the parameters and vary the order to realize chaotic and regular dynamics. The values of the parameters as well as the orders used in our simulation will be shown later."
        },
        {
            "heading": "2) Nano-Contact Vortex Oscillator",
            "text": "Nano-Contact Vortex Oscillator (NCVO) is a highly nonlinear spintronic device of spin valve structure [15], [29] (See Fig. 4). The most significant layers at which the physical phenomenon occurs are: (1) the Permalloy layer at which the magnetization alters continuously and it is called the free layer; and (2) the Cobalt layer that shows uniform magnetization so it is called the fixed layer. The two ferromagnetic\nlayers are separated by an insulating copper band. A metallic portion on top, called the Nano Contact (NC), allows the passage of the current into the device. When the NCVO is subjected to a direct bias current I and\nText\nText Text\na magnetic field B, a magnetic vortex is formed in the upper part of the body. This vortex revolves around the center of the device creating an alternative resistance. With the applied DC current, an oscillating voltage VGMR at the vortex gyration frequency appears across the device. Therefore, the NCVO exhibits different behaviours that can be classified in two major modes: \u2022 Modulated non-chaotic mode: the vortex is exposed\nto a periodic relaxation in its gyration. After fulfilling a given number of complete cycles, the vortex directs toward the center and changes its polarity and the sense of gyration. \u2022 Chaotic mode: the vortex revolves around the nanocontact with no definite rules. Unlike the former mode, the gyration relaxation occurs in a non-periodic way although the vortex shows complete cycles.\nIn addition, the NCVO device exhibits also a rarely existing mode called non-modulated non-chaotic mode at which the vortex rotates continuously around the nano-contact only in one direction. The different modes can be studied by visualizing the time varying signals of both the NCVO\u2019s output magnetization M(t) and the vortex position with respect to the NanoContact s(t). These output signals are composite which makes their evaluation quite difficult. In the non-modulated mode, these time series are periodic signals whose fundamental frequency f0 specifies the gyration speed of the vortex. In the modulation mode, the time series generated by the NCVO are quasi-periodic. This mode is also called the locking mode, where f0 is locked to the modulation frequency fmod. The later frequency specifies the number of cycles the vortex performs before changing its polarity. In this case, the fraction fmod/f0 is simply a rational number. In the chaotic mode, the modulation frequency is no more locked to the fundamental frequency; this leads to an irrational value of the fraction fmod/f0. Two types of data are generated from an NCVO: micro-magnetic simulated data and real experimental data. In simulation, M(t) and s(t) are generated using the finite difference micromagnetic solver Mumax3 [30]. This solver implements a numerical space and a time integration of the Landau-Lifshitz-Gilbert\nVOLUME 4, 2016 7\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nNanoContact\n(a)\nCore Reversal\n(b)\n(c)\n100 \ud835\udc5b\ud835\udc5a\n\ud835\udc65\n\ud835\udc66\nFIGURE 5: 2D plot of the trajectory of the NCVO\u2019s vortex gyration in the three different modes: (a) non-modulated, (b) modulated, and (c) chaotic.\nequation including the different spin transfer torque terms. More details concerning the procedure description and the values of parameters used in simulation can be found in [29], [31], [32]. The extracted signals Mx(t), My(t), and Mz(t) represent the projection of M(t) on the three dimensions in space respectively. Similarly, s(t) has the components: x(t), y(t), and z(t).\nThe gyration of the magnetic vortex around the NanoContact in the upper layer of the NCVO reflects its operating mode whether it is non-modulated, modulated, or chaotic (see Fig. 5). However, this circular movement representing the polarity reversal of the vortex takes places at slightly distinct positions in its trajectory. As a result, the time varying signals corresponding to the NCVO\u2019s output magnetization (Mx(t), My(t), and My(t)) as well as the vortex position in space (x(t), y(t), and z(t)) are contaminated with a jitter effect, an additional slightly chaotic behaviour different to the chaos obtained due to the polarity reversal frequency. Samples0 500 1000 1500 2000 S im ul at ed X #10-7 -1 0 1 S im ul at ed Z 0 0.5 1\nPattern2 4 6 8 10 12 14 16 18 20 22 G\nen er\nat ed\nC od\ne\n0\n0.5\n1\nSamples0 500 1000 1500 2000\nG en\ner at\ned X\n-1\n0\n1\n(a)\nSamples0 500 1000 1500 2000\nS im\nul at\ned X\n#10-7\n-1\n0\n1\nS im\nul at\ned Z\n0\n0.5\n1\nPattern2 4 6 8 10 12 14 16 18 20 22 G\nen er\nat ed\nC od\ne\n0\n0.5\n1\nSamples0 500 1000 1500 2000\nG en\ner at\ned X\n-1\n0\n1\n(b)\nSamples0 500 1000 1500 2000\nS im\nul at\ned X\n#10-7\n-1\n0\n1\nS im\nul at\ned Z\n0\n0.5\n1\nPattern2 4 6 8 10 12 14 16 18 20 22 G\nen er\nat ed\nC od\ne\n0\n0.5\n1\nSamples0 500 1000 1500 2000\nG en\ner at\ned X\n-1\n0\n1\nFIGURE 6: Artificially reconstructed x(t) signal without jitter effect for the (a) non-chaotic, (b) half-chaotic, and (c) chaotic cases.\nThe NCVO\u2019s output signals are composed of different patterns. Each pattern represents one cycle of the trajectory of the vortex gyration around the Nano-Contact. Consequently,\nthe shape of a pattern depends on the direction of gyration of the vortex around the Nano-Contact. Due to the jitter effect, the patterns are slightly variable in length. Thus, it seems difficult to determine whether the observed complex signal arises from a chaotic or stochastic process. One way to consider only the chaotic behaviour of the NCVO device and get rid of the jitter effect is to build an artificial signal having the same patterns (approximated with sine and cosine functions) as the ones found in the NCVO\u2019s output signals which evolve in the rhythm of the vortex polarity and direction of gyration, but have the same length. This artificial signal is also used as one of the case studies in this evaluation part (see Figure 6)."
        },
        {
            "heading": "B. ONE-SHOT SAMPLING",
            "text": "We first evaluated the one-shot sampling method described in Algorithm 1 on the seven known attractors detailed in Section IV-A1. The set of parameters of the integer-order systems, as well as the set of parameters and orders of the fractionalorder systems, used to generate signals with chaotic and regular nature, are presented in Tables 1 and 2 respectively. The first component x(t) of each of the seven systems, for a given set of parameters and orders corresponding to chaotic or regular nature, is injected beside its sampled counterpart into a separate ConDN. The reservoir size N of all networks is arbitrary set to 1000.\nFigure 7 presents the variation of the trace values ti, i \u2208 s = [1, 2] of the chaotic and regular input patterns as a function of their data length, where i = 1, 2 denote the raw p1 and sampled p2 patterns respectively. The trace values of the two chaotic (initial and sampled) patterns are plotted in blue, whereas the ones of the non-chaotic (initial and sampled) patterns are in red. Generally speaking, ti of a chaotic signal is large compared to that of a non-chaotic one. This could be referred to the high instability that characterizes chaos and is at the origin of large eigenvalues captured by the ConDN\u2019s conceptor matrix. Additionally, sampling of these\n8 VOLUME 4, 2016\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n2 4 6 8 10\nData-Length 104\n0\n100\n200\n300\n400\nti\n2 10\nt - t 104\n100\n150\n200\nT ra\nce (S j ) tr i\nData h\nti\n4 6 8 10\nata-Length 104\n100\n150\n200\nT ra\nce (S j ) tr i ti\n(a)\n2 4 6 8 10\nData-Length 104\n0\n100\n200\n300\nti\nt th 104\n100\n150\n200\nT ra\nce (S j ) tr i\nData-\nti\n2 4 6 8 10\nata-Length 104\n100\n150\n200\nT ra\nce (S j ) tr i\nDat\nti\n(b)\n2 4 6 8 10\nData-Length 104\n100\n200\n300\nT ra\nce (S j ) tr i\ngth\nti\n2 4 6 8 10\nData-Length 104\n100\n150\n200 250 T ra ce (S j ) tr i\nt th\nti\ninput patterns mainly impacts chaotic time-series. This can be noticed for all cases in Figures 7 where the two blue plots corresponding to the two (initial and sampled by 2) chaotic signals are separated by a big gap, whereas the two non-chaotic signals in red are almost stacked. To numerically express this difference for the two behaviours of each system, the dynamics vector variation \u2206 = [\u22061] is calculated. These results are shown in Figure 8. The non-chaotic signals of any of the studied conventional systems show a small value of \u22061 (close to 0), whereas in the chaotic case \u22061 is large (between 45 and 95).\nC. MULTIPLE-SHOTS SAMPLING We also evaluated the multiple-shots sampling method described in Algorithm 1. For this method, three of the five integer-order known attractors (Rossler, Chen, and Lu) with the two fractional-order systems (FO Rossler and FO Chen), all detailed in Section IV-A1, as well as the (simulated and artificial) signals describing the NCVO\u2019s vortex position in space (see Section IV-A2 for more details), were used.\nFO Rossler FO Chen Lorenz Chua Rossler Chen Lu System\n0\n45\n95 Chaotic Non-Chaotic\nFO Rossler FO Chen Lorenz Chua Rossler Chen Lu System\n0\n45\n95 Chaotic Non-Chaotic\nTABLE 3: Multiple-shots sampling: values of the parameters used in the ordinary differential equations of the three studied integer-order systems (Eqns. 23 to 25) in the chaotic, halfchaotic, and non chaotic modes.\nSystem Parameters Order Chaotic Half-Chaotic Non-Chaotic FO Rossler {\u03b1, \u03b2, \u03b3} = {0.4, 0.4, 10} o = 0.95 o = 0.9 o = 0.87 FO Chen {\u03b1, \u03b2, \u03b3, } = {35, 3, 28,\u22127} o = 0.96 o = 0.86 o = 0.853\nTABLE 4: Multiple-shots sampling: values of the parameters and derivation order used in the ordinary differential equations of the two studied fractional-order systems (Eqns. 26 and 27) in the chaotic, half-chaotic, and non chaotic modes.\nFor each system, to the two modes (chaotic and nonchaotic) evaluated in the last section, a half-chaotic one was added. The half-chaotic mode represents a transient state between the chaotic and non-chaotic modes. It should be mentioned that the two remaining integer-order conventional attractors, Lorenz and Chua, were discarded in this part due to the difficulties to obtain a half-chaotic behaviour for these systems (abrupt transitions from regular to chaotic cases). For the integer-order systems, the three different modes are obtained by varying the parameters of the differential equations 23 to 25. The values of these parameters used\nVOLUME 4, 2016 9\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nin the simulation are shown in Table 3. For the fractionalorder systems, the three different modes are obtained by fixing the parameters and varying the fractional order of the differential equations 26 and 27. The values of such parameters and orders used in the simulation are shown in Table 4. On the other hand, for the NCVO device, a micromagnetic simulation is carried out at I = 17mA with different values of the applied magnetic field. The horizontal magnetic field is fixed to Bx = 1mT , whereas the vertical magnetic field takes the values Bz = 10mT (for non-chaotic case), Bz = 1mT (for half-chaotic case), and Bz = 20mT (for chaotic case). Similarly, three behavioural modes of x(t) are obtained, where x(t) denotes the horizontal projection of the time-varying position of the NCVO\u2019s vortex in space. Note that, the non-chaotic signal of the NCVO device used in this evaluation is in the modulated mode. The number of neurons used for each system is shown in Table 5. It should be noticed that the difference in number of neurons used for different case studies is mainly related to the optimization technique we applied to accelerate simulations. Indeed, for each system and mode, this technique computes (based on the experimental trials) the number of non-zero eigenvalues of the ConDN\u2019s conceptor matrices and based on this reduces the number of neurons to use. Consequently, significant acceleration of the overall simulation time without influencing the final result is obtained.\nFigures 10 and 11 present the variation of the dynamics\nvector \u2206(s) with its fitting function (see Equation 20) for the seven known chaotic systems and the NCVO respectively. From Figure 10, it can be noticed that the signals of FO Rossler, FO Chen, Rossler, Chen, and Lu systems show a quick increase in \u2206 for the chaotic case, almost constant for the non-chaotic case, and an intermediate growth for the halfchaotic case. The same can be noticed for the NCVO\u2019s results from Figure 11. Indeed, the three modes of the NCVO can be easily distinguished by the dynamics vector variation \u2206(s). The non-chaotic and half-chaotic modes are close compared to the chaotic one, which is mainly due to the few pattern distortions that differentiates the half-chaotic signal from the regular one. The effect of filtrating the jitter effect (see Section IV-A2) by imposing the same length to all patterns can be noticed by comparing Figures 11(a) and 11(b). Each\n0 4 8 12 16 20 Sampling factor\n0\n20\n40\n(% )\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n0\n20\n40\n60\n( % ) 0 1 2 3 5 10 20 30\nNoise Percentage (%)\n20\n40\n60\n( %\n)\n(a)\n0 4 8 12 16 20 Sampling factor\n0\n20\n40\n60\n(% )\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n0\n20\n40\n60\n( %\n)\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n20\n40 6 ( % )\n(b)\n0 4 8 12 16 20 Sampling factor\n0\n20\n40\n(% )\nChaotic - Original Chaotic - Fitted Half-Chaotic - Original Half-Chaotic - Fitted Non-Chaotic - Original Non-Chaotic - Fitted\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n0\n20\n40\n60\n( %\n)\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n20\n40\n60\n( %\n)\n(c)\nFIGURE 10: Multiple-shots sampling: dynamics vector variation \u2206 as a function of sampling factor s, with its fitting function, for (a) Rossler, (b) Chen, and (c) Lu.\n10 VOLUME 4, 2016\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nplot, of the three modes, shows now a slower growth as function of the sampling factor (smaller slope). Moreover, the half-chaotic mode shows the same evolution of \u2206(s) as that of the non-chaotic mode after expelling the jitter effect as these two modes are distinguished by only few pattern distortions.\n0 4 8 12 16 20 Sampling factor\n0\n25\n50\n75\n100\n(% )\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n0\n20\n40\n60\n( %\n)\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n20\n40 60 ( % )\n(a)\n0 4 8 12 16 20 Sampling factor\n0\n20\n40\n(% )\nChaotic - Original Chaotic - Fitted Half-Chaotic - Original Half-Chaotic - Fitted Non-Chaotic - Original Non-Chaotic - Fitted\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n0\n20\n40\n60\n( %\n)\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n20\n40\n60\n( %\n)\n(b)\nFIGURE 11: Multiple-shots sampling: dynamics vector variation \u2206 as a function of sampling factor s with its fitting function, for (a) simulated and (b) artificially generated (no jitter effect) signal x(t) (horizontal position of vortex) of NCVO.\nNCVO Filt NCVO FO Rossler FO Chen Rossler Chen Lu System\n0\n25\n50\n75\n100\nSl op\ne A\nChaotic Half-Chaotic Non-Chaotic\nFIGURE 12: Multiple-shots sampling: slope values a (see Eq. 20) for the Rossler, Chen, and Lu systems, as well as the simulated and artificially generated (or filtered) signal x(t) of the NCVO, in three cases: chaotic (blue), half-chaotic (orange), and non-chaotic (green).\nUsing the linear regression, the fitting parameters a and \u03c4 presented in Equation 20 of all studied cases are computed. These values of a are shown in Figure 12. The values of a can be categorized in three ranges: less than 20 for a\nnon-chaotic signal; greater than 50 for a chaotic signal; and in between for half-chaotic signals. It is clear that the presented chaos detection method shows clear distinction between these three modes. Moreover, the same case studies were introduced to the 0-1 Test for comparison. These results are shown in Figure 13. As it can be noticed, the 0-1 Test does not provide the same efficiency in chaos detection where the three behavioural modes can not be defined using the value of Kmedian. Indeed, a half-chaotic signal is sometimes recognized as a chaotic (Kmedian \u2248 1) whereas at other times it is recognized as a non-chaotic signal (Kmedian \u2248 0).\nFO Rossler FO Chen Rossler Chen Lu NCVO Filt.NCVO Systems\n0\n0.5\n1\nK m\ned ia\nn\nNon-chaotic Half-chaotic Chaotic\nFIGURE 13: 0-1 Test: value of Kmedian for the FO Rossler, FO Chen, Rossler, Chen, and Lu systems, as well as the simulated and artificially generated (or filtered) signal x(t) of the NCVO, in three cases: chaotic (blue), half-chaotic (green), and non-chaotic (orange)."
        },
        {
            "heading": "V. ROBUSTNESS TO NOISE",
            "text": "In this section, the robustness to noise of the two proposed chaos detection methods, compared to that of the 0-1 Test and largest Lyapunov exponent approaches (detailed in Sections II-B and II-A respectively), has been evaluated. First, the robustness of one-shot sampling method was examined using additive noise. Each studied time-series, before its examination was contaminated by an additive white noise of a Signal-to-Noise Ratio (SNR) between 184dB and 11dB. The dynamics vector variation \u2206(s) for sampling factor 2 versus the SNR of the added noise for the seven conventional systems is shown in Figure 14. As noticed, the value of \u2206 in the chaotic case typically decreases with the addition of noise. In contrast, the value of \u2206 in the non-chaotic case varies but stay negative for any SNR value. This reveals the fact that our proposed one-shot sampling method mainly recognizes deterministic dynamics. The FO Rossler, FO Chen, Lorenz, Rossler, and Lu systems (Figures 14 (a), (b), (c), (e) and (g) respectively), can tolerate a white noise of SNR up to 11dB, where \u2206 at any noise level, is always positive in the chaotic case and negative in the non-chaotic case. The Chua system can handle a SNR < 14dB (Figure 14(d)), and the Chen system can handle a SNR < 11dB (Figure 14(f)). The same seven systems were evaluated by the 0- 1 Test approach. The results are shown in Figure 15. As noticed, the value ofKmedian for any of the inspected chaotic systems remains constant at 1 for any added white noise level. In contrast, the Kmedian of a non-chaotic system increases with the addition of noise. It seems evident that the 0-1\nVOLUME 4, 2016 11\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n184 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n60\n(a)\n184 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n60\n(b)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n-50\n0\n50\n100\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n60\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(c)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n-20\n0\n20\n40\n60\n( %\n)\nSNR (dB) 184.2 - -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\naN 40 34 30 6 20 4 11 SNR (dB)\n0\n20\n60\n( %\n)\nSNR (dB) 184.2 -0 -1 .9 - 2 -32 2 -46.1 -59.9 -68\nD el ta 0 20\n40\n60\n(d)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n6\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n60\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(e)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n60\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n60\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-2\n0\n20\n40\n60\n(f)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n50\n100\n( %\n)\nChaotic Non Chaotic\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n40\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n20\n60\n( %\n)\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(g)\nFIGURE 14: One-shot sampling: dynamics vector variation \u2206) versus SNR of added noise (dB), for the chaotic (blue) and non-chaotic (orange) behaviours of the systems: (a) FO Rossler, (b) FO Chen, (c) Lorenz, (d) Chua, (e) Rossler, (f) Chen, and (g) Lu.\nTest, unlike the one-shot sampling method, mixes up between deterministic and stochastic behaviours. Furthermore, the 0- 1 Test does not show a better robustness against white noise, where the tolerance of the inspected systems ranges between SNR = 30dB and 14dB. Note that, we assume the 0-1 Test is still robust if Kmedian > 0.5 in the chaotic case and Kmedian < 0.5 in the regular case.\nThe robustness of the multiple-shots sampling method was studied using highly noisy experimental traces of NCVO. For the sake of comparison, the same data was tested using oneshot sampling method as well as the 0-1 Test and largest Lyapunov exponent approaches. Wherefore, a real NCVO was experimentally run using a DC bias current I = 17mA and subjected to different magnetic field quantities. Consequently, five packages containing recorded horizontal time varying position x(t) were analyzed: A, B, C, D, and N. In the packages A and C, a synchronized gyration of the vortex around the nano-contact was established during recording resulting in that x(t) behaves as a quasi-periodic signal (regular nature). In the package B, a chaotic movement of the vortex is detected, which normally gives rise for a chaotic signal x(t). In the package N, the vortex is either hidden or static.\n184 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\n(a)\n184 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\n(b)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(c)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\nSNR (dB) 184.2 - -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(d)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\nSNR (dB) 184.2 - -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(e)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(f)\nNaN 40 34 30 26 20 14 11 SNR (dB)\n0\n0.5\n1\nK m\ned ia\nn\nChaotic Non-Chaotic\nSNR (dB) 184.2 -0 -13.9 -22 -32.2 -46.1 -59.9 -68\nD el\nta\n-20\n0\n20\n40\n60\n(g)\nFIGURE 15: 0-1 Test: Variation of Kmedian versus SNR of added noise (dB), for the chaotic (blue) and non-chaotic (orange) behaviours of the systems: (a) FO Rossler, (b) FO Chen, (c) Lorenz, (d) Chua, (e) Rossler, (f) Chen, and (g) Lu.\nIn such case, x(t) is described as pure white noise signal. In the package D, the vortex starts gyration chaotically, and then it stabilizes with a synchronized rotation. A signal x(t) from any package does not show clean shape due to the high contamination of the recorded signals with the experimental noise. From each package (except for the package D) two samples of x(t) of the same nature (regular or chaotic) were considered. The two samples from the package D were recorded at different behavioural modes. For all tests, a ConDN with a 100-neurons reservoir was considered.\nStarting with the multiple-shots sampling, the different plots of \u2206(s), as well as their fitting plots are all shown in Figure 16(a). As it can be noticed, the three plots corresponding to the three chaotic samples (the two samples of the package B and the first one from the package D) show a very quick growth compared to the plots of the other nonchaotic samples. The values of the slope a of the fitting function for all plots are shown in Figure 16(b). As noticed, the dynamics vector variation \u2206 of the three chaotic samples can be fitted to a charging capacitor function having a slope a \u2265 60. On the contrary, the non-chaotic samples are fitted with a slope a \u2264 20. These results are in agreement with the results obtained in Section IV-C, where a chaotic signal was characterized by a slope a \u2265 50, a regular signal by a slope a \u2264 20, and any signal with a slope 20 < a < 50 was related to a transitional mode between chaos and regular nature.\nWe also evaluated the one-sampling method using the\n12 VOLUME 4, 2016\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nThis article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/ACCESS.2022.3174960, IEEE Access\nAuthor et al.: Preparation of Papers for IEEE TRANSACTIONS and JOURNALS\n0 4 8 12 16 20 Sampling factor\n0\n10\n20\n30\n40\n50\n60\n70\n(% )\nA1 A1 (log) A2 A2 (log) B1 B1 (log) B2 B2 (log) C1 C1 (log) C2 C2 (log) D1 D1 (log) D2 D2 (log) N1 N1 (log) N2 N2 (log)0 1 2 3 5 10 20 30\nNoise Percentage (%)\n20\n40\n60\n( %\n)\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n2\n40\n60\n( %\n)\n(a)\nA B C D N Packages\n20\n40\n60\nSl op\ne A\nSample 1 Sample 2\n(b)\nFIGURE 16: Multiple-shots sampling: (a) dynamics vector variation \u2206) as a function of the sampling factor and its fitting function, as well as (b) its corresponding slope for the five experimental packages of the NCVO.\nA B C D N Package\n0\n10\n20\n( %\n)\nSample 1 Sample 2\n0 1 2 3 5 10 20 30 Noise Percentage (%)\n0\n2\n40\n60\n( %\n)\n0 1 2 3 5 10 20 30\nNoise Percentage (%)\n20\n40\n60\n( %\n)\nFIGURE 17: One-shot sampling: dynamic vector variation (\u2206) for the samples of the five experimental packages of NCVO.\nsame NCVO experimental data. Figure 17 shows the values of the dynamic variation vector \u2206 of the two samples of each package after applying one-shot sampling method. As shown, \u2206 of the three chaotic samples (the two samples of package B and the first sample of package D) is between 17 and 20. The remaining non-chaotic samples have lower percentage variation that ranges between 2 and 14. Although the value of \u2206 is larger in the chaotic case than in the nonchaotic case, but the values still close to each other. Thus,\nthe percentage variation \u2206 derived by one-shot sampling does not show clear differentiation between chaotic and nonchaotic experimental samples. Moreover, these findings are incompatible with conclusion drawn in Section IV-B, where a chaotic system is characterized by \u2206 > 45 whereas a nonchaotic system is characterized by \u2206 \u2248 0.\nIn addition, the same samples were tested using the 0-1 Test and the largest Lyapunov exponent (LLE) approach. For the 0-1 Test, the results are shown in Figure 18. As it can be noticed, the 0-1 Test is not capable to differentiate between chaotic and regular experimental data, whereKmedian ranges between 0.5 and 1 regardless of the tested sample.\nFor the LLE, the same experimental samples were evaluated by T. Devolder et al. in [33] using two LLE methods: Wolf [34] and Ronsentein (detailed in Section II-A). The results are presented in Figure 19. As shown, the packages are distributed irregularly along the axis of the applied magnetic field \u00b50H (x-axis). Each of the packages C, D, and N are partitioned into two parts. As a reminder, the samples of the first part of package D is non-chaotic whereas those in the second part are chaotic. The value of the LLE (\u03bb) is large for the samples of package B and the second part of package D, due to their chaotic nature. However the value of \u03bb is always positive even for the non-chaotic samples due to the jitter effect. Moreover, the value of \u03bb is high for the samples of package N compared to other non-chaotic samples even that in package N the samples are simply white noise signals (the vortex is either hidden or static). Consequently, the LLE method is not reliable in distinguishing between the chaotic\nVOLUME 4, 2016 13\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nand regular experimental data. To summarize, the multipleshots sampling ConDN-based method surpasses the 0-1 Test, the LLE, and the single-shot ConDN-based methods in terms of robustness. The later methods do not afford a decisive differentiation between the chaotic and non-chaotic modes of a real NCVO device.\nVI. CONCLUSION In this paper, we investigated a novel methodology for chaos detection in time series using a reservoir computing (RC) paradigm called concept-driven network (ConDN). This chaos detection approach, that involves the sampling of the input series before being injected to the network, can be applied in two ways: (1) one-shot sampling, and (2) multiple-shots sampling. The proposed approach has been validated on known chaos attractors driven by ordinary differential equations (i. e. Lorenz, Rossler, Chen) of both integer and Fractional order, as well as on a highly non-linear spintronic oscillator called NCVO whose data are collected by micromagnetic simulation. All considered case studies involve chaotic and regular behaviors, whereas some of them involve additionally a transient behavior between them. The robustness of the proposed ConDN-based chaos detection method is also evaluated, using data contaminated by additive noise as well as highly noisy experimental data (for the NCVO). The multiple-shots sampling method has shown to be outperforming the 0-1 Test, the largest Lyapunov exponent method, and the one-shot sampling methods in terms of efficiency and robustness to noise.\nACKNOWLEDGMENT REFERENCES [1] M. S. D. Cattani, I. L. Caldas, S. L. de Souza, and K. C. Iarosz, \u201cDeter-\nministic chaos theory: Basic concepts,\u201d Revista Brasileira De Ensino De Fisica, vol. 39, 2016. [2] U. Parlitz, \u201cEstimating lyapunov exponents from time series,\u201d 2016. [3] M. Balcerzak, D. Pikunov, and A. Dabrowski, \u201cThe fastest, simplified\nmethod of lyapunov exponents spectrum estimation for continuous-time dynamical systems,\u201d Nonlinear Dynamics, vol. 94, pp. 3053\u20133065, sep 2018. [4] J. Awrejcewicz, A. Krysko, N. Erofeev, V. Dobriyan, M. Barulina, and V. Krysko, \u201cQuantifying chaos by various computational methods. part 1: Simple systems,\u201d Entropy, vol. 20, p. 175, mar 2018. [5] J. Pathak, Z. Lu, B. R. Hunt, M. Girvan, and E. Ott, \u201cUsing machine learning to replicate chaotic attractors and calculate lyapunov exponents from data,\u201d Chaos: An Interdisciplinary Journal of Nonlinear Science, vol. 27, p. 121102, dec 2017. [6] E. G. Nepomuceno, S. A. M. Martins, M. J. Lacerda, and E. M. A. M. Mendes, \u201cOn the use of interval extensions to estimate the largest lyapunov exponent from chaotic data,\u201d Mathematical Problems in Engineering, vol. 2018, pp. 1\u20138, 2018. [7] G. A. Gottwald and I. Melbourne, \u201cThe 0-1 test for chaos: A review,\u201d in Chaos Detection and Predictability, pp. 221\u2013247, Springer Berlin Heidelberg, 2016. [8] J. R. Tempelman and F. A. Khasawneh, \u201cA look into chaos detection through topological data analysis,\u201d Physica D: Nonlinear Phenomena, vol. 406, p. 132446, may 2020. [9] M. Casdagli, \u201cNonlinear prediction of chaotic time series,\u201d Physica D: Nonlinear Phenomena, vol. 35, pp. 335\u2013356, may 1989. [10] A. S. Weigend, Time Series Prediction. Routledge, may 2018. [11] A. D. Pano-Azucena, E. Tlelo-Cuautle, B. Ovilla-Martinez, L. G. de la\nFraga, and R. Li, \u201cPipeline FPGA-based implementations of ANNs for the prediction of up to 600-steps-ahead of chaotic time series,\u201d Journal of Circuits, Systems and Computers, vol. 30, p. 2150164, dec 2020.\n[12] E. Tlelo-Cuautle, A. M. Gonz\u00e1lez-Zapata, J. D. D\u00edaz-Mu\u00f1oz, L. G. de la Fraga, and I. Cruz-Vega, \u201cOptimization of fractional-order chaotic cellular neural networks by metaheuristics,\u201d The European Physical Journal Special Topics, jan 2022. [13] C.-S. Poon and M. Barahona, \u201cTitration of chaos with added noise,\u201d Proceedings of the National Academy of Sciences, vol. 98, pp. 7107\u20137112, jun 2001. [14] J. B. Gao, J. Hu, W. W. Tung, and Y. H. Cao, \u201cDistinguishing chaos from noise by scale-dependent lyapunov exponent,\u201d Phys. Rev. E, vol. 74, p. 066204, Dec 2006. [15] A. R. Ismail, S. Jovanovic, S. Petit-Watelot, and H. Rabah, \u201cApplication of reservoir computing for the modeling of nano-contact vortex oscillator,\u201d Electronics, vol. 8, p. 1315, nov 2019. [16] J. P. Eckmann, S. O. Kamphorst, D. Ruelle, and S. Ciliberto, \u201cLiapunov exponents from time series,\u201d Phys. Rev. A, vol. 34, pp. 4971\u20134979, Dec 1986. [17] S. Mehdizadeh, \u201cA robust method to estimate the largest lyapunov exponent of noisy signals: A revision to the rosenstein\u2019s algorithm,\u201d Journal of Biomechanics, vol. 85, pp. 84\u201391, mar 2019. [18] H. Jaeger, \u201cConceptors: an easy introduction,\u201d 2014. [19] H. Jaeger, \u201cUsing conceptors to manage neural long-term memories for\ntemporal patterns,\u201d Journal of Machine Learning Research, vol. 18, no. 13, pp. 1\u201343, 2017. [20] T. Furlanello, J. Zhao, A. M. Saxe, L. Itti, and B. Tjan, \u201cActive long term memory networks,\u201d ArXiv, vol. abs/1606.02355, 2016. [21] S. A. Deka, D. M. Stipanovic\u0301, B. Murmann, and C. J. Tomlin, \u201cLongshort term memory neural network stability and stabilization using linear matrix inequalities,\u201d in 2019 IEEE International Symposium on Circuits and Systems (ISCAS), pp. 1\u20134, 2019. [22] E. N. Lorenz, \u201cDeterministic nonperiodic flow,\u201d Journal of the Atmospheric Sciences, vol. 20, no. 2, pp. 130\u2013141, 1963. [23] C. Stegemann, H. A. Albuquerque, R. M. Rubinger, and P. C. Rech, \u201cLyapunov exponent diagrams of a 4-dimensional chua system,\u201d vol. 21, p. 033105, sep 2011. [24] K. M. Ibrahim, R. K. Jamal, and F. H. Ali, \u201cChaotic behaviour of the rossler model and its analysis by using bifurcations of limit cycles and chaotic attractors,\u201d vol. 1003, p. 012099, may 2018. [25] R.-D. Ene, C. Pop, and C. Petris\u0327or, \u201cSystematic review of geometrical approaches and analytical integration for chen\u2019s system,\u201d vol. 8, p. 1530, sep 2020. [26] A. D. Pano-Azucena, E. Tlelo-Cuautle, G. Rodriguez-Gomez, and L. G. de la Fraga, \u201cFPGA-based implementation of chaotic oscillators by applying the numerical method based on trigonometric polynomials,\u201d AIP Advances, vol. 8, p. 075217, jul 2018. [27] C. Li and G. Chen, \u201cChaos and hyperchaos in the fractional-order r\u00f6ssler equations,\u201d Physica A: Statistical Mechanics and its Applications, vol. 341, pp. 55\u201361, oct 2004. [28] J. G. Lu and G. Chen, \u201cA note on the fractional-order chen system,\u201d Chaos, Solitons & Fractals, vol. 27, pp. 685\u2013688, feb 2006. [29] S. Petit-Watelot, J.-V. Kim, A. Ruotolo, R. M. Otxoa, K. Bouzehouane, J. Grollier, A. Vansteenkiste, B. V. de Wiele, V. Cros, and T. Devolder, \u201cCommensurability and chaos in magnetic vortex oscillations,\u201d Nature Physics, vol. 8, pp. 682\u2013687, jul 2012. [30] A. Vansteenkiste, J. Leliaert, M. Dvornik, M. Helsen, F. Garcia-Sanchez, and B. V. Waeyenberge, \u201cThe design and verification of MuMax3,\u201d AIP Advances, vol. 4, p. 107133, oct 2014. [31] S. Petit-Watelot, R. M. Otxoa, and M. Manfrini, \u201cElectrical properties of magnetic nanocontact devices computed using finite-element simulations,\u201d Applied Physics Letters, vol. 100, p. 083507, feb 2012. [32] J. L\u00e9tang, S. Petit-Watelot, M.-W. Yoo, T. Devolder, K. Bouzehouane, V. Cros, and J.-V. Kim, \u201cModulation and phase-locking in nanocontact vortex oscillators,\u201d Phys. Rev. B, vol. 100, p. 144414, Oct 2019. [33] T. Devolder, D. Rontani, S. Petit-Watelot, K. Bouzehouane, S. Andrieu, J. L\u00e9tang, M.-W. Yoo, J.-P. Adam, C. Chappert, S. Girod, V. Cros, M. Sciamanna, and J.-V. Kim, \u201cChaos in magnetic nanocontact vortex oscillators,\u201d Physical Review Letters, vol. 123, oct 2019. [34] A. Wolf, J. B. Swift, H. L. Swinney, and J. A. Vastano, \u201cDetermining lyapunov exponents from a time series,\u201d Physica D: Nonlinear Phenomena, vol. 16, pp. 285\u2013317, jul 1985.\n14 VOLUME 4, 2016"
        }
    ],
    "title": "Detection of Chaos using Reservoir Computing Approach",
    "year": 2022
}