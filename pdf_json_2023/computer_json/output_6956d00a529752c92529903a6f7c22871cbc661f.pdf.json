{
    "authors": [
        {
            "affiliations": [],
            "name": "B Sivasankari"
        }
    ],
    "id": "SP:23f1a3de60552f518e932d78b375b69fb3b7bffb",
    "references": [
        {
            "authors": [
                "R. Kucera",
                "J. Vlcek",
                "K. vlcek"
            ],
            "title": "DSP implementation of image compression by multiresolutional analysis",
            "venue": "Radioengineering,",
            "year": 1998
        },
        {
            "authors": [
                "R. Mosqueron",
                "J. Dubois",
                "M. Paindavoine"
            ],
            "title": "September). Embedded image processing/compression for high-speed CMOS sensor",
            "venue": "In 2006 14th European Signal Processing Conference (pp. 1-5)",
            "year": 2006
        },
        {
            "authors": [
                "M. Klimesh",
                "V. Stanton",
                "D. Watola"
            ],
            "title": "Hardware implementation of a lossless image compression algorithm using a eld programmable gate array",
            "venue": "Mars (Path nder),",
            "year": 2001
        },
        {
            "authors": [
                "D. Li"
            ],
            "title": "Image Compression Application on Battery-aware",
            "venue": "Embedded Systems. Energy,",
            "year": 2002
        }
    ],
    "sections": [
        {
            "text": "Page 2/25\n1. Introduction Medical image processing uses edge detectors for tracing the structure of anatomical organs and health disorders like a tumor, cyst. The software implementation of image processing algorithms is ubiquitous, however, there are few publications connected to the implementation of image processing algorithms utilising embedded and VLSI processors. In article [1] TMS320C50 DSP processor was used for the processing of the images using wavelet transform. In [2], the authors implemented JPEG, JPEG2000, MPEG4 compression algorithms in FPGA for high-speed cameras with CMOS sensors [3].\nThe authors implemented wavelet-based image compression techniques in iPaq devices with low power consumption in Linux operating system [4]. In [5] FPGA based Xilinx Virtex E processor embedded in Annapolis microsystem Wild starboard which increased the performance of rst-order SPIHT image compression and article [7] image compression is done in XC2V FPGA chip using Set Partitioning In Hierarchical Trees algorithm (SPIHT) is Similarly in [6], wavelet-based JPEG 2000 compression was implemented in FPGA.M. Dyer et.al [8] proposed a Nios II processor-based Hardware and software codesign of JPEG2000 where in Nios II provides an ample platform for integrating hardware. S.N.Sing et al [9] attempt to implement a JPEG compression scheme in Xilinx XSA 100 recon gurable hardware. The literature proposes a medical image application termed PUMA- a domain-speci c accelerator for MR image reconstruction with NVIDIA graphics processor [10]. The PUMA architecture achieved double the performance and power e ciency up to 54 times compared to modern GPU architecture.\nAlbert Lin [11] used real-time satellite photos to develop compression in the Xilinx Virtex-5QV FPGA, XQR5VFX130. The article [12] shows a biometric identi cation embedded system on a single board chip computer with 32-bit architecture. [13] proposes a dual code compression scheme for embedded systems. It makes use of a multifunctional handheld PDA. The proposed paradigm optimizes both the size and performance of the code. Anitta Vincent et al used Raspberry Pi for the Binarization and character recognition of document images [14]. Nagaraja L et al also used Raspberry Pi for vision-based text recognition for the implementation of Otsu thresholding and morphological operations for the text identi cation [15]. Canny edge detector was found to be e cient for the segmentation of underwater images; FPGA implementation of canny edge detector gives satisfactory results [16]. In [17] also, the\nPage 3/25\nFPGA implementation of classical edge detectors reveals that canny is e cient for edge detection. Xilinx platform studio-based EDK code is developed on the FPGA Spartan 3E for the tumor edge detection on the MR brain images [18]. This work highlights gauss gradient approaches for medical image edge detection and VLSI implementation of gauss gradient approaches using Kintex 7- FPGA board.\n2. Materials And Procedures\n2.1 Data Gathering The photos from the Berkley database were largely used to test edge detection methods. Metro Scans and Laboratory, Trivandrum, offered real-time medical pictures. In this study, three datasets of abdomen CT scans and three datasets of MR brain pictures were employed. Each dataset has numerous images, which are displayed here as the results of selecting slices. 2.2 Classical Edge Detection Methods Edges represent the boundary of objects and it is one of the classical segmentation algorithms. From the human perception of point of view, edges play a vital role and in medical image processing, they characterize anatomical organs or anomalies like a tumor, cyst.\nThe edges are characterized by intensity changes and the gradient operator is widely used to determine the magnitude and direction.\nThe gradient vector of the image is de ned as follows\nThe magnitude (M) and direction of gradient vector ( ) at the location are determined as\nThe partial derivatives and are determined at every pixel of the image to compute the gradient\nvector. The classical edge detectors kernels are depicted in Figures 1,2,3 and 4.\nThe Roberts, Prewitt, Sobel, and Canny are based on rst-order derivatives and the difference is how the computations are carried out. The most commonly used approach for approximation of the rst-order derivative is to apply Taylor\u2019s series expansion with a small value of h.\n\u2207Y = [ Sx\nSy ] =\n\u23a1\n\u23a3\n\u23a4\n\u23a6\n\u2202S \u2202x \u2202S \u2202y\n\u2207Y\nM (x, y) = \u221aS 2x + S 2 y\n\u03b8 (x, y) = tan\u22121 ( ) \u2202S\n\u2202x\n\u2202S \u2202x\n\u2202S \u2202y\nPage 4/25\nThe is determined as\nThe rst-order derivative of the image in discrete form is\nThe 2D Roberts masks are as follows\nThe 2D masks are relatively simple. However not symmetrical for central points. The symmetrical edges are a desirable property and can be obtained with odd-sized masks.\nThe 3x3 masks for the Prewitt edge detector are as follows.\nThe x-direction derivative is represented by the difference between the rst and third rows. The derivative in the Y direction is represented by the difference between the rst and third columns. Image smoothing is improved when the center coe cients are given more weight.\nThe 3x3 masks for the Sobel edge detector are as follows.\nThere are several edge detection algorithms; nevertheless, among the standard approaches, the canny edge detector was shown to yield the best results. Because the input medical images are prone to noise, preprocessing is required before edge recognition. The steps can be stated as follows:\nAs a rst stage in reducing noise from medical images, a Gaussian lter with a kernel size of 5 is utilized.\nThe non-maximum suppression method is used to delete pixels that are not part of edges.\nThe nal step that detects the image using two thresholds (tupper and tlower)is hysteresis. It is de ned in the pixel when the pixel gradient is greater than the tupper, and the pixel is discarded when the pixel gradient value is smaller than the tlower. If the pixel gradient lies in the range tupper<t<tlower, then pixel is selected if it is linked to pixel greater than tupper.\nThe Laplacian of Gaussian (LOG) is an edge detector based on second-order derivative and is expressed as follows\nSimilar to the Canny edge detector, Gaussian smoothing is performed initially to remove the spurious details in the image. The LOG masks are expressed as follows.\nS'x S'x \u2243 S (x + h) \u2212 S (x) /h\nSx = \u2243 S (i + 1, j) \u2212 S(i, j) \u2202S(x, y)\n\u2202x\nSy = \u2243 S (i, j + 1) \u2212 S(i, j) \u2202S(x, y)\n\u2202y\nL (x, y) = + \u22022S \u2202x2 \u22022S \u2202y2\nPage 5/25\n2.3 Gauss Gradient Edge Detectors\n2.3. 1 First Order Derivative based Gauss Gradient edge detector\nThe gauss gradient approach determines the edge of 2D images and 3D volumes using the derivative of the Gaussian function.\nThe 2D Gaussian function is expressed as\nHere in the proposed gauss gradient approach, separable ltering is employed. The one-dimensional Gaussian kernel is formulated and applied along the x and y directions. The steps in the gauss gradient approach are expressed as follows.\nStep 1: Set the value of sigma for the input grayscale or color image. The parameter sigma value is crucial, as the high value will blur the resultant image.\nStep 2: The mask is formulated along the x and y direction for convolution with the input image to trace the edges.\nThe 2D Gaussian function when expressed in 1D function in terms of the variables x and y is expressed as\nThe rst-order derivative of the one-dimensional Gaussian function along the x-direction is expressed as follows\nSimilarly, the rst-order derivative of the one-dimensional Gaussian function along y-direction is expressed as follows\nh (x, y) = e \u2212( )1\n2\u03c0\u03c32\nx2+y2\n\u03c32\ng (x) = e \u22121\n\u03c3\u221a2\u03c0\nx2 2\u03c32\ng (y) = e \u22121\n\u03c3\u221a2\u03c0\ny2 2\u03c32\n(g (x)) = e \u2212\u2202\n\u2202x\n1\n\u03c3\u221a2\u03c0\n\u22122x\n2\u03c32\nx2 2\u03c32\ng' (x) = \u2212x( ) \u2217 1\n\u03c3\u221a2\u03c0\ne\u2212x 2\n2\u03c32 1 \u03c32\ng' (x) = \u2212x \u2217 g (x) \u2217 \u03c32\nPage 6/25\nStep 3: the generated masks along the x and y direction are convolved with the input image for tracing the boundary of objects\n2.3.2 Second Order Derivative Gauss Gradient (SDGD) Edge Detector The second-order derivative method is extremely sensitive to spatial changes in the image's edge pixels, such as brightness or zero crossings. The SDGD (Second Order Derivative Gauss Gradient) operator has a nonlinear property.\nThe Laplacian operator is de ned as follows.\nWhere and are the second derivative lters.\nWhen combined with Gaussian lter,\nWhere is the Gaussian low pass lter.\nThe partial derivatives used in the SDGD lter are as follows\n(g (y)) = e \u2212\u2202\n\u2202x\n1\n\u03c3\u221a2\u03c0\n\u22122y\n2\u03c32\ny2 2\u03c32\ng' (y) = \u2212y( ) \u2217 1\n\u03c3\u221a2\u03c0\ne\u2212y 2\n2\u03c32 1 \u03c32\ng' (y) = \u2212y \u2217 g (y) \u2217 \u03c32\nHx = g (x) *g\u2032 (x) andHy = Hx\u2032\n\u22072 = + = (h2x \u2a02 a) (h2y \u2a02 a) \u22022a \u2202x2 \u22022a \u2202y2\nh2x h2y\n[h2x] = [h2y] = [ 1 \u22122 1 ]\n[h2] = \u23a1 \u23a2 \u23a3\n0 1 0\n1 \u22124 1\n0 1 0\n\u23a4 \u23a5 \u23a6\nb = g0 \u2a02 (h2 \u2a02a) = (g0 \u2a02h2) \u2217 a\ng0\nAxx = ;Axy = ;Ax = ;Ayy = ;Ay = \u22022a \u2202x2 \u22022a \u2202x\u2202y \u2202a \u2202x \u22022a \u2202y2 \u2202a \u2202y\nPage 7/25\n2.3.3 VLSI Implementation of Gauss Gradient Edge detectors Signal and image processing applications were found to bene t from the Xilinx Kintel-7 FPGA board. The Kintex-7 FPGA DSP Development Kit with High-Speed Analog has the following features.\nA Xilinx KC705 development board with an XC7K325T FPGA and a 4DSP FMC150 high-speed data converter FMC module was utilized to conduct real-time activities in Simulink.\nThe Kintel -7 series was also found to be e cient for video processing applications. The gure 5 depict the interfacing of Kintel-7 with VGA.\nThe ow of edge detection proposed in this research paper is depicted in gure 6. The hardware implementation of the edge detection algorithms is shown in gure. 7.\nFigure 8 depicts the design and implementation ow using FPGA for the implementation of image processing algorithms.\n3. Results And Discussion Edge detection techniques for medical photos are proposed in this paper. The algorithms were created in Matlab 2010 and evaluated on photos from the BSD benchmark. Performance criteria such as Sensitivity, Speci city, and PR measures are used to validate classical edge detectors and gauss gradient edge detectors. Edge detection techniques are part of the initial generation of segmentation algorithms, and they're employed in a variety of applications. The results are shown in this section, and when compared to classical edge detectors, the gauss gradient edge detector outperforms them. The algorithms are initially tested on Berkley database images. The ground truth images are used to validate the edge detector algorithms. In [19], the e ciency of the classical gauss gradient algorithm was stated and here the VLSI implementation is performed and the SDGD algorithm was also proposed for medical images and implemented in VLSI technology.\nThe qualitative analysis was performed by visual perception and for quantitative analysis, metrics are required. The accuracy represents the degree of the edge detected correctly by the edge detector. The accuracy is characterized by sensitivity and speci city. The chance of identifying the genuine edge as a pixel is determined by sensitivity. The edge detection algorithm is excellent when the sensitivity is low and the speci city and accuracy are high. True positive (TP), true negative (TN), false positive (FP), and falsenegative (FN) values are used to represent sensitivity and speci city. Sensitivity is expressed as follows\nSDGD = AxxA\n2 x + 2AxxAxAy + AyyA 2 y\nA2x + A 2 y\nPage 8/25\nSpeci city represents the probability of identifying an actual non-edge as a non-edge pixel. The speci city is expressed as follows.\nThe performance metrics plot reveals that the canny edge detector generates e cient results when compared with the other classical edge detectors. The proposed gauss gradient edge detectors are found to be e cient when compared with the other edge detectors. The PR measure is also used as a measure for the validation of edge detector algorithms. The true edges represent the pixels identi ed as edges and false edges comprise of non-edge pixels identi ed as edges and edge pixels identi ed as non-edge pixels\nThe parameter tuning plays a vital role and here the parameters of classical gauss gradient and SDGD algorithms are as follows. The classical gauss gradient algorithm is having only one parameter, sigma that represents the standard deviation of the kernel in both x and y-direction. The sigma value adopted in this work for the Berkley database and medical images is 1.5. The parameters of the SDGD lter are Gaussian kernel size (Gsize), the mean value of Gaussian kernel(Gmean), standard deviation of Gaussian kernel(Gstd), sigma width (determines the position of cutting of Gaussian kernel tail). In this work, Gsize=6, Gmean=0.6, Gstd=1.8, and sigma width=3.8 are used and the parameters are tunable based on the nature of input images. The SDGD lter produces satisfactory results for Berkley database images and real-time medical images for the above-tuned parameters. Figure 5 represents the Berkley database input images and gure 6 represents the ground truth images. The classical edge detectors' output is depicted in gures 7, 8, 9,10, and 11. The gauss gradient edge detectors' output is depicted in gure 12 (classical gauss gradient) and gures 13(SDGD). The gauss gradient edge detectors results for CT abdomen images and MR brain images are depicted in Figures 17 and 18. The PR plot of edge detector is shown in gure 19 and the. The qualitative analysis of results reveals that, for CT brain images, the SDGD outputs are good, which is shown in gure 20.\nThe edge detectors' roles are inevitable in computer vision, medical image processing, and surveillance. This work addresses the classical edge detection algorithms and proposes gauss gradient edge detectors for the medical MR images, which is shown in gure 21. The FPGA implementation gives satisfactory results and future work will be developing the edge detection algorithms for real-time video surveillance applications.\n4. Conclusion\nSensitivity = TP\nTP + FN\nSpecificity = TN\nFP + TN\nPR = \u00d7 100 TrueEdges\nFalseEdges\nPage 9/25\nThis work proposes VLSI implementation of the gauss gradient edge detectors. The classical edge detectors and gauss gradient edge detectors are initially checked on Berkley database images. The performance of the edge detectors was validated by metrics and gauss gradient edge detectors performance outperforms the classical edge detectors. The algorithms are also checked on medical images and satisfactory results were obtained for classical gauss gradient and SDGD algorithm.\nDeclarations Acknowledgment\nThe author expresses his deepest gratitude to the supervisor for her direction and un inching support during this research. \u00a0 \u00a0\nData Availability\nThe public access datasets generated during the current study are available from the corresponding author on reasonable request.\nFunding Statement\u00a0\nThe author states that there is no nancial backing acquired for this research.\nCon icts of Interest\nThe author declares that there is no con icting interests to disclose in this study.\nEthical Approval\nAll the respected ethical approval was competed by this research paper.\nInformed Consent\nInformed consent not applicable.\nReferences 1. Kucera, R., Vlcek, J., & vlcek, K. (1998). DSP implementation of image compression by\nmultiresolutional analysis. Radioengineering, 7(1), 7\u20139\n2. Mosqueron, R., Dubois, J., & Paindavoine, M. (2006, September). Embedded image processing/compression for high-speed CMOS sensor. In 2006 14th European Signal Processing Conference (pp.\u00a01-5). IEEE\n3. Klimesh, M., Stanton, V., & Watola, D. (2001). Hardware implementation of a lossless image compression algorithm using a eld programmable gate array. Mars (Path nder), 4(4.69), 5\u201372\nPage 10/25\n4. Li, D. (2002). Image Compression Application on Battery-aware Embedded Systems. Energy, 850, 900, 12\u201330\n5. Fry, T. W., & Hauck, S. A. (2005). SPIHT image compression on FPGAs. IEEE Transactions on circuits and systems for video technology, 15(9), 1138\u20131147\n. Al Muhit, A., Islam, M. S., & Othman, M. (2004, December). VLSI implementation of discrete wavelet transform (DWT) for image compression. In 2nd international conference on autonomous robots and agents (Vol.\u00a04, No. 4, pp.\u00a0421-433)\n7. Corsonello, P., Perri, S., Zicari, P., & Cocorullo, G. (2005). Microprocessor-based FPGA implementation of SPIHT image compression subsystems. Microprocessors and Microsystems, 29(6), 299\u2013305\n. Dyer, M., Gupta, A. K., & Galin, N. (2005). Nios II processor-based hardware/software co-design of the JPEG2000 Standard. Nios II Embedded Processor Design Contest\u2014Outstanding Designs 2005, 24-36\n9. Singh, S. N., Kumar, J., Ranjan, R., & Panigrahi, S. (2009). Hardware image compression with FPGA. International Journal of Recent Trends in Engineering, 2(8), 33\n10. Dasika, G., Fan, K., & Mahlke, S. (2009, July). Power-e cient medical image processing using PUMA. In 2009 IEEE 7th Symposium on Application Speci c Processors (pp.\u00a029-34). IEEE\n11. Lin, A. (2012). Hardware implementation of a real-time image data compression for satellite remote sensing.Remote Sensing\u2014Advanced Techniques and Platforms, 415\n12. Rosli, A. N. C. (2010). Embedded system for biometric identi cation.INTECH Open Access Publisher,530\n13. Shrivastava, K., & Mishra, P. (2011, January). Dual code compression for embedded systems. In 2011 24th Internatioal Conference on VLSI Design (pp.\u00a0177-182). IEEE\n14. Vincent, A., & Varghese, G. (2015). An advanced, robust binarization and character recognition in document images based a Raspberry Pi. ARPN J Eng Appl Sci, 10(17), 7620\u20137625\n15. Murthy, V. S., Nagaraja, L., Nagarjun, R. S., Nishanth, M., & Nithin, A. (Number 4, 2015). D., Vision based Text Recognition using Raspberry Pi, International Journal of Computer Applications, 2015(4), 0975 \u2013 8887\n1 . SM, A. R., Jose, C., & MH, S. (2017). Hardware realization of canny edge detection algorithm for underwater image segmentation using eld programmable gate arrays. Journal of Engineering Science and Technology, 12(9), 2536\u20132550\n17. Yaser, \u0130. \u00c7. E. R., & Mustafa, T. \u00dc. R. K. Implementation of Mainly Used Edge Detection Algorithms on FPGA.International Journal of Applied Mathematics Electronics and Computers, (Special Issue1),352\u2013358\n1 . Kumar, S. N., Fred, A. L., & Varghese, P. S. (2020). An overview of segmentation algorithms for the analysis of anomalies on medical images. Journal of Intelligent Systems, 29(1), 612\u2013625\n19. Kumar, S. N., Fred, A. L., Kumar, A. H., & Varghese, S. (2017). Medical image edge detection using Gauss Gradient operator. Journal of Pharmaceutical Sciences and Research, 9(5), 695\nPage 11/25\nFigures\nFigure 1\nRoberts masks for edge detection\nFigure 2\nPrewitt masks for detection\nPage 12/25\nFigure 3\nSobel masks for edge detection\nFigure 4\nLog masks for edge detection\nPage 13/25\nInterfacing of Kintel-7 with VGA\nFlow diagram of the edge detection algorithm\nPage 15/25\nHardware implementation of edge detection algorithms\nFigure 8\nDesign and implementation ow\nFigure 9\nFigure 8: Sample Berkley database images\nFigure 9: Ground truth of sample Berkley database images\nPage 17/25\nFigure10: Canny edge detector results\nFigure 12\nFigure 11: Roberts edge detector results\nPage 18/25\nFigure 13\nFigure 12: Sobel detector results\nPage 19/25\nFigure 14\nFigure 13: \u00a0LOG edge detector results\nPage 20/25\nFigure 15\nFigure 14: Prewitt edge detector results\nFigure 16\nPage 21/25\nFigure 15: Classical gauss gradient edge detector results\nFigure 17\nFigure 16: SDGD results\nPage 22/25\nFigure 18\nFigure 17: Sensitivity plot of edge detectors\nFigure 19\nPage 23/25\nFigure 18: Speci city plot of edge detectors\nFigure 20\nFigure 19: PR plot of edge detector\nPage 24/25\nFigure 20: The rst row represents the input abdomen CT images, the second row represents the classical gauss gradient edge detector output, Third-row represents the SDGD output.\nPage 25/25\nFigure 21: The rst row represents MR brain images, the second row represents the classical gauss gradient edge detector output, Third-row represents the SDGD output"
        }
    ],
    "title": "FPGA Implementation of Gauss Gradient Edge Detectors for Medical Images",
    "year": 2023
}