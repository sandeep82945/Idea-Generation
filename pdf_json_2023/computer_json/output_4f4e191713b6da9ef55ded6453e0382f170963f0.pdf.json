{
    "abstractText": "This paper explores the role of blockchains in the development of Web 3.0 and the Metaverse. The success of these technologies is dependent on the utilization of decentralized systems like blockchains, which can store and validate data on identities and reputations and facilitate the exchange of virtual assets. Full nodes, which store the entire blockchain state and validate all transactions, are essential for the decentralization and reliability of the network. However, operating a full node is resource-intensive and can be expensive. To tackle this challenge, we propose an incentive mechanism that utilizes contract-theoretic methods to economically motivate users to support the sustainability and growth of the blockchain network. Our contract design addresses the problem of information asymmetry (e.g., users\u2019 revenue-generating capabilities and efforts) between users and the blockchain network. Additionally, we recommend providing diverse incentives based on the user\u2019s revenue-generating capabilities and efforts to assist the blockchain network in funding incentives. Our experimental results demonstrate that our proposed mechanism increases the blockchain network\u2019s utility by 48.48%\u221254.52% and reduces the users\u2019 cost by 38.46%\u221262.5% compared with the state-of-the-art implementations such as Celo, Vipnode, and Pocket Network.",
    "authors": [
        {
            "affiliations": [],
            "name": "Daniel Mawunyo Doe"
        },
        {
            "affiliations": [],
            "name": "Jing Li"
        },
        {
            "affiliations": [],
            "name": "Zhen Gao"
        },
        {
            "affiliations": [],
            "name": "Jun li"
        },
        {
            "affiliations": [],
            "name": "Zhu Han"
        }
    ],
    "id": "SP:eb5481380d6bc813090d4c56357945b67c5806f3",
    "references": [
        {
            "authors": [
                "Q. Wang",
                "R. Li",
                "Q. Wang",
                "S. Chen",
                "M. Ryan",
                "T. Hardjono"
            ],
            "title": "Exploring web3 from the view of blockchain",
            "venue": "arXiv preprint arXiv:2206.08821, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "Y. Wang",
                "Z. Su",
                "N. Zhang",
                "R. Xing",
                "D. Liu",
                "T.H. Luan",
                "X. Shen"
            ],
            "title": "A survey on metaverse: Fundamentals, security, and privacy",
            "venue": "IEEE Communications Surveys & Tutorials, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "J. Xu"
            ],
            "title": "What is bitcoin full node and how to run a bitcoin full node in 6 simple steps?",
            "venue": "https://medium.com/coinmonks/ how-to-run-a-bitcoin-full-node-in-6-simple-steps-a243189a5750,",
            "year": 2022
        },
        {
            "authors": [
                "F. Kochan"
            ],
            "title": "Ethereum full node vs archive node explained - step-by-step beginners guides \u2014 quicknode",
            "venue": "Sep 2022. [Online]. Available: https://www.quicknode.com/guides/infrastructure/ ethereum-full-node-vs-archive-node",
            "year": 2022
        },
        {
            "authors": [
                "M.J. SANTORELLI"
            ],
            "title": "The value of context and rigor: A review of oti\u2019s cost of connectivity 2020 report july 2020 by michael j. santorelli & alexander karras",
            "venue": "2020.",
            "year": 2020
        },
        {
            "authors": [
                "J. Bonneau",
                "I. Meckler",
                "V. Rao",
                "E. Shapiro"
            ],
            "title": "Mina: Decentralized cryptocurrency at scale",
            "venue": "New York Univ. O (1) Labs, New York, NY, USA, Whitepaper, pp. 1\u201347, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "S. Chen",
                "Z. Liu",
                "Y. Long",
                "D. Gu"
            ],
            "title": "Dechain: A blockchain framework enhancing decentralization via sharding",
            "venue": "Information Security and Privacy: 27th Australasian Conference, ACISP 2022, Wollongong, NSW, Australia, November 28\u201330, 2022, Proceedings. Springer, 2022, pp. 469\u2013488.",
            "year": 2022
        },
        {
            "authors": [
                "B. B\u00fcnz",
                "L. Kiffer",
                "L. Luu",
                "M. Zamani"
            ],
            "title": "Flyclient: Super-light clients for cryptocurrencies",
            "venue": "2020 IEEE Symposium on Security and Privacy (SP), 2020, pp. 928\u2013946.",
            "year": 2020
        },
        {
            "authors": [
                "D. Puthal",
                "N. Malik",
                "S.P. Mohanty",
                "E. Kougianos",
                "C. Yang"
            ],
            "title": "The blockchain as a decentralized security framework [future directions",
            "venue": "IEEE Consumer Electronics Magazine, vol. 7, no. 2, pp. 18\u201321, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "S. Mahato",
                "T. Khatua",
                "A. Das",
                "M.T.R. Chowdhury"
            ],
            "title": "A Brief Discussion on Two Different Cryptocurrency: Bitcoin & Ethereum",
            "venue": "International Journal Of Computer Trends And Technology, vol. 67, Sept. 2019.",
            "year": 2019
        },
        {
            "authors": [
                "franzihei"
            ],
            "title": "Solidity \u2014 solidity 0.8.17 documentation",
            "venue": "Mar 2022. [Online]. Available: https://docs.soliditylang.org/en/v0.8.17/",
            "year": 2022
        },
        {
            "authors": [
                "R. Dennis",
                "J.P. Disso"
            ],
            "title": "An analysis into the scalability of bitcoin and ethereum",
            "venue": "Third International Congress on Information and Communication Technology: ICICT 2018, London. Springer, 2019, pp. 619\u2013627.",
            "year": 2018
        },
        {
            "authors": [
                "Ethereum"
            ],
            "title": "Nodes and clients \u2014 ethereum.org",
            "venue": "https://ethereum. org/en/developers/docs/nodes-and-clients/, Apr. 2022, (Accessed on 05/08/2022).",
            "year": 2022
        },
        {
            "authors": [
                "J. Sedlmeir",
                "H.U. Buhl",
                "G. Fridgen",
                "R. Keller"
            ],
            "title": "The energy consumption of blockchain technology: beyond myth",
            "venue": "Business & Information Systems Engineering, vol. 62, no. 6, pp. 599\u2013608, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "J. Ding",
                "M. Nemati",
                "C. Ranaweera",
                "J. Choi"
            ],
            "title": "IoT connectivity technologies and applications: A survey",
            "venue": "arXiv preprint arXiv:2002.12646, 2020.",
            "year": 2002
        },
        {
            "authors": [
                "L. Chen",
                "L.W. Cong",
                "Y. Xiao"
            ],
            "title": "A brief introduction to blockchain economics",
            "venue": "Information for Efficient Decision Making: Big Data, Blockchain and Relevance. World Scientific, 2021, pp. 1\u201340.",
            "year": 2021
        },
        {
            "authors": [
                "Z. Wang",
                "L. Gao",
                "J. Huang"
            ],
            "title": "Multi-dimensional contract design for mobile data plan with time flexibility",
            "venue": "Proceedings of the Eighteenth ACM International Symposium on Mobile Ad Hoc Networking and Computing, 2018, pp. 51\u201360.",
            "year": 2018
        },
        {
            "authors": [
                "M. Mamman",
                "Z.M. Hanapi",
                "A. Abdullah",
                "A. Muhammed"
            ],
            "title": "Quality of service class identifier (qci) radio resource allocation algorithm for lte downlink",
            "venue": "PloS one, vol. 14, no. 1, p. e0210310, Jan. 2019.",
            "year": 2019
        },
        {
            "authors": [
                "P.A. Apostolopoulos",
                "E.E. Tsiropoulou",
                "S. Papavassiliou"
            ],
            "title": "Gametheoretic learning-based QoS satisfaction in autonomous mobile edge computing",
            "venue": "2018 global information infrastructure and networking symposium (GIIS). IEEE, Oct. 2018, pp. 1\u20135.",
            "year": 2018
        },
        {
            "authors": [
                "N.J. Bennett",
                "J. Blythe",
                "A.M. Cisneros-Montemayor",
                "G.G. Singh",
                "U.R. Sumaila"
            ],
            "title": "Just transformations to sustainability",
            "venue": "Sustainability, vol. 11, no. 14, p. 3881, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "C.T. Nguyen",
                "D.T. Hoang",
                "D.N. Nguyen",
                "D. Niyato",
                "H.T. Nguyen",
                "E. Dutkiewicz"
            ],
            "title": "Proof-of-stake consensus mechanisms for future blockchain networks: fundamentals, applications and opportunities",
            "venue": "IEEE Access, vol. 7, pp. 85 727\u201385 745, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "A.R. Usmani"
            ],
            "title": "A novel time and space complexity efficient variant of counting-sort algorithm",
            "venue": "2019 International Conference on Innovative Computing (ICIC), Lahore, Pakistan, vol. 1, Nov. 2019, pp. 1\u20136.",
            "year": 2019
        },
        {
            "authors": [
                "B. Kalkanci",
                "K.-Y. Chen",
                "F. Erhun"
            ],
            "title": "Contract complexity and performance under asymmetric demand information: An experimental evaluation",
            "venue": "INFORMS: Management science, vol. 57, no. 4, pp. 689\u2013 704, Apr. 2011.",
            "year": 2011
        },
        {
            "authors": [
                "A. Gabizon",
                "K. Gurkan",
                "P. Jovanovic",
                "G. Konstantopoulos",
                "A. Oines",
                "M. Olszewski",
                "M. Straka",
                "E. Tromer",
                "P. Vesely"
            ],
            "title": "Plumo: Towards scalable interoperable blockchains using ultra light validation systems",
            "venue": "Proceedings of the 3rd ZKProof Workshop, London, UK, vol. 20, 2020. This article has been accepted for publication in IEEE Open Journal of the Computer Society. This is the author's version which has not been fully edited and content may change prior to final publication. Citation information: DOI 10.1109/OJCS.2023.3260829 This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/",
            "year": 2020
        }
    ],
    "sections": [
        {
            "text": "Index Terms\u2014Web 3.0, Metaverse, blockchain, incentive mechanism, contract theory\nI. INTRODUCTION"
        },
        {
            "heading": "A. Background and Motivations",
            "text": "WEB 3.0 and the Metaverse depend on interconnecteddata and decentralized systems like blockchains. In Web 3.0, blockchains can be used to store and verify identity and reputation data [1], while in the Metaverse they can track and verify virtual assets and facilitate transactions [2]. A blockchain full node is a program that stores the blockchain\u2019s whole state and validates all transactions and blocks completely. By hosting full nodes, users can contribute to the blockchain network becoming more decentralized, improving the user experience and promoting the blockchain\u2019s growth and reliability. However, running full nodes requires significant resources and can be costly. For example, a Bitcoin full node requires more than 120 GB of storage and 8 GB+ memory to operate and can take several hours to become fully\nDaniel Mawunyo Doe, Jing Li and Zhu Han are with the Department of Electrical and Computer Engineering, University of Houston, 4800 Calhoun Rd, Houston, TX 7700. E-mail: dmdoe@uh.edu, jli84@uh.edu, and zhan2@uh.edu\nDusit Niyato is with the School of Computer Science and Engineering, Nanyang Technological University, Singapore 639798. Email: dniyato@ntu.edu.sg\nZhen Gao is with the School of Electrical and Information Engineering, Tianjin University, Tianjin, China. E-mail: zgao@tju.edu.cn\nJun Li is with the School of Electronic and Optical Engineering, Nanjing University of Science and Technology, Nanjing 210094, China. Email:jun.li@njust.edu.cn\nsynchronized with the network after joining [3]. Likewise, an Ethereum full node requires a fast CPU with 4+ cores, 16 GB+ of RAM, a fast SSD drive with at least 1 TB of space, and 25 MBit/s bandwidth [4]. Additionally, it would cost about $20/month to run these full nodes in the cloud, not including electricity or internet use [5].\nAs the cost of maintaining a complete state of the blockchain increases, many users migrate to light node implementations, which require only minimal resources. However, light node implementations have their limitations, as they depend on full nodes for initial synchronization and blockchain state verification, which raises concerns about centralization. To address this issue, several blockchain node providers, such as Tatum, Chainstack, Infura, Alchemy, and QuickNode1, offer proprietary blockchain nodes and hosting as a service, providing instant API connections to full nodes from many leading blockchain networks to improve blockchain implementations. However, using these services comes with a cost averaging around $49 per month, and the lack of incentives for users to participate in full node implementations is a drawback of these platforms. In contrast, recent proposals, such as Mina [6], DeChain [7], and Flyclient [8], improve the efficiency of light client verification but do not incentivize users to support the blockchain network. This lack of incentives could pose a risk to decentralization, which is a critical issue for Ethereum, Bitcoin, and the broader blockchain community, as highlighted by [9].\nCelo, Vipnode, IOTA, and Pocket Network2 incentivize users to run full nodes to improve the decentralization and reliability of blockchain networks. Celo rewards its network users through gateway fees and transaction payments. Vipnode offers users the flexibility of paying what they want for 30 days of access to its platform and reserved peer slots for instant connections to ensure the Ethereum network remains decentralized. IOTA and Pocket Network incentivize users to run full nodes on their platforms by offering in-app privileges. However, these blockchain implementations fail to address the information asymmetry between users and the network. To design an optimal reward system, the blockchain network must be cognizant of the efforts made by users, specifically in terms of resource contributions and the ability to generate revenue through node implementations. This information is crucial in avoiding the moral hazard problem, which arises when the\n1Tatum, Chainstack, Infura, Alchemy, and QuickNode: https://tatum.io/,https://chainstack.com/,https://www.alchemy.com/, and https://www.quicknode.com/, respectively.\n2Celo, Vipnode, IOTA, and Pocket Network: https://docs.celo.org/, https://vipnode.org/, https://blog.iota.org/incentives-to-run-an-iota-node/, and https://www.edenblock.com/, respectively.\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n2 users do not put forth the effort they claim to. Furthermore, knowledge of users\u2019 revenue-generating capabilities assists in circumventing the issue of adverse selection, where users falsely present themselves as having low revenue-generating abilities to gain more rewards. Consequently, the existence of significant information asymmetry poses a challenge when designing optimal rewards.\nFurthermore, incentives or rewards, such as monetary compensation, reduced gas fees, reputation, and voting weights, can be practical tools for encouraging user participation and adoption of a blockchain platform, but funding the incentives also requires considerable resources. Therefore, the network must deliberate on the most appropriate incentives and how to distribute its budget to optimize its utility effectively. If the budget is not managed effectively, it may be depleted rapidly, leading to reduced or discontinued incentives. Therefore, motivated by the preceding discussion, we ask and attempt to answer the following questions in this paper:\n1) How should users with information asymmetry levels be incentivized to share resources for the long-term sustainability of the blockchain? 2) How can the blockchain network balance the need to incentivize users with the limited resources available for funding incentives?"
        },
        {
            "heading": "B. Contributions",
            "text": "Contract theory is considered to be a practical approach for incentive mechanism design under asymmetric information scenarios [10]. As a result, we employ contract-theoretic methods to develop an incentive mechanism that economically encourages user engagement in the sustainability and expansion of the blockchain network. Firstly, we characterize the user types based on their revenue-generating capabilities and efforts. Secondly, we provide a contract design that considers the various information asymmetry levels between the blockchain network and the users for the long-term sustainability of the blockchain. Specifically, our innovative model addresses both adverse selection and moral hazard problems. We present solutions to the problems under three different scenarios: the general case where both adverse selection and moral hazard are present and the two extreme cases where only one of these issues is present (i.e., only adverse selection and only moral hazard). Next, to balance the need to incentivize users with the limited resources available, we propose to offer diverse incentives for users with different types based on their reward amounts. Our contract design extracts the user types (revenue-generating capabilities and efforts), which are utilized to determine each user\u2019s reward amount and type of reward.\nTo the best of our knowledge, this work is the first attempt to investigate a diversified incentive mechanism design for users on blockchain networks considering different degrees of information asymmetry. Compared to previous recent implementations, our contributions can be summarized as follows:\n\u2022 We propose a novel incentive mechanism addressing \u201cadverse selection\u201d and \u201cmoral hazard\u201d problems.\n\u2022 We propose a diversified reward scheme for funding user incentives. \u2022 We perform numerous experiments to confirm the effectiveness and efficiency of our diversified incentive mechanism.\nThe rest of the paper is organized as follows. Section II explains the system model and the preliminary architecture of our incentive mechanism. We show our contract formulations and closed-form solutions in Section III. Section IV presents our diversified incentives scheme. In Section V, we show the experiment results and analysis of our proposed mechanism, and finally, Section VI concludes our work."
        },
        {
            "heading": "II. SYSTEM MODEL",
            "text": ""
        },
        {
            "heading": "A. System Architecture",
            "text": "The Ethereum network is a multi-layered system, with hardware, software, and application layers all working together to form a cohesive whole [11]. The hardware layer is a vast computer network that executes transactions and maintains an updated shared database. The software layer enables developers to run programs, such as smart contracts (SCs), using Solidity programming language and node clients on the Ethereum network [12]. The third layer comprises applications that provide various services to Ethereum users, from governance to identity management.\nThis work focuses on the hardware layer of the blockchain network, specifically the entities that establish the Ethereum network (EN). Two types of nodes are considered: lightweight and full nodes. Maintaining these nodes requires substantial resources such as storage space, computational capabilities, and electricity [13]. Users must have desktop or laptop hardware with at least 500GB of free disk space, 16GB of memory (RAM), and a broadband internet connection capable of uploading at least 400 kilobits per second[?]. Due to the significant resources required to run full nodes, appropriate incentives are necessary to encourage user participation. To optimize funding incentives, the EN considers users\u2019 revenuegenerating capabilities and offers various types of contracts for users to choose from. Once the contracts are signed, the EN obtains information about the users to determine their corresponding rewards earned. Additionally, a reward amount classification system is implemented to determine the types of rewards to be offered and the terms of trade for such rewards. Fig. 1 illustrates our system architecture with the proposed incentive mechanism design."
        },
        {
            "heading": "B. Network Model",
            "text": "1) User Resources: Full nodes can be run in the cloud with an account on either Amazon Web Services (AWS) or Google Cloud or locally on user devices [14]. In this work, we consider the case of running full nodes locally. Let the set I = {1, \u00b7 \u00b7 \u00b7 , I} denote the population of I heterogeneous users on our EN platform. Suppose there are N tasks to be completed using diverse resources at each user node. Expressly, each user with a full or light node consumes E(t) energy units at a particular time t for tasks, such as\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n3\ndata accumulation, transmission, and computation [15]. The electricity Ei(t) consumed by user i \u2208 I to keep the nodes running all the time when needed can be calculated as follows:\nEi(t) = cen(t) \u00b7 N\u2211\nn=1\nen(t), (1)\nwhere cen(t) \u2208 R+ is the cost per unit energy and en(t) is the amount of energy used by a task n \u2208 N . The locations of the full nodes are supposed to be fixed during any data transfer. We employ the time-division medium access (TDMA) technology, in which the uplink and downlink share the same frequency channel [16]. As a result, the feasible network data rate Bi(t) for user\u2019s node i can be mathematically quantified as follows:\nBi(t) = cbn(t) \u00b7 N\u2211\nn=1\nbn(t), (2)\nwhere for task n, cbn(t) \u2208 R+ is the cost per unit data transferred and bn(t) is the amount of data consumed.\nFurthermore, full nodes store the state of the most recent 128 blocks (or 64 blocks on a fast/snap sync), which is updated as soon as a new block arrives. The used storage space Si(t) by the user\u2019s node i is a function of the total number of blocks stored at a time t on the user device and can be expressed as:\nSi(t) = csn(t) \u00b7 N\u2211\nn=1\nsn(t), (3)\nwhere csn(t) \u2208 R+ denotes the cost coefficient for a unit storage space and Sn(t) represents the block storage space used by user i for task n at any given t.\nFull nodes are required to verify transactions, beginning with the genesis block and retrieving all transactions recorded on blocks from connected peers. Synchronization of a fully certified node is time-consuming and demands significant computational resources. The user\u2019s node i computational resource demands Pi(t) for N tasks is denoted by the following notation:\nPi(t) = cpn(t) \u00b7 N\u2211\nn=1\npn(t), (4)\nwhere cpn(t) \u2208 R+ denotes the cost coefficient for computational resource utilization and pn(t) represents the number of computational resources used by the user device.\n2) User\u2019s Types: Any user may utilize the EN to operate their own \u201cbusiness,\u201d which can result in either success (receive revenue \u03b3, such that \u03b3 \u2265 0) or failure (receive revenue of \u03b3 = 0), i.e., the revenue realizations {0, \u03b3}. Besides mining, blockchain users can generate revenue through crossborder payments, lending platforms, credit scoring, and financial record keeping. Other revenue-generating opportunities include invoicing management, billing solutions, fund investment, government spending, political funding, stock exchange, and initial public offering [17]. As a result, the users\u2019 revenuegenerating capabilities \u03b8 fall into two distinct types, such that \u03b8 \u2208 {\u03b8H , \u03b8L} with \u03b8L < \u03b8H , implying users with lower and higher revenue-generating capabilities, respectively. We mention that the user types can also be extended to more than two using the various techniques explained in [10].\nFurthermore, while the EN may not know each user type, it may be aware of users\u2019 private information statistics based on market research and previous experience [18]. The EN can use this statistical data to create an apriori distribution set, which can speculate whether a user possesses a high or low capability {\u03b8H or \u03b8L} with the respective probabilities {\u03bb, (1\u2212 \u03bb)}, where \u03bb \u2208 [0, 1] is the probability that a user belongs to \u03b8H and (1 \u2212 \u03bb) is the probability that a user belongs to \u03b8L. In addition to a user\u2019s capability, the level of effort \u03be exerted on the EN also plays a role in determining the potential for generating significant revenue. Users can increase their chances of earning higher revenue by investing more resources into the platform. Therefore, we denote \u03b8\u03be \u2208 (0, 1) as the probability of a user generating significant revenue based on the level of effort exerted on the EN.\nAdditionally, we assume that the user i\u2019s effort \u03bei is a convex function of total resources \u03c8i and skill set. The user\u2019s skill sets comprise the capability to coordinate various resources or the competency to implement and manage full nodes for revenue purposes, which is challenging to quantify. Therefore, we correlate this with the revenue-generating capability. That is, \u03b8H has a higher skill set than \u03b8L. mi, which can be expressed as\n\u03bei = \u03be(\u03c8i,mi) = N\u2211 n=1 \u03c8i + cmi 2 N\u2211 n=1 m2i , (5)\nwhere \u03c8i = Ei(t)+Bi(t)+Si(t)+Pi(t) is the total resource cost from the summation of (1), (2), (3), and (4). cmi \u2208 R+ is the cost coefficient associated with the skill set mi, which is sufficiently large that the user will never pick an mi that results in \u03b8\u03be \u2265 1 and ensures that the probability 0 < \u03b8\u03be < 1 holds.\n3) Contract Formulation: We assume both the Ethereum network (EN) and its users are risk-neutral, meaning they do not prioritize saving or consuming. Both the EN and users can earn revenue from mining and gas fees. However, investing resources in the development of full nodes primarily benefits the EN, as it aids in its growth and sustainability. As a result, the EN is motivated to compensate users for their efforts\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n4 with a contract that details the cost and reward. The contract C = {q, r(\u03be)} specifies the cost q for using the EN and the reward r(\u03be) provided to the users. Users pay gas fees to use the EN platform, and the reward r(\u03be) compensates users for their efforts with tokens, voting weights, reputation, or discounts. r(\u03be) is a function of effort \u03be, and the EN provides a zeroreward item for any user type that does not provide resources. The EN must optimize its contract by balancing user incentives with fees to maximize revenue."
        },
        {
            "heading": "C. Utility Model",
            "text": "1) EN\u2019s Utility: The EN\u2019s utility is primarily determined by the platform utilization fee q and the reward r(\u03be) paid to the users. However, since the user utilizes the platform to run their own tasks, the EN needs to account for the profit made by this means to optimize its utility. Additionally, the EN does not know the user types (e.g., {\u03b8H , \u03b8L}), but it knows the probability that a user belongs to, which is represented by \u03bbi, such that \u2211I i=1 \u03bbi = 1. We define the EN\u2019s utility as\nUEN = I\u2211 i=1 \u03bbi[qi + \u03b8i\u03beir(\u03bei)], (6)\n= \u03bb[qH + \u03b8H\u03beHr(\u03beH)]\n+ (1\u2212 \u03bb)[qL + \u03b8L\u03beLr(\u03beL)], (7)\nwhere (7) represents the EN utility in terms of user types, e.g., high and low capability users correlated with {\u03b8H , \u03b8L}. The utility of the EN is calculated as the difference between the total payments made by users and the rewards distributed by the EN. To ensure that the entire process is beneficial to the EN, we require that qi + \u03b8i\u03beir(\u03bei) \u2265 0 holds in all circumstances.\n2) Users\u2019 Payoff: Each Ethereum user\u2019s payoff on the platform is expressed fundamentally as the difference between earned income and payments made to the EN. In addition, we integrate the user\u2019s effort from (5) to account for operating costs. For any user i, the generated income consists of the user\u2019s revenue \u03b3i and earned rewards r(\u03bei). The user pays the EN qi fees for utilizing the EN\u2019s platform, and the EN will reimburse the user\u2019s efforts with a payout of r(\u03bei). Therefore, we can derive the users\u2019 payoff as\nUEU = I\u2211 i=1 \u03b8i\u03bei[\u03b3i + r(\u03bei)]\u2212 qi \u2212 \u03bei. (8)\nGiven the utility function in (8), the user chooses the strategy that maximizes its payoff.\n3) Social Welfare: Next, we define social welfare as the weighted sum of the EN and users\u2019 utilities. The system\u2019s social welfare USW can be represented as follows:\nUSW = UEN + UEU ,\n= I\u2211 i=1 \u03b8i\u03bei[r(\u03bei) + \u03b3i]\u2212 qi \u2212 \u03bei \u2212 \u03bbi[qi \u2212 \u03b8i\u03beir(\u03bei)].\n(9)\n4) QoS satisfaction: Next, we define quality of service (QoS) satisfaction, which is an essential parameter for our system evaluation. The user i\u2019s QoS satisfaction \u03b2i based on its utility UEU (i) is formulated as the sigmoid function\n\u03b2i = 1\n1 + e\u2212\u00b5 \u00d7 UEU (i) , (10)\nwhere \u00b5 depicts the constant that determines the satisfactory curve\u2019s shape [19]. We define QoS satisfaction for each user based on their payoff using the quality of service class identifier (QCI) table. Each user\u2019s QoS satisfaction denoted as \u03b2 is set in the range [0, 1], where a value of 0.5 and beyond means that the user is satisfied and that below 0.5 means dissatisfaction [20].\n5) Blockchain Sustainability: We present a cost-benefit analysis (CBA) to evaluate the economic, social, and environmental costs and benefits of different deploying full node implementations. CBA involves quantifying the costs and benefits of different alternatives in monetary terms and comparing them to determine which alternative is the most efficient [21]. Our CBA UCBA can be formulated as follows\nUCBA = rCBA \u2212 qCBA, (11)\nwhere rCBA is the total benefits of incentivization, calculated as rCBA = \u2211 i\u2208I \u03b8i \u00d7 \u2211 i\u2208I \u03bei \u00d7 \u2211 i\u2208I V(\u03b2i), where V(\u03b2i) represents users\u2019 satisfaction with the quality of service. Specifically, rCBA is obtained by multiplying the number of new full nodes, the average contribution per full node, and the evaluation of blockchain sustainability in terms of \u03b2i. Similarly, qCBA is the total cost of incentivization, calculated as qCBA = \u2211 i\u2208I \u03b8i \u00d7 \u2211 i\u2208I r(\u03bei).\nBlockchain sustainability can result in lower transaction costs, improved efficiency, and increased trust. The cost of incentivizing full node implementation includes hardware and energy costs. UCBA can determine if the total benefits outweigh the total costs of incentivizing new full nodes for blockchain sustainability."
        },
        {
            "heading": "III. OPTIMAL CONTRACT DESIGN FOR USERS WITH ADVERSE SELECTION AND MORAL HAZARD",
            "text": "In this section, we explore the optimal incentive mechanism design for heterogeneous users in the EN to encourage the growth and sustainability of Web 3.0 and the Metaverse. Specifically, we solve the EN\u2019s utility maximization problem by analyzing three possible scenarios:\n1) Only moral hazard scenario: This scenario considers the situation where the EN does not know the effort exerted by users in creating revenue. We consider the user effort defined in (5). 2) Only adverse selection scenario: In the event that the user uses the EN platform to create revenue, however, the EN may not be aware of the user\u2019s likelihood of generating a profit, resulting in an adverse selection problem. 3) Both adverse selection and moral hazard scenario: In this instance, we explore a scenario in which both adverse selection and moral hazard are present, which is the general case that describes the current blockchain network.\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n5 We present the contract feasibility and optimality conditions for each scenario prior to solving for the optimal contract. The contract feasibility and optimality are expressed as follows.\nDefinition 1 (Contract Feasibility). A contract is feasible if each user obtains the maximal payoff by choosing the contract item designed for its type.\nDefinition 2 (Contract Optimality). A contract is optimal if it maximizes the EN\u2019s utility among all feasible contracts.\nThe rest of this section includes the optimal contract design under adverse selection and moral hazard scenarios. To establish the general case, we first show the EN\u2019s utility maximization problem containing both adverse selection and moral hazard, which is followed by the two extreme cases involving only adverse selection or moral hazard."
        },
        {
            "heading": "A. EN\u2019s Utility Maximization Problem",
            "text": "In this part, we examine the optimal contract for the EN problem when it is unaware of each user\u2019s revenue-generating capability and efforts on the platform. This optimal contract allows the EN to monitor and ensure that no user accepts a contract item that is not intended for its type, and vice versa. Consequently, an incentive compatibility (IC) constraint is required. We define the IC constraint as follows.\nDefinition 3 (Incentive Compatibility). A contract is incentive compatible if it provides the maximal payoff for each user when it chooses the contract item {q, r(\u03be)} designed for its type, which can be formulated as follows:\n\u03b8i\u03bei[\u03b3i + r(\u03bei)]\u2212 qi \u2212 \u03bei \u2265 \u03b8i\u03bej [\u03b3j + r(\u03bej)]\u2212 qj \u2212 \u03bej , (12) \u2200j \u0338= i, i, j \u2208 {L,H},\nwhere \u03bej is the effort of a user belongs to type \u03b8i when choosing contract {qj , r(\u03bej)}. The IC constraint dictates that a user can only maximize its expected return by selecting the contract that corresponds to its type.\nFurthermore, for the user to accept the necessary contract item, the EN must guarantee that each user receives a positive payment, imposing an individual rationality (IR) constraint. The IR constraint is expressed in the following definition.\nDefinition 4 (Individual Rationality). A contract is individually rational if it provides a non-negative payoff to each type-i that accepts the contract item {q, r(\u03be)} designed for its type, i.e.,\n\u03b8i\u03bei[\u03b3i + r(\u03bei)]\u2212 qi \u2212 \u03bei \u2265 0, i \u2208 {L,H}. (13)\nThe IR constraint gives the user the appropriate incentives to sign the contract. In other words, a contract is only feasible if it meets IC and IR constraints.\nAdditionally, the IR and IC restrictions are the basic conditions required to ensure that a contract is incentive compatible and rational. In addition to the IR and IC constraints, a number of other conditions must be achieved.\nLemma 1. For any feasible contract {q, r(\u03be)}, r(\u03bei) > r(\u03bej) if and only if \u03b8i > \u03b8j , and r(\u03bei) = r(\u03bej) if and only if \u03b8i = \u03b8j .\nAccording to Lemma 1, if \u03b8i > \u03b8j , then r(\u03bei) > r(\u03bej) must hold. Therefore, a high-type user should receive a greater reward than a low-type user. If two users receive the same reward, they must be of the same type, and vice versa. Consequently, this property can be defined as:\nDefinition 5 (Monotonicity). The monotonicity of a contract holds for any feasible contract {q, r(\u03be)}, the reward r(\u03be) follows\n0 \u2264 r(\u03be1) < \u00b7 \u00b7 \u00b7 < r(\u03bei) < \u00b7 \u00b7 \u00b7 < r(\u03beI). (14)\nThe monotonicity property states that the value of the contract to one party cannot decrease as the other party\u2019s actions improve. In other words, if one party\u2019s actions increase in value, the other party\u2019s payoffs must also increase. We can derive the following proposition from the property of monotonicity:\nProposition 1. As a strictly increasing function of q, the efforts \u03be intuitively fulfills the following criterion\n0 \u2264 \u03be1 < \u00b7 \u00b7 \u00b7 < \u03bei < \u00b7 \u00b7 \u00b7 < \u03beI . (15)\nProposition 1 demonstrates that an incentive-compatible contract necessitates high performance from users in exchange for a high payoff, and vice versa.\nLemma 2. For any feasible contract {q, r(\u03be)}, the payoff of each user type must satisfy\n0 \u2264 UEU (1) < \u00b7 \u00b7 \u00b7 < UEU (i) < \u00b7 \u00b7 \u00b7 < UEU (I). (16)\nLemma 2 states that higher-type users achieve higher payoffs than lower-type users. The IC constraint and the two lemmas that we establish allow us to simply derive the following. If a high-type user chooses the contract designed for a low-type user, even if less effort was put into the EN, the lower reward received will diminish the user\u2019s payoff. Furthermore, if a lower-type user chooses a contract meant for a high-type user, the reward return cannot compensate for the cost of efforts, and therefore the cost outweighs the return. The user will gain the most payoff if and only if the contract best suits its type is chosen. As a result, we can ensure that the contract is self-revealing.\nNext, the optimal contract C\u2217 = {q\u2217, r\u2217(\u03be)} is the solution to the EN\u2019s optimization problem, which seeks to maximize its return by determining the quantity of rewards to offer users depending on their capabilities and efforts, which can be formulated as: Problem 1 (EN\u2019s utility maximization problem):\nmax qi,r(\u03bei) \u03bb[qH + \u03b8H\u03beHr(\u03beH)]\n+ (1\u2212 \u03bb)[qL + \u03b8L\u03beLr(\u03beL)], (17a) \u03b8i\u03bei[\u03b3i + r(\u03bei)]\u2212 qi \u2212 \u03bei \u2265 \u03b8i\u03bej [\u03b3j + r(\u03bej)]\u2212 qj \u2212 \u03bej , (17b) \u03b8i\u03bei[\u03b3i + r(\u03bei)]\u2212 qi \u2212 \u03bei \u2265 0, (17c) 0 \u2264 r(\u03be1) < \u00b7 \u00b7 \u00b7 < r(\u03bei) < \u00b7 \u00b7 \u00b7 < r(\u03beI), (17d) \u2200j \u0338= i.\nwhere both adverse selection and moral hazard are considered.\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n6 Taking the first derivative of the user\u2019s expected payoff in (8) with respect to effort \u03be, we can determine the user\u2019s best choice of effort \u03be\u2217 under the contract (q, r(\u03be)) as follows\n\u03be\u2217i = 1\n2 \u03b8i(\u03b3i \u2212 r(\u03bei)). (18)\nLikewise, we have \u03bej = 1 2\u03b8i(\u03b3j \u2212 r(\u03bej)). This equation demonstrates that the optimal effort \u03bei for users is independent of qi but decreases with r(\u03bei). In other words, users would have fewer incentives to contribute to the network if they must share a more significant portion of the generated revenue \u03b3i, irrespective of the predetermined gas fees paid qi for every transaction on the EN\u2019s platform. The reduction in effort \u03be\u2217i immediately reduces the probability of obtaining revenue \u03b3i. Therefore, it is critical to strike a balance between providing sufficient incentives to users and demanding reasonable fees from them.\nWe can then express the EN\u2019s problem in the following form by replacing \u03be\u2217i and \u03be \u2217 j into (17) as follows:\nmax qi,r(\u03bei)\n\u03bb[qH \u2212 r(\u03beH) + 1\n2 \u03b82H(\u03b3Hr(\u03beH))]\n+ (1\u2212 \u03bb)[qL \u2212 r(\u03beL) + 1\n2 \u03b82L(\u03b3L \u2212 r(\u03beL))], (19a)\n1 2 [\u03b8i(\u03b3i \u2212 r(\u03bei))]2 \u2212 qi \u2265 1 2 [\u03b8j(\u03b3j \u2212 r(\u03bej))]2 \u2212 qj , (19b) 1 2 [\u03b8i(\u03b3i \u2212 r(\u03bei))]2 \u2212 qi \u2265 0, (19c) 0 \u2264 r(\u03be1) < \u00b7 \u00b7 \u00b7 < r(\u03bei) < \u00b7 \u00b7 \u00b7 < r(\u03beI), (19d) \u2200j \u0338= i.\nHowever, it is not possible to separate the moral hazard dimension from the adverse selection dimension in this scenario, meaning that the two incentive problems cannot be addressed independently. In the subsequent subsection, we will discuss the distinct functions of moral hazard and adverse selection, as well as the consequences of their simultaneous existence. The optimal contract design for this issue depends on whether only adverse selection, only moral hazard, or both are explicitly taken into account."
        },
        {
            "heading": "B. Optimal Contract with Moral Hazard Scenario Only",
            "text": "Assume that the EN can observe the user\u2019s revenuegenerating capability, which eliminates the adverse selection problem and leaves only the moral hazard incentive problem. The EN problem can then be reduced to the following by treating users with distinct capabilities independently: Problem 2 (Contract Design for Users with Moral Hazard Scenario Only):\nmax qi,r(\u03bei)\nqi \u2212 r(\u03bei) + 1\n2 \u03b82i [\u03b3i \u2212 r(\u03bei)], (20a)\n1 2 [\u03b8i(\u03b3i \u2212 r(\u03bei))]2 \u2212 qi \u2212 \u03bei \u2265 0, (20b) 0 \u2264 r(\u03be1) < \u00b7 \u00b7 \u00b7 < r(\u03bei) < \u00b7 \u00b7 \u00b7 < r(\u03beI), (20c) \u2200j \u0338= i.\nIn this optimization problem, we seek to maximize the EN\u2019s utility subject to the IR and monotonicity constraints. Under the optimal contract with a moral hazard scenario only, we can derive the following insights:\n1) This EN utility maximization problem has the solution: q\u2217 = 12\u03b8 2 i \u03b3 2 i and r \u2217(\u03beH) = r \u2217(\u03beL) = 0. 2) As there is no adverse selection, the EN\u2019s main objective is to mitigate the negative effects of moral hazard. 3) To eliminate moral hazard, the EN should only charge users a substantial, e.g., qi + \u03f5\u03b3i, where \u03f5 \u2208 [0, 1] is an extra fee for the users with unknown efforts in generating high revenue. 4) In this moral hazard scenario, the only reason that the EN may keep the payment restricted to qi is if the users are financially constrained."
        },
        {
            "heading": "C. Optimal Contract with Adverse Selection Scenario Only",
            "text": "Now consider that the user\u2019s effort level is preset at level \u03be, but the EN is unable to see the user\u2019s revenue-generating capability, which leads to an adverse selection scenario. As a result, the EN\u2019s problem can be reduced to: Problem 3 (Contract Design for Users with Adverse Selection Scenario Only):\nmax qi,r(\u03be)\n\u03bb[qH + \u03b8H\u03ber(\u03be)] + (1\u2212 \u03bb)[qL + \u03b8L\u03ber(\u03be)], (21a)\n\u03b8i\u03be[\u03b3i + r(\u03be)]\u2212 qi \u2212 \u03bei \u2265 \u03b8i\u03be[\u03b3j + r(\u03be)]\u2212 qj \u2212 \u03bej , (21b)\n\u03b8i\u03be[\u03b3i + r(\u03be)]\u2212 qi \u2212 \u03bei \u2265 0, (21c) 0 \u2264 r(\u03be1) < \u00b7 \u00b7 \u00b7 < r(\u03bei) < \u00b7 \u00b7 \u00b7 < r(\u03beI), (21d) \u2200j \u0338= i.\nIn this optimization problem, we aim to maximize the EN\u2019s utility subject to the IC, IR, and monotonicity constraints. The optimal contract taking only the adverse selection scenario into account, provides the following insights:\n1) The EN utility maximization problem has the solution: q\u2217i = \u2212 12\u03b8i\u03be\n2 and r\u2217(\u03beH) = r\u2217(\u03beH) = r\u2217(\u03be), which eliminates the monotonicity constraints from (21d). 2) The EN\u2019s payment is negative, i.e., the EN must pay 12\u03be 2\nto the users instead. This is because the EN demands 100% (i.e., \u03f5 = 1) of the return from the users. However, in order for the IR constraint to hold, a payment from the EN to the users is required."
        },
        {
            "heading": "D. Optimal Contract with both Adverse Selection and Moral Hazard Scenarios",
            "text": "Due to the extreme assumptions made in the first two scenarios (e.g., there is only a moral hazard or only an adverse selection), their solutions are simple. Nonetheless, neither extreme approach accurately depicts the fundamental problem in practice. For both types of incentive problems, it is essential to describe how the incentive system could be set up. Intuitively, when both types of incentive problems are present, the optimal menu of contracts is a hybrid of the two extreme alternatives. The EN problem can be solved using the method described in [10] for pure adverse selection.\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n7 First, the analysis demonstrates that only the \u03b8L user\u2019s IR and the \u03b8H user\u2019s IC constraints will hold. When the \u03b8L user receives positive payoffs, so does the \u03b8H user, who can always imitate the \u03b8L user for higher incentives. Second, the EN can keep the \u03b8H user from getting rewards in a situation with symmetric information3, encouraging users to imitate the \u03b8L user. Therefore, the EN\u2019s optimization problem can be expressed as: Problem 4 (Contract Design for Users with Both Adverse Selection and Moral Hazard):\nmax qi,r(\u03bei)\n\u03bb[qH \u2212 r(\u03beH) + 1\n2 \u03b82H(\u03b3H \u2212 r(\u03beH))]\n+ (1\u2212 \u03bb)[qL \u2212 r(\u03beL) + 1\n2 \u03b82L(\u03b3L \u2212 r(\u03beL))], (22a)\n1 2 [\u03b8i(\u03b3i \u2212 r(\u03bei))]2 \u2212 qi \u2265 1 2 [\u03b8j(\u03b3j \u2212 r(\u03bej))]2 \u2212 qj , (22b) 1 2 [\u03b8i(\u03b3i \u2212 r(\u03bei))]2 \u2212 qi \u2265 0, (22c) 0 \u2264 r(\u03be1) < \u00b7 \u00b7 \u00b7 < r(\u03bei) < \u00b7 \u00b7 \u00b7 < r(\u03beI), (22d) \u2200j \u0338= i.\nBy utilizing an optimal contract design that considers both adverse selection and moral hazard scenarios, we are able to gain the following insights:\n1) Using the two binding constraints to eliminate qH and qL, we can obtain the optimal rewards r\u2217(\u03beH) and r\u2217(\u03beL) as follows:,\nr\u2217(\u03beH) = \u03bb(\u03b82H \u2212 \u03b82L)\u03b3H\n\u03bb(\u03b82H \u2212 \u03b82L) + (1\u2212 \u03bb)\u03b82H , (23)\nr\u2217(\u03beL) = 1\n2\u03b8H\n[ \u03bb(\u03b82H \u2212 \u03b82L)\u03b3L\n\u03bb(\u03b82H \u2212 \u03b82L) + (1\u2212 \u03bb)\u03b82L\n] . (24)\n2) Substituting r\u2217(\u03beH) and r\u2217(\u03beL) into the IC and IR constraints in (19), we can obtain the optimal payments q\u2217L and q \u2217 H as follows:\nq\u2217L = 1\n2 \u03b82L\n[ (\u03b3H \u2212 r\u2217(\u03beH))2 ] , (25)\nq\u2217H = q \u2217 L +\n1 2 \u03b82H\n[ (\u03b3H \u2212 r\u2217(\u03beH))2 \u2212 (\u03b3H \u2212 r\u2217(\u03beL))2 ] ,\n(26)\n3) Since \u03b8H user gets higher rewards than \u03b8L user, we can assume that there is no effort distortion for \u03b8H and \u03b8L. 4) The size of the capability differential (\u03b82H \u2212 \u03b82L) and the EN\u2019s prior \u03bb significantly affect the \u03b8L user\u2019s reward. 5) The higher the EN\u2019s confidence that it will meet an \u03b8H user, the higher its stake r(\u03beL) and payment qH .\nIV. INCENTIVE DIVERSIFICATION FOR ETHEREUM NETWORK\u2019S UTILITY OPTIMIZATION\nThis section demonstrates our incentive diversification scheme, which comprises voting weights and monetary rewards as user incentives for contributing efforts towards the EN. We present our diversified incentive mechanism design in Section IV-A.\n3This case can also be considered a pure moral hazard optimum, where the effort of each user is known to the EN.\nA. Incentive Diversification Scheme Design\n1) User reward amount: Our contract design outlines the user\u2019s revenue-generating capability and effort toward the EN, which can help the EN make informed decisions about how to compensate each user. We initially divide the execution time t into fixed-duration time slots t \u2208 {0, 1, 2, . . . , T}, with each time slot allocated to the proposal and production of a new block and T is the total execution time. The time slot t = 0 represents the generation of the genesis block. We introduce the classification groups of user reward groups, which helps distinguish users who will earn voting weights from monetary incentives. Without loss of generality, user reward amounts are grouped into four main categories based on the user\u2019s capability and effort. These categories include very high-tier I1, high-tier I2, mid-tier I3, and low-tier I4 users. An I1 user\u2019s reward amount has a high capability and a high effort, which is distinguished from an I2 user\u2019s reward amount with a low capability and a high effort. I3 user\u2019s reward amount has a high capability but a low effort, whereas I4 user\u2019s reward amount has a low capability and a low effort. The user\u2019s reward amounts can be calculated as follows:\nI1 = (\u03bei > 0.5\u00d7 \u03beEN ) \u2229 (\u03b8i < 1I \u2211I i=1 \u03b8i), (27) I2 = (\u03bei < 0.5\u00d7 34\u03beEN ) \u2229 (\u03b8i < 1 I \u2211I i=1 \u03b8i), (28) I3 = (\u03bei > 0.5\u00d7 24\u03beEN ) \u2229 (\u03b8i > 1 I \u2211I i=1 \u03b8i), (29) I4 = (\u03bei < 0.5\u00d7 14\u03beEN ) \u2229 (\u03b8i > 1 I \u2211I i=1 \u03b8i), (30)\nwhere \u03beEN is the maximum specified effort level from the EN, which is used to classify the relative levels of users.\nWe offer voting weights v to high-reward users, which can be characterized as I1 and I2 users from (27)-(28). We denote the set of users that fall in I1 and I2 as Iv and compute the voting weight vi of user i \u2208 Iv as follows:\nvi = r(\u03bei)\u2211Iv i=1 r(\u03bei) \u00d7 v\u0304, (31)\nwhere v\u0304 is the total vote weights that can be allocated as rewards on the system by the EN. Then, on any proposed block by user i at a time t, we add the voting weight vi to the user\u2019s existing voting score to boost its chances of approval. We can also apply our voting weight concept to increase each user\u2019s verifiable random function for higher chances of being selected as leader or block proposer [22]. Now, on the other hand, users in I3 and I4 are offered monetary rewards w. We denote the set of users in I3 and I4 as Iw and compute the voting weight wi of user i \u2208 Iw as follows:\nwi = r(\u03bei)\u2211Iw i=1 r(\u03bei) \u00d7 w\u0304, (32)\nwhere w\u0304 is the total monetary value that can be allocated as rewards on the system by the EN.\n2) Reward Diversification: Next, we study the user\u2019s willingness to accept any form of incentive or trade one incentive for another. This study is relevant because the vast majority of economic activities involve voluntary trade between individuals. When users trade in their resources to the EN for incentives, they can decide to give up one thing (e.g., voting\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n8 Algorithm 1: The proposed diversified incentive Mechanism Algorithm\nInput: User types, blockchain network information, funding incentives\nOutput: Incentive mechanism design 1 Step 1: Characterize user types\n\u2022 Identify user types based on revenue-generating capabilities and efforts. \u2022 Categorize users into groups with similar characteristics. \u2022 Determine each group\u2019s impact on the blockchain\nnetwork and its potential for revenue generation. Step 2: Provide contract design\n\u2022 Address information asymmetry between users and the blockchain network. \u2022 Consider both adverse selection and moral hazard problems. \u2022 Develop solutions for different scenarios: general case, only adverse selection, and only moral hazard.\nStep 3: Offer diverse incentives \u2022 Assign reward levels to each user group based on their\nrevenue-generating capabilities and efforts. \u2022 Users with higher reward levels receive voting weights\nthat influence the blockchain network\u2019s decisions. \u2022 Users with lower reward levels receive monetary\nrewards for their participation.\nweights) in exchange for another (e.g., money), which is presumably of more value or equivalent to that user. Nonetheless, we must mention that at any time, the users cannot trade all of their voting weights for monetary rewards, as the law of diminishing returns holds to ensure a lower payoff if one item is overly exchanged. We employ indifference curves as a graphical tool to efficiently investigate this type of voluntary transaction. In Fig. 2, U = {U1, U2, U3} set of curves display all possible combinations of voting weights v and money w for which a user is equally well off. We assume that the remaining arguments of the utility function are kept constant. The user is equally satisfied with accepting, for example, the reward combinations (v1, w1) or (v2, w2). We refer to this curve that represents all consumption bundles that a user ranks equally as the indifference curve.\nDefinition 6 (Indifference Curve). An indifference curve (or, in several dimensions, an indifference surface) represents a collection of consumption bundles towards which a person is indifferent. In other words, all bundles offer the same amount of benefit.\nThe indifference curves in Fig. 2 have a negative slope, indicating that if the user is compelled to sacrifice some v, it must be reimbursed by an increased quantity of w to remain indifferent between the two bundles of products. As v grows, the slope of the curves also increases (i.e., the slope starts at negative infinity and increases toward zero). Fig. 2 is a graphical depiction of the hypothesis that as users acquire more v, they become increasingly less inclined to sell away\nFig. 2: Indifference curve for various incentives\nw. Mathematically, when v grows, the absolute value of the slope decreases, which results in the following definition:\nDefinition 7 (Marginal Rate of Substitution (MRS)). At a given position, the marginal rate of substitution (MRS) is defined as the negative slope of U indifference curves. That is,\nMRS = \u2212 dv dw \u2223\u2223\u2223 U=U1\n(33)\nwhere the notation specifies that the slope should be determined along the indifference curves.\nWe present another concept called the budget line, shown as the red line in Fig. 2. A budget line in economics is the maximum quantity of goods or services that a user can afford to buy given their income and the price of the goods or services they want to purchase. It is a graphical representation of the budget constraint that users face, which is the limit on the combination of goods or services that they can afford. The budget line can be used to illustrate how changes in income or prices affect the choices that a consumer makes. For example, if a user\u2019s reward increases, their budget line will shift outward, allowing them to afford greater voting weights or monetary rewards. Similarly, if the price of voting weights or monetary rewards decreases, the budget line will shift inward, allowing the consumer to afford a greater quantity of that good or service. In this work, we set our budget line for voting weights and monetary rewards to [1, 100]. This budget line affects the selection of our indifference curve, and it is subject to change depending on the data collected, which makes the curve U2 the optimal indifference curve for our experiment.\nTherefore, taking U2 as our optimal curve, the slope of U2 and the MRS indicate the trades that a user will freely make. At a point such as (v1, w1), the user has a large quantity of monetary reward w and is prepared to give up a substantial amount in exchange for voting weights v. Consequently, the indifference curve is rather steep at (v1, w1) if the user receives a substantial monetary incentive w and a small number of voting weights v. In contrast, the indifference curve is flatter at (v2, w2). That is, the user has a small number of voting weights and is ready to forego relatively few monetary incentives. Therefore, the MRS decreases between (v1, w1) and\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n9 (v2, w2). The shifting slope of U2 demonstrates how a certain consumption bundle\u2019s availability affects the trades that a user will freely make. Also, we mention that the points (v\u2217, w\u2217) are the optimal trading reward for any user on our platform.\nTo create our indifference curve for the marginal rate of substitution (MRS) graph using our two incentives, we adopt the following steps:\n1) We determine the two goods to include in the graph, e.g., voting weights and monetary rewards. 2) We determine the quantities of each incentive the user is willing to trade based on the simulations conducted in Section V. 3) We graphically plot the points shown in Fig. 2, with the number of voting weights on the y-axis and the number of tokens(monetary reward) on the y-axis. 4) We repeat step 2 for multiple trade-off ratios between the two rewards. 5) Finally, we connect the plotted points to create the MRS curve.\n3) Algorithm Analysis: One of the key advantages of our algorithm is its efficient time complexity. This time complexity means that the algorithm can process large amounts of data in a relatively short amount of time, which is crucial for applications where speed is of the essence, such as realtime data analysis or large-scale data processing tasks on the blockchain network. The time complexity of reward amount classification algorithm is O(Nw + Kw), where Nw is the number of elements in the input weights and Kw is the range of weights [23]. The time complexity for our optimal contract can be computed as O(N) [24]. Therefore, the overall time complexity of the system can be evaluated as O(N) + O(Nw + Kw). The acceptable time complexity of our approach allows for effective use of computer resources, which can contribute to cost savings and increased overall performance."
        },
        {
            "heading": "V. EXPERIMENT RESULTS AND ANALYSIS",
            "text": "In this section, we first provide the system configuration for our experiment in Section V-A. Second, in Section V-B, we describe the performance measurements and experiment benchmarks that will serve as the foundation of our analysis. Finally, in Section V-C, we conduct comprehensive experiments to assess the performance benefits of the suggested mechanism and analyze our findings."
        },
        {
            "heading": "A. System Configuration",
            "text": "In this section, we provide the configuration architecture for our proposed scheme\u2019s comprehensive experimentation and analysis. All experiments are targeted at the Ethereum blockchain architecture and protocols. However, our implementation is guaranteed to function on any proof-of-stakebased platform. The experiments are carried out on a Core i7 CPU machine with a 3.8 GHz processor and 32 GB of RAM, using the Python 3.8 environment with solidity v0.8.0.\nTo deploy the optimal contract with moral hazard and adverse selection on this system, we run decentralized nodes from the chainlink platform with SCs on Ubuntu 20.04 LTS.\nFor scripting and developing our SCs, we utilize solidity programming languages. The solutions to our optimal contract design are directly encoded into SCs that run in a particular time slot to extract the user types for their corresponding payouts. In this experiment, we set up decentralized oracle nodes to decentralize the execution of our contract and incentive scheme using chainlink technology [25]. However, due to the expense of deploying transactions on-chain, we confine the majority of transaction executions to off-chain to save resources. Furthermore, when applied with chainlink technology, our approach provides legacy compatibility with the existing blockchain and reduces gas costs.\nWe set the user capability and effort levels to [0, 1, 2, 3, 4], which maps to [2, 4, 6, 8, 10] in the category options to determine the user reward amounts. We consider 500 heterogeneous and 50 full node users in the experiment in the blockchain network. Other predefined parameters include: v\u0304 = 100, w\u0304 = 1000, {cEi(t), cBi(t), cSi(t), cPi(t), cmi(t)} = [1, 10], N = 1000/t, Bi(t) = 50MBit/s."
        },
        {
            "heading": "B. Performance Metrics and Experiment Benchmarks",
            "text": "In this part, we present the preliminary elements for Section V-C, such as the selection of experiment results and benchmarks. The selection of experiment results describes how we chose the various outcomes for this discussion, and the benchmarks describe the measurement metrics utilized to obtain these results.\n1) Selection of Experiment Results: In this experiment, we present the following evaluation guidelines to examine our proposed diversified incentive mechanism: contract analysis, EN\u2019s utility analysis, users\u2019 payoff analysis, user satisfaction level, user participation rate analysis, and security analysis. The contract analysis expands the EN\u2019s utility and the user\u2019s payoff based on contract design, offering a thorough overview of contracts under our suggested incentive mechanism. In Section V-B2, we give benchmarks for the analysis of our contract design.\nBased on the benchmark in Section V-B3, our system performance findings show the EN\u2019s utility and user payoff, the user satisfaction level, the user participation rate, and the security analysis. To obtain these results, we simulate and record the effects on the EN\u2019s utility and the user\u2019s payment, as indicated in Sections V-C2 and V-C3. Second, we compute the satisfaction levels of the various user incentive levels using (10). The user participation rate demonstrates the efficiency with which our proposed method can engage users. Finally, Section V-C6 shows the security analysis of our proposed incentive scheme.\n2) Benchmark 1: This benchmark includes the blockchain network\u2019s (EN\u2019s) utility, the user\u2019s payoff, and social welfare analysis considering the various contract design scenarios. We list the benchmarks as follows,\n\u2022 No contract: We propose a no contract scenario in which users are not offered any contracts, which essentially characterizes the existing predominant system. \u2022 Moral hazard only: This benchmark comprises the problem formulation and solution from (20).\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n10\n\u2022 Adverse selection only: This benchmark comprises the problem formulation and solution from (21). \u2022 Both moral hazard and adverse selection: This benchmark comprises the problem formulation and solution from (22).\n3) Benchmark 2: This benchmark comprises Celo, Vipnode, and Pocket Network implementations.\n\u2022 Celo: the developers in [26] created Celo, which is a protocol that supports gateway fees4. These fees incentivize node operators to run a full node that is not a validator and acts as a \u201cgateway,\u201d i.e., answer requests and forward transactions on behalf of light clients. However, Celo does not consider the EN\u2019s utility optimization, user capabilities, or efforts. \u2022 Vipnode: Vipnode provides an economic incentive for running Ethereum full nodes but fails to consider the user\u2019s revenue-generating capability and EN\u2019s utility introduced in our work 5. \u2022 Pocket Network: Pocket Network is an independent blockchain designed for specific applications that use an adapted version of the Tendermint consensus engine and incentivize users with a native cryptocurrency. However, to optimize the EN\u2019s utility, the pocket network requires more diversified incentives6.\nWe also use various metrics to evaluate our system\u2019s performance, including the EN\u2019s utility, user payoff, user satisfaction levels, user participation rate, and security analysis."
        },
        {
            "heading": "C. Results and Analysis",
            "text": "1) Contract Analysis: In this experiment, we investigate the various contract designs to validate the best option by examining EN\u2019s utility, user\u2019s payoff, and overall social welfare, as depicted in Figs. 3a, 3b, and 3c, respectively. Fig. 3a illustrates that the EN\u2019s utility rises as the number of users increases due to the accumulated revenue generated from multiple users over time. Our analysis shows that the contract that only addresses moral hazard results in the highest utility, followed by the contract that addresses both moral hazard and adverse selection, adverse selection only, and no contract in that order. For 100 users, all contract designs show similar and significantly low utilities. However, as the number of users increases to 400, the contract that addresses moral hazard achieves an average EN utility of 15% \u2212 57% higher than the contracts that consider both moral hazard and adverse selection, adverse selection only, and no contract selection. This is expected as the EN has full knowledge of the users\u2019 revenue-generating capabilities and efforts in both extreme cases. Notably, the EN\u2019s utility decreases under no contract, leading to more leverage for users.\nFrom Fig. 3b, we can see that the users\u2019 payoff is high for the contract considering both moral hazard and adverse selection, followed by that for adverse selection only, moral hazard only, and no contract selection. Specifically, with 400\n4Celo implementation can be found at: https://docs.celo.org/ 5Vipnode implementation can be found at: https://vipnode.org/ 6For pocket network implementation: https://www.edenblock.com/\nusers, the contract for both moral hazard and adverse selection scenario generates 25% more payoff than that for adverse selection only, 85% more payoff than that for moral hazard only, and nearly 100% more average payoff than the case with no contract selection. This observation can be attributed to users putting in extra effort in the case of moral hazard to compensate for the expenses they incur in adverse selection. Offering moral hazard only to users allows the EN to extract as much profit from users as possible. On the contrary, adverse selection only gives users the leverage to demand reasonable charges from the EN by exposing their revenue-generating capabilities. No contract selection yields the worst outcome because the EN is unaware of the users\u2019 capabilities or efforts, which does not improve our goal of sustaining blockchain networks through incentives. We mention that the analysis governing the EN\u2019s utility and users\u2019 payoff trends applies to the social welfare shown in Fig. 3c.\nHence, we can conclude from the results that the EN will always prefer a contract considering moral hazard only, while users gravitate towards a contract considering both moral hazard and adverse selection. Nonetheless, considering both moral hazard and adverse selection gives the best results when maximizing the EN\u2019s utility and the payoff for its users.\n2) EN\u2019s Utility Analysis: Fig. 3d compares the performance of our proposed mechanism design to that of Celo, Vipnode, and Pocket Network in terms of the EN\u2019s utility. The EN\u2019s utility is an increasing function of the total execution time, which is intuitive due to the cumulative payments accrued over time. At a simulation time of 6 hours, our proposed scheme achieves approximately 48.48%\u221254.52% increase in the EN\u2019s utility compared with Celo, Vipnode, and Pocket Network.\nAs shown in Fig. 3d, offering a contract that addresses both moral hazard and adverse selection in addition to the incentive diversification produces a higher EN\u2019s utility. The reasons for this trend of the results consist of the following: (i) as shown in our contract analysis, we present the optimal strategies for the EN to maximize its utility, (ii) as we have shown in Section III, our contract design extracts the user revenue-generating capabilities and efforts for appropriate pricing, which improves the EN\u2019s utility, (iii) our reward diversification provides the EN with alternatives to reward users without exhausting its revenue transactions. These factors are, however, absent from the incentive mechanisms proposed by Celo, Vipnode, and Pocket Network. As the EN has increased utility, we can infer that our proposed mechanism is a promising approach for enhancing the EN\u2019s utility.\n3) Users\u2019 Payoff Analysis: This part of the experiment compares the users\u2019 payoff under our proposed mechanism, Celo, Vipnode, and Pocket Network, as shown in Fig. 3e. The users\u2019 payoff increases as the total execution time increases, with our proposed scheme achieving up to 38.46% \u2212 62.5% cost reduction compared with Celo, Vipnode, and Pocket Network. From Section II-C2, the users\u2019 payoff is a function of their revenue-generating capability and efforts. That is, a high revenue-generating capability gives higher revenue to users, and more costly resources are required, which provides users with higher compensation from the EN. This approach offers a more efficient mechanism for users to identify and extract\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n11\nrevenues from EN without indiscriminately increasing their costs. The users\u2019 payoff is high under our proposed system, followed by Pocket Network, Celo, and Vipnode, indicating that our proposed mechanism performs better.\nSimilarly, in Fig. 3e, the improved performance of our proposed mechanism can be attributed to the accurate representation of each user for proper pricing and compensation. Expressly, users are adequately charged based on their ability to generate revenue and compensated for their efforts contributed towards the EN. Unlike the benchmarks in Section V-B3, our proposed scheme provides a lucid incentive optimization scheme that can accurately represent heterogeneous users on the system. Celo, Vipnode, and Pocket Network do not fully incentivize users because these approaches fail to consider the users\u2019 capabilities. Since our proposed mechanism offers increased user utility, we can conclude that our proposed scheme enhances users\u2019 payoff compared with Celo, Vipnode, and Pocket Network.\n4) User Satisfaction Level: In Fig. 3f, we compare the QoS satisfaction of users in our proposed mechanism compared with that in Celo, Vipnode, and Pocket Network. The QoS satisfaction determines how satisfied the users are with their payoff based on the reward amounts presented in (27)-(30). Fig. 3f describes the QoS level based on the reward amount using benchmarks from Section V-B3.\nFrom Fig. 3f, our proposed mechanism achieves 72% more QoS satisfaction than Celo, Vipnode, and Pocket Network. This trend results from the various user types characterized by our contracts. On the one hand, our contract designs ensure that every user is well-represented, which makes it more likely that they will get satisfactory rewards. Accepting the contract items designed for each user guarantees that users are reasonably charged and compensated for services. Additionally, offering a variety of incentives provides users with flexibility in their payoff utilization, which can improve\nthe QoS levels of various users. Specifically, users can trade their voting weight rewards for money to subsidize their costs at any time.\nOn the other hand, Celo, Vipnode, and Pocket Network do not consider user characterizations and incentive diversification in their implementations. Based on these improvements introduced by our proposed mechanism, users are incentivized to contribute significant resources towards the EN. Therefore, our proposed mechanism offers better QoS satisfaction than other implementations.\n5) User Participation Rate Analysis: In this experiment, we evaluate the user participation rate based on the duration and the number of users engaged on the platform using our proposed mechanism, Celo, Vipnode, and Pocket Network. Figs. 3g and 3h show the user participation rate based on the reward amount and experiment duration. From Figs. 3g and 3h, the user participation rate for our proposed system increases as the experiment time. Our proposed scheme achieves up to 68% more user participation than Celo, Vipnode, and Pocket Network have recorded over time.\nBased on the results shown in Sections V-C3 and V-C4, we can deduce that our proposed mechanism achieves a high user participation rate due to the enhanced users\u2019 payoff and the increased user QoS satisfaction levels. The findings also suggest that the IR and IC constraints can give users a non-negative payoff for any contract and a high payoff for selecting a contract designed for its type. Additionally, the diversification of user incentives attracts more heterogeneous users to participate on the platform. As a result, users are more motivated to contribute resources towards the EN than other implementations.\n6) Security Analysis: In this part of the experiment evaluation, we present the security analysis of our proposed mechanism to support the results from Sections V-C2 to V-C5. We consider two main concerns: 1) the possibility of storing\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\n12\nexcess incentives by users on the platform; and 2) incentive centralization and 51% attacks by specific highly skilled users on the platform. First, we use \u201cburning\u201d to keep track of how many incentives (rewards) each user on the system has. Burning is a security measure that economically disincentivizes undesirable behavior. Burning is the process that diminishes the overall supply of incentives from an economic viewpoint. The objective of network sustainability is for the circulating supply to be deflationary or with as minimal deflation as feasible via the following burning mechanisms:\n1) User\u2019s tokens can be burned through decentralized autonomous organization (DAO) proposals. 2) High-capability users overuse their stake and incentives to increase block approvals. 3) Nodes do not process honest requests from users due to transaction frontrunning and reordering.\nSecondly, our proposed mechanism reduces the risk of incentive centralization and 51% attacks by running contracts on decentralized nodes. Expressly, no single node or the EN has exclusive access to executing our incentive mechanism and dispatching rewards, which prevents collusion or improper behaviors on the network. By mitigating these security challenges, our improved diversified incentive mechanism obtains a better user satisfaction and participation rate, as shown in Sections V-C4 and V-C5."
        },
        {
            "heading": "VI. CONCLUSION",
            "text": "In this work, we have proposed a solution to economically encourage user engagement in the maintenance and expansion of blockchain networks, which are essential for the success of Web 3.0 and the Metaverse. Full nodes, which store and validate all transactions in a blockchain, are necessary for the decentralization and reliability of the network. However, running a full node can be costly in terms of resources and expenses. To address this issue, we have developed an incentive mechanism using contract-theoretic methods that addresses the information asymmetry (e.g., users\u2019 revenuegenerating capabilities and efforts) between users and the network. To optimize the blockchain network\u2019s utility for funding incentives, we offered diverse incentives to users based on their revenue-generating capabilities and efforts. The extensive experiments show that our proposed mechanism increases the blockchain network\u2019s utility by 48.48%\u221254.52% and reduces the users\u2019 cost by 38.46%\u221262.5% compared with state-of-the-art implementations, such as Celo, Vipnode, and Pocket Network."
        }
    ],
    "title": "Promoting the Sustainability of Blockchain in Web 3.0 and the Metaverse Through Diversified Incentive Mechanism Design",
    "year": 2023
}