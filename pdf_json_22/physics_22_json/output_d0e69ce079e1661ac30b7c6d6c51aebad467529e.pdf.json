{
    "abstractText": "We construct quantum algorithms to compute the solution and/or physical observables of nonlinear ordinary differential equations (ODEs) and nonlinear Hamilton-Jacobi equations (HJE) via linear representations or exact mappings between nonlinear ODEs/HJE and linear partial differential equations (the Liouville equation and the Koopman-von Neumann equation). The connection between the linear representations and the original nonlinear system is established through the Dirac delta function or the level set mechanism. We compare the quantum linear systems algorithms based methods and the quantum simulation methods arising from different numerical approximations, including the finite difference discretisations and the Fourier spectral discretisations for the two different linear representations, with the result showing that the quantum simulation methods usually give the best performance in time complexity. We also propose the Schr\u00f6dinger framework to solve the Liouville equation for the HJE with the Hamiltonian formulation of classical mechanics, since it can be recast as the semiclassical limit of the Wigner transform of the Schr\u00f6dinger equation. Comparsion between the Schr\u00f6dinger and the Liouville framework will also be made.",
    "authors": [
        {
            "affiliations": [],
            "name": "Shi Jin"
        },
        {
            "affiliations": [],
            "name": "Nana Liu"
        },
        {
            "affiliations": [],
            "name": "Yue Yu"
        }
    ],
    "id": "SP:a938e4e2674b4c0114b794adc1ccc5708c1c25cc",
    "references": [
        {
            "authors": [
                "D. Aharonov",
                "V. Jones",
                "Z. Landau"
            ],
            "title": "A polynomial quantum algorithm for approximating the jones polynomial",
            "venue": "Algorithmica, 55(3):395\u2013421",
            "year": 2009
        },
        {
            "authors": [
                "K. Alexander",
                "R. Jeffrey"
            ],
            "title": "The Order of Accuracy of Quadrature Formulae for Periodic Functions",
            "venue": "pages 155\u2013159. Birkh\u00e4user Boston, Boston",
            "year": 2009
        },
        {
            "authors": [
                "A. Ambainis"
            ],
            "title": "Variable time amplitude amplification and quantum algorithms for linear algebra problems",
            "venue": "LIPIcs. Leibniz Int. Proc. Inform., 14:636\u2013647",
            "year": 2012
        },
        {
            "authors": [
                "W. Bao",
                "S. Jin",
                "P.A. Markowich"
            ],
            "title": "On time-splitting spectral approximations for the Schr\u00f6dinger equation in the semiclassical regime",
            "venue": "J. Comput. Phys., 175:487\u2013524",
            "year": 2002
        },
        {
            "authors": [
                "D.W. Berry"
            ],
            "title": "High-order quantum algorithm for solving linear differential equations",
            "venue": "J. Phys. A: Math. Theor., 47(10):105301, 17 pp.",
            "year": 2014
        },
        {
            "authors": [
                "D.W. Berry",
                "A.M. Childs",
                "R. Kothari"
            ],
            "title": "Hamiltonian simulation with nearly optimal dependence on all parameters",
            "venue": "2015 IEEE 56th Annual Symposium on Foundations of Computer Science, pages 792\u2013809",
            "year": 2015
        },
        {
            "authors": [
                "D.W. Berry",
                "A.M. Childs",
                "A. Ostrander",
                "G. Wang"
            ],
            "title": "Quantum algorithm for linear differential equations with exponentially improved dependence on precision",
            "venue": "Comm. Math. Phys., 356(3):1057\u20131081",
            "year": 2017
        },
        {
            "authors": [
                "A.V. Bobyl\u00ebv"
            ],
            "title": "On the Chapman-Enskog and Grad methods for solving the Boltzmann equation",
            "venue": "Dokl. Akad. Nauk SSSR, 262(1):71\u201375",
            "year": 1982
        },
        {
            "authors": [
                "Y.I. Bogdanov",
                "N.A. Bogdanova"
            ],
            "title": "The study of classical dynamical systems using quantum theory",
            "venue": "Proc. SPIE, International Conference on Micro- and Nano-Electronics, volume 9440",
            "year": 2014
        },
        {
            "authors": [
                "Y.I. Bogdanov",
                "N.A. Bogdanova",
                "D.V. Fastovets",
                "V.F. Lukichev"
            ],
            "title": "Quantum approach to the dynamical systems modeling",
            "venue": "Proc. SPIE, International Conference on Micro- and Nano-Electronics, volume 11022",
            "year": 2019
        },
        {
            "authors": [
                "Y. Cao",
                "A. Papageorgiou",
                "I. Petras"
            ],
            "title": "et al",
            "venue": "Quantum algorithm and circuit design solving the Poisson equation. New J. Phys., 15:013021",
            "year": 2013
        },
        {
            "authors": [
                "L. Caroline",
                "L. Christian"
            ],
            "title": "Computing quantum dynamics in the semiclassical regime",
            "venue": "Acta Numer., 29:229\u2013401",
            "year": 2020
        },
        {
            "authors": [
                "S. Chakraborty",
                "A. Gily\u00e9n",
                "S. Jeffery"
            ],
            "title": "The power of block-encoded matrix powers: improved regression techniques via faster Hamiltonian simulation",
            "venue": "46th International Colloquium on Automata, Languages, and Programming ",
            "year": 2019
        },
        {
            "authors": [
                "A.M. Childs",
                "R. Kothari",
                "R.D. Somma"
            ],
            "title": "Quantum algorithm for systems of linear equations with exponentially improved dependence on precision",
            "venue": "SIAM J. Comput., 46(6):1920\u2013 1950",
            "year": 2017
        },
        {
            "authors": [
                "A.M. Childs",
                "J.P. Liu",
                "A. Ostrander"
            ],
            "title": "High-precision quantum algorithms for partial differential equations",
            "venue": "Quantum, 5:574",
            "year": 2021
        },
        {
            "authors": [
                "A.M. Childs",
                "Y. Su",
                "M.C. Tran",
                "N. Wiebe",
                "S. Zhu"
            ],
            "title": "Theory of trotter error with commutator scaling",
            "venue": "Phys. Rev. X,",
            "year": 2021
        },
        {
            "authors": [
                "A.W. Childs",
                "T. Li",
                "J. Liu",
                "C. Wang",
                "R. Zhang"
            ],
            "title": "Quantum algorithms for sampling log-concave distributions and estimating normalizing constants",
            "venue": "arXiv:2210.06539",
            "year": 2022
        },
        {
            "authors": [
                "A.W. Childs",
                "J. Liu"
            ],
            "title": "Quantum spectral methods for differential equations",
            "venue": "Comm. Math. Phys., 375(2):1427\u20131457",
            "year": 2020
        },
        {
            "authors": [
                "B.D. Clader",
                "B.C. Jacobs",
                "C.R. Sprouse"
            ],
            "title": "Preconditioned quantum linear system algorithm",
            "venue": "Phys. Rev. Lett.,",
            "year": 2013
        },
        {
            "authors": [
                "P.C.S. Costa",
                "D. An",
                "Y.A. Sanders",
                "Y. Su",
                "R. Babbush",
                "D.W. Berry"
            ],
            "title": "Optimal scaling quantum linear systems solver via discrete adiabatic theorem",
            "venue": "arXiv:2111.08152",
            "year": 2021
        },
        {
            "authors": [
                "P.C.S. Costa",
                "S. Jordan",
                "A. Ostrander"
            ],
            "title": "Quantum algorithm for simulating the wave equation",
            "venue": "Phys. Rev. A, 99:012323, 22 pp.",
            "year": 2019
        },
        {
            "authors": [
                "D. Deutsch",
                "R. Jozsa"
            ],
            "title": "Rapid solution of problems by quantum computation",
            "venue": "Proc. R. Soc. London, Ser. A, 439:553",
            "year": 1992
        },
        {
            "authors": [
                "I.Y. Dodin",
                "E.A. Startsev"
            ],
            "title": "On applications of quantum computing to plasma simulations",
            "venue": "Phys. Plasmas, 28:092101",
            "year": 2021
        },
        {
            "authors": [
                "A. Dong",
                "J. Liu",
                "D. Wang",
                "Q. Zhao"
            ],
            "title": "A theory of quantum differential equation solvers: limitations and fast-forwarding",
            "venue": "arXiv:2211.05246",
            "year": 2022
        },
        {
            "authors": [
                "Y. Dong",
                "L. Lin",
                "Y. Tong"
            ],
            "title": "Ground-state preparation and energy estimation on early fault-tolerant quantum computers via quantum eigenvalue transformation of unitary matrices",
            "venue": "arXiv:2204.05955",
            "year": 2022
        },
        {
            "authors": [
                "A. Engel",
                "G. Smith",
                "S.E. Parker"
            ],
            "title": "Quantum algorithm for the Vlasov equation",
            "venue": "Phys. Rev. A,",
            "year": 2019
        },
        {
            "authors": [
                "A. Engel",
                "G. Smith",
                "S.E. Parker"
            ],
            "title": "Linear embedding of nonlinear dynamical systems and prospects for efficient quantum algorithms",
            "venue": "Phys. Plasmas, 28:062305",
            "year": 2021
        },
        {
            "authors": [
                "Di Fang",
                "Lin Lin",
                "Yu Tong"
            ],
            "title": "Time-marching based quantum solvers for time-dependent linear differential equations",
            "venue": "arXiv preprint arXiv:2208.06941,",
            "year": 2022
        },
        {
            "authors": [
                "P. G\u00e9rard",
                "P.A. Markowich",
                "N.J. Mauser",
                "F. Poupaud"
            ],
            "title": "Homogenization limits and Wigner transforms",
            "venue": "Comm. Pure Appl. Math., 50(4):323\u2013379",
            "year": 1997
        },
        {
            "authors": [
                "A. Gily\u00e9n",
                "Y. Su",
                "G. Low",
                "N. Wiebe"
            ],
            "title": "Quantum singular value transformation and beyond: exponential improvements for quantum matrix arithmetics",
            "venue": "Proceedings of the 51st Annual ACM SIGACT Symposium on Theory of Computing, pages 193\u2013204. STOC",
            "year": 2019
        },
        {
            "authors": [
                "F. Golse",
                "S. Jin",
                "T. Paul"
            ],
            "title": "On the convergence of time splitting methods for quantum dynamics in the semiclassical regime",
            "venue": "Found. Comput. Math., 21(3):613\u2013647",
            "year": 2021
        },
        {
            "authors": [
                "Harold Grad"
            ],
            "title": "Asymptotic theory of the Boltzmann equation",
            "venue": "Phys. Fluids,",
            "year": 1963
        },
        {
            "authors": [
                "A.W. Harrow",
                "A. Hassidim",
                "S. Lloyd"
            ],
            "title": "Quantum algorithm for linear systems of equations",
            "venue": "Phys. Rev. Lett., 103(15):150502, 4 pp.",
            "year": 2009
        },
        {
            "authors": [
                "A.W. Harrow",
                "A.Y. Wei"
            ],
            "title": "Adaptive quantum simulated annealing for Bayesian inference and estimating partition functions",
            "venue": "Proceedings of the 2020 ACM-SIAM Symposium on Discrete Algorithms, pages 193\u2013212. SIAM, Philadelphia, PA",
            "year": 2020
        },
        {
            "authors": [
                "R. Horn",
                "C.R. Johnson"
            ],
            "title": "Matrix Analysis",
            "venue": "Second edition. Cambridge University Press, Cambridge",
            "year": 2013
        },
        {
            "authors": [
                "S. Jin"
            ],
            "title": "Asymptotic-preserving schemes for multiscale physical problems",
            "venue": "Acta Numer., 31:415\u2013 489",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "X. Li",
                "N. Liu"
            ],
            "title": "Quantum simulation in the semi-classical regime",
            "venue": "Quantum, 6:739",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "N. Liu"
            ],
            "title": "Quantum algorithms for computing observables of nonlinear partial differential equations",
            "venue": "arXiv:2202.07834",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "N. Liu",
                "Y. Yu"
            ],
            "title": "Quantum simulation of partial differential equations via Schr\u00f6dingerisation",
            "venue": "arXiv:2212.13969",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "N. Liu",
                "Y. Yu"
            ],
            "title": "Quantum simulation of partial differential equations via Schr\u00f6dingerisation: technical details",
            "venue": "arXiv:2212.14703",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "N. Liu",
                "Y. Yu"
            ],
            "title": "Time complexity analysis of quantum difference methods for linear high dimensional and multiscale partial differential equations",
            "venue": "J. Comput. Phys., 471:111641",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "P. Markowich",
                "C. Sparber"
            ],
            "title": "Mathematical and computational methods for semiclassical Schr\u00f6dinger equations",
            "venue": "Acta Numer., 20:121\u2013209",
            "year": 2011
        },
        {
            "authors": [
                "S. Jin",
                "S. Osher"
            ],
            "title": "A level set method for the computation of multivalued solutions to quasilinear hyperbolic PDEs and Hamilton-Jacobi equations",
            "venue": "Commun. Math. Sci., 1(3):575\u2013591",
            "year": 2003
        },
        {
            "authors": [
                "I. Joseph"
            ],
            "title": "Koopman\u2013von Neumann approach to quantum simulation of nonlinear classical dynamics",
            "venue": "Phys. Rev. Research, 2(4):043102",
            "year": 2020
        },
        {
            "authors": [
                "I. Kassal",
                "S.P. Jordan",
                "P.J. Love",
                "M. Mohseni",
                "A. Aspuru-Guzik"
            ],
            "title": "Polynomial-time quantum algorithm for the simulation of chemical dynamics",
            "venue": "Proceedings of the National Academy of Sciences, 105(48):18681\u201318686",
            "year": 2008
        },
        {
            "authors": [
                "H. Krovi"
            ],
            "title": "Improved quantum algorithms for linear and nonlinear differential equations",
            "venue": "arXiv:2202.01054",
            "year": 2022
        },
        {
            "authors": [
                "C. Lasser",
                "C. Lubich"
            ],
            "title": "Computing quantum dynamics in the semiclassical regime",
            "venue": "Acta Numer., pages 229\u2013401",
            "year": 2020
        },
        {
            "authors": [
                "R.J. LeVeque"
            ],
            "title": "Finite Volume Methods for Hyperbolic Problems",
            "venue": "Cambridge University Press, Cambridge",
            "year": 2002
        },
        {
            "authors": [
                "C.D. Levermore"
            ],
            "title": "Moment closure hierarchies for kinetic theories",
            "venue": "J. Statist. Phys., 83(5- 6):1021\u20131065",
            "year": 1996
        },
        {
            "authors": [
                "S.K. Leyton",
                "T.J. Osborne"
            ],
            "title": "A quantum algorithm to solve nonlinear differential equations",
            "venue": "arXiv:0812.4423",
            "year": 2008
        },
        {
            "authors": [
                "L. Lin"
            ],
            "title": "Lecture notes on quantum algorithms for scientific computation",
            "venue": "arXiv:2201.08309",
            "year": 2022
        },
        {
            "authors": [
                "L. Lin",
                "Y. Tong"
            ],
            "title": "Optimal polynomial based quantum eigenstate filtering with application to solving quantum linear systems",
            "venue": "Quantum Inf. Process., 4:361",
            "year": 2020
        },
        {
            "authors": [
                "L. Lin",
                "Y. Tong"
            ],
            "title": "Heisenberg-limited ground state energy estimation for early fault-tolerant quantum computers",
            "venue": "arXiv:2102.11340v2",
            "year": 2022
        },
        {
            "authors": [
                "Y. Lin",
                "R.B. Lowrie",
                "D. Aslangil",
                "Y. Suba\u015fi",
                "A.T. Sornborger"
            ],
            "title": "Koopman von Neumann mechanics and the Koopman representation: A perspective on solving nonlinear dynamical systems with quantum computers",
            "venue": "arXiv:2202.02188v2",
            "year": 2022
        },
        {
            "authors": [
                "N. Linden",
                "A. Montanaro",
                "C. Shao"
            ],
            "title": "Quantum vs",
            "venue": "classical algorithms for solving the heat equation. arXiv:2004.06516",
            "year": 2020
        },
        {
            "authors": [
                "P.-L. Lions",
                "T. Paul"
            ],
            "title": "Sur les mesures de Wigner",
            "venue": "Rev. Mat. Iberoamericana, 9(3):553\u2013618",
            "year": 1993
        },
        {
            "authors": [
                "R.J. Lipton",
                "K.W. Regan"
            ],
            "title": "Quantum Algorithm via Linear Algebra",
            "venue": "Cambridge, Massachusetts",
            "year": 2010
        },
        {
            "authors": [
                "J. Liu",
                "H.\u00d8. Kolden",
                "H.K. Krovi",
                "N.F. Loureiro",
                "K. Trivisa",
                "A.M. Childs"
            ],
            "title": "Efficient quantum algorithm for dissipative nonlinear differential equations",
            "venue": "Proc. Natl. Acad. Sci. U. S. A., 118(35)",
            "year": 2021
        },
        {
            "authors": [
                "N. Liu",
                "T.F. Demarie",
                "S. Tan",
                "L. Aolita",
                "J.F. Fitzsimons"
            ],
            "title": "Client-friendly continuousvariable blind and verifiable quantum computing",
            "venue": "Phys. Rev. A, 100:062309, 10 pp.",
            "year": 2019
        },
        {
            "authors": [
                "N. Liu",
                "J. Thompson",
                "C. Weedbrook",
                "S. Lloyd",
                "V. Vedral",
                "M. Gu",
                "K. Modi"
            ],
            "title": "Power of one qumode for quantum computation",
            "venue": "Phys. Rev. A, 93:052304, 10 pp.",
            "year": 2016
        },
        {
            "authors": [
                "S. Lloyd",
                "G.D. Palma",
                "C. Gokler",
                "B. Kiani",
                "Z. Liu",
                "M. Marvian",
                "F. Tennie",
                "T. Palmer"
            ],
            "title": "Quantum algorithm for nonlinear differential equations",
            "venue": "arXiv:2011.06571",
            "year": 2020
        },
        {
            "authors": [
                "M.A. Nielsen",
                "I.L. Chuang"
            ],
            "title": "Quantum Computation and Quantum Information",
            "venue": "Cambridge, New York",
            "year": 2010
        },
        {
            "authors": [
                "L. Qi"
            ],
            "title": "Some simple estimates for singular values of a matrix",
            "venue": "Linear Algebra Appl., 56:105\u2013119",
            "year": 1984
        },
        {
            "authors": [
                "P.A. Raviart"
            ],
            "title": "An analysis of particle methods",
            "venue": "Numerical Methods in Fluid Dynamics, pages 243\u2013324. Springer, Berlin",
            "year": 1985
        },
        {
            "authors": [
                "P.W. Shor"
            ],
            "title": "Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer",
            "venue": "SIAM J. Comput., 26:1484",
            "year": 1997
        },
        {
            "authors": [
                "Y. Subasi",
                "R.D. Somma"
            ],
            "title": "Quantum algorithms for systems of linear equations inspired by adiabatic quantum computing",
            "venue": "Phys. Rev. Lett., 122:060504",
            "year": 2019
        },
        {
            "authors": [
                "C. Xue",
                "Y. Wu",
                "G. Guo"
            ],
            "title": "Quantum homotopy perturbation method for nonlinear dissipative ordinary differential equations",
            "venue": "New J. Phys., 23:No. 123035, 20 pp",
            "year": 2021
        }
    ],
    "sections": [
        {
            "text": "We construct quantum algorithms to compute the solution and/or physical observables of nonlinear ordinary differential equations (ODEs) and nonlinear Hamilton-Jacobi equations (HJE) via linear representations or exact mappings between nonlinear ODEs/HJE and linear partial differential equations (the Liouville equation and the Koopman-von Neumann equation). The connection between the linear representations and the original nonlinear system is established through the Dirac delta function or the level set mechanism. We compare the quantum linear systems algorithms based methods and the quantum simulation methods arising from different numerical approximations, including the finite difference discretisations and the Fourier spectral discretisations for the two different linear representations, with the result showing that the quantum simulation methods usually give the best performance in time complexity. We also propose the Schro\u0308dinger framework to solve the Liouville equation for the HJE with the Hamiltonian formulation of classical mechanics, since it can be recast as the semiclassical limit of the Wigner transform of the Schro\u0308dinger equation. Comparsion between the Schro\u0308dinger and the Liouville framework will also be made.\nKeywords: Linear representation methods; Liouville representation; Koopman-von Neumann\nrepresentation; Semiclassical Schro\u0308dinger equation; Quantum linear systems algorithms.\n\u2217shijin-m@sjtu.edu.cn \u2020nana.liu@quantumlah.org \u2021Corresponding author. \u00a7terenceyuyue@sjtu.edu.cn\nar X\niv :2\n20 9.\n08 47\n8v 2\nContents"
        },
        {
            "heading": "1 Introduction 3",
            "text": ""
        },
        {
            "heading": "2 Review of quantum nonlinear differential equation solvers 6",
            "text": ""
        },
        {
            "heading": "3 Linear representation methods for nonlinear ODEs: Liouville vs. KvN repre-",
            "text": "sentations 7 3.1 Linear representation methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n3.1.1 The Liouville representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 3.1.2 The Koopman-von Neumann representation . . . . . . . . . . . . . . . . . . . 9 3.1.3 Computation of the quantity of interest and error analysis . . . . . . . . . . . 11\n3.2 Finite difference discretisation for the Liouville representation . . . . . . . . . . . . . 14\n3.2.1 The QLSA for the finite difference discretisation . . . . . . . . . . . . . . . . 14 3.2.2 The algorithm for the computation of the observable . . . . . . . . . . . . . . 18 3.2.3 The gate complexity of computing the observable . . . . . . . . . . . . . . . . 21\n3.3 Finite difference discretisation for the KvN representation . . . . . . . . . . . . . . . 23\n3.3.1 The QLSA for the finite difference discretisation . . . . . . . . . . . . . . . . 23 3.3.2 The gate complexity of computing the observable . . . . . . . . . . . . . . . . 24\n3.4 Spectral discretisation for the KvN representation . . . . . . . . . . . . . . . . . . . 25\n3.4.1 The notations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 3.4.2 The QLSA for the spectral discretisation . . . . . . . . . . . . . . . . . . . . 27 3.4.3 The quantum simulation for the spectral discretisation . . . . . . . . . . . . . 30"
        },
        {
            "heading": "4 Liouville representation for nonlinear Hamilton-Jacobi PDEs: finite difference",
            "text": "vs. spectral approximations 32 4.1 Finite difference discretisation for the Liouville equation . . . . . . . . . . . . . . . . 33\n4.1.1 The QLSA for the finite difference discretisation . . . . . . . . . . . . . . . . 33 4.1.2 The computation of the physical observables . . . . . . . . . . . . . . . . . . 34\n4.2 Spectral discretisation for the Liouville equation . . . . . . . . . . . . . . . . . . . . 35\n4.2.1 The QLSA for the spectral discretisation . . . . . . . . . . . . . . . . . . . . 35 4.2.2 The quantum simulation for the spectral discretisation . . . . . . . . . . . . . 37"
        },
        {
            "heading": "5 The Schro\u0308dinger framework 39",
            "text": "5.1 The semiclassical approximation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 5.2 Quantum simulations for the spectral discretisation . . . . . . . . . . . . . . . . . . . 41\n5.2.1 The time-splitting spectral approximations . . . . . . . . . . . . . . . . . . . 41 5.2.2 The quantum simulation of the Schro\u0308dinger equation . . . . . . . . . . . . . . 42 5.2.3 Gate counts for the computation of wave functions . . . . . . . . . . . . . . . 44\n5.3 The QLSA for the spectral discretisation . . . . . . . . . . . . . . . . . . . . . . . . . 45 5.4 The computation of physical observables . . . . . . . . . . . . . . . . . . . . . . . . . 46\n5.4.1 The expectation of observables for the quantum simulation . . . . . . . . . . 46\n5.4.2 The expectation of observables for the QLSA . . . . . . . . . . . . . . . . . . 47\n5.5 Gate complexity for the computation of the observables . . . . . . . . . . . . . . . . 48\n5.5.1 The gate counts of the quantum simulation method . . . . . . . . . . . . . . 48 5.5.2 The gate counts of the quantum linear systems algorithm . . . . . . . . . . . 49"
        },
        {
            "heading": "6 Linear representation approach for scalar nonlinear hyperbolic PDEs 49",
            "text": "6.1 The Liouville representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 6.2 The KvN representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50"
        },
        {
            "heading": "7 Summary and discussion 51",
            "text": "Appendix 54"
        },
        {
            "heading": "A Spectral discretisation for the Liouville representation of nonlinear ODEs 54",
            "text": "A.1 The Trotter based spectral discretisation . . . . . . . . . . . . . . . . . . . . . . . . . 54\nA.1.1 The QLSA for the spectral discretisation . . . . . . . . . . . . . . . . . . . . 56 A.1.2 Quantum simulation for the spectral discretisation . . . . . . . . . . . . . . . 57"
        },
        {
            "heading": "1 Introduction",
            "text": "Some of the most important problems in physics, chemistry, engineering, biology and finance\nare modelled by nonlinear ordinary and partial differential equations (ODEs and PDEs). Prominent examples include climate modelling, aircraft design, molecular dynamics and drug design, deep learning neural networks and mean-field games in mathematical finance. Among the most important examples of nonlinear ODEs include Newton\u2019s equations in molecular dynamics, while examples of nonlinear PDEs include the Euler and Navier-Stokes equations in fluid dynamics, the Boltzmann equations in rarified gas, and the Hamilton-Jacobi equations in geometric optics, front propagation, mean-field games and optimal control. In spite of tremendous progresses in developing classical algorithms for solving these equations, there remain major challenges that are difficult to be handled by classical algorithms, for examples the curse-of-dimensionality, multiple scales, strong nonlinearity, and large numbers of degree of freedoms. On the other hand, quantum algorithms, due to their potential polynomial and even exponential advantages, could be the game changer to deal with some of these difficulties. However, since quantum algorithms are based on the principle of quantum mechanics, which is fundamentally linear (as far as we know), so far the development of quantum algorithms have been mostly confined to linear problems, with the most notable in linear algebra [3,14,20,22,28,30,33,51,57,59,60,62,65,66]. For linear ODEs and PDEs, once they are numerically discretised, they became linear algebra problems which can then be handled by quantum linear algebra solvers (e.g. [11, 15,19,21,24,26,55]).\nSince most natural phenomena are nonlinear, the ability of quantum computing to solve non-\nlinear problems will significantly extend the horizon of quantum computing. The most natural idea of handling nonlinear problems by a quantum computer is to represent the nonlinear problem in a linear way, so quantum algorithms for linear problems can be used. There are two approaches in\nrecent literatures. One is to approximate the nonlinear problem through linearisation of the nonlinearity, or truncation of the equation, which is referred to as linear approximation methods. The second is coined as linear representation methods [38], which tries to find a map from the linear to the nonlinear systems, and usually yields a system in the phase space which is equivalent (without any approximation) to the original system.\nIn the linear approximation approach, in which one linearises the nonlinear system, modeling\nerrors are inevitable, hence the approach may only be valid for a short time, weak or special nonlinearities, and consequently after a long time solutions may lose significant nonlinear features. A more appealing approach uses the Carlemann linearisation in [58] or the techniques in [50, 61], but they are restricted to polynomial nonlinearities, and need to truncate the system since only finite number of equations is used. Such a truncation may lead to loss of some important nonlinear features of the original system. It is similar to moment closure technique in kinetic theory, in which one attempts to close the moment system with finite number of moments but often ends up with a closed system that has mathematical stability problems [8,32] or physical realizibility issues [49]. This is similarly true for methods in [50,61], see [54].\nFor the linear representation methods, there are two current approaches. One is the Koopman-\nvon Neumann (KvN) approach [44] (see also [23]), which was introduced for nonlinear ODEs. The other is the level set method, first introduced in [38], applicable to both nonlinear ODEs, and nonlinear PDEs \u2013 more specifically the Hamilton-Jacobi equations and scalar nonlinear hyperbolic equations. Both approaches introduce equations in the phase space but the extra dimensionality that is difficult for classical algorithms can be significantly eased by quantum algorithms, hence quantum advantages in most numerical parameters can still be achieved, even including the measurements of physical observables as analysed in [38].\nThe goal of this paper is to compare the two linear representation methods \u2013 the Liouville\nequation in the level set approach and the KvN equation, their variants and their different numerical approximations. The KvN is, so to speak, the square of the Liouville equation, and, when the solution is smooth, they are equivalent if the force is divergence free (for example in the case of Hamilton system). While both equations are of linear transport nature, which can be solved similarly by classical algorithms, the KvN equation, due to its unitary structure, can be directly solved by quantum simulations, while the Liouville equation was solved by quantum linear system solvers in [38]. Despite the absence of the unitary structure, we still proposed a \u201cquantum simulation\u201d algorithm for the Liouville representation in Appendix A by using the dimensional splitting Trotter based approximation. The basic idea is to transform the asymmetric evolution in each direction into a symmetric one, which requires only a simple variable substitution with the transformation matrix being diagonal. However, different from the traditional time-marching Hamiltonian simulation, non-unitary procedures for the variable substitution are involved, which may lead to exponential increase of the cost arising from multiple copies of initial quantum states at every time step as pointed out in Remark A.1.\nThe connection between the Liouville or KvN equation with the original nonlinear system\ncan be made through the Dirac delta-function \u03b4(x), which is naturally defined in the weak sense\nfor the Liouville equation which solves for the probability distribution of particles. However, to connect the KvN model \u2013 which computes, so to speak, the square root of the probability density distribution, one needs to use \u221a \u03b4, which is not well-defined mathematically, even in the weak sense, so one needs to be more careful in interpreting its solution (as will be discussed in Section 3.1.2) and the consequent numerical convergence in a suitable solution space. In addition, since the KvN is not in conservation form, it also requires higher smoothness for the force field than the Liouville approach.\nAnother alternative approach to the Liouville equation (in the classical Hamiltonian formalism)\nis to use the linear Schro\u0308dinger equation, which approximates the Liouville equation in the classical limit by sending the \u201cPlanck constant\u201d to zero. Here the Planck constant is an artificial small parameters, which can be chosen to depend on \u03b5, the numerical precision. The Schro\u0308dinger equation can be solved by quantum simulation techniques [37, 62], or by quantum linear algebraic solvers after spatial and temporal discretisations. We will compare all these different models and their different approximations: spectral methods vs. finite difference methods; and quantum simulation vs. quantum linear algebra solvers, and identify the pros and cons of each of these solvers in order to identify the best possible linear representation method.\nOur results on time complexities for the computation of physical observables are summarised\nin Tab. 1. For nonlinear ODEs, the quantum simulation method has less computational cost than the quantum linear systems algorithm (QLSA) based approaches for both Liouville and KvN representations, and the cost of computing the physical observables for the Liouville representation has a multiplicative factor squared times as larger as the one for the KvN representation (if the number of copies needed of the initial state is neglected).\nFor nonlinear Hamilton-Jacobi equations (in the classical Hamiltonian formalism), the Schro\u0308dinger\nframework/representation, using quantum simulation, has advantages over other approaches in time complexity, for both d (the space dimension) and \u03b5. However, we would like to point out that the solution to the Schro\u0308dinger equation has oscillations of frequency of O(1/ \u221a \u03b5), as shown in Fig. 2. If one wants high resolution results \u2013 for example oscillations free, then the Liouville representation with spectral approximation and QLSA has edges on d, and \u03b5 for smooth solution, while the Liouville replantation with finite difference approximation and QLSA has edges in \u03b5 if solution is less smooth (in Sobolev space H l for l \u2264 4). For general scalar hyperbolic equation, one can still use the Liouville representation [38] but the Schro\u0308dinger representation is not available. It is also unclear how to devise the KvN approach, as will be discussed in Section 6.\nWe also note that we do not compare these quantum alrogithms with the corresponding clas-\nsical algorithms, which were partly made, for example, in [38]. In particular, for nonlinear ODEs, these algorithms could be more expensive than the classical solvers [38]. It should be pointed out that the optimal QLSA with query complexity Q = O(s\u03ba log(1/\u03b5)) is presented in [20], where s is the sparsity, meaning it has at most s nonzero entries per row and column, \u03ba is the condition number of the coefficient matrix. On the other hand, the gate complexity may be quantified by O(Qpoly(logQ, logN)), which is larger than the query complexity only by\nlogarithmic factors [14,20,52]. For simplicity, we use O\u0303(Q) to denote the case where all logarithmic factors are suppressed.\nThe outline of the paper is as follows. In Section 2 we give a more detailed review of the several\ntechniques for solving the nonlinear differential equations. In Section 3 we summarize the general framework for computing the nonlinear ODEs by using the linear representation approaches, and analyse in detail the time complexity of the QLSA based methods and the quantum simulation methods. We propose a simple algorithm to compute the observables of integral form and figure out the multiplicative factor for the sampling procedure. In Section 4 we propose and analyse several quantum algorithms for solving the nonlinear Hamilton-Jacobi PDEs. By using the level set mechanism proposed in [38], we map the nonlinear PDEs of (d + 1)-dimension to a linear (2d + 1)-dimensional Liouville equation, referred to as the Liouville representation for nonlinear PDEs, and repeat the analysis of the quantum algorithms for the associated Liouville equation as in the previous section. In Section 5, we propose a Schro\u0308dinger framework to solve the nonlinear Hamilton-Jacobi PDEs (in the classical Hamiltonian formalism) since the Schro\u0308dinger equation can be transformed into the quantum Liouville equation via the Wigner transform, which in turn leads to the Liouville equation when taking the semiclassical limit. We present the quantum interpretation of the classical time-splitting Fourier spectral method proposed for the Schro\u0308dinger equation, and give a detailed discussion about the associated sampling law and the gate complexity for the computation of the expectation of observables. In Section 6 we briefly study scalar nonlinear hyperbolic equations. Discussion and summary are given in Section 7."
        },
        {
            "heading": "2 Review of quantum nonlinear differential equation solvers",
            "text": "In [50] a quantum algorithm, perhaps the first nonlinear differential equation solver, is described\nto solve sparse systems of nonlinear differential equations whose nonlinear terms are quadratic polynomials: dz(t)\ndt = F (z), f\u03b1 = \u2211 k,l a (\u03b1) kl zkzl,\nwhere z(t) = [z1(t), z2(t), \u00b7 \u00b7 \u00b7 , zn(t)]T and F = [f1(z), f2(z), \u00b7 \u00b7 \u00b7 , fn(z)]T . In the algorithm at least two copies of the state vector are required at every iteration step, which means the complexity scales exponentially with the number of steps to represent the nonlinearity throughout the evolution. Note that polynomials of degree higher than two (or more general nonlinearities) can be reduced to the quadratic case by introducing additional variables. However, the approach is only effective for low-order polynomials and is unlikely to be suitable for practical ODE solvers. Ref. [58] presents a quantum Carleman linearisation algorithm for a class of quadratic nonlinear differential equations\ndu dt = F2u \u22972 + F1u+ F0(t), u \u22972 = [uiuj ].\nCompared to the approach of [50], their algorithm improves the complexity from an exponential dependence on the evolution time to a nearly quadratic dependence. This algorithm is efficient in the regime R < 1, where the quantity R characterizes the relative strength of the nonlinear and\ndissipative linear term. As an alternative, Ref. [67] uses a different truncation method - the homotopy perturbation method - to transform the problem into a series of nonlinear ODEs with a special structure, which are further embedded into linear ODEs with a technique similar to the Carleman linearisation. The dependence on the error is exponentially better than the quantum Carleman linearisation algorithm, but the ratio of nonlinearity to dissipation is required to be smaller. Moreover, the algorithm is only discussed for homogeneous differential equations. In [46], the author presents substantially generalised and improved quantum algorithms over prior work for inhomogeneous linear ODEs and applies it to nonlinear ODEs using Carleman linearisation. Ref. [27] describes a strategy of embedding the nonlinear system into an infinite-dimensional linear system with several specific mappings presented, which is then truncated to finite dimension. In particular, the linear Carleman embedding is also included in this approach and connections between several embedding techniques are discussed. Ref. [61] describes a quantum algorithm, referred to as the quantum nonlinear Schro\u0308dinger linearisation technique, to solve the following nonlinear ODEs\ndf dt + f(x)x = b(t),\nwhere x \u2208 Cd and f(x) is a d \u00d7 d matrix that is an order m polynomial function of the vectors x and x\u2020. After technical treatment, f(x) can be assumed in the form of f(x) = x\u2020\u2297mFx\u2297m for a suitable tensor F . In the approach, the forward Euler discretisation x(t + \u2206t) = x \u2212 \u2206tf(x)x is approximated by N -body Schro\u0308dinger evolution:\nx\u2212\u2206tf(x)x \u2248 e\u2212iH\u2206tx\u2297N , H = \u2212i\n( N\nm )\u22121 \u2211 j1\u00b7\u00b7\u00b7jm Fj1\u00b7\u00b7\u00b7jm ,\nwith\nFj1\u00b7\u00b7\u00b7jm = I \u2297 \u00b7 \u00b7 \u00b7 \u2297 F \u2297 I \u2297 \u00b7 \u00b7 \u00b7 \u2297 F \u2297 \u00b7 \u00b7 \u00b7 \u2297 I,\nwhere the right-hand side has N matrices and F s are placed in the jl-th positions.\nThe above methods can be categorised as linear approximation approaches as in the introduc-\ntion, in which the nonlinear term is linearised, so the approach may only be valid for a short time, for weak nonlinearities and consequently may lose significant nonlinear features of the problem after a long time [38]. The linear approximation approach is very different from the linear representation method for the ODE, where the original nonlinear ODE is transformed into a linear counterpart by using the level set mechanism without any modelling errors, and for general nonlinearity. On the other hand, when reduced to the linear representations, the impact of the nonlinearity will be reflected in the CFL condition (or the numerical stability condition) as well as the accumulation of the local truncation error for the upwind discretizations. For example, the CFL condition in Theorem 3.1 and the truncation error in Remark 3.6."
        },
        {
            "heading": "3 Linear representation methods for nonlinear ODEs: Liouville",
            "text": "vs. KvN representations\nIn this section we consider the following nonlinear ODEs\ndqj dt = Fj(q1, \u00b7 \u00b7 \u00b7 , qd), qj(0) = q0,j , j = 1, \u00b7 \u00b7 \u00b7 , d,\nwhere q0,j are initial data and Fj are real-valued, which can be written in vector form as\ndq(t)\ndt = F (q(t)), q(0) = q0, q = [q1, \u00b7 \u00b7 \u00b7 , qd]T . (3.1)"
        },
        {
            "heading": "3.1 Linear representation methods",
            "text": ""
        },
        {
            "heading": "3.1.1 The Liouville representation",
            "text": "For x = (x1, \u00b7 \u00b7 \u00b7 , xd), let \u03b4(x) = \u03a0di=1\u03b4(xi) be the Dirac delta distribution. The Liouville equation corresponding to (3.1) can be derived by considering a function \u03c1(t, x) : R+ \u00d7 Rd \u2192 R, defined by\n\u03c1(t, x) = \u03b4(x\u2212 q(t)), (3.2)\nwhich represents the probability distribution in space x that corresponds to the solution x = q. By the properties of the delta function, one obtains the solution of (3.1) by taking the moment:\nq(t) = \u222b x\u03b4(x\u2212 q(t))dx = \u222b x\u03c1(t, x)dx. (3.3)\nOther quantity of interest G(q(t)) can be obtained by the moment\nG(q(t)) = \u222b G(x)\u03b4(x\u2212 q(t))dx = \u222b G(x)\u03c1(t, x)dx. (3.4)\nTo this end, we can characterize the dynamics of \u03c1(t, x) and find the solution q(t) via (3.3). One can check that \u03c1 satisfies, in the weak sense, the linear (d+ 1)-dimensional PDE [23,38] \u2202t\u03c1(t, x) +\u2207x \u00b7 [F (x)\u03c1(t, x)] = 0,\u03c10(x) := \u03c1(0, x) = \u03b4(x\u2212 q0). (3.5) Since the initial data involves a delta function, one can consider the following problem with the smoothed initial data  \u2202t\u03c1\u03c9(t, x) +\u2207 \u00b7 [F (x)\u03c1\u03c9(t, x)] = 0,\u03c1\u03c90 (x) := \u03c1\u03c9(0, x) = \u03b4\u03c9(x\u2212 q0) (3.6) when solving (3.5) by a classical or quantum algorithm, where \u03c9 is a smoothing parameter of the delta function [38]. For example, in one-dimensional case, one can choose\n\u03b4\u03c9 =  1 \u03c9\u03b2(x/\u03c9), |x| \u2264 \u03c9,\n0, |x| > \u03c9,\nwhere typical choices of \u03b2 include\n\u03b2(x) = 1\u2212 |x| and \u03b2(x) = 1 2 (1 + cos(\u03c0x)).\nHere \u03c9 = mh and m is the number of mesh points within the support of \u03b4\u03c9. For d dimensions, one defines\n\u03b4\u03c9(x) = \u03a0 d i=1\u03b4\u03c9(xi), x = (x1, \u00b7 \u00b7 \u00b7 , xd).\nIn addition, the periodic boundary conditions can be imposed since \u03c1(0, x) or \u03c1\u03c9(0, x) has compact support and the solutions to problems (3.5) and (3.6) propagate with finite speed.\nTo compare with the KvN approach to be introduced next, note the equation in (3.5) is usually\ntransformed to the (some classical) analogue of the Schro\u0308dinger equation\ni\u2202t\u03c1 = L\u03c1, (3.7)\nwhere L is referred to as the Liouville operator, satisfying\nL\u03c1 := \u2212i \u2211 j ( Fj \u2202 \u2202xj + \u2202Fj \u2202xj ) \u03c1.\nThe operator L is generally not a Hermitian operator, and thus cannot be directly simulated by quantum Hamiltonian unless divF = 0 (In this case one has\nL\u03c1 := \u2212i \u2211 j ( Fj \u2202 \u2202xj + \u2202Fj \u2202xj ) \u03c1 = \u2212i \u2211 j ( Fj \u2202 \u2202xj + 1 2 \u2202Fj \u2202xj ) \u03c1,\nwhich is the symmetric KvN operator defined later)."
        },
        {
            "heading": "3.1.2 The Koopman-von Neumann representation",
            "text": "The starting point of the Koopman-von Neumann (KvN) approach to classical mechanics is\nthe introduction of a Hilbert space of complex and square integrable functions \u03c8 referred to as the KvN wave functions such that \u03c1 := |\u03c8|2 can be interpreted as the probability density of finding a particle at the point of the phase space. To this end, it is desirable to find a complex-valued function \u03c8 which satisfies a dynamical behavior similar to that of the Schro\u0308dinger equation, and such that \u03c1 = |\u03c8|2 = \u03c8\u2020\u03c8 is a solution of (3.7). Formally, one can verify that \u03c8 satisfies [9, 10,44,54]\ni\u2202t\u03c8 = HKvN\u03c8,\nwhere the KvN operator is\nHKvN = \u2212i \u2211 j ( Fj \u2202 \u2202xj + 1 2 \u2202Fj \u2202xj ) .\nIt can be written in the following symmetric form\nHKvN\u03c8 = 1\n2 \u2211 j ( Fj(x)Pj\u03c8 + Pj(Fj(x)\u03c8) ) =: d\u2211 j=1 Hj\u03c8,\nwhere\nHj\u03c8 = 1\n2\n( Fj(x)Pj\u03c8 + Pj(Fj(x)\u03c8) ) , Pj = \u2212i \u2202\n\u2202xj .\nBy introducing the position operator x\u0302j and the momentum operator P\u0302j , the KvN representation can be rewritten as\ni\u2202t|\u03c8\u27e9 = 1\n2 \u2211 j (Fj(x\u0302)P\u0302j + P\u0302jFj(x\u0302))|\u03c8\u27e9 =: d\u2211 j=1 H\u0302j |\u03c8\u27e9, (3.8)\nwhere the notation Fj(x\u0302) denotes a nonlinear map of the position operator which resembles the nonlinear flow, potentially through series expansions. Unlike the Liouville operator, the KvN operator is Hermitian and thus allows for quantum Hamiltonian simulations.\nTo obtain the quantity of interest G(q(t)) one uses\nG(q(t)) = \u222b G(x)\u03b4(x\u2212 q(t))dx = \u222b G(x)|\u03c8(t, x)|2dx. (3.9)\nThe setting of Eq. (3.2) may be essential, since it allows to determine the solution of the ODEs\nvia (3.3). To be consistent, one may need to set \u03c8(t, x) = \u03b41/2(x \u2212 q(t)), the square root of the delta function. Namely, one needs to solve i\u2202t\u03c8 = HKvN\u03c8,\u03c8(0, x) = \u03b41/2(x\u2212 q0). (3.10) The solution to the above problem, in general, cannot be defined mathematically since one cannot define \u03b41/2, let alone its derivative, even in the weak sense. However, by connecting it with (3.5) by \u03c1 = |\u03c8|2 one can make sense of the solution to (3.10) since |\u03c8|2 satisfies the Liouville equation (3.5) which can be defined in the weak sense [29,56]. This connection is quite important, especially if one discretises (3.10) and hopes the numerical solution will converge, as will be elaborated more later on.\nAt the discrete level, as was done in [23], one could instead consider smoothing the \u03b4-function\nand obtain  i\u2202t\u03c8\u03c9 = HKvN\u03c8\u03c9,\u03c8\u03c9(0, x) = \u03b41/2\u03c9 (x\u2212 q0), (3.11) which satisfies\n\u03c1\u03c9 = |\u03c8\u03c9|2 = (\u03c8\u03c9)\u2020\u03c8\u03c9. (3.12)\nAlthough for every fixed \u03c9, the problem (3.11) is well defined, it will not be possible to\ndefine the \u03c9 \u2192 0 limit which is needed to make mathematical sence of the KvN equation with initial data \u221a \u03b4(x\u2212 q0). Furthermore, when discretising (3.11) numerically, one will not be able to prove the convergence of the numerical approximation (when \u03c9, mesh size and time step all go to zero) toward the solution of the KvN since the solution of KvN is not suitably defined. In such a case, a different choice of \u03c9 or mesh size could pick up different numerical solutions, which is a well-known phenomenon when numerically approximating the (weak) solution of hyperbolic conservation laws [48]. These solutions may not be unique, unless stronger conditions, such as the entropy condition, are satisfied by the numerical approximations.\nEven if one disregards the \u221a \u03b4 problem, when using the Liouville equation (3.5), one only needs\nF to be Lipschitz continuous to define its solution, like for the original ODEs (3.1). For the KvN equation, since it is not in conservation form, one needs divF to be Lipschitz continuous. Thus this is more restrictive than the case of the Liouville representation.\nUnlike in the Liouville representation, in the KvN framework one cannot get the ensemble average defined as 1M0 \u2211M0 j=1 aj for M0 different initial data [38], where a(x) is a quantity of interest\n(say physical observables). Rather it gives ( 1M0 \u2211M0 j=1 \u221a aj) 2, Thus one loses quantum advantage in M0 if one is interested in the ensemble average with M0 \u226b 1 initial data. These two kinds of ensemble average observables are relevant to the quantum sampling setting, referring to [17,34]."
        },
        {
            "heading": "3.1.3 Computation of the quantity of interest and error analysis",
            "text": "After regularising the \u03b4 function by \u03b4\u03c9, one now needs to approximate the physical quantity\nof interest, which are\n\u2022 For the Liouville approximation: \u27e8G\u03c1\u03c9(t)\u27e9 = \u222b G(x)\u03c1\u03c9(t, x)dx, (3.13)\nwhere \u03c1\u03c9 is the solution of (3.6);\n\u2022 For the KvN approximation: \u27e8O\u03c8\u03c9(t)\u27e9 = \u222b G(x)|\u03c8\u03c9(t, x)|2dx, (3.14)\nwhere \u03c8\u03c9 is the solution of (3.11) satisfying \u03c1\u03c9 = |\u03c8\u03c9|2 for every fixed \u03c9 > 0,\nby some quadrature rules.\nBy choosing specific G one recovers physical quantities of interest (usually observables). For\nexample, if G(x) = x, (3.13) and (3.14) gives q, the solution of the original equation (3.1). For other choices of G one could recover other physical quantities such as momentum and energy for PDE problems such as the Hamilton-Jacobi equations. See [38] and Eq. (4.8).\nFor this quantity, we have two ways to approximate it. For the Liouville approximation, one\ncan compute the integral by using the numerical quadrature rule \u27e8G(tn)\u27e9 = \u222b [0,1]d G(x)\u03c1(tn, x)dx \u2248 \u222b [0,1]d G(x)\u03c1\u03c9(tn, x)dx\n=: \u27e8G\u03c1\u03c9(tn)\u27e9 \u2248 1\nMd \u2211 j Gj\u03c1 \u03c9 j,n =: \u27e8G\u03c1\u03c9 ,n\u27e9, (3.15)\nwhere, Gj = \u03c9jG(xj) with \u03c9j being the weight, j = (j1, \u00b7 \u00b7 \u00b7 , jd) and M is the number of points in each dimension of the d-dimensional space. Throughout the paper, we only consider the trapezoidal rule: with w = [12 , 1, \u00b7 \u00b7 \u00b7 , 1, 1 2 ] T , the weight vector can be arranged as \u2211 j \u03c9j |j\u27e9 = w \u2297 \u00b7 \u00b7 \u00b7 \u2297 w. Accordingly, the solution vector is denoted as\n\u03c1\u03c9n = \u2211\nj \u03c1\u03c9j,n|j\u27e9 = \u2211 j1,\u00b7\u00b7\u00b7 ,jd \u03c1\u03c9j1,\u00b7\u00b7\u00b7 ,jd,n|j1\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |jd\u27e9.\nThat is, the nj-th entry of \u03c1 \u03c9 n is \u03c1 \u03c9 j,n, with the global index given by\nnj := j12 d\u22121 + \u00b7 \u00b7 \u00b7+ jd20. (3.16)\nNote that for periodic boundary conditions, \u03c1 can be assumed to be periodic since the solution to the Liouville equation is essentially zero outside a compact support. In such a case, the trapezoidal rule is of spectral accuracy [2].\nLemma 3.1 (Error of the Liouville representation). Let \u03c1\u03c9 be the analytical solution of the Liouville representation (3.5) with the smoothed initial data, and \u03c1\u03c9h the numerical solution of \u03c1 \u03c9. Then\ne\u03c1 := |\u27e8G(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9h ,n\u27e9| \u2264 C(\u03c9e tn\u2225divF\u2225\u221e + d\u2206x\u2113/\u03c9\u2113+1 + e\u03c1,h), (3.17)\nwhere \u2225divF\u2225\u221e = supq|divF (q)|, \u2113 is the Sobolev regularity of \u03c1\u03c9 (namely \u03c1\u03c9 \u2208 C\u2113), and e\u03c1,h = |\u03c1\u03c9n\u2212 \u03c1\u03c9h,n| is the (relative) discretisation error for the linear Liouville equation, given by for examples:\n\u2022 For the first-order upwind finite difference scheme, one has e\u03c1,h \u2264 C (\u2206t \u03c9 + d\u2206x \u03c92 ) = O (d\u2206x \u03c92 ) (3.18)\nwith the CFL condition d\u03bb = O(1) (for numerical stability), where \u03bb = \u2206t/\u2206x.\n\u2022 For the Fourier spectral discretisation, one has e\u03c1,h \u2264 C (\u2206t\u03b1 \u03c9\u03b1 + d\u2206x\u2113 \u03c9\u2113+1 ) , (3.19)\nwhere \u03b1 depends on the accuracy of the temporal discretisation.\nProof. The error can be split as\ne\u03c1 = |\u27e8G(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9h ,n\u27e9| = |\u27e8G\u03c1(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9h ,n\u27e9|\n\u2264 |\u27e8G\u03c1(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9(tn)\u27e9|+ |\u27e8G\u03c1\u03c9(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9 ,n\u27e9|+ |\u27e8G\u03c1\u03c9 ,n\u27e9 \u2212 \u27e8G\u03c1\u03c9h ,n\u27e9| =: I1 + I2 + I3. (3.20)\nFor I1, one can apply the the method of characteristics as done in [38,64]. To do so, we introduce the characteristics of (3.5) as  dX dt = F (X), X \u2208 Rd,\nX(s) = x,\nwith the solution denoted by X(t;x, s). Let the Jacobian determination of the map from x to X be\nJ(t;x, s) = det (\u2202Xi \u2202xj (t;x, s) ) .\nThen one has\nJ(t;x, s) > 0, J(t;x, s) = exp (\u222b t\ns \u2207 \u00b7 F (X(\u03c3;x, s))d\u03c3\n) .\nBy the method of characteristics (see Eq. (1.11) of [64] or Appendix J of [38]), the solution to (3.5) can be given by\n\u03c1(t, x) = \u03c10(X(0;x, t))J(0;x, t) = \u03c10(X(0;x, t)) exp ( \u2212 \u222b t 0 \u2207 \u00b7 F (X(\u03c3;x, t))d\u03c3 ) .\nSimilarly, the solution to (3.6) is\n\u03c1\u03c9(t, x) = \u03c1\u03c90 (X(0;x, t))J(0;x, t) = \u03c1 \u03c9 0 (X(0;x, t)) exp ( \u2212 \u222b t 0 \u2207 \u00b7 F (X(\u03c3;x, t))d\u03c3 ) .\nTherefore,\nI1 = |\u27e8G\u03c1(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9(tn)\u27e9| = \u2223\u2223\u2223 \u222b\n[0,1]d G(x)(\u03c1(tn, x)\u2212 \u03c1\u03c9(tn, x))dx \u2223\u2223\u2223 = \u2223\u2223\u2223 \u222b\n[0,1]d G(x)\n( \u03c10(X(0;x, tn))\u2212 \u03c1\u03c90 (X(0;x, tn)) ) J(0;x, tn)dx \u2223\u2223\u2223 \u2264 C\u03c9 max\nx\u2208[0,1]d J(0;x, tn) \u2264 C\u03c9etn\u2225divF\u2225\u221e ,\nwhere \u2225divF\u2225\u221e = supq|divF (q)|. The second term is just the error of the quadrature rule, hence I2 \u2264 Cd\u2206x\u2113/\u03c9\u2113+1, where the 1/\u03c9\u2113+1 factor comes from the \u2113-th derivative of \u03b4w. Obviously, I3 \u2264 Ce\u03c1,h. The final result comes from the standard error analysis for the linear hyperbolic equation [48].\nRemark 3.1. Note that for the upwind scheme, due to the CFL condition \u2206t = O(\u2206x/d), one has\nO(\u2206t/\u03c9) = O(\u2206x/d\u03c9) = O(d\u2206x/\u03c92),\nhence the second equality in (3.18) holds. For the spectral discretisation in Subsect. A.1, we require that\nd\u2206t\u03b1/\u03c9\u03b1 \u223c d\u2206x\u2113/\u03c9\u2113+1 \u223c \u03b5,\nsee (A.10) for example, where d for time comes from the dimension splitting in (A.2). This means\n\u2206t\u03b1/\u03c9\u03b1 \u2264 d\u2206t\u03b1/\u03c9\u03b1 \u2272 d\u2206x\u2113/\u03c9\u2113+1.\nThat is, we can still combine the two terms on the right hand side of (3.19). We leave it as is in what follows.\nFor the KvN approximation, the quadrature rule gives \u27e8O\u03c8\u03c9(tn)\u27e9 = \u222b [0,1]d G(x)|\u03c8\u03c9(tn, x)|2dx \u2248 1 Md \u2211 j Gj |\u03c8\u03c9j,n|2\n= 1\nMd/2 (\u03c8\u03c9n ) \u2020GM\u03c8 \u03c9 n =: \u27e8O\u03c8\u03c9 ,n\u27e9, (3.21)\nwhere the elements of the vector \u03c8\u03c9n are arranged as \u03c8 \u03c9 n = \u2211 j \u03c8 \u03c9 j,n|j\u27e9, and GM = diag(g) is a\ndiagonal matrix with g = \u2211\nj Gj/M d/2|j\u27e9 satisfying \u2225g\u2225 \u223c 1.\nLemma 3.2 (Error of KvN representation). Let \u03c8\u03c9 be the analytical solution of the KvN representation (3.11), and \u03c8\u03c9h the numerical solution of \u03c8 \u03c9. Then\ne\u03c8 := |\u27e8G(tn)\u27e9 \u2212 \u27e8O\u03c8\u03c9h ,n\u27e9| \u2264 C(\u03c9e tn\u2225divF\u2225\u221e + d\u2206x\u2113/\u03c9\u2113+1 + e\u03c8,h), (3.22)\nwhere \u2113 is the regularity of \u03c1\u03c9, and e\u03c8,h = ||\u03c8\u03c9n |2 \u2212 |\u03c8\u03c9h,n|2| is the (relative) discretisation error for the KvN equation (3.8).\n\u2022 For the first-order upwind finite difference scheme, one has e\u03c8,h \u2264 C (d\u2206x \u03c92 ) ,\nwith the CFL condition d\u03bb = O(1), where \u03bb = \u2206t/\u2206x.\n\u2022 For the Fourier spectral discretisation, one has\ne\u03c8,h \u2264 C (\u2206t\u03b1 \u03c9\u03b1 + d\u2206x\u2113 \u03c9\u2113+1 ) ,\nwhere \u03b1 depends on the accuracy of the temporal discretisation.\nProof. Noting that \u03c1\u03c9 = |\u03c8\u03c9|2, we can split the error as\ne\u03c8 = |\u27e8G(tn)\u27e9 \u2212 \u27e8O\u03c8\u03c9h ,n\u27e9|\n\u2264 |\u27e8G\u03c1(tn)\u27e9 \u2212 \u27e8O\u03c8\u03c9(tn)\u27e9|+ |\u27e8O\u03c8\u03c9(tn)\u27e9 \u2212 \u27e8O\u03c8\u03c9 ,n\u27e9|+ |\u27e8O\u03c8\u03c9 ,n\u27e9 \u2212 \u27e8O\u03c8\u03c9h ,n\u27e9| = |\u27e8G\u03c1(tn)\u27e9 \u2212 \u27e8G\u03c1\u03c9(tn)\u27e9|+ |\u27e8O\u03c8\u03c9(tn)\u27e9 \u2212 \u27e8O\u03c8\u03c9 ,n\u27e9|+ |\u27e8O\u03c8\u03c9 ,n\u27e9 \u2212 \u27e8O\u03c8\u03c9h ,n\u27e9| =: I1 + I2 + I3.\nHere, I1 is exactly the first term in (3.20) for the Liouville representation, so I1 \u2264 C\u03c9etn\u2225divF\u2225\u221e . The second term is the (relative) error of the quadrature rule. One again has I2 \u2264 Cd\u2206x\u2113/\u03c9\u2113+1 since \u03c1\u03c9 = |\u03c8\u03c9|2, where the 1/\u03c9\u2113+1 factor comes from the \u2113-th derivative of \u03b4w. For the last term, one has\nI3 = |\u27e8O\u03c8\u03c9 ,n\u27e9 \u2212 \u27e8O\u03c8\u03c9h ,n\u27e9| = |(\u03c8 \u03c9 n ) \u2020GM\u03c8 \u03c9 n \u2212 (\u03c8\u03c9h,n)\u2020GM\u03c8\u03c9h,n|\n= 1\nMd \u2223\u2223\u2223\u2211 j Gj |\u03c8\u03c9j,n|2 \u2212 \u2211 j Gj |(\u03c8\u03c9h )j,n|2 \u2223\u2223\u2223 \u2272 ||\u03c8\u03c9n |2 \u2212 |\u03c8\u03c9h,n|2|.\nThis completes the proof.\nRemark 3.2. When discretising the Liouville equation by the upwind scheme, since it is in conservative form, one can show that the l1 norm at later time is bounded by the norm at t = 0 when the CFL condition is satisfied (namely it is l1 contracting). In addition, the accumulation of the local truncation error which grows linearly in t. However, this is not true for the KvN representation. If one uses the upwind scheme to discretize the transport (spatial derivative) term, since the 1/2 term is a forcing term, it will contribute to the l1 error an exponentially growing term like etn\u2225divF\u2225\u221e . When tn \u2264 T = O(1) this is not a big issue. But it is worth pointing out the difference with the Liouville representation here, since if one wants to compute the long time solution, the l1 contraction of the upwind scheme for the Liouville representation gives much smaller error. The above discussion will be further elaborated later.\nFor simplicity, we only consider tn \u2264 T = O(1) in this article."
        },
        {
            "heading": "3.2 Finite difference discretisation for the Liouville representation",
            "text": ""
        },
        {
            "heading": "3.2.1 The QLSA for the finite difference discretisation",
            "text": "The Liouville representation can be rewritten as \u2202w \u2202t + d\u2211 i=1 \u2202 \u2202xi (Fi(x)w(t, x)) = 0,\nw0(x) = \u03b4\u03c9(x\u2212 x0), (3.23)\nwhere we have assumed the smoothed initial data \u03b4\u03c9. Denote ei = [0, \u00b7 \u00b7 \u00b7 , 1, \u00b7 \u00b7 \u00b7 , 0] to be the unit vector with the i-th entry being 1. Let j = (j1, \u00b7 \u00b7 \u00b7 , ji, \u00b7 \u00b7 \u00b7 , jd) and xi = ji\u2206x are the i-th components of xj . The first-order upwind discretisation at (tn, xj) takes the following form [38, Appendix K]:\n\u2202tw \u2212\u2192 wn+1j \u2212 w n j\n\u2206t ,\n\u2202\n\u2202xi (Fi(x)w(t, x)) \u2212\u2192\n1\n\u2206x\n({ Fi(xji+1/2) }\u2212 j wnj+ei \u2212 { Fi(xji\u22121/2) }+ j wnj\u2212ei ) + 1\n\u2206x\n({ Fi(xji+1/2) }+ j \u2212 { Fi(xji\u22121/2) }\u2212 j ) wnj ,\nwhere\n\u03b1+ = max{\u03b1, 0} = \u03b1+ |\u03b1| 2 \u2265 0, \u03b1\u2212 = min{\u03b1, 0} = \u03b1\u2212 |\u03b1| 2 \u2264 0,\nand { Fi(xji\u00b11/2) } j = 1 2 (Fi(xj\u00b1ei) + Fi(xj)) = 1 2 (Fi(xj1,\u00b7\u00b7\u00b7 ,ji\u00b11,\u00b7\u00b7\u00b7 ,jd) + Fi(xj1,\u00b7\u00b7\u00b7 ,ji,\u00b7\u00b7\u00b7 ,jd)).\nFor convenience we introduce the following notation\nai,\u00b1j = { Fi(xji+1/2) }\u00b1 j , bi,\u00b1j = { Fi(xji\u22121/2) }\u00b1 j .\nThe discrete scheme can be written as\nwn+1j \u2212 [ 1\u2212 \u03bb d\u2211 i=1 (ai,+j \u2212 b i,\u2212 j ) ] wnj + \u03bb d\u2211 i=1 [ ai,\u2212j w n j+ei \u2212 bi,+j w n j\u2212ei ] = 0, (3.24)\nwhere \u03bb = \u2206t/\u2206x. In matrix form one has\nwn+1 \u2212Bwn = fn+1, n = 0, 1, \u00b7 \u00b7 \u00b7 , Nt \u2212 1,\nwith f i being the terms resulting from the initial and boundary conditions, where the nodal values at t = tn are arranged as w n = \u2211 j w n j |j\u27e9. With the help of the global index (3.16), the non-zero entries of B can be given by\nBnj ,nj = 1\u2212 \u03bb d\u2211 i=1 (ai,+j \u2212 b i,\u2212 j ), Bnj ,nj+ei = \u2212\u03bba i,\u2212 j , Bnj ,nj\u2212ei = \u03bbb i,+ j .\nBy introducing the notation w = [w1; \u00b7 \u00b7 \u00b7 ;wNt ], where \u201c;\u201d indicates the straightening of {wi}i\u22651 into a column vector, one obtains the following linear system\nLw = F, (3.25)\nwhere\nL =  I \u2212B I . . . . . .\n\u2212B I\n , F =  f1 f2 ...\nfNt  . For periodic boundary conditions, one has f1 = Bw0 and f i = 0 for i \u2265 2.\nTheorem 3.1. Suppose that \u03bb = \u2206t/\u2206x satisfies the following CFL condition\n\u03bb d\u2211 i=1 sup x |Fi(x)| \u2264 1.\n(1) The condition number and the sparsity of L satisfy \u03ba = O(1/\u2206t) and s = O(d).\n(2) For fixed spatial step \u2206x, let \u2206t = O(\u2206x/d) and \u03c9 = (d\u2206x)1/3. Given the error tolerance \u03b5, the gate complexity of the QLSA (for the problem in Eq. (3.25)) is\nNGates = O\u0303 (d3 \u03b53 log 1 \u03b5 ) .\nProof. 1) We claim that \u2225B\u22252 \u2264 1 + \u2206t\u2225divF\u2225\u221e. To this end, one can show that the summation of the absolute values of row or column entries is not greater than 1 + \u2206t\u2225divF\u2225\u221e.\nLet Ri be the sum of absolute values of row entries. Since the i-th equation in Ax = b is actually\nthe i-th row of A multiplied by x, the entries of the i-th row of A are completely determined by the i-th equation. On the other hand, the grid values corresponding to the initial or boundary conditions in the i-th equation will increase the values of the summation of the absolute values of row entries since they will be moved to the right-hand side. That is, Ri \u2264 R\u0303i, where R\u0303i includes the contribution from the initial-boundary values.\nWith the CFL condition, one has\nc := 1\u2212 \u03bb d\u2211 i=1 (ai,+j \u2212 b i,\u2212 j ) \u2265 0.\nThe argument is as follows. Without loss of generality, we set d = 1 and obtain\nc = 1\u2212 \u03bb 4 (Fj+1 \u2212 Fj\u22121 + |Fj+1 + Fj |+ |Fj\u22121 + Fj |) =: 1\u2212 \u03bb 4 cF ,\nwhere Fj = F (xj). This reduces to verify that cF contains only four terms of the grid values of F :\n\u2022 For Fj\u22121 + Fj \u2265 0, one has\ncF = Fj+1 \u2212 Fj\u22121 + |Fj+1 + Fj |+ Fj\u22121 + Fj = Fj+1 + Fj + |Fj+1 + Fj |,\nas required.\n\u2022 For Fj\u22121 + Fj < 0, one has\ncF = Fj+1 \u2212 Fj\u22121 + |Fj+1 + Fj | \u2212 Fj\u22121 \u2212 Fj\n= Fj+1 \u2212 Fj\u22121 + Fj+1 \u2212 Fj\u22121, if Fj+1 + Fj \u2265 0,\u2212Fj\u22121 \u2212 Fj \u2212 Fj\u22121 \u2212 Fj , if Fj+1 + Fj < 0, as required.\nThe above argument implies that\nRi \u2264 R\u0303i \u2264 1\u2212 \u03bb d\u2211 i=1 (ai,+j \u2212 b i,\u2212 j ) + \u03bb d\u2211 i=1 (bi,+j \u2212 a i,\u2212 j )\n= 1\u2212 \u03bb d\u2211 i=1 (ai,+j + a i,\u2212 j \u2212 b i,+ j \u2212 b i,\u2212 j ) = 1\u2212 \u03bb d\u2211 i=1 (aij \u2212 bij)\n= 1\u2212 \u03bb d\u2211 i=1 ({ Fi(xi+1/2) } j \u2212 { Fi(xi\u22121/2) } j ) .\nSince F is smooth, we obtain from the mean value theorem that\nRi \u2264 1\u2212 \u03bb d\u2211 i=1 ({ Fi(xi+1/2) } j \u2212 { Fi(xi\u22121/2) } j ) = 1\u2212 \u03bb\nd\u2211 i=1 \u2202xiFi(\u03bei)\u2206x (xi\u22121/2 < \u03bei \u2264 xi+1/2)\n= 1\u2212\u2206t d\u2211 i=1 \u2202xiFi(\u03bei) \u2264 1 + \u2206t\u2225divF\u2225\u221e,\nwhere Fi(\u03bei) := Fi(xj1 , \u00b7 \u00b7 \u00b7 , \u03bei, \u00b7 \u00b7 \u00b7 , xjd). Let Cj be the absolute column under discussion. The j-th column of A is exactly the collection of the coefficients of xj in each equation of Ax = b, hence the absolute column sum is simply the sum of the absolute values of the coefficients with respect to xj . Consider the variable w n j in (3.24). Notice that the other subscripts are only shifted left and right once in some direction, and thus the other elements of the corresponding column are only changed by the upper index i. This again implies that\nCj \u2264 1\u2212 \u03bb d\u2211 i=1 (ai,+j \u2212 b i,\u2212 j ) + \u03bb d\u2211 i=1 (bi,+j \u2212 a i,\u2212 j ) \u2264 1 + \u2206t\u2225divF\u2225\u221e.\n2) By definition, \u03c3min(L) = 1/\u03c3max(L \u22121). After simple algebra, one has\nL\u22121 =  I B I B2 . . . . . .\n... . . . . . . . . .\nBNt\u22121 \u00b7 \u00b7 \u00b7 B2 B I\n =  I I . . .\n. . .\nI\n+  B . . .\n. . .\nB\n+ \u00b7 \u00b7 \u00b7 ,\nwhich gives\n\u03c3max(L \u22121) = \u2225L\u22121\u22252 \u2264 \u2225I\u22252 + \u2225B\u22252 + \u2225B\u222522 + \u00b7 \u00b7 \u00b7+ \u2225B\u2225Nt\u221212 .\nAccording to the previous analysis, one has\n\u2225B\u22252 \u2264 1 + \u2206t\u2225divF\u2225\u221e \u2264 c =  1, \u2225divF\u2225\u221e = 0, 1 + \u2206t, 0 < \u2225divF\u2225\u221e < 1,\n1 + \u2206t\u2225divF\u2225\u221e, \u2225divF\u2225\u221e \u2265 1,\nand hence\n\u03c3max(L \u22121) \u2264 1 + c+ c2 + \u00b7 \u00b7 \u00b7 cNt\u22121 = c Nt \u2212 1 c\u2212 1 .\nNoting that (1 + x/n)n \u2264 ex holds for any real number, we then have\n\u03c3max(L \u22121) \u2264 1\n\u2206t \u00d7  1, \u2225divF\u2225\u221e = 0 e, 0 < \u2225divF\u2225\u221e < 1\nexp(\u2225divF\u2225\u221e), \u2225divF\u2225\u221e \u2265 1\n,\nwhich can be simply written as\n\u03c3max(L \u22121) \u2264 exp(\u2225divF\u2225\u221e + 1)\n1\n\u2206t ,\nhence\n\u03c3min(L) \u2265 \u2206t\nexp(\u2225divF\u2225\u221e + 1) .\nBy the Gershgorin-type theorem for singular values [35,63],\n\u03c3max(L) \u2264 1 + \u2225B\u22252 \u2264 2 + \u2206t\u2225divF\u2225\u221e.\nwhich gives\n\u03ba(L) \u2264 (2 + \u2206t\u2225divF\u2225\u221e) exp(\u2225divF\u2225\u221e + 1) 1\n\u2206t \u2272 exp(\u2225divF\u2225\u221e)\n1\n\u2206t .\n3) In view of the CFL condition, we set \u2206t = O(\u2206x/d). According to Lemma 3.1, the classical error of the numerical approximation (if the first order upwind scheme is used to discretize the Liouville equation) to the observables is O(\u03c9 + \u2206t/\u03c9 + d\u2206x/\u03c92). One can choose \u03c9 such that \u03c9 \u223c d\u2206x/\u03c92 or \u03c9 = (d\u2206x)1/3 so the numerical error becomes O((d\u2206x)1/3). To reach the precision O(\u03b5), we choose \u2206x \u223c \u03b53/d, and hence \u2206t/\u03c9 \u223c \u03b52/d2 \u2264 \u03b5. This naturally leads to the query complexity [20]\nQ = O ( s\u03ba log 1\n\u03b5\n) = O (d3 \u03b53 log 1 \u03b5 ) .\nThe gate complexity is larger than the query complexity only by logarithmic factors.\nRemark 3.3. Since the Liouville equation is in conservative form, one can get the l1 contracting of the upwind scheme. Without loss of generality we set d = 1. The upwind scheme in (3.24) is then given by\nwn+1j \u2212 (1\u2212 \u03bb(a + j \u2212 b \u2212 j ))w n j + \u03bb(a \u2212 j w n j+1 \u2212 b+j w n j\u22121) = 0,\nwhere a\u00b1j = F (xj+1/2) \u00b1 and b\u00b1j = F (xj\u22121/2) \u00b1. Since b\u00b1j = a \u00b1 j\u22121, the scheme can be rewritten as\nwn+1j \u2212 (1\u2212 \u03bb(a + j \u2212 a \u2212 j\u22121))w n j + \u03bb(a \u2212 j w n j+1 \u2212 a+j\u22121w n j\u22121) = 0.\nUnder the CFL condition given in Theorem 3.1, one has\n\u2225wn+1\u22251 = \u2211 j |wn+1j | \u2264 \u2211 j [ (1\u2212 \u03bb(a+j \u2212 a \u2212 j\u22121))|w n j | \u2212 \u03bba\u2212j |w n j+1|+ \u03bba+j\u22121|w n j\u22121| ] = \u2211 j [ (1\u2212 \u03bb(a+j \u2212 a \u2212 j\u22121))|w n j | \u2212 \u03bba\u2212j\u22121|w n j |+ \u03bba+j |w n j | ]\n= \u2211 j |wnj | = \u2225wn\u22251,\nas required."
        },
        {
            "heading": "3.2.2 The algorithm for the computation of the observable",
            "text": "The quantum algorithm to approximate physical observables is presented in [38] with a detailed\nanalysis on the gate complexity, where the observable is computed by using the amplitude estimation algorithm with block-encoding techniques augmented by amplitude amplification. Amplitude amplification was used to achieve optimal scaling of the query complexity with respect to the error \u03b5 while measuring an expectation value. However, since our purpose here is only to compare the strengths of the Liouville approach versus the Koopman-von Neumann approach, for simplicity we can instead compute the observable with a more straightforward means, without using amplitude amplification. In this paper, we first obtain the quantum state proportional to the solution of the problem, either with QLSA or with quantum simulation, then compute the observable afterwards.\nThe expectation of the observable\nIn order to measure observables, we need to express them as Hermitian operators. Let wj,n :=\n\u03c1\u03c9j,n be the solution of the upwind finite difference method (with the smoothed initial data \u03b4\u03c9). One has\n|\u03c8\u27e9 = 1 N\u03c8 \u2211 j,n wj,n|j\u27e9|n\u27e9,\nwhere the normalization constant N\u03c8 = \u2225w\u2225. With Gj in (3.15), we define the state\n|Gn\u27e9 := 1\nNG \u2211 j G\u2020j |j\u27e9|n\u27e9,\nwhere NG = ( \u2211 j |G \u2020 j | 2)1/2 is the normalisation constant. We assume we are given the density matrix G := |Gn\u27e9\u27e8Gn| and we define \u03a5 := \u27e8\u03c8|G|\u03c8\u27e9. Simple algebra yields\n\u27e8G(tn)\u27e9 \u2248 \u27e8G\u03c1\u03c9 ,n\u27e9 = n\u03c8nG| \u221a \u03a5|, (3.26)\nwhere nG = NG/M d/2 = O(1) is known and n\u03c8 = N\u03c8/Md/2 may be unknown. We further define\n\u27e8O\u27e9 = \u27e8G\u03c1\u03c9 ,n\u27e92 = (nGn\u03c8)2\u03a5 := \u27e8\u03c8|O|\u03c8\u27e9, O = (nGn\u03c8)2G. (3.27)\nThen one only needs to estimate it to precision \u03b5 since\n|\u27e8G\u03c1\u03c9 ,n\u27e9 \u2212 \u27e8G\u03c1\u03c9 ,n\u27e9app| = 1\n|\u27e8G\u03c1\u03c9 ,n\u27e9+ \u27e8G\u03c1\u03c9 ,n\u27e9app| |\u27e8O\u27e9 \u2212 \u27e8O\u27e9app|\nand \u27e8G\u03c1\u03c9 ,n\u27e9 and \u27e8G\u03c1\u03c9 ,n\u27e9app can be considered as O(1), where the subscript \u201capp\u201d refers to the approximations. The problem then reduces to approximating the normalisation constant N\u03c8 = \u2225w\u2225 to a desired precision, where w = L\u22121F . This can be referred to as the amplitude estimation or linear equation norm estimation in quantum computing [13, 55]. As shown in Fig. 1, for the QLSA of the upwind discretisation, we first compute an approximation N\u0303\u03c8 of N\u03c8 by using amplitude estimation, and then construct the approximate observable with n\u03c8 replaced by n\u0303\u03c8.\nThe general sampling law\nSince the measurement outcome is probabilistic in general, we have to evaluate the expectation\nvalue via sampling. Let O be an observable with \u00b5 := \u27e8O\u27e9 = \u27e8\u03c8|O|\u03c8\u27e9 being the expectation value, where |\u03c8\u27e9 is a quantum state. Suppose that we conduct n experiments with the outcomes labelled \u00b51, \u00b7 \u00b7 \u00b7 , \u00b5n. By the law of large numbers\nPr (\u2223\u2223\u2223\u00b51 + \u00b7 \u00b7 \u00b7+ \u00b5n n \u2212 \u00b5 \u2223\u2223\u2223 < \u03b5) \u2265 1\u2212 Var(O) n\u03b52 ,\nwhere Var(O) is the variance. For a given lower bound p, the number of samples required to estimate \u27e8O\u27e9 to additive precision \u03b5 satisfies\n1\u2212 Var(O) n\u03b52 \u2265 p =\u21d2 n \u2265 1 1\u2212 p Var(O) \u03b52 .\nThis implies a multiplicative factor Var(O)/\u03b52 in the total gate complexity [44, 51], which is referred to as the \u201cgeneral sampling law\u201d in this article. We remark that in many cases of interest, the number of repetitions can be reduced to O(1/\u03b5), up to polylogarithmic factors. For example, quantum algorithms based on amplitude amplification and estimation are able to compute numerical approximations to sums and integrals with a quadratic speedup over classical probabilistic algorithms, so that the number of repetitions of the quantum simulation follows the \u201cquantum sampling law\u201d O(1/\u03b5), up to polylogarithmic factors [44]. When O = U is a unitary gate acting on the space of |\u03c8\u27e9, one can apply the Hadamard test to create a random variable whose expected value is the expected real part Re\u27e8\u03c8|U |\u03c8\u27e9 or imaginary part Im\u27e8\u03c8|U |\u03c8\u27e9 [1]. The above sampling law is still valid. Such a technique is also employed in [25, 53] for ground-state preparation and energy estimation, where U = e\u2212i\u03c4H is the time evolution operator. In this paper, we only assume the general sampling law O(Var(O)/\u03b52). Noting that\nVar(O) = (nGn\u03c8) 4Var(G) \u2272 n4\u03c8,\nwe may need to include this multiplicative factor n4\u03c8 in the query complexity. Below we will show that in fact we can replace this factor instead by n\u03c80 where n\u03c80 = N\u03c80/M d/2 = \u2225w0\u2225/Md/2 as defined in [38].\nFor the QLSA of the upwind discretisation, referring to the linear system (3.25), and noting\nthat \u2225B\u2225 \u2272 1 + \u2206t and \u2225L\u22121\u2225 = \u03c3max(L\u22121) \u2272 Nt, we have\nN\u03c8 = \u2225w\u2225 = \u2225L\u22121F\u2225 \u2264 Nt\u2225F\u2225 \u2272 Nt\u2225w0\u2225, and n\u03c8 \u2272 Ntn\u03c80 ,\nwhich gives the multiplicative factor N4t n 4 \u03c80 . However this N4t factor can be removed as addressed in [5, 51] by adding Nt copies of the final state w Nt . That is, we add the following additional equations\nwn+1 \u2212wn = 0, n = Nt, \u00b7 \u00b7 \u00b7 , 2Nt (3.28)\nin (3.25), which is referred to as the dilation procedure. For simplicity, we assume that \u2225w1\u2225 = \u00b7 \u00b7 \u00b7 = \u2225wNt\u2225 = \u2225w0\u2225 = N\u03c80 . Let the padded state vector be\nw\u0302 = [w\u03021; \u00b7 \u00b7 \u00b7 ; w\u0302Nt ; w\u0302Nt , \u00b7 \u00b7 \u00b7 , w\u0302Nt ] = |0\u27e9 \u2297 x+ |1\u27e9 \u2297 y, (3.29)\nwhere |0\u27e9 = [1, 0]T , |1\u27e9 = [0, 1]T , and the unnormalized vectors are\nx = [w\u03021; \u00b7 \u00b7 \u00b7 ; w\u0302Nt ], y = [w\u0302Nt , \u00b7 \u00b7 \u00b7 , w\u0302Nt ],\nsatisfying\n\u2225w\u0302Nt\u22252 = 1 2Nt = 1 2NtN2\u03c80 \u2225wNt\u22252.\nLet us block the matrix O as (Oij) according to the structure of w. One easily finds that Oij = O are zeros matrices when (i, j) \u0338= (Nt, Nt). Then,\n\u27e8O\u27e9 = \u27e8\u03c8|O|\u03c8\u27e9 = 1 N2\u03c8 \u27e8w|O|w\u27e9 = 1 N2\u03c8 (wNt)\u2020ONt,Ntw Nt (3.30)\n= 2NtN\n2 \u03c80\nN2\u03c8 (w\u0302Nt)\u2020ONt,Ntw\u0302 Nt = 2N2\u03c80 N2\u03c8 (y)\u2020Oyy Nt\n= N2\u03c80 Md/2 Md/2 N2\u03c8 \u27e8w\u0302|O\u0302|w\u0302\u27e9 = n2\u03c80 1 n2\u03c8 \u27e8w\u0302|O\u0302|w\u0302\u27e9,\nwhere Oy = diag(ONt,Nt , \u00b7 \u00b7 \u00b7 , ONt,Nt), and O\u0302 = diag(O, \u00b7 \u00b7 \u00b7 ,O, Oy). It is evident that Var(O\u0302) \u223c Var(O), and hence Var(O\u0302/n2\u03c8) \u2272 1, which implies that the new multiplicative factor is n 4 \u03c80 , as expected. It\u2019s worth pointing out that the solution vector in (3.29) only requires one ancilla qubit.\nBoosting the success probability of the final state projection\nIt can be seen from (3.30) that the observable is an expectation value taken with respect to\nthe value of the state at the final time. When the solution decays exponentially in time, the success probability of projecting the history state onto the final state is exponentially small. One can raise the success probability via the amplitude amplification as in [7, 18]. This implies a multiplicative factor g = maxt\u2208[0,T ] \u2225w(t)\u2225/\u2225w(T )\u2225 in the time complexity, which characterises the decay of the final state relative to the initial state.\nIn conclusion, the additional multiplicative factor in the time complexity is gn4\u03c80/\u03b5 2 for the\ncomputation of the observable. In the subsequent discussion, we will ignore the parameter g for convenience. For the range of n\u03c80 , please refer to Lemma 14 in [38] for some discussions."
        },
        {
            "heading": "3.2.3 The gate complexity of computing the observable",
            "text": "The corresponding result for the quantum state is given in Theorem 3.1. We now consider the\ncomputation of the observable. In this case, we have to discuss the additional cost in estimating the norm of w. Let \u27e8O\u0303\u27e9app be the approximate value of \u27e8O\u0303\u27e9. Then the total error Err satisfies\nErr := |\u27e8O\u27e9 \u2212 \u27e8O\u0303\u27e9app| \u2264 |\u27e8O\u27e9 \u2212 \u27e8O\u0303\u27e9|+ |\u27e8O\u0303\u27e9 \u2212 \u27e8O\u0303\u27e9app| =: I1 + I2, (3.31)\nwhere the first term is for the estimation of N\u03c8 = \u2225w\u2225, and the second one is for the sampling. We first need to evaluate N\u03c8 = \u2225w\u2225, with the result described as follows. One can refer to [55, Theorem 16] and [13, Corollary 32] for details.\nLemma 3.3 (Estimation of \u2225A\u22121b\u2225). Let Ax = b for an N\u00d7N matrix with sparsity s and condition number \u03ba. Then there exists a quantum algorithm that outputs \u03b1\u0303 such that\n|\u03b1\u0303\u2212 \u2225x\u2225| \u2264 \u03b7\u2225x\u2225\nwith probability at least 0.99, in time O ( (TU + Tb) \u03ba\n\u03b7 log3 \u03ba log log\n\u03ba \u03b7\n) ,\nwhere Tb is the time of constructing the state |b\u27e9 = 1\u2225b\u2225 \u2211 bi|i\u27e9, and\nTU = logN ( logN + log2.5 s\u03ba log(\u03ba/\u03b7)\n\u03b7\n) log2 \u03ba\n\u03b7 .\nThe cost Tb is neglected throughout the paper. With the help of the above result, we are\nable to bound the gate complexity of computing the observable for the QLSA of the Liouville representation.\nTheorem 3.2. Suppose the condition of Theorem 3.1 is satisfied and supx |Fi(x)| = O(1) for i = 1, \u00b7 \u00b7 \u00b7 , d. Given the error tolerance \u03b5, if the QLSA for the upwind finite difference discretisation is used, then the observable of the Liouville representation (3.5) can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Ld3\n\u03b55 log\n1 \u03b5\n) ,\nwhere nL = \u2225(\u03c1\u03c9)0\u2225/Md/2.\nProof. (1) For the error I1 in (3.31), let \u03b1 and \u03b1\u0303 be the exact and approximate norms of w, respectively. Denote n\u0303\u03c8 = N\u0303\u03c8/M d/2 = \u03b1\u0303/Md/2 and n\u03c8 = N\u03c8/M\nd/2 = \u03b1/Md/2, where |\u03b1\u0303\u2212\u03b1| \u2264 \u03b7\u03b1. Then\n|(n\u0303\u03c8)2 \u2212 (n\u03c8)2| \u2264 \u03b7n\u03c8(n\u03c8 + n\u0303\u03c8) \u2264 \u03b7(2 + \u03b7)(n\u03c8)2,\nand the error\nI1 = |(nGn\u0303\u03c8)2\u03a5\u2212 (nGn\u03c8)2\u03a5| \u2264 \u03b7(1 + \u03b7)(nGn\u03c8)2\u03a5 = \u03b7(2 + \u03b7)\u27e8O\u27e9.\nThis suggests to take \u03b7 = O(\u03b5) since \u27e8O\u27e9 = O(1). For the error I2, by the general sampling law, we can obtain an approximation \u27e8O\u0303\u27e9app to precision \u03b5 by repeating the quantum algorithm k = O(n4\u03c80/\u03b5 2) times, where n\u03c80 = nL := \u2225(\u03c1\u03c9)0\u2225/Md/2.\n(2) According to Theorem 3.1, one has\nM = 1/\u2206x \u223c d/\u03b53, \u2206t \u223c \u2206x/d, \u03ba \u223c 1/\u2206t \u223c d2/\u03b53, s \u223c d.\n(3) Let T1 be the gate complexity of obtaining the estimation of N\u03c8. By Lemma 3.3,\nT1 = O\u0303(\u03ba/\u03b7) = O\u0303(d2/\u03b54).\nLet T2 be the gate complexity of the QLSA. Then,\nT2 = O\u0303 ( s\u03ba log 1\n\u03b5\n) = O\u0303 (d3 \u03b53 log 1 \u03b5 ) .\nThe overall gate complexity is\nT = T1 + kT2 = O\u0303 (n4\u03c80d3\n\u03b55 log\n1 \u03b5\n) .\nThe proof is completed.\nRemark 3.4. As observed in the proof, the overall complexity T of the algorithm is dominated by the complexity kT2 of sampling. This implies, when computing the observables, we just need to multiply the original gate complexity under an appropriate mesh strategy by the sampling factor k = O(Var(O)/\u03b52). We further remark that the classical cost contains exponential terms in dimension like dd and (1/\u03b5)d, which is absent in applications where nL does not grow so quickly.\nRemark 3.5. Despite the absence of the unitary structure, we can still propose a \u201cquantum simulation\u201d algorithm for the Liouville representation as shown in Appendix A by using the dimensional splitting Trotter based approximation. The basic idea of the algorithm is to transform the asymmetric evolution in each direction into a symmetric one, which requires only a simple variable substitution with the transformation matrix being diagonal. However, unlike the traditional time-marching Hamiltonian simulation, non-unitary procedures for the variable substitution are involved, which leads to exponential increase of the cost arising from multiple copies of initial quantum states at every time step as pointed out in Remark A.1."
        },
        {
            "heading": "3.3 Finite difference discretisation for the KvN representation",
            "text": ""
        },
        {
            "heading": "3.3.1 The QLSA for the finite difference discretisation",
            "text": "We consider the upwind finite difference discretisation for the KvN representation, which can\nbe written as  \u2202tu+ d\u2211 i=1 Fi \u2202u \u2202xi + 12(divF )u = 0, u = \u03c8 \u03c9,\nu(x, 0) = \u03c8\u03c90 .\n(3.32)\nThe scheme reads\nun+1j \u2212 [ 1\u2212 1\n2 \u2206t(divF )j \u2212 \u03bb d\u2211 \u2113=1 (b\u2113,+j \u2212 b \u2113,\u2212 j ) ] unj + \u03bb d\u2211 \u2113=1 [ b\u2113,\u2212j u n j+e\u2113 \u2212 b\u2113,+j u n j\u2212e\u2113 ] = 0, (3.33)\nwhere\nbk,\u00b1j = { Fk }\u00b1 j , j = (j1, \u00b7 \u00b7 \u00b7 , jd).\nIn matrix form one has\nun+1 \u2212Bun = 0, n = 0, 1, \u00b7 \u00b7 \u00b7 , Nt \u2212 1. (3.34)\nThe final coefficient matrix L is of the same form as in Eq. (3.25).\nTheorem 3.3. Suppose \u03bb = \u2206t/\u2206x satisfies the following CFL condition\n\u03bb d\u2211 i=1 sup x |Fi(x)| \u2264 1.\n(1) The condition number and the sparsity of L satisfy \u03ba \u2272 1/\u2206t and s = O(d).\n(2) For fixed spatial step \u2206x, let \u2206t = O(\u2206x/d) and \u03c9 = (d\u2206x)1/3. Given the error tolerance \u03b5, the gate complexity of the QLSA is\nNGates = O\u0303 (d3 \u03b53 log 1 \u03b5 ) .\nProof. The proof is similar to the argument in Theorem 3.1, so we omit the details.\nRemark 3.6. For the upwind discretisation of the KvN representation, the forcing term 12(divF )u will contribute to the l1 error an exponentially growing term like e tn\u2225divF\u2225\u221e . In fact, one easily obtains from (3.33) that\n\u2225un+1\u22251 \u2264 ( 1 + 1\n2 \u2206t\u2225divF\u2225\u221e\n) \u2225un\u22251 \u2264 ( 1 + 1\n2 \u2206t\u2225divF\u2225\u221e\n)n \u2225u0\u22251\n= ( 1 + 1\n2 tn n \u2225divF\u2225\u221e\n)n \u2225u0\u22251 \u2264 etn\u2225divF\u2225\u221e\u2225u0\u22251.\nAs a comparison, if one uses the Liouville equation, the l1 norm of the error is contracting, as shown in Remark 3.3."
        },
        {
            "heading": "3.3.2 The gate complexity of computing the observable",
            "text": "Let n = Nt for convenience. For the KvN approximation, from (3.21) we know that the\nobservable at t = tn is\n\u27e8O\u03c8\u03c9 ,n\u27e9 = 1\nMd/2 (\u03c8\u03c9n ) \u2020GM\u03c8 \u03c9 n \u2248\n1\nMd/2 (un)\u2020GMu\nn = 1\nMd/2 u\u2020GMu,\nwhere u is the solution of (3.34), and GM = diag(O, \u00b7 \u00b7 \u00b7 ,O, GM ). Let\n|\u03c8\u27e9 = 1 N\u03c8 \u2211 j,n uj,n|j\u27e9|n\u27e9,\nwhere the normalisation N\u03c8 = \u2225u\u2225. The expectation of the observable can be defined as\n\u27e8O\u03c8\u03c9 ,n\u27e9 = 1\nMd/2 \u27e8\u03c8|O|\u03c8\u27e9 =: \u27e8O\u27e9, O =\nN2\u03c8\nMd/2 GM .\nOne easily finds from (3.21) that Var(GM ) is bounded since\nVar(GM ) = \u27e8G2M \u27e9 \u2212 \u27e8GM \u27e92 \u2264 \u2225GM\u03c8\u22252 \u2272 1.\nFollowing the similar analysis in Subsect. 3.2.2 for the Liouville representation, one obtains\nthe multiplicative factor in the time complexity can be given by n4K/\u03b5 2, where nK = \u2225u0\u2225/Md/4 = \u2225(\u03c8\u03c9)0\u2225/Md/4, where we have omitted the parameter g which characterises the decay of the final state relative to the initial state. The arguments for computing the observable of the Liouville representation also apply to the KvN representation. The corresponding result is described in the following theorem.\nTheorem 3.4. Suppose the condition of Theorem 3.3 is satisfied and supx |Fi(x)| = O(1) for i = 1, \u00b7 \u00b7 \u00b7 , d. Given the error tolerance \u03b5, if the QLSA for the upwind finite difference discretisation\nis used, then the observable of the KvN representation can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Kd3\n\u03b55 log\n1 \u03b5\n) ,\nwhere nK = \u2225(\u03c8\u03c9)0\u2225/Md/4.\nProof. The KvN representation has the same error estimate as the Liouville representation, which leads to the same mesh strategy. From Theorem 3.3, we also observe the same condition number and sparsity for the associated coefficient matrix. We therefore obtain the same gate complexity with the multiplicative factor replaced by n4K/\u03b5 2.\nRemark 3.7. In view of the relation (3.12), one easily finds that\nnL = \u2225(\u03c1\u03c9)0\u2225 Md/2 = \u2225(\u03c8\u03c9)0\u22252 Md/2 = n2K ."
        },
        {
            "heading": "3.4 Spectral discretisation for the KvN representation",
            "text": "The KvN representation can be solved by quantum Hamiltonian simulation directly since\nthe evolutionary operator is Hermitian, where the Hamiltonian simulation can be realised by the quantum version of the classical Fourier spectral method. On the other hand, we can also develop the QLSA based method for the spectral discretisation."
        },
        {
            "heading": "3.4.1 The notations",
            "text": "We consider the Fourier spectral discretisation. To this end, we first introduce some notations\nfrequently used in this article.\nFor one-dimensional problems we choose a uniform spatial mesh size \u2206x = 1/M for M =\n2N = 2m with m an positive integer and the time step \u2206t, and we let the grid points and the time step be\nxj = j\u2206x, tn = n\u2206t, j = 0, 1, \u00b7 \u00b7 \u00b7 , N, n = 0, 1, \u00b7 \u00b7 \u00b7 .\nWe consider the periodic boundary conditions. For x \u2208 [0, 1], the 1-D basis functions for the Fourier spectral method are usually chosen as\n\u03d5l(x) = e i\u00b5lx, \u00b5l = 2\u03c0l, 1 = \u2212N, \u00b7 \u00b7 \u00b7 , N \u2212 1.\nFor convenience, we adjust the index as\n\u03d5l(x) = e i\u00b5lx, \u00b5l = 2\u03c0(l \u2212N \u2212 1), 1 \u2264 l \u2264M = 2N.\nThe approximation in the 1-D space is\nu(t, x) = M\u2211 l=1 cl(t)\u03d5l(x), x = xj , j = 0, 1, \u00b7 \u00b7 \u00b7 ,M \u2212 1. (3.35)\nwhich can be written in vector form, u(t) = \u03a6c(t), where\nu(t) = (u(t, xj))M\u00d71, c = (cl)M\u00d71, \u03a6 = (\u03d5jl)M\u00d7M = (\u03d5l(xj))M\u00d7M .\nThe d-dimensional grid points are then given by xj = (xj1 , \u00b7 \u00b7 \u00b7 , xjd), where j = (j1, \u00b7 \u00b7 \u00b7 , jd), and\nxji = ji\u2206x, ji = 0, 1, \u00b7 \u00b7 \u00b7 ,M \u2212 1, i = 1, \u00b7 \u00b7 \u00b7 , d.\nWe use the notation 1 \u2264 j \u2264 M to indicate 1 \u2264 ji \u2264 M for every component of j. The multidimensional basis functions are written as \u03d5l(x) = \u03d5l1(x1) \u00b7 \u00b7 \u00b7\u03d5ld(xd), where l = (l1, \u00b7 \u00b7 \u00b7 , ld) and 1 \u2264 l \u2264M . The corresponding approximate solution is u(t, x) = \u2211 l cl(t)\u03d5l(x), with the coefficients determined by the exact values at the grid or collocation points xj . These collocation values will be arranged as a column vector:\nu(t) = \u2211 j u(t, xj)|j1\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |jd\u27e9.\nThat is, the nj-th entry of u is u(t, xj), with the global index given by\nnj := j12 d\u22121 + \u00b7 \u00b7 \u00b7+ jd20, j = (j1, \u00b7 \u00b7 \u00b7 , jd).\nSimilarly cl is written in a column vector as c = \u2211\nl cl|l1\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |ld\u27e9. To determine the transformation matrix between u and c, let cl = cl1 \u00b7 \u00b7 \u00b7 cld . Then\nu(t, xj) = \u2211 l cl1 \u00b7 \u00b7 \u00b7 cld\u03d5l1(xj1) \u00b7 \u00b7 \u00b7\u03d5ld(xjd). (3.36)\nThe direct calculation gives\u2211 j u(t, xj)|j1\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |jd\u27e9 = (\u2211 j1,l1 cl1\u03d5l1(xj1)|j1\u27e9 ) \u2297 \u00b7 \u00b7 \u00b7 \u2297 (\u2211 jd,ld cld\u03d5ld(xj1)|jd\u27e9 ) ,\nwhich implies\nu = (\u03a6c(1))\u2297 \u00b7 \u00b7 \u00b7 \u2297 (\u03a6c(d)) = (\u03a6\u2297 \u00b7 \u00b7 \u00b7 \u2297 \u03a6)(c(1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 c(d)) = \u03a6\u2297dc,\nwhere\n\u03a6\u2297 d = \u03a6\u2297 \u00b7 \u00b7 \u00b7 \u2297 \u03a6\ufe38 \ufe37\ufe37 \ufe38\nd matrices\n, c(i) = (cli)M\u00d71,\nc = c(1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 c(d) = \u2211 l cl|l1\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |ld\u27e9. (3.37)\nThis shows that by arranging xj in the order of |j1\u27e9\u2297\u00b7 \u00b7 \u00b7\u2297|jd\u27e9, and cl in the order of |l1\u27e9\u2297\u00b7 \u00b7 \u00b7\u2297|ld\u27e9, the corresponding coefficient matrix is exactly the tensor product of the matrices in one dimension.\nFor later use, we next determine the transitions between the position operator x\u0302j and the\nmomentum operator P\u0302j = \u2212i \u2202\u2202xj in discrete settings. We first consider the one-dimensional case. Let u(x) be a function in one dimension and u = [u(x0), \u00b7 \u00b7 \u00b7 , u(xM\u22121)]T be the mesh function with M = 2N . The discrete position operator x\u0302d of x\u0302 can be defined as\nx\u0302d : u = ( u(xi) ) \u2192 ( xiu(xi) ) = Dxu or x\u0302 du = Dxu,\nwhere Dx = diag(x0, x1, \u00b7 \u00b7 \u00b7 , xM\u22121) is the matrix representation of the position operator in x-space. By the discrete Fourier expansion in (3.35), the momentum operator can be discretised as\nP\u0302 u(x) \u2248 P\u0302 M\u2211 l=1 cl\u03d5l(x) = M\u2211 l=1 clP\u0302 \u03d5l(x) = M\u2211 l=1 cl(\u2212i\u2202x\u03d5l(x))\n= M\u2211 l=1 cl\u00b5l\u03d5l(x), \u00b5l = 2\u03c0(l \u2212N \u2212 1)\nfor x = xj , j = 0, 1, \u00b7 \u00b7 \u00b7 ,M \u2212 1, which is written in matrix form as\nP\u0302 du = \u03a6D\u00b5\u03a6 \u22121u =: Pxu, D\u00b5 = diag(\u00b51, \u00b7 \u00b7 \u00b7 , \u00b5M ),\nwhere P\u0302 d is the discrete momentum operator. The matrices D\u00b5 and Px can be referred to as the matrix representation of the momentum operator in p-space and x-space, respectively, and are related by the discrete Fourier transform.\nFor d dimensions, we still denote u = \u2211\nj u(xj)|j1\u27e9 \u00b7 \u00b7 \u00b7 |jd\u27e9. Let\nu(xj) = u(xj1 , \u00b7 \u00b7 \u00b7 , xjd) = u (1)(xj1) \u00b7 \u00b7 \u00b7u(d)(xjd),\nwhere u(l) = \u03a6c(l). One has u = u(1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 u(d). The discrete position operator x\u0302dl is defined as\nx\u0302dl : u = u (1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 u(d) \u2192 u(1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 u\u0303(l) \u2297 \u00b7 \u00b7 \u00b7 \u2297 u(d),\nwhere\nu\u0303(l) := ( xjliu (l)(xjli ) ) = Dxu (l).\nThen,\nx\u0302dl u = (I \u2297l\u22121 \u2297Dx \u2297 I\u2297 d\u2212l )u =:Dlu.\nUsing the expansion in (3.36), one easily finds that\nP\u0302 dl u = (I \u2297l\u22121 \u2297 Px \u2297 I\u2297 d\u2212l )u =: Plu.\nNote that\n(\u03a6\u2297 d )\u22121Pl\u03a6 \u2297d = I\u2297 l\u22121 \u2297D\u00b5 \u2297 I\u2297 d\u2212l =:D\u00b5l . (3.38)"
        },
        {
            "heading": "3.4.2 The QLSA for the spectral discretisation",
            "text": "Let us consider the matrix representation of the operator H\u0302j in (3.8), where\nH\u0302j = 1\n2 (Fj(x\u0302)P\u0302j + P\u0302jFj(x\u0302)).\nFor clarity, we still use u to denote the mesh function of \u03c8 (see the notations in Subsect. 3.4.1). When performing series expansion on F , one has\nFj(x\u0302 d)u := \u2211 l al(x\u0302 d 1) l1 \u00b7 \u00b7 \u00b7 (x\u0302dd)ldu = \u2211 l al(D l1 1 \u00b7 \u00b7 \u00b7D ld d )u\n= \u2211 l al(D l1 x \u2297 \u00b7 \u00b7 \u00b7 \u2297Dldx )u =: Fju\nin the discrete setting, where Fj is clearly a diagonal matrix. We assume that the series expansion is accurate enough to simplify the discussion. Then one has\nH\u0302dj u = 1\n2 (Fj(x\u0302\nd)P\u0302 dj + P\u0302 d j Fj(x\u0302\nd))u = 1\n2 (FjPj + PjFj)u =:Hju.\nOne easily finds that the sparsity of Hj is O(M). The resulting system of ordinary differential equations is  d dtu(t) = Au(t), A = \u2212i d\u2211 j=1 Hj ,\nu(0) = (\u03c8\u03c9(0, xj)).\n(3.39)\nThe analytic solution is obviously given by\nu(t) = eAtu(0) = exp ( \u2212 i d\u2211 j=1 Hj ) u(0),\nwhich implies \u2225u(t)\u2225 = \u2225u(0)\u2225 for any t \u2265 0 since Hj are real symmetric matrices. Let n = Nt and denote\n|\u03c8\u27e9 = 1 N\u03c8 \u2211 j unj |j\u27e9, N\u03c8 = \u2225un\u2225.\nSince N\u03c8 = \u2225un\u2225 = \u2225u0\u2225 =: N\u03c80 , the observable can be reformulated as\n\u27e8O\u03c8\u03c9 ,n\u27e9 = 1\nMd/2 (\u03c8\u03c9n ) \u2020GM\u03c8 \u03c9 n \u2248\n1\nMd/2 (un)\u2020GMu n = N2\u03c80 Md/2 \u27e8\u03c8|GM |\u03c8\u27e9 =: \u27e8\u03c8|O|\u03c8\u27e9.\nThe ODEs in (3.39) can be solved by the quantum differential equations solver reported in\n[5,7,18]. Here we consider the one in [7] with the result described below. For convenience, we still refer it to as the QLSA based method since the approach in [7] applies the QLSA.\nLemma 3.4. Suppose A = V \u22121DV is an N\u00d7N diagonalizable matrix, where D = diag(\u03bb1, \u00b7 \u00b7 \u00b7 , \u03bbN ) satisfies Re(\u03bbj) \u2264 0 for any j \u2208 {1, \u00b7 \u00b7 \u00b7 , N}. In addition, suppose A has at most s nonzero entries in any row and column, and we have an oracle OA that computes these entries. Suppose xin and b are N -dimensional vectors with known norms and that we have two controlled oracles, Ox and Ob, that prepare the states proportional to xin and b, respectively. Let x evolve according to the differential equation dx\ndt = Ax+ b\nwith the initial condition x(0) = xin. Let T > 0 and g = maxt\u2208[0,T ] \u2225x(t)\u2225/\u2225x(T )\u2225. Then there exists a quantum algorithm that produces a state \u03f5-close to x(T )/\u2225x(T )\u2225 in l2 norm, succeeding with probability \u2126(1), with a flag indicating success, using\nO ( s\u03baV \u2225A\u2225gT \u00b7 Poly(log(s\u03baV \u2225A\u2225gT\u03b2/\u03b5)) ) queries to OA, Ox , and Ob, where \u03baV is the condition number of the transformation matrix V , g characterises the decay of the final state relative to the initial state, and \u03b2 = (\u2225xin\u2225 + T\u2225b\u2225)/\u2225x(T )\u2225. The gate complexity of this algorithm is larger than its query complexity by a factor of Poly(log(sN\u03baV \u2225A\u2225gT\u03b2/\u03b5)).\nNote that the parameter g can be dropped if we only output the quantum state |x\u27e9, not the projection |x(T )\u27e9. For the approximate evolutionary operator in (A.2), we are ready to quantify the gate complexity for the QLSA.\nRemark 3.8. The authors in [7] utilised the matrix exponential to construct a linear system for the ODEs and solved the linear system by using the QLSA proposed in [20]. As claimed in [20], the gate complexity exceeds the query complexity by a multiplicative factor O(logN + log2.5(s\u03ba/\u03b5)), where N = O(Md) is the order of the matrix A. This implies the linear dependence of the dimension d when considering the gate complexity with respect to the matrix order.\nTheorem 3.5. Assume that max1\u2264j\u2264d \u2225Fj\u2225 = O(1) and T = O(1).\n(1) There exists a quantum algorithm that produces a state \u03b5-close to u(T )/\u2225u(T )\u2225 with the gate complexity given by\nNGates = O\u0303 (d2+2/\u2113 \u03b52+4/\u2113 ) .\n(2) The observable of the KvN representation can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Kd2+2/\u2113\n\u03b54+4/\u2113\n) ,\nwhere nK = \u2225(\u03c8\u03c9)0\u2225/Md/4.\nProof. (1) Let A = V \u22121DV with D = diag(\u03bb1, \u00b7 \u00b7 \u00b7 , \u03bbN ), where N = O(Md) is the order of A. Since Hj are real symmetric matrices, the matrix \u2211d j=1Hj has only real eigenvalues and the transformation matrix V can be chosen as an orthogonal matrix. This implies Re(\u03bbj) = 0 for any j \u2208 {1, \u00b7 \u00b7 \u00b7 , N} and \u03baV = 1. According to Lemma 3.4, there exists a quantum algorithm that produces a state \u03b5-close to u(T )/\u2225u(T )\u2225 with the gate complexity given by\nNGates = O ( s\u03baV \u2225A\u2225T \u00b7 Poly(log(sN\u03baV \u2225A\u2225T/\u03b5)) ) ,\nwhere we have omitted the parameter g that characterises the decay of the final state relative to the initial state.\nIt is evident that the sparsity of A is O(dM) = O(d/\u2206x). The norm of A satisfies\n\u2225A\u2225 \u2264 d\u2211 j=1 \u2225Hj\u2225 \u2264 d\u2211 j=1 \u2225Fj\u2225\u2225Pj\u2225 \u2264 d\u2211 j=1 \u2225Fj\u2225\u2225D\u00b5j \u2225\n\u2264M d\u2211 j=1 \u2225Fj\u2225 \u2264 dM max 1\u2264j\u2264d \u2225Fj\u2225 = d/\u2206x \u00b7 max 1\u2264j\u2264d \u2225Fj\u2225.\nAccording to Lemma 3.2, the error of the spectral discretisation is O(\u03c9+\u2206t\u03b1/\u03c9\u03b1+d\u2206x\u2113/\u03c9\u2113+1), where \u03b1 is for the precision of the temporal discretisation which has been considered in the quantum algorithm in [7]. To reach a precision of \u03b5, one just needs to set \u03c9 \u223c d\u2206x\u2113/\u03c9\u2113+1 \u223c \u03b5, and gets \u2206x \u223c \u03b51+2/\u2113/d1/\u2113. Therefore, we have\nNGates = O\u0303 ( d2 \u2206x2 ) = O\u0303 (d3+2/\u2113 \u03b52+4/\u2113 ) .\nwhere in the last equal sign we have included the additional factor d arising from the matrix order (see Remark 3.8).\n(2) For the spectral discretisation, the constant N\u03c8 is known. The desired estimate follows\nfrom the general sampling law."
        },
        {
            "heading": "3.4.3 The quantum simulation for the spectral discretisation",
            "text": "The ODEs (3.39) can also be solved by quantum Hamiltonian simulations.\nTheorem 3.6. Given the error tolerance \u03b5, assume that max1\u2264j\u2264d \u2225Fj\u2225\u221e = O(1) and the simulation time t = O(1).\n(1) The semi-discrete problem (3.39) obtained from the spectral discretisation of the KvN represen-\ntation can be simulated with gate complexity given by NGates = O\u0303 (d2+2/\u2113 \u03b53+4/\u2113 ) .\n(2) The observable of the KvN representation can be computed with gate complexity given by NGates(\u27e8O\u27e9) = O\u0303 (n4Kd3+2/\u2113\n\u03b54+4/\u2113\n) ,\nwhere nK = \u2225(\u03c8\u03c9)0\u2225/Md/4.\nProof. (1) Let H = \u2211d\nj=1Hj . Then the evolution of (3.39) can be written as |\u03c8(t)\u27e9 = e\u2212iHt|\u03c8(0)\u27e9. According to Theorem 1 in [6], e\u2212iHt can be simulated within error \u03b5 with\nO ( \u03c4(md + log 2.5(\u03c4/\u03b5)) log(\u03c4/\u03b5)\nlog log(\u03c4/\u03b5)\n) = O(\u03c4md \u00b7 polylog)\n2-qubits gates, where \u03c4 = s\u2225H\u2225maxt, s is the sparsity of H and \u2225H\u2225max denotes the largest entry of H in absolute value, and\npolylog \u2261 log2.5(\u03c4/\u03b5) log(\u03c4/\u03b5) log log(\u03c4/\u03b5) .\nThis result is near-optimal by Theorem 2 therein. The sparsity of H is s = O(dM). According to the proof of Theorem 3.5, the mesh strategy is M = 1/\u2206x = d1/\u2113/\u03b51+2/\u2113, and hence the number of qubits per dimension is\nm = O(logM) = O ( log d1/\u2113\n\u03b51+2/\u2113\n) .\nThe total number of qubits is md = dm. With these settings, noting that\nHmax \u2264 d\u2211 j=1 \u2225Hj\u2225\u221e \u2272M d\u2211 j=1 \u2225Fj\u2225\u221e \u2264 dM \u00b7 max 1\u2264j\u2264d \u2225Fj\u2225\u221e,\none has\n\u03c4 = O (d2+2/\u2113 \u03b52+4/\u2113 ) , \u03c4/\u03b5 = O (d2+2/\u2113 \u03b53+4/\u2113 ) .\nThe gate complexity for solving the ODEs is then given by NGates = O\u0303 (d3+2/\u2113 \u03b52+4/\u2113 ) .\n(2) The gate complexity for computing the observable is obtained from the general sampling\nlaw.\nOne can also run the simulation along each direction by using the Trotter based approximation.\nThe evolution of (3.8) can be written as\n|\u03c8(t+\u2206t)\u27e9 = e\u2212i(H\u03021+\u00b7\u00b7\u00b7+H\u0302d)\u2206t|\u03c8(t)\u27e9.\nLet\nU\u2206t = e \u2212iH\u0302d\u2206t \u00b7 \u00b7 \u00b7 e\u2212iH\u03021\u2206t. (3.40)\nOne has [16,62]\ne\u2212i(H\u03021+\u00b7\u00b7\u00b7+H\u0302d)\u2206t = U\u2206t + CH\u2206t 2, (3.41)\nwhere CH depends on the operator H\u0302 = H\u03021 + \u00b7 \u00b7 \u00b7+ H\u0302d or the matrix H, considered as O(1) in the following. Therefore, the problem is reduced to the simulation of each H\u0302j .\nRemark 3.9. One can clearly make the time discretization second order by using Strang\u2019s splitting. Since other methods use first order time discretization, in order to compare the time complexities on equal footing we also use first order time discretization, namely the simple splitting, here.\nFirst, we determine the mesh strategy. According to the error estimate in Lemma 3.2 and\nnoting Eq. (3.41), one has the error estimate\ne\u03c8 \u2264 C(\u03c9 +\u2206t/\u03c9 + d\u2206x\u2113/\u03c9\u2113+1).\nThe above error bounds suggest the following mesh strategy:\nM = 1/\u2206x = O(d1/\u2113/\u03b51+2/\u2113), \u2206t \u223c \u03b52. (3.42)\nSecond, we quantify the number of gates used in the quantum simulation. According to\nTheorem 1 in [6], e\u2212iH\u0302j\u2206t can be simulated within error \u03b7 with\nO ( \u03c4(md + log 2.5(\u03c4/\u03b7)) log(\u03c4/\u03b7)\nlog log(\u03c4/\u03b7) ) 2-qubits gates, where \u03c4 = s\u2225Hj\u2225max\u2206t, s is the sparsity of Hj and \u2225Hj\u2225max denotes the largest entry of Hj in absolute value. One can check that the sparsity of Hj is s = O(M). Therefore, U\u2206t defined in (3.40) can be simulated within error O(d\u03b7) [51, Proposition 1.12] with\nNGates(U\u2206t) = O(d\u03c4md \u00b7 polylog),\nwhere\n\u03c4 =MH\u0303max\u2206t, H\u0303max = max j \u2225Hj\u2225max \u2272M max j \u2225Fj\u2225max,\npolylog = log2.5(\u03c4/\u03b7) log(\u03c4/\u03b7)\nlog log(\u03c4/\u03b7) .\nWe also need d\u03b7 = O(\u2206t2) or \u03b7 = O(\u03b54/d), and the number of qubits per dimension is m = O(log(d1/\u2113/\u03b51+2/\u2113)). The total number of qubits is md = dm. With these settings, we obtain\n\u03c4 = O ( \u2206t d2/\u2113\n\u03b52+4/\u2113\n) , \u03c4/\u03b7 = O (d1+2/\u2113 \u03b56+4/\u2113 ) ,\nand the total number of gates required to iterate to the n-th step is NGates = nNGates(U\u2206t) = O\u0303 (d2+2/\u2113 \u03b52+4/\u2113 ) . Compared with the one-step implementation in Theorem 3.6, the complexity is improved in sparsity.\nRemark 3.10. From time t = tn to time t = tn+1, we solve u n+1 = Ud\u2206tu n, where Ud\u2206t is the discrete version of U\u2206t in (3.40), given by U d \u2206t = e\n\u2212iH\u0302dd\u2206t \u00b7 \u00b7 \u00b7 e\u2212iH\u0302d1\u2206t. According to the previous discussions, one has Ud\u2206tu\nn = Bun, with B = e\u2212iHd\u2206t \u00b7 \u00b7 \u00b7 e\u2212iH1\u2206t. One can alternatively solve a linear system LU = F in the form of Eq. (3.25), which, however, is not a suitable algorithm because the sparsity of L grows exponentially with the number of dimensions, i.e., s(L) = O(Md)."
        },
        {
            "heading": "4 Liouville representation for nonlinear Hamilton-Jacobi PDEs:",
            "text": "finite difference vs. spectral approximations\nIn [38], the level set method was used to map the nonlinear Hamilton-Jacobi equation into linear\nLiouville equation in the phase space, based on which quantum algorithms were then constructed.\nHamilton-Jacobi equations take the following general form\n\u2202tS +H(\u2207S, x) = 0, (4.1)\nS(0, x) = S0(x)\nwith t \u2208 R+, x \u2208 Rd, S(t, x) \u2208 R. Define u = \u2207S \u2208 Rd. Then u solves a hyperbolic system of conservation laws in gradient form:\n\u2202tu+\u2207H(u, x) = 0, (4.2) u(0, x) = \u2207S0(x).\nThe level set function \u03d5i(t, x, p) can be defined by\n\u03d5i(t, x, p = u(t, x)) = 0,\nwhere i = 1, \u00b7 \u00b7 \u00b7 , d and x, p \u2208 Rd, and u(t, x) is the solution of Eq. (4.2). The zero level set of \u03d5 is the set {(t, x, p)|\u03d5i(t, x, p) = 0}. Since u(t, x) solves Eq. (4.2), one can show that \u03d5 = (\u03d51, \u00b7 \u00b7 \u00b7 , \u03d5d) \u2208 Rd solves a (linear!) Liouville equation [43]\n\u2202t\u03d5+\u2207pH \u00b7 \u2207x\u03d5\u2212\u2207xH \u00b7 \u2207p\u03d5 = 0. (4.3)\nThe initial data can be chosen as\n\u03d5i(0, x, p) = pi \u2212 ui(0, x), i = 1, \u00b7 \u00b7 \u00b7 , d. (4.4)\nThen u can be recovered from the intersection of the zero level sets of \u03d5i (i = 1, \u00b7 \u00b7 \u00b7 , d), namely\nu(t, x) = {p(t, x)|\u03d5i(t, x, p) = 0, i = 1, \u00b7 \u00b7 \u00b7 , d}.\nTo retrieve physical observables (and to avoid finding the zero level set of \u03d5 which is challenging)\nlater, [38] proposed to solve for \u03c8, defined by the following problem\n\u2202t\u03c8 +\u2207pH \u00b7 \u2207x\u03c8 \u2212\u2207xH \u00b7 \u2207p\u03c8 = 0, (4.5)\n\u03c8(0, x, p) = d\u220f i=1 \u03b4(pi \u2212 ui(0, x)),\nwhose analytical solution is \u03c8(t, x, p) = \u03b4(\u03d5(t, x, p)). We have thus transformed a (d+1)-dimensional nonlinear Hamilton-Jacobi PDE to a (2d + 1)-dimensional linear PDE \u2013 the Liouville equation, without any approximations or constraints on the nonlinearity. The mapping is exact, but at the expense of doubling the spatial dimension. In the following, we denote w(t, x, p) to be the solution to (4.5) with smoothed initial data, i.e., w = \u03c8\u03c9."
        },
        {
            "heading": "4.1 Finite difference discretisation for the Liouville equation",
            "text": ""
        },
        {
            "heading": "4.1.1 The QLSA for the finite difference discretisation",
            "text": "Consider x, p together as a new variable, and write y = (x, p) = (x1, \u00b7 \u00b7 \u00b7 , xd, p1, \u00b7 \u00b7 \u00b7 , pd) = (y1, \u00b7 \u00b7 \u00b7 , y2d). Use the same uniform mesh in each yi direction. Let j = (j1, \u00b7 \u00b7 \u00b7 , jd, jd+1, \u00b7 \u00b7 \u00b7 , j2d). Then the upwind discretisations for each term of the equation in (4.5) are\n\u2202tw \u2212\u2192 wn+1j \u2212 w n j\n\u2206t ,\n\u2202H \u2202pi \u2202w \u2202xi \u2212\u2192 1 \u2206x {\u2202H \u2202pi }\u2212 j (wnj+ed+i \u2212 w n j ) + 1 \u2206x {\u2202H \u2202pi }+ j (wnj \u2212 wnj\u2212ed+i),\n\u2212 \u2202H \u2202xk \u2202w \u2202pk \u2212\u2192 \u2212 1 \u2206x { \u2202H \u2202xk }+ j (wnj+ek \u2212 w n j )\u2212 1 \u2206x { \u2202H \u2202xk }\u2212 j (wnj \u2212 wnj\u2212ek),\nwhere\n\u03b1+ = max{\u03b1, 0} = \u03b1+ |\u03b1| 2 , \u03b1\u2212 = min{\u03b1, 0} = \u03b1\u2212 |\u03b1| 2 .\nFor convenience we introduce the following notation ak,\u00b1j = { \u2202H \u2202xk }\u00b1 j , bi,\u00b1j = {\u2202H \u2202pi }\u00b1 j . The discrete scheme can be written as\nwn+1j \u2212 w n j + \u03bb d\u2211 i=1 [ bi,\u2212j (w n j+ed+i \u2212 wnj ) + b i,+ j (w n j \u2212 wnj\u2212ed+i) ] \u2212 \u03bb\nd\u2211 k=1 [ ak,+j (w n j+ek \u2212 wnj ) + a k,\u2212 j (w n j \u2212 wnj\u2212ek) ] = 0,\nor\nwn+1j \u2212 [ 1\u2212 \u03bb d\u2211 \u2113=1 (b\u2113,+j \u2212 b \u2113,\u2212 j + a \u2113,+ j \u2212 a \u2113,\u2212 j ) ] wnj\n+ \u03bb d\u2211 \u2113=1 [ b\u2113,\u2212j w n j+ed+\u2113 \u2212 b\u2113,+j w n j\u2212ed+\u2113 \u2212 a \u2113,+ j w n j+e\u2113 + a\u2113,\u2212j w n j\u2212e\u2113 ] = 0. (4.6)\nIn matrix form one has\nwn+1 \u2212Bwn = fn+1, n = 0, 1, \u00b7 \u00b7 \u00b7 , Nt \u2212 1,\nwith f i being the terms resulting from the initial and boundary conditions, where the nodal values at t = tn are arranged as\nwn = \u2211 j wnj |j1\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |jd\u27e9 \u2297 \u00b7 \u00b7 \u00b7 \u2297 |j2d\u27e9.\nThat is, the nj-th entry of W n is wnj , with the global index given by nj := j12 2d\u22121 + \u00b7 \u00b7 \u00b7 + j2d20. The non-zero entries of B can be provided by using the global index as before. The resulting linear system is\nLw = F, (4.7)\nwhere\nw = [w1; \u00b7 \u00b7 \u00b7 ;wNt ], F = [f1;f2; \u00b7 \u00b7 \u00b7 ;fNt ].\nThe coefficient matrix L is of the same form as in Eq. (3.25). Note that we consider the Liouville equation with the smoothed initial data, and for periodic boundary conditions, one has f1 = Bw0 and f i = 0 for i \u2265 2.\nTheorem 4.1. Suppose \u03bb = \u2206t/\u2206x satisfies the following CFL condition\n\u03bb d\u2211 i=1 ( sup x,p |\u2202xiH|+ sup x,p |\u2202piH| ) \u2264 1,\nand assume\nsup x,p |\u2202xiH|+ sup x,p |\u2202piH| = O(1), i = 1, \u00b7 \u00b7 \u00b7 , d.\nThen the condition number and the sparsity of L satisfy \u03ba = O(1/\u2206t) and s = O(d). For fixed spatial step \u2206x, let \u2206t = O(\u2206x/d) and \u03c9 = (d\u2206x)1/3. Given the error tolerance \u03b5, the gate complexity of the quantum difference method is\nNGates = O\u0303 (d3 \u03b53 log 1 \u03b5 ) .\nProof. The proof is similar to the argument in Theorem 3.1, so we omit the details."
        },
        {
            "heading": "4.1.2 The computation of the physical observables",
            "text": "In the following, we consider the computation of the physical observables for the Liouville\nequation and assume the periodic boundary conditions. Then physical observables are defined as \u27e8G(t, x)\u27e9 = \u222b Rd G(p)\u03c8(t, x, p)dp. (4.8)\nFor example, G(p) = 1, p, |p|2/2 yield density, momentum and kinetic energy respectively [38]. As in (3.15), one can compute the integral (4.8) by using the numerical quadrature rule\n\u27e8G(tn, xj)\u27e9 = \u222b Rd \u03c8(tn, xj , p)dp \u2248 1 Md \u2211 l Gl\u03c8 \u03c9 j,l,n = 1 Md \u2211 l Glwj,l,n =: \u27e8G\u03c9n,j\u27e9, (4.9)\nwhere, Gl are the weights, j = (j1, \u00b7 \u00b7 \u00b7 , jd) and l = (l1, \u00b7 \u00b7 \u00b7 , ld) and M is the number of points in each dimension of the 2d phase space.\nLetwj,l,n be the solution of the classical spectral method or the upwind finite difference method\n(for the smoothed initial data). Then for the QLSA one has\n|\u03c8\u27e9 = 1 N\u03c8 \u2211 j,l,n wj,l,n|j\u27e9|l\u27e9|n\u27e9,\nwhere the normalisation N\u03c8 = \u2225w\u2225. For the quantum simulation method, one can just remove the \u201ctime register\u201d (in this case N\u03c8 is for time t = tn). With Gl in (4.9), we define the state\n|Gn,j\u27e9 := 1\nNG \u2211 l G\u2020l |j\u27e9|l\u27e9|n\u27e9\nwhere NG = \u221a\u2211 l |G \u2020 l |2 is the normalisation. Given the density matrix G := |Gn,j\u27e9\u27e8Gn,j |, we define \u03a5 := \u27e8\u03c8|G|\u03c8\u27e9. A simple algebra yields\n\u27e8G(tn, xj)\u27e9 \u2248 \u27e8G\u03c9n,j\u27e9 = n\u03c8nG| \u221a \u03a5|,\nwhere nG = NG/M d/2 = O(1) is known and n\u03c8 = N\u03c8/Md/2 may be unknown. We further define\n\u27e8O\u27e9 = \u27e8G\u03c9n,j\u27e92 = (nGn\u03c8)2\u03a5 := \u27e8\u03c8|O|\u03c8\u27e9, O = (nGn\u03c8)2G,\nas in Subsect. 3.2.2.\nTheorem 4.2. Suppose the condition of Theorem 4.1 is satisfied. Given the error tolerance \u03b5, if the QLSA for the upwind finite difference discretisation is used, then the observable of the Liouville equation (4.5) can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Hd3\n\u03b55 log\n1 \u03b5\n) ,\nwhere nH = \u2225(\u03c8\u03c9)0\u2225/Md/2.\nProof. According to Remark 3.4, one just needs to multiply the gate complexity in Theorem 4.1 by the factor n4H/\u03b5 2.\nRemark 4.1. According to Lemma 14 in [38], one has nH = O(\u03b2dMd/2) if we assume the initial data has support in a box of size \u03b2."
        },
        {
            "heading": "4.2 Spectral discretisation for the Liouville equation",
            "text": "For the spectral discretisation, we only consider an important case, namely H(x, p) = 12 |p| 2 +\nV (x), which is the total energy (kinetic and potential energy) of classical particle. The Liouville equation is then rewritten as \u2202tw + p \u00b7 \u2207xw \u2212\u2207xV (x) \u00b7 \u2207pw = 0,w(0, x, p) = \u03c8\u03c9(0, x, p) =\u220fdi=1 \u03b4\u03c9(pi \u2212 ui(0, x)), (4.10) where we have assumed the smoothed initial data."
        },
        {
            "heading": "4.2.1 The QLSA for the spectral discretisation",
            "text": "Now we consider solving the Liouville equation in (4.10) by using the Fourier spectral methods.\nFor simplicity, the periodic boundary conditions are used for the spectral discretisation. To this\nend, we introduce some notations. We always assume that x = (x1, \u00b7 \u00b7 \u00b7 , xd) \u2208 [0, 1]d and p = (p1, \u00b7 \u00b7 \u00b7 , pd) \u2208 [0, 1]d. Introduce a new variable y = (x, p) = (x1, \u00b7 \u00b7 \u00b7 , xd, p1, \u00b7 \u00b7 \u00b7 , pd), and set\nw(t, x, p) = w(t, y) = \u2211 l cl(t)\u03d5l(y), l = (l1, \u00b7 \u00b7 \u00b7 , ld, ld+1, \u00b7 \u00b7 \u00b7 , l2d). (4.11)\nThe collocation points are denoted by yj with j = (jx, jp). As in (3.37), we define c = cx\u2297cp, where cx = c\n(1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 c(d) and cp = c(d+1) \u2297 \u00b7 \u00b7 \u00b7 \u2297 c(2d). We also introduce the notation w = wx \u2297wp, where wx = w\n(1) \u2297 \u00b7 \u00b7 \u00b7 \u2297w(d), wp = w(d+1) \u2297 \u00b7 \u00b7 \u00b7 \u2297w(2d), and w(l) = \u03a6c(l) can be viewed as the approximate solution of w in yl direction.\nAccording to the discussion in Subsect. 3.4.1, the first term can be discretised as\np \u00b7 \u2207xw = i d\u2211 l=1 yl+d(\u2212i\u2202yl)w \u2212\u2192 i d\u2211 l=1 y\u0302l+dP\u0302 d l (wx \u2297wp)\n= i d\u2211 l=1 (I\u2297 d \u2297Dl)(Pl \u2297 I\u2297 d )(wx \u2297wp) = i d\u2211 l=1 (Pl \u2297Dl)(wx \u2297wp).\nFor the second term, one has\n\u2207xV (x) \u00b7 \u2207pw = (\u22021V (x), \u00b7 \u00b7 \u00b7 , \u2202dV (x)) \u00b7 \u2207pw =: (v1(x), \u00b7 \u00b7 \u00b7 , vd(x)) \u00b7 \u2207pw\n= d\u2211 l=1 vl(x)\u2202yl+dw = i d\u2211 l=1 vl(x)(\u2212i\u2202yl+d)w \u2212\u2192 i d\u2211 l=1 vl(x\u0302 d)P\u0302 dl+d(wx \u2297wp)\n= i d\u2211 l=1 (Vl \u2297 I\u2297 d )(I\u2297 d \u2297 Pl)(wx \u2297wp) = i d\u2211 l=1 (Vl \u2297 Pl)(wx \u2297wp),\nwhere\nVk = diag(vk), vk = \u2211 jx vk(xjx)|j1\u27e9 \u00b7 \u00b7 \u00b7 |jd\u27e9 = \u2211 jx \u2202kV (xjx)|j1\u27e9 \u00b7 \u00b7 \u00b7 |jd\u27e9.\nLet\nA = \u2212i d\u2211 l=1 (Pl \u2297Dl \u2212 Vl \u2297 Pl) =: \u2212iA\u0303. (4.12)\nNote that A\u0303 is a real symmetric matrix. The resulting ODEs is d dtu(t) = Au(t),\nu(0) = (\u03c8\u03c9(0, yj)). (4.13)\nWe are ready to apply the quantum algorithm in [7] to solve the above ODEs, with the time\ncomplexity described below.\nTheorem 4.3. Assume that max1\u2264l\u2264d \u2225Vl\u2225 = O(1) and T = O(1).\n(1) There exists a quantum algorithm that produces a state \u03b5-close to u(T )/\u2225u(T )\u2225 with the gate complexity given by\nNGates = O\u0303 (d2+2/\u2113 \u03b52+4/\u2113 ) .\n(2) The observable of the Liouville equation can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Hd2+2/\u2113\n\u03b54+4/\u2113\n) ,\nwhere nH = \u2225(\u03c8\u03c9)0\u2225/Md/2.\nProof. The argument is similar to that of Theorem 3.5. (1) Let A = V \u22121DV with D = diag(\u03bb1, \u00b7 \u00b7 \u00b7 , \u03bbN ). Since the matrix A\u0303 in (4.12) is a real symmetric matrix, Re(\u03bbj) = 0 for any j \u2208 {1, \u00b7 \u00b7 \u00b7 , N} and \u03baV = 1. According to Lemma 3.4, there exists a quantum algorithm that produces a state \u03b5-close to u(T )/\u2225u(T )\u2225 with the gate complexity given by\nNGates = O ( s\u03baV \u2225A\u2225T \u00b7 Poly(log(sN\u03baV \u2225A\u2225T/\u03b5)) ) ,\nwhere we have omitted the parameter g that characterises the decay of the final state relative to the initial state.\nIt is evident that the sparsity of A is O(M) = O(1/\u2206x). The norm of A satisfies\n\u2225A\u2225 \u2264 d\u2211 l=1 \u2225Pl \u2297Dl \u2212 Vl \u2297 Pl\u2225 \u2264 d\u2211 l=1 (\u2225Pl\u2225\u2225Dl\u2225+ \u2225Vl\u2225\u2225Pl\u2225)\n\u2272M d\u2211 l=1 (\u2225Dl\u2225+ \u2225Vl\u2225) \u2272 dM max 1\u2264l\u2264d (1 + \u2225Vl\u2225).\nAccording to Lemma 3.2, the error of the spectral discretisation is O(\u03c9+\u2206t\u03b1/\u03c9\u03b1+d\u2206x\u2113/\u03c9\u2113+1), where \u03b1 is for the precision of the temporal discretisation which has been considered in the quantum algorithm in [7]. To reach a precision of \u03b5, one just needs to set \u03c9 \u223c d\u2206x\u2113/\u03c9\u2113+1 \u223c \u03b5, and gets \u2206x \u223c \u03b51+2/\u2113/d1/\u2113. Therefore, we have\nNGates = O ( d \u2206x2 ) = O (d2+2/\u2113 \u03b52+4/\u2113 ) ,\nwhere in the last equal sign we have included the additional factor d arising from the matrix order (see Remark 3.8).\n(2) For the spectral discretisation, the constant n\u03c8 = N\u03c8/M d/2 is known since N\u03c8 = \u2225uNt\u2225 =\n\u2225u0\u2225 = N\u03c80 . The desired estimate follows from the general sampling law."
        },
        {
            "heading": "4.2.2 The quantum simulation for the spectral discretisation",
            "text": "One can directly solve the ODEs (4.13) by using the quantum simulation since A\u0303 is real\nsymmetric. We in the following consider the Fourier spectral methods based on the time-splitting approximations.\nFrom time t = tn to time t = tn+1, the Liouville equation is solved in two steps: One solves\n\u2202tw + p \u00b7 \u2207xw = 0 (4.14)\nfor one time step, followed by solving\n\u2202tw \u2212\u2207xV (x) \u00b7 \u2207pw = 0 (4.15)\nagain for one time step.\nStep 1. According to the previous discussion, one has\np \u00b7 \u2207xw \u2212\u2192 i d\u2211 l=1 (Pl \u2297Dl)(wx \u2297wp).\nSince Plwx = \u03a6 \u2297dD\u00b5l cx, the first step (4.14) gives\nd dt (cx \u2297wp) + i d\u2211 l=1 (D\u00b5l \u2297Dl)(cx \u2297wp) = 0,\nwhich can be written as d\ndt (cx \u2297wp) + iL(cx \u2297wp) = 0,\nwhere\nL = D\u00b5 \u2297 I\u2297 d\u22121 \u2297Dp \u2297 I\u2297 d\u22121 + \u00b7 \u00b7 \u00b7+ I\u2297d\u22121 \u2297D\u00b5 \u2297 I\u2297 d\u22121 \u2297Dp\nis a diagonal matrix. Therefore the intermediate solution of the first step is\n(cx \u2297wp)\u2217 = e\u2212iL\u2206t(cx \u2297wp)n.\nStep 2. The second step is to solve (4.15), i.e.,\n0 = \u2202tw \u2212\u2207xV (x) \u00b7 \u2207pw = \u2202tw \u2212 (\u22021V (x), \u00b7 \u00b7 \u00b7 , \u2202dV (x)) \u00b7 \u2207pw\n=: \u2202tw \u2212 (v1(x), \u00b7 \u00b7 \u00b7 , vd(x)) \u00b7 \u2207pw.\nSimilar to the first step, one has\n(wx \u2297 cp)n+1 = eiU\u2206t(wx \u2297 cp)\u2217,\nwhere\nU = V1 \u2297D\u00b5 \u2297 I\u2297 d\u22121 + \u00b7 \u00b7 \u00b7+ Vd \u2297 I\u2297 d\u22121 \u2297D\u00b5\nis a diagonal matrix, and\nVk = diag(vk), vk = \u2211 jx vk(xjx)|j1\u27e9 \u00b7 \u00b7 \u00b7 |jd\u27e9 = \u2211 jx \u2202kV (xjx)|j1\u27e9 \u00b7 \u00b7 \u00b7 |jd\u27e9.\nGiven the initial state of w0, applying the inverse QFT to the x-register, one gets (cx \u2297wp)0. At each time step, one needs to consider the following procedure\n(cx \u2297wp)n e\u2212iL\u2206t\u2212\u2212\u2212\u2212\u2192 (cx \u2297wp)\u2217 Fx\u2297F\u22121p\u2212\u2212\u2212\u2212\u2212\u2192 (wx \u2297 cp)\u2217 eiU\u2206t\u2212\u2212\u2212\u2192 (wx \u2297 cp)n+1 F\u22121x \u2297Fp\u2212\u2212\u2212\u2212\u2212\u2192 (cx \u2297wp)n+1,\nwhere Fx = Fp = \u03a6 \u2297d .\nTheorem 4.4. Given the error tolerance \u03b5, assume that S0(x), A0(x) and V (x) are smooth enough.\n(1) The Liouville equation can be simulated with gate complexity given by,\nNGates = O ( d \u03b52 log d1/\u2113 \u03b51+2/\u2113 ) .\n(2) The observable of the Liouville equation can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O (n4Hd \u03b54 log d1/\u2113 \u03b51+2/\u2113 ) ,\nwhere nH = \u2225(\u03c8\u03c9)0\u2225/Md/2.\nProof. When S0(x) and V (x) are smooth, the time-splitting spectral method has the error estimate\n\u2225wn(\u00b7)\u2212 w(tn, \u00b7)\u2225 \u2264 C\u2113 ( \u03c9 + \u2206t\n\u03c9 + d\u2206x\u2113 \u03c9\u2113+1\n) , (4.16)\nwhere \u03c9\u2113+1 comes from the \u2113-th order derivative of w := w\u03c9, and C\u2113 is an O(1) constant. Then one can implement the following meshing strategy\n\u03c9 \u223c \u03b5, \u2206t \u223c \u03b52, \u2206x \u223c \u03b51+2/\u2113/d1/\u2113 (4.17)\nby forcing both error terms to be of order \u03b5. Thus,\nM = L/\u2206x = 2m =\u21d2 m = log L \u2206x\n= O ( log d1/\u2113\n\u03b51+2/\u2113\n) ,\nwhere m is the number of qubits per dimension, and the total number of qubits is m2d = 2dm. The diagonal unitary operators e\u2212iL\u2206t and eiU\u2206t can be implemented using J(m2d) = O(m2d) gates, and the quantum Fourier transforms Fx or Fp can be implemented using dO(m logm) gates. Therefore, the gate complexity required to iterate to the n-th step is\nNGates = 2n(J(m2d) + 2dO(m logm)) = 2nO(2dm+ 2dm logm) = O(4ndm logm) = O ( d \u03b52 log d1/\u2113 \u03b51+2/\u2113 ) .\nThe gate complexity for the observable is obtained from the sampling law.\nRemark 4.2. We remark that this section is the follow-up to [38]. Here we make precise statements about concrete implementations or running times of quantum algorithms. Compared to [38], we present a different (and simpler) algorithm for computing the physical observables and include the discussion of the spectral discretization. For the finite difference discretization, we also give details on the estimation of the condition number."
        },
        {
            "heading": "5 The Schro\u0308dinger framework",
            "text": "In this section we propose another framework to solve the important example of the nonlinear\nHamilton-Jacbobi equations withH(x, p) = 12 |p| 2+V (x) based on solving the Schro\u0308dinger equation, since the Liouville equation is the classical limit of the Schro\u0308dinger equation. The idea is to choose a semiclassical parameter, still denoted by \u210f here, sufficiently small, so the solution of the Schro\u0308dinger equation is close to that of the Liouville equation.\nSince the error between the expectation of the wave function and its classical counterpart (the\nphysical observables of the Liouville equation) is of O(\u210f2) [47], one can take \u210f = O( \u221a \u03b5), to maintain the computational precision of O(\u03b5) for this framework.\nWe consider the Schro\u0308dinger equation in the semiclassical regime i\u210f\u2202tu(t, x) = \u2212 \u210f2 2 \u2206u(t, x) + V (x)u(t, x) in \u2126 = (a, b) d, t > 0,\nu(0, x) = u0(x) (5.1)\nwith periodic boundary conditions, where x = (x1, x2, \u00b7 \u00b7 \u00b7 , xd) \u2208 Rd, u(t, x) := u\u210f(t, x) is the complex-valued wave function, V (x) is the external potential and \u210f = O( \u221a \u03b5) with \u03b5\u226a 1 being the precision. Without loss of generality, we always set a = 0 and b = 1. The initial condition in (5.1) is chosen in a WKB form,\nu0(x) = A0(x)e i S0(x) \u210f , (5.2)\nwith A0 and S0 independent of \u210f, real-valued and smooth. The periodic boundary conditions, for example, in one-dimensional case can be written as\nu(t, a) = u(t, b), ux(t, a) = ux(t, b), t \u2265 0.\nThe problem (5.1) will be solved by the classical time-splitting Fourier spectral method [4],\nwhich, as described below, can be interpreted as the Trotter based Hamiltonian simulation [37,51]."
        },
        {
            "heading": "5.1 The semiclassical approximation",
            "text": "We first recall the WKB analysis, which assumes that the solution remains the same form as\nthe initial data at later time:\nu = A(t, x)ei S(t,x) \u210f ,\nwhere A(t, x) and S(t, x) are the amplitude and phase respectively. Substituting this into (5.1), and separating the real and imaginary parts, one gets\nA\u2202tS + 1\n2 |\u2207xS|2 +AV =\n\u210f2\n2 \u2206A,\n\u2202tA+\u2207xA \u00b7 \u2207xS + 1\n2 A\u2206S = 0.\nIgnoring the O(\u210f2) terms, and multiplying the second equation by A, one gets\n\u2202t|A|2 +\u2207x(|A|2\u2207xS) = 0, (5.3)\n\u2202tS + 1\n2 |\u2207xS|2 + V = 0. (5.4)\nThe first equation (5.3) is a transport equation, and the second one (5.4) is the eikonal equation, which is exactly the Hamilton-Jacobi equation (4.1). Note that the eikonal equation admits solutions S with discontinuous derivatives (usually referred to as the caustic) even if the initial data of u is smooth. Thus the WKB analysis is only valid up to the time when the first caustic forms. Beyond caustics, the solution becomes multi-valued [36,42].\nIn contrast to that, the Wigner transform technique yields the Liouville equation on phase\nspace, in the semiclassical limit \u210f \u2192 0, whose solution does not exhibit caustics, hence is valid globally in time. The Wigner transform of u is defined as [36,42]\nw\u210f(t, x, p) = w\u210f[u](t, x, p) := 1\n(2\u03c0)d \u222b Rd u ( x+ \u210f 2 \u03b7 ) u ( x\u2212 \u210f 2 \u03b7 ) eip\u00b7\u03b7d\u03b7. (5.5)\nApplying this transformation on the Schro\u0308dinger equation (5.1), one obtains the Wigner equation (also called the quantum Liouville equation):\n\u2202tw \u210f + p \u00b7 \u2207xw\u210f \u2212HV w\u210f = 0, w\u210f(0, x, p) = win(x, p),\nwhere\nHV w \u210f =\ni\n(2\u03c0)d \u222b\u222b Rd\u00d7Rd \u03b4V (x, y)w\u210f(x, p\u2032)ei\u03b7(p\u2212p \u2032)d\u03b7dp\u2032, \u03b4V = 1\n\u210f\n( V (x\u2212 \u210f\n2 y)\u2212 V (x+ \u210f 2 y) ) .\nWhen \u210f\u2192 0, the Wigner equation becomes the classical Liouville equation on the phase space:\n\u2202tw + p \u00b7 \u2207xw \u2212\u2207xV (x) \u00b7 \u2207pw = 0,\nwhich corresponds to the important case H(x, p) = 12 |p| 2+V (x). One easily finds that the Liouville equation can be written as \u2202tw + {w,H} = 0, where {\u00b7, \u00b7} is the Poisson bracket, defined as\n{w,H} = \u2207pH \u00b7 \u2207xw \u2212\u2207xH \u00b7 \u2207pw.\nWhen u0 is given in WKB form (5.2), the corresponding Wigner measure is found to be\nw\u210f[u0] \u210f\u21920\u2212\u2212\u2212\u2192 w0 = |A0(x)|2\u03b4(p\u2212\u2207S0(x)),\nsee [42, Eq. (3.9)]. It should be pointed out that Eqs. (5.3) and (5.4) can be deduced from the moment-closure of the Liouville problem \u2202tw +\u2207pH \u00b7 \u2207xw \u2212\u2207xH \u00b7 \u2207pw = 0,w(0, x, p) = |A0(x)|2\u03b4(p\u2212\u2207S0(x)) (5.6) with mono-kinetic ansatz w(t, x, p) = |A(t, x)|2\u03b4(p\u2212\u2207xS(t, x)), but are not valid beyond caustics since \u03b4(p \u2212 \u2207xS(t, x)) is not well-defined when \u2207xS(t, x) becomes discontinuous. However, the equation in (5.6) is valid globally in time, since it unfolds the caustics in the phase space [36,38,42]. For this reason, we instead solve (5.6) in the semiclassical regime. Clearly, (5.6) is the level set formulation (4.5) if A0(x) \u2261 1. Here we leave the general A0(x). One can solve the problems in (5.6) by upwind finite difference methods or spectral methods as shown in the previous section."
        },
        {
            "heading": "5.2 Quantum simulations for the spectral discretisation",
            "text": ""
        },
        {
            "heading": "5.2.1 The time-splitting spectral approximations",
            "text": "From time t = tn to time t = tn+1, the Schro\u0308dinger equation is solved in two steps [4]: One\nsolves\n\u210fut \u2212 i \u210f2\n2 \u2206u = 0 (5.7)\nfor one time step, followed by solving\n\u210fut + iV (x)u = 0 (5.8)\nagain for one time step. Equation (5.7) will be discretised in space by the Fourier pseudo-spectral method and integrated in time exactly. The ODE (5.8) will then be solved exactly.\nRemark 5.1. We remark that usually the Trotter or Strang splitting is used for quantum simulation of the Schro\u0308dinger equation, which is second order in time rather than first order in the above simple splitting. We use the first order one in order to compare, on the equal footing, with other methods since all other methods use the first order approximation in time. For time complexity of the Trotter or Strang splitting see [37].\nLet unj be the numerical solution at t = tn and u \u2217 j the solution given by the first step for\n0 \u2264 j \u2264M \u2212 1.\n\u2022 For the first step, according to the previous discussion one easily obtains\nd dt u(t) + i\u210f/2 \u00b7 (P 21 + \u00b7 \u00b7 \u00b7+ P 2d )u(t) = 0,\nor d\ndt c(t) + i\u210f/2 \u00b7 ((D\u00b51 ) 2 + \u00b7 \u00b7 \u00b7+ (D\u00b5d ) 2)c(t) = 0,\nwhere the relation (3.38) is used, which gives\nc\u2217 = ( e\u2212i\u210f\u2206tD 2 \u00b5/2 )\u2297d cn, D\u00b5 = diag(\u00b51, \u00b7 \u00b7 \u00b7 , \u00b5M ).\n\u2022 The updated numerical solution for the second step is un+1j = e \u2212iV (xj)\u2206t/\u210fu\u2217j , which can be\nwritten in vector form as u = e\u2212iV \u2206t/\u210fu\u2217, where V is a diagonal matrix with\nVnj ,nj = V (xj), nj = j12 d\u22121 + \u00b7 \u00b7 \u00b7+ jd20."
        },
        {
            "heading": "5.2.2 The quantum simulation of the Schro\u0308dinger equation",
            "text": "We only consider the 1-D case since it is straightforward to extend the arguments to high-\ndimensional cases by using tensor products. According to the previous discussion, we have the following algorithm (Algorithm 1) represented by the matrix-vector multiplication.\nAlgorithm 1 Time splitting approximations for the Schro\u0308dinger equation\n1. Given the initial data u0 and n = 0, compute the discrete Fourier coefficients cn = \u03a6\u22121un.\n2. Calculate the intermediate variables c\u2217 = e\u2212i\u210fD 2 \u00b5\u2206t/2cn and u\u2217 = \u03a6c\u2217.\n3. Update the numerical solution un+1 = e\u2212iV \u2206t/\u210fu\u2217.\nIn the above algorithm, the matrix \u03a6 plays the role of the discrete Fourier transform (DFT),\nwhere given a set of numbers x0, x1, \u00b7 \u00b7 \u00b7 , xM\u22121, the DFT and the inverse DFT are defined by\nyk = 1\u221a M M\u22121\u2211 j=0 e2\u03c0ijk/Mxj , k = 0, \u00b7 \u00b7 \u00b7 ,M \u2212 1\nand\nxj = 1\u221a M M\u22121\u2211 k=0 e\u22122\u03c0ijk/Myk, j = 0, \u00b7 \u00b7 \u00b7 ,M \u2212 1,\nrespectively. Denote the transformation matrix of DFT by F . It is easy to find the transformation matrix in Algorithm 1 satisfies \u03a6 = \u221a MSF , where S is the diagonal matrix\nS = diag ( [1,\u22121, \u00b7 \u00b7 \u00b7 , 1,\u22121]M\u00d71 ) ,\nwhich in turn gives\nun+1 = e\u2212iV \u2206t/\u210fSF e\u2212i\u210fD 2 \u00b5\u2206t/2F\u22121Sun\nsince S\u22121 = S. For convenience, the above two diagonal matrices are denoted by D1 and D2, respectively, and then one has\nun+1 = D1SFD2F \u22121Sun = SD1FD2F \u22121Sun,\nor\nvn+1 = (D1FD2F \u22121)vn, vn = Sun,\nwhere we have used the fact that SD1 = D1S.\nTherefore, when preparing the variable v in the computational basis, the implementation in\neach iteration involves one application of an inverse quantum Fourier transform (QFT), followed by a multiplication of a diagonal unitary operator D2, and a QFT and another diagonal unitary operator D1, since the QFT is exactly the quantum version of the DFT.\nAccording to the above discussion, the quantum simulation algorithm to find vn := Sun is\ndescribed as follows (see Algorithm 2).\nAlgorithm 2 Quantum simulation of the Schro\u0308dinger equation\nStep 0. Initialization of the quantum state: Given v0j encode it as\n|\u03c80\u27e9 = 1 N M\u22121\u2211 j=0 \u03c80j |j\u27e9, \u03c80j = v0j ,\nwhere N is the normalization constant. Let n = 0.\nStep 1. Performing inverse QFT on |\u03c8n\u27e9 yields |\u03c8\u0303\u27e9.\nStep 2. Perform a diagonal unitary operator ( e\u2212i\u210f\u00b5 2 l \u2206t/2 ) 1\u2264l\u2264M\nfor |\u03c8\u0303\u27e9, and the resulting state is denoted as |\u03c8\u00b5\u27e9.\nStep 3. Perform QFT on |\u03c8\u00b5\u27e9 with the output denoted by |\u03c8\u2217\u27e9.\nStep 4. Apply a diagonal unitary operator ( e\u2212iV (xj)\u2206t/\u210f ) 0\u2264j\u2264M\u22121 to |\u03c8\u2217\u27e9. The output is denoted\nby |\u03c8n+1\u27e9.\nStep 5. Let n\u2190 n+ 1 and go back to Step 1.\nThe following example is taken from Example 1 in [4].\nExample 5.1. The initial data is u(x, 0) = A0(x)e iS0(x)/\u210f, where\nA0(x) = e \u221225(x\u22120.5)2 , S0(x) = \u2212\n1 5 ln ( e5(x\u22120.5) + e\u22125(x\u22120.5) ) .\nWe take [a, b] = [0, 1] and V (x) = 10. The position density \u03c1(t, x) = |u(t, x)|2 is shown in Fig. 2. One can see that the solution is oscillatory for small \u210f. For numerical descriptions, please refer to [4]."
        },
        {
            "heading": "5.2.3 Gate counts for the computation of wave functions",
            "text": "To simplify the discussion, we set L = b\u2212 a = 1 and the evolution time t = 1 throughout the paper. The time-splitting scheme involves only diagonal operators and QFTs whose complexities depend on the number of qubits m per dimension. Since the meshing satisfies \u2206x = L/M and M = 2m, we can determine \u2206x and thus m by the expected precision of the algorithm. Theorem 5.1. Given the error tolerance \u03b5, assume V (x) is sufficiently smooth and \u210f = O( \u221a \u03b5). Then the Schro\u0308dinger equation (5.1) can be simulated using md qubits with gate complexity NGates, given respectively by,\nmd = O ( d log\nd1/\u2113\n\u03b51/2+5/(2\u2113)\n) , NGates = O ( d \u03b53/2 log d1/\u2113 \u03b51/2+5/(2\u2113) ) .\nProof. According to Refs. [4, 37], if \u2206x/\u210f = O(1) and \u2206t/\u210f = O(1), then for each \u2113, the error of the Fourier spectral method is bounded by,\n\u2225un \u2212 u(tn, \u00b7)\u2225 \u2264 C\u2113n ( d (\u2206x\n\u210f\n)\u2113 + \u2206t2\n\u210f\n) . (5.9)\nHere C\u2113 is considered as O(1). The mesh strategy is \u2206t\n\u210f \u223c \u03b5, \u2206x \u210f \u223c ( \u03b5 nd )1/\u2113 , \u210f \u223c \u221a \u03b5,\nor equivalently,\n\u2206t \u223c \u03b53/2, \u2206x \u223c \u03b51/2+5/(2\u2113)/d1/\u2113, (5.10)\nwhich is obtained by forcing both error terms to be of order \u03b5. With this choice of \u2206x and \u2206t, the number of qubits is\nmd = dm, m = log 1\n\u2206x = O\n( log\nd1/\u2113\n\u03b51/2+5/(2\u2113)\n) .\nThe diagonal unitary operators can be implemented using J(md) = O(md) gates [37,45]. Thus the gate complexity required to iterate to the n-th step is\nNGates \u223c n(2dm logm+ 2J(md)) \u223c 2ndm logm = O ( d \u03b53/2 log d1/\u2113 \u03b51/2+5/(2\u2113) ) , (5.11)\nas required."
        },
        {
            "heading": "5.3 The QLSA for the spectral discretisation",
            "text": "According to the discussion in Subsect. 5.2.1, one has the following ODEs\nd dt u(t) = Au(t),\nwhere\nA = \u2212i (\u210f 2 (P 21 + \u00b7 \u00b7 \u00b7+ P 2d ) + 1 \u210f V ) =: \u2212iA\u0303. (5.12)\nObviously, A\u0303 is a real symmetric matrix.\nAs in Theorem 4.3, we can apply the quantum algorithm in [7] to solve the above ODEs.\nTheorem 5.2. Assume that \u2225V \u2225 = O(1) and T = O(1). Then there exists a quantum algorithm that produces a state \u03b5-close to u(T )/\u2225u(T )\u2225 with the gate complexity given by\nNGates = O\u0303 (d2+2/\u2113 \u03b51+5/\u2113 ) .\nProof. Let A = V \u22121DV with D = diag(\u03bb1, \u00b7 \u00b7 \u00b7 , \u03bbN ), where N = O(Md) is the order of A. Since the matrix A\u0303 in (5.12) is a real symmetric matrix, Re(\u03bbj) = 0 for any j \u2208 {1, \u00b7 \u00b7 \u00b7 , N} and \u03baV = 1. According to Lemma 3.4, there exists a quantum algorithm that produces a state \u03b5-close to u(T )/\u2225u(T )\u2225 with the gate complexity given by\nNGates = O ( s\u2225A\u2225T \u00b7 Poly(log(sN\u2225A\u2225T/\u03b5)) ) .\nIt is evident that the sparsity of A is O(M) = O(1/\u2206x). For the mesh strategy in (5.10), the norm of A satisfies\n\u2225A\u2225 \u2264 \u210f 2 d\u2211 l=1 \u2225Pl\u2225+ 1 \u210f \u2225V \u2225 \u2272 \u210fdM + 1 \u210f \u2272 d1+1/\u2113 \u03b55/(2\u2113) + 1 \u03b51/2 \u2264 d 1+1/\u2113 \u03b51/2+5/(2\u2113) .\nThen one has\nNGates = O\u0303 (d2+2/\u2113 \u03b51+5/\u2113 ) ,\nwhere in the last equal sign we have included the additional factor d arising from the matrix order (see Remark 3.8). This completes the proof."
        },
        {
            "heading": "5.4 The computation of physical observables",
            "text": "The quantum mechanical wave function u(t, x) can be considered as an auxiliary quantity used\nto compute physical quantities. The most basic quadratic observables [4,36,42] include the position density \u03c1(t, x) := |u(t, x)|2, the current density\nJ(t, x) = \u210fIm(u(t, x)\u2207u(t, x)) = \u210f 2i (u\u2207u\u2212 u\u2207u),\nand the kinetic or total energy\nE(t, x) = \u210f2 2 |\u2207u(t, x)|2 or \u210f 2 2 |\u2207u(t, x)|2 + V (x)|\u2207u(t, x)|2."
        },
        {
            "heading": "5.4.1 The expectation of observables for the quantum simulation",
            "text": "The observables \u03c1(tn, xi), J(tn, xi) and E(tn, xi) can be expressed as the standard form of\n\u27e8O\u27e9 = \u27e8u\u0303|O|u\u0303\u27e9, which is the expectation of the observable O. Here, u\u0303 is normalized to 1 since the output of the quantum algorithms is the normalized state. For the spectral discretisation of the Schro\u0308dinger equation, one has\n\u2225uNt\u2225 = \u00b7 \u00b7 \u00b7 = \u2225u0\u2225 =: Nu0 , (5.13)\nand u\u0303 = uNt/Nu0 . The output state of the quantum simulation is\n|u\u0303\u27e9 = 1 Nu0 \u2211 j uNt |j\u27e9 = \u2211 j u\u0303|j\u27e9, j = (j1, \u00b7 \u00b7 \u00b7 , jd).\nFor the position density \u03c1(tn, xi), it is obvious that one can measure the magnitude of the\nwave function using multiple shots in the computational basis |i\u27e9 as was done in the numerical experiments in [37], so we choose\nO\u03c1 =: N 2 u0 |i\u27e9\u27e8i| for the position density.\nLet p = |u\u0303i|2 \u2264 1. Then Var(O\u03c1) = N4u0p(1\u2212p) \u2264 N 4 u0 , hence the number of samples is n\u03c1 = N 4 u0/\u03b5 2 for the position density. For the current density, we consider d = 1 for simplicity and denote ei = |i\u27e9. Let u = uNt for simplicity. Using the previous notations, one has\nu(xi) = u Tei, (\u2202xu)(xi) = (\u03a6D\u00b5\u03a6 \u22121u)Tei = e T i (\u03a6D\u00b5\u03a6 \u22121u),\nwhich gives\n(u\u2202xu)(xi) = u T (eie T i \u03a6D\u00b5\u03a6 \u22121)u = u\u2020(eie T i \u03a6D\u00b5\u03a6 \u22121)u =: u\u2020Au,\nand\n(u\u2202xu)(xi) = ( (u\u2202xu)(xi) )\u2020 = u\u2020A\u2020u.\nTherefore,\nJ(tn, xi) = \u210f 2i u\u2020(A\u2212A\u2020)u = \u210fN2u0 2i u\u0303\u2020(A\u2212A\u2020)u\u0303,\nand we can choose\nOJ := \u210fN2u0 2i (A\u2212A\u2020) for the current density.\nOne can check that\nVar(OJ) \u2264 \u2225OJ u\u0303\u22252 \u2272 (\u210fMN2u0\n4\n)2 ,\nwhere M comes from D\u00b5 = diag(\u2212N, \u00b7 \u00b7 \u00b7 , N \u2212 1) with N = M/2, which implies a multiplicative factor nJ = (\u210fMN2u0) 2/\u03b52 =M2N4u0/\u03b5 for the current density since \u210f = O( \u221a \u03b5).\nFor the kinetic energy, we similarly obtain\nE(tn, xi) = \u210f2\n2 u\u2020(\u03a6D\u00b5\u03a6 \u22121eie T i \u03a6D\u00b5\u03a6\n\u22121)u =: \u210f2\n2 u\u2020Bu = \u210f2N2u0 2 u\u0303\u2020Bu\u0303\nfor the one-dimensional case. We can choose\nOE := \u210f2N2u0\n2 B for the kinetic energy.\nIt is obvious that\nVar(OE) \u2264 \u2225OEu\u0303\u22252 \u2272 (\u210f2M2N2u0\n4\n)2 ,\nwhich implies a multiplicative factor nE = (\u210f2M2N2u0) 2/\u03b52 =M4N4u0 for the kinetic energy. Remark 5.2. By definition, \u03c1(t, x) := |u(t, x)|2, where\n\u03c1(t, x) = \u222b w(t, x, p)dp \u2248 1\nMd \u2211 l Glw \u03c9 j,l,n,\nwhere w is the solution to (5.6). Then\nN2u0 = \u2225u 0\u22252 = \u2225\u03c10\u2225 \u2272 \u2225G\u2225\u2225(w\u03c9)0\u2225/Md \u2272 \u2225(w\u03c9)0\u2225/Md/2 = nH .\nHere, (w\u03c9)0 is exactly the (\u03c8\u03c9)0 in Theorem 4.2 when considering the problem (5.6)."
        },
        {
            "heading": "5.4.2 The expectation of observables for the QLSA",
            "text": "Unlike the quantum simulation, the solution of the QLSA is a quantum state that is a super-\nposition of the solution at all temporal and spatial points, denoted as\n|u\u0303\u27e9 = [u\u03031; \u00b7 \u00b7 \u00b7 ; u\u0303Nt ], u\u0303n = 1 Nu un,\nwhere the normalization constant is\nNu = \u2225u\u2225 = (\u2225u1\u22252 + \u00b7 \u00b7 \u00b7+ \u2225uNt\u22252)1/2 = \u221a Nt\u2225u0\u2225 =: \u221a NtNu0 .\nHere we have used (5.13). Let Oi = |i\u27e9\u27e8i|, On = |n\u27e9\u27e8n| and\nOni = On \u2297Oi = |n, i\u27e9\u27e8n, i|,\nwhere |n\u27e9 is of size Nt. Then the position density\n\u03c1(t = tn, xi) = (u n)\u2020Oiu n = u\u2020(On \u2297Oi)u = NtN2u0 \u00b7 \u27e8u\u0303|O n i |u\u0303\u27e9.\nThe expectation \u27e8Oni \u27e9 := \u27e8u\u0303|Oni |u\u0303\u27e9 satisfies the condition that Var(Oni ) is bounded. In this case, however, we must evaluate \u27e8Oni \u27e9 to precision O(\u03b5/(NtN2u0)), which increases the number of samples by another factor (NtN 2 u0) 2 when considering the general sampling law. We remark that the factor\nN2t can be removed by using the dilation procedure. In this case, the multiplicative factor is still given by n\u03c1 = N 4 u0/\u03b5 2.\nFor the current density, one easily finds that (d = 1)\nJ(tn, xi) = \u210f 2i (un)\u2020(A\u2212A\u2020)un = NtN2u0 \u00b7 \u210f 2i u\u0303\u2020(A\u2212A\u2020)u\u0303.\nWe still need to apply the dilation procedure (3.28) to remove the unexpected multiplicative factor N2t , and still obtain nJ =M 2N4u0/\u03b5 for the current density.\nThe kinetic energy can be analysed similarly, with the factor given by nE =M 4N4u0 ."
        },
        {
            "heading": "5.5 Gate complexity for the computation of the observables",
            "text": "It is worth pointing out that the time step \u2206t can be chosen independently of the small param-\neter \u210f if one is only concerned with the computation of the physical quantities. This observation was interpreted by using the Wigner transformation approach in [4], and mathematically rigorously investigated in [12,31]. For instance, the first-order time splitting spectral method gives [12,37]\n\u2225\u27e8O\u27e9un \u2212 \u27e8O\u27e9u(tn,\u00b7)\u2225 \u2264 C\u2113n ( d (\u2206x\n\u210f\n)\u2113 +\u2206t2 +\u2206t\u210f2 ) , (5.14)\nwhere \u210f = O( \u221a \u03b5) implies the above observation since n\u2206t\u210f2 = O(\u03b5). Note that the term n\u2206t\u210f2 = t\u210f2 is the error between the classically evolved Wigner function and the expectation value of the Schro\u0308dinger solution [12]."
        },
        {
            "heading": "5.5.1 The gate counts of the quantum simulation method",
            "text": "Theorem 5.3. Given the error tolerance \u03b5, suppose that the estimate (5.14) holds with C\u2113 considered as O(1). The gate complexities for the observables from the Schro\u0308dinger equation (5.1) are given by\nNGates(\u27e8O\u27e9) = O ( cO N4u0d\n\u03b53 log\nd1/\u2113\n\u03b51/2+2/\u2113\n) ,\nwhere\ncO =  1, for the position density, d2/\u2113/\u03b54/\u2113, for the current density,\nd4/\u2113/\u03b58/\u2113, for the kinetic energy.\n(5.15)\nProof. For the observables, one can implement the mesh strategy according to (5.14), given by\n\u2206t = O(\u03b5), \u2206x = O(\u03b51/2+2/\u2113/d1/\u2113). (5.16)\nThen the number of gates for outputting the quantum sate is O (d \u03b5 log d1/\u2113 \u03b51/2+2/\u2113 ) . For computing the observables, we must add a multiplicative factor Var(O)/\u03b52 if the general sampling law is used. According to the previous discussion, one has\nn\u03c1 = N4u0 \u03b52 , nJ = M2N4u0 \u03b5 \u223c N4u0d 2/\u2113 \u03b52+4/\u2113 , nE =M 4N4u0 \u223c N4u0d 4/\u2113 \u03b52+8/\u2113 . (5.17)\nThis completes the proof."
        },
        {
            "heading": "5.5.2 The gate counts of the quantum linear systems algorithm",
            "text": "Theorem 5.4. Given the error tolerance \u03b5, suppose that the estimate (5.14) holds with C\u2113 considered as O(1). The gate complexities of the QLSA for the observables from the Schro\u0308dinger equation (5.1) are given by\nNGates(\u27e8O\u27e9) = O\u0303 ( cO N4u0d 2+2/\u2113\n\u03b53+4/\u2113\n) ,\nwhere cO is defined by (5.15).\nProof. For the mesh strategy in (5.16), according to the proof of Theorem 5.2, one easily finds that the number of gates for approximating the wave function is\nNGates = O\u0303 (d2+2/\u2113 \u03b51+4/\u2113 ) ,\nwhere in the last equal sign we have included the additional factor d arising from the matrix order. For computing the observables, one just need to include the multiplicative factor Var(O)/\u03b52 as given in (5.17)."
        },
        {
            "heading": "6 Linear representation approach for scalar nonlinear hyperbolic",
            "text": "PDEs\nWe consider the linear representations for the spatially d-dimensional scalar nonlinear hyper-\nbolic PDE  \u2202tu+ F (u) \u00b7 \u2207xu+Q(x, u) = 0,u(0, x) = u0(x), (6.1) where x \u2208 Rd and u \u2208 R."
        },
        {
            "heading": "6.1 The Liouville representation",
            "text": "For this general scalar hyperbolic equation, one can still use the Liouville representation but\nthe Schro\u0308dinger representation is not available. In fact, the Liouville representation has been considered in [38] by using the level set formalism. To this end, we first review the construction. Let \u03d5(t, x, p) be the level set function in (d + 1) + 1 = d + 2 dimensions, where p \u2208 R. The zero level set of \u03d5 gives solution u:\n\u03d5(t, x, p) = 0 at p = u(t, x).\nOne easily finds that \u03d5 satisfies \u2202t\u03d5+ F (p) \u00b7 \u2207x\u03d5\u2212Q(x, p)\u2202p\u03d5 = 0,\u03d5(0, x, p) = p\u2212 u0(x). Like for the Hamilton-Jacobi PDEs, we can similarly define a function \u03c6 such that \u2202t\u03c6+ F (p) \u00b7 \u2207x\u03c6\u2212Q(x, p)\u2202p\u03c6 = 0,\u03c6(0, x, p) = \u03b4(p\u2212 u0(x)), (6.2)\nwith the solution given by \u03c6(t, x, p) = \u03b4(\u03d5(t, x, p)). Eq. (6.2) is referred to as the Liouville representation of (6.1).\nOne can apply the quantum difference method to solve (6.2) and compute the physical observ-\nables as in Subsect. 4.1. For the spectral discretisation, one can utilize the Trotter based technique in Subsect. A.1. The similar numerical performance can be deduced, so we omit the detailed discussions in view of the length of the article and the similarity of the numerical implementation."
        },
        {
            "heading": "6.2 The KvN representation",
            "text": "For scalar nonlinear hyperbolic PDEs, it is not very clear how to formulate the KvN represen-\ntation. Here we offer an idea, which is inspired by the evolution of the phase factor of the KvN wave function in [44]. Let x = (x, p) and denote v = [F (p),\u2212Q(x, p)]. Then problem (6.2) can be written as \u2202t\u03c6+ v \u00b7 \u2207x\u03c6 = 0,\u03c60(x) = \u03c6(0,x) = \u03c6(0, x, p) = \u03b4(p\u2212 u0(x)). (6.3) Let \u03c8 be the complex-valued KvN wave function and f = \u03c8\u2020\u03c8 be the probability distribution function. Inspired by the discussion in Section II(B) of [44], we define \u03c8 = f1/2ei\u03c6:\n\u2022 The amplitude f satisfies the Liouville equation in conservative form: \u2202tf +\u2207x \u00b7 (vf) = 0,f(0,x) = f0(x), (6.4) where f0(x) = \u03b4(x\u2212 q0) and q0 is an arbitrarily given vector.\n\u2022 The phase factor \u03c6 satisfies the non-conservative Liouville equation in (6.3).\nAs in [44], one can check that the KvN wave function \u03c8 is governed by the KvN equation\ni\u2202t\u03c8 = HKvN\u03c8 = \u2212i ( v \u00b7 \u2207x + 1\n2 \u2207x \u00b7 v\n) \u03c8, (6.5)\nwith the initial data given by\n\u03c80(x) = \u03c8(0,x) = f 1/2 0 (x)e i\u03c60(x).\nThe original intention of [44] is to introduce the linear representation for the following nonlinear\nODEs dq\ndt = v(t, q). (6.6)\nLike in Sect. 3, one can first obtain the Liouville representation (6.4) corresponding to (6.6). The KvN representation is then derived by assuming the non-conservative hyperbolic equation (6.2) for the phase factor. In view of the evolution of the phase factor, we therefore propose the KvN representation for the scalar nonlinear hyperbolic PDEs.\nIt should be pointed out that one cannot get the phase factor \u03c6 from \u03c8 = f1/2ei\u03c6 since ei\u03c6 is\nperiodic with respect to \u03c6. For this reason, it may be impossible to define the physical observables \u27e8g(t, x)\u27e9 = \u222b g(p)\u03c6(t, x, p)dp\nas in [38]. One may instead define \u27e8g\u03c7(t, x)\u27e9 = \u222b g(p)\u03c7(\u03c6(t, x, p))dp\nto remove the unexpected period, where \u03c7 is a function with period 2\u03c0. However, \u27e8g\u03c7(t, x)\u27e9 is actually very tricky to compute. It\u2019s not clear if this is possible to do. Suppose we have \u03c7(\u03c6) =\nsin(\u03c6) or cos(\u03c6). If we have access to a Hamiltonian diagonal in \u03c6, i.e. H = \u2211\nj \u03c6j |j\u27e9\u27e8j|, then we can create a control unitary U = |0\u27e9\u27e80| \u2297 1+ |1\u27e9\u27e81| \u2297 eiH . Then a standard Hadamard test can be employed to compute \u27e8g\u03c7(t, x)\u27e9 = Im\u27e8 \u221a g|U |\u221ag\u27e9 or Re\u27e8\u221ag|U |\u221ag\u27e9 where |\u221ag\u27e9 has amplitudes \u221agj . However, by solving Eq. (6.5) alone, one cannot create access to H unless every \u03c6j is individually computed, which defeats the purpose of a quantum algorithm. Instead we can try to create the state | sin(\u03c6)\u27e9 or | cos(\u03c6)\u27e9 whose amplitudes are proportional to sin(\u03c6j) or cos(\u03c6j). Note that\nsin\u03c6j = Im(\u03c8j/ \u221a fj) = Im(\u03c8j/ \u221a \u03c8j\u03c8 \u2020 j) = 1\n2i \u03c8j \u2212 \u03c8\u2020j\u221a \u03c8j\u03c8 \u2020 j , cos(\u03c6j) = \u03c8j + \u03c8 \u2020 j 2 \u221a \u03c8j\u03c8 \u2020 j .\nThe question is if we can create a quantum state with amplitudes proportional to Im(\u03c8j/ \u221a fj) or\nRe(\u03c8j/ \u221a fj). If we solve Eq. (6.5) alone to obtain |\u03c8\u27e9, then we cannot easily access these states.\nAn alternative to solving Eq. (6.5) alone is to include also its complex conjugate and we instead\nsolve for \u03c8\u0303 obeying\ni \u2202\n\u2202t \u03c8\u0303 = H\u0303KvN\u03c8\u0303\nwhere\n\u03c8\u0303 =\n[ \u03c8 \u2212 \u03c8\u2020\n\u03c8 + \u03c8\u2020\n] , H\u0303KvN = [ HKvN 0 0 HKvN ] .\nWe now perform quantum simulation of the state |\u03c8\u0303\u27e9 \u221d |\u03c8\u2212\u03c8\u2020\u27e9+|\u03c8+\u03c8\u2020\u27e9 with the new Hamiltonian H\u0303KvN and we can choose to post-select either the state |\u03c8 \u2212 \u03c8\u2020\u27e9 or |\u03c8 + \u03c8\u2020\u27e9. Given |\u03c8 \u00b1 \u03c8\u2020\u27e9, we can compute the inner product |\u27e8g|\u03c8\u00b1\u03c8\u2020\u27e9|2 to obtain the observable \u27e8g\u03c7(t, x)\u27e9 for \u03c7(\u03c6) = |\u03c8\u00b1\u03c8\u2020| using standard methods. This differs from \u03c7(\u03c6) = sin(\u03c6) or cos(\u03c6) up to norm factors \u221a \u03c8\u03c8\u2020. We leave it as an open question on how to design algorithms for more general \u03c7(\u03c6) functions."
        },
        {
            "heading": "7 Summary and discussion",
            "text": "In this paper, we systematically studied the quantum difference methods and the quantum\nspectral methods for solving the linear representations of nonlinear ODEs and nonlinear PDEs. Since our studies involve many different methods, we summarize the results for computing the physical observables in Tab. 1, from which we clearly observe that the quantum simulation methods give the best performance in the computational cost. On the other hand, for the classical treatment\nthe order of the iterative matrix in un+1 = Bun scales as O(Ndx ), leading to the classical run time scaling as C = O(dd+3/\u03b5d+1) for the first-order hyperbolic equation discussed in [41], while the quantum cost is Q = O(d3 log(1/\u03b5)), where \u03b5 = O(d/Nx) and the quantum difference method is employed. This implies the exponential speedup with respect to d and \u03b5 even for producing the observables.\nTab. 1: Time complexities for the computation of physical observables\nNonlinear Ordinary Differential Equations\nProblem Quantum simulation Spectral QLSA FD QLSA (\u03b1 \u2265 4)\nSubroutine Observable Subroutine Observable Subroutine Observable\nLiouville\nrepresentation\nd2+2/\u2113 \u03b52+4/\u2113\n\u2217 n4Ld 2+2/\u2113\n\u03b54+4/\u2113\n\u2217 d3+2/\u2113\n\u03b54+4/\u2113\n\u2217 n4Ld 3+2/\u2113\n\u03b56+4/\u2113\n\u2217 d\u03b1\n\u03b53 n4Ld \u03b1 \u03b55\nKvN\nrepresentation\nd2+2/\u2113 \u03b52+4/\u2113 n2Ld 2+2/\u2113 \u03b54+4/\u2113 d3+2/\u2113 \u03b52+4/\u2113 n2Ld 3+2/\u2113 \u03b54+4/\u2113 d\u03b1 \u03b53 n2Ld \u03b1 \u03b55\nNonlinear Hamilton-Jacobi PDEs\u266f\nProblem Quantum simulation Spectral QLSA FD QLSA (\u03b1 \u2265 4)\nSubroutine Observable Subroutine Observable Subroutine Observable\nLiouville equation\nd \u03b52 n4Hd \u03b54 d2+2/\u2113 \u03b52+4/\u2113 n4Hd 2+2/\u2113 \u03b54+4/\u2113 d\u03b1 \u03b53 n4Hd \u03b1 \u03b55\nSchro\u0308dinger\nequation\nd \u03b5\ncON 4 u0d \u03b53 d2+2/\u2113 \u03b51+4/\u2113 cON 4 u0d 2+2/\u2113 \u03b53+4/\u2113\na) The notations O for quantum simulations and O\u0303 for QLSA based methods are omitted. Since the dependence on the matrix order is not explicitly presented in [20], we just include the multi-\nplicative factor d\u03b1\u22123 (\u03b1 \u2265 4) in the gate complexity for the finite difference discretisations (note that the order of the matrix grows exponentially with respect to the dimension). b) nL and nH are the sampling factors for the Liouville equation, given respectively in Theorems\n3.2 and 4.2. Nu0 and cO are defined by (5.13) and (5.15), respectively. Note that cO depends on d, \u03b5 when computing the current density and kinetic energy. For the Hamilton-Jacobi equations, cO may be neglected, and Nu0 \u2272 n 1/2 H (see Remark 5.2). *) Despite the absence of the unitary structure, we still proposed a \u201cquantum simulation\u201d algorithm\nfor the Liouville representation in Appendix A, where non-unitary procedures are involved. The results are presented in Theorem A.1 and Theorem A.2 when the cost arising from multiple copies of initial quantum states is ignored. \u266f) For the spectral discretisation of the Liouville/Schro\u0308dinger equation, we only consider a prototype\ncase H(x, p) = 12 |p| 2 + V (x).\nLet us summarise the several parts of the article as follows. (1) Motivated by the idea in [23,38], we established the correspondence between the nonlinear\ndynamic system and the Liouville representation via a simple ansatz, which relates the ODE solution and the density distribution by the Dirac delta function. In this case, the ODE solution can be\nrecast as a physical observable of the Liouville equation, which provides an efficient way to solve the nonlinear ODEs by using quantum algorithms for the resulting linear Liouville equation. We introduced the Liouville approximation and the KvN approximation from the perspective of quantum differential equations solvers for the Liouville equation with smoothed initial data, while the KvN approximation can be regarded as the \u201csymmetrized\u201d counterpart of the Liouville approximation (See Fig. 3 for illustration). For both linear representation approaches, we proposed the upwind difference discretisations and Fourier spectral discretisations and provided in detail the time complexity analysis for the QLSA based methods and the quantum simulation methods, including the output of the quantum states and the post-processing for the computation of physical observables. The KvN mechanism allows direct quantum Hamiltonian simulations, while the Liouville method can also be translated into the evolution of symmetric propagators with additional non-unitary procedures at every time step after an appropriate Trotter based approximation.\n(2) For the nonlinear PDEs, more specifically the Hamilton-Jacobi equations, by using the\nlevel set mechanism as proposed in [38], one can map the nonlinear PDEs of (d + 1)-dimension to a linear (2d + 1)-dimensional Liouville equation, referred to as the Liouville representation for nonlinear PDEs. For a classical device, doubling the dimension of the problem may seem too costly because the cost increases exponentially with dimension. However, for quantum algorithms, the relative overhead in doubling the dimension can be up to exponentially smaller, which has been verified by the proposed quantum algorithms since no exponential terms in dimension like dd and (1/\u03b5)d for the classical cost are included.\n(3) It is well-known that the Schro\u0308dinger equation can be transformed into the quantum Li-\nouville equation via the Wigner transform, which in turn leads to the Liouville equation when taking the semiclassical limit. In view of the close relations between their physical observables, we introduced the Schro\u0308dinger framework for solving the Liouville equation. We studied the quantum interpretation of the classical time-splitting Fourier spectral method proposed in [4] for the Schro\u0308dinger equation, and presented a comprehensive discussion in the correspondence between the time-splitting spectral method and the Trotter based Hamiltonian simulation, although this\nissue has been addressed (in less detail) in some earlier literature. The time-splitting spectral discretisation for the Schro\u0308dinger equation generates a discretised Hamiltonian system, which can be handled by standard Hamiltonian simulation algorithms or quantum linear systems algorithms. We analysed in detail the gate complexity of these two approaches for numerically resolving the wave function and the physical observables. Despite the advantages in terms of time complexity, it should be pointed out that the solution to the Schro\u0308diner equatin is oscillatory, hence if one wants high-resolution (oscillation-free) numerical results the Liouville framework is preferred.\nDeclaration of competing interest\nThe authors declare that they have no known competing financial interests or personal rela-\ntionships that could have appeared to influence the work reported in this paper."
        },
        {
            "heading": "Acknowledgement",
            "text": "SJ was partially supported by the NSFC grant No. 12031013, the Shanghai Municipal Science\nand Technology Major Project (2021SHZDZX0102), and the Innovation Program of Shanghai Municipal Education Commission (No. 2021-01-07-00-02-E00087). NL acknowledges funding from the Science and Technology Program of Shanghai, China (21JC1402900), the Shanghai Pujiang Talent Grant (no. 20PJ1408400) and the NSFC International Young Scientists Project (no. 12050410230). YY was partially supported by China Postdoctoral Science Foundation (no. 2022M712080)."
        },
        {
            "heading": "A Spectral discretisation for the Liouville representation of non-",
            "text": "linear ODEs\nA.1 The Trotter based spectral discretisation\nConsider the problem (3.23). Let u = Fi(x)w(t, x). According to the above discussion, one\nhas\n\u2212i \u2202 \u2202xi u \u2212\u2192 P\u0302 di u = Piu = Pi\u039bFiw,\nwhere \u039bFi = diag(Fi) is a diagonal matrix, where the vector Fi = \u2211\nj Fi(xj)|j\u27e9. The resulting system of ordinary differential equations is d dtw(t) = \u2212iAw(t),\nw(0) = w0 = (w0(xj)), (A.1)\nwhere A = \u2211d\ni=1Ai with Ai = Pi\u039bFi . One can check from (3.38) that Pi are Hermitian matrices.\nHowever, we note that this does not mean that A is Hermitian, since in general (Pi\u039bFi) \u2020 = \u039bFiPi \u0338= Pi\u039bFi .\nThe evolution of (A.1) can be formally written as\n|\u03c8(t+\u2206t)\u27e9 = e\u2212i(A1+\u00b7\u00b7\u00b7+Ad)\u2206t|\u03c8(t)\u27e9,\nwhere |\u03c8(t)\u27e9 is a quantum state whose amplitudes are proportional to w(t) and the evolution operator exp(\u2212iAi\u2206t) is not necessarily unitary. Let us consider the first-order product formula\nU\u2206t = e \u2212iAd\u2206t \u00b7 \u00b7 \u00b7 e\u2212iA1\u2206t. (A.2)\nOne obtains from [16,62] that\ne\u2212i(A1+\u00b7\u00b7\u00b7+Ad)\u2206t = U\u2206t + CA\u2206t 2, (A.3)\nwhere CA depends on the matrix A, considered as O(1) in the following. Therefore, the problem is reduced to the simulation of each Aj , where Aj is not necessarily symmetric. Take j = 1 as an example and consider the decomposition \u039bF1 = \u039b + F1 \u2212 \u039b\u2212F1 , where \u039b \u00b1 F1\n= diag(d\u00b11 , \u00b7 \u00b7 \u00b7 , d\u00b1n ) are diagonal matrices with d\u00b1j > \u03b1 for some positive constant \u03b1. One can further require that \u2225\u039b\u00b1Fi\u2225 \u2272 max1\u2264j\u2264d \u2225Fj\u2225. Let A \u00b1 1 = P1\u039b \u00b1 F1 . The Strang splitting gives\ne\u2212iA1\u2206t = e\u2212iA + 1 \u2206t/2eiA \u2212 1 \u2206te\u2212iA + 1 \u2206t/2 + C1\u2206t 3, (A.4)\nwhere eiA \u2212 1 \u2206t and e\u2212iA + 1 \u2206t/2 can be evolved in the similar way (note that one can also use the first-order approximation). To this end, we consider the second one as an example.\nThe simulation of e\u2212iA + 1 \u2206t/2 is related to the following ODEs:\nd dt w(t) = \u2212 i 2 A+1 w(t) = \u2212 i 2 P1\u039b + F1 w(t), 0 \u2264 t \u2264 \u2206t.\nLet w\u0303 = \u221a \u039b+F1w, where \u221a \u039b+F1 = diag( \u221a d+1 , \u00b7 \u00b7 \u00b7 , \u221a d+n ). Then the above ODEs can be reformulated as d\ndt w\u0303(t) = \u2212 i 2 A\u0303+1 w\u0303(t), 0 \u2264 t \u2264 \u2206t, (A.5)\nwhere A\u0303+1 = \u221a \u039b+F1P1 \u221a \u039b+F1 is a Hermitian matrix. The one-step simulation gives\n|\u03c8\u0303(t+\u2206t)\u27e9 = e\u2212iA\u0303 + 1 \u2206t/2|\u03c8\u0303(t)\u27e9, (A.6)\nwhere |\u03c8\u0303(t)\u27e9 corresponds to w\u0303(t). Since d\u00b1j > \u03b1 > 0, w\u0303 = \u221a \u039b+F1w can be viewed as a linear systems problem:\nw\u0303 = D\u221211 w, D1 = ( \u221a \u039b+F1) \u22121. (A.7)\nSimilarly,\nw = D\u221212 w\u0303, D2 = \u221a \u039b+F1 = D \u22121 1 . (A.8)\nGiven the initial state of w0, denoted by |\u03c80\u27e9. At each time step, one needs to consider the procedure\n|\u03c80\u27e9 (A.7)\u2212\u2212\u2212\u2192 |\u03c8\u03030\u27e9 (A.6)\u2212\u2212\u2212\u2192 |\u03c8\u03031\u27e9 (A.8)\u2212\u2212\u2212\u2192 |\u03c81\u27e9\nfor e\u2212iA + 1 \u2206t/2, followed by the similar procedures for eiA \u2212 1 \u2206t and the first e\u2212iA + 1 \u2206t/2 in (A.4), where (A.6) can be solved by quantum Hamiltonian simulations or quantum differential equations solvers.\nRemark A.1. The transition between w\u0303 and w in (A.7) and (A.8) may be implemented in a simpler manner, for example, the LCU method, which decomposes the diagonal (and Hermitian) matrices Di = diag(di,1, \u00b7 \u00b7 \u00b7 , di,n), i = 1, 2 into a sum of two unitary operations. In fact, it is always possible to write Di = (Ui+ Vi)/2, where Ui = Di+ i \u221a 1\u2212D2i , and Vi = Di\u2212 i \u221a 1\u2212D2i (One can assume \u2225Di\u2225 \u2264 1 after an adjustment). These unitaries are also diagonal matrices with diagonal entries diag(di,1 \u00b1 i \u221a 1\u2212 d2i,1, \u00b7 \u00b7 \u00b7 , di,n \u00b1 i \u221a 1\u2212 d2i,n). Applying the operation Di onto a quantum state can be done by a straightforward application of the LCU method (e.g. Lemma 6 in [14]). Here we can assume access to the control operation |0\u27e9\u27e80| \u2297 Ui + |1\u27e9\u27e81| \u2297 Vi. However, multiple copies are needed at every time step for both the QLSA and the LCU since they are not unitary procedures, hence the cost (i.e. number of copies needed of the initial state) will increase exponentially with Nt. We can see the last statement more explicitly.\n\u2022 For the QLSA, when solving D1|w\u0303\u27e9 = |w\u27e9 with the quantum state |w\u27e9 given, one must prepare unitary operations to query the entries of w. This needs post-processing or multiple uses of\n|w\u27e9, hence multiple copies of |w\u27e9.\n\u2022 For the LCU, to obtain the state Di|w\u27e9 for some state |w\u27e9, one can construct a unitary procedure acting on |w\u27e9 and an ancilla that will output a state |w\u2032\u27e9 = \u03b1iDi|w\u27e9+\u03b2i|v\u27e9, where |v\u27e9 is some state we don\u2019t want. One can then obtain a single copy of Di|w\u27e9 upon postselection of |w\u2032\u27e9 with O(1/\u2225\u03b1iDi|w\u27e9\u22252) number of measurements, and hence multiple copies of |w\u27e9, where \u2225\u03b1iDi|w\u27e9\u2225 \u2264 1.\nWe are not only interested in the cost at every time step: we want to evolve for a long time, to Nt time-steps. Suppose we wanted to repeat this procedure Nt times with at least C > 1 copies at every time step. At the last N tht step if we need only a single copy of the desired state, then C copies of the state in the previous Nt\u2212 1 time-step is required, which means C2 copies of the state in the (Nt \u2212 2)th time-step is needed. Ultimately, this requires CNt copies of the original |w\u27e9 state in the initial time-step.\nIn the following, we ignore the cost of multiple copies at each time step.\nA.1.1 The QLSA for the spectral discretisation\nTheorem A.1. Assume further that max1\u2264j\u2264d \u2225Fj\u2225 = O(1) and T = O(1).\n(1) There exists a quantum algorithm that produces a state \u03b5-close to w(T )/\u2225w(T )\u2225 with the gate complexity given by\nNGates = O\u0303 (d3+2/\u2113 \u03b54+4/\u2113 ) .\n(2) The observable of the Liouville representation can be computed with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Ld3+2/\u2113\n\u03b56+4/\u2113\n) ,\nwhere nL = \u2225(\u03c1\u03c9)0\u2225/Md/2.\nProof. For simplicity, we omit the discussion of the cost and the error resulting from (A.7) and (A.8).\n(1) Since A\u0303+1 is hermitian, the eigenvalues of A\u0303 + 1 are real and \u03baV = 1, where V is the trans-\nformation matrix associated with A\u0303+1 . At each time step, by Lemma 3.4, the gate complexity of solving (A.5) within error \u03b7 is\nQ\u2206t = O\u0303(s\u03baV \u2225A\u0303+1 \u2225) = O\u0303(M 2) = O(M2Polylog(Md+2/\u03b7)),\nwhere s = O(M) = O(1/\u2206x), \u2225A\u0303+1 \u2225 = O(M). Therefore, U\u2206t defined in (A.2) can be evolved within error O(d(3\u03b7 +\u2206t2)) [51, Proposition 1.12] with\nNGates(U\u2206t) = O(dQ\u2206t) = O\u0303(dM2). (A.9)\nIn the following, we choose \u03b7 \u223c \u2206t2, and hence U\u2206t can be evolved within error O(d\u2206t2). According to the error estimate (3.17) and noting Eq. (A.3), one may have\ne\u03c1 \u2264 C(\u03c9 + d\u2206t/\u03c9 + d\u2206x\u2113/\u03c9\u2113+1),\nwhich is also true for the computation of the observable. The above error bounds suggest the following mesh strategy:\n\u03c9 \u223c d\u2206t/\u03c9 \u223c d\u2206x\u2113/\u03c9\u2113+1 \u223c \u03b5, (A.10)\nor equivalently,\nM \u223c d1/\u2113/\u03b51+2/\u2113, \u2206t = \u03b52/d. (A.11)\nThe total number of gates required to iterate to the n-th step is\nNGates = nNGates(U\u2206t) = O\u0303 (d2+2/\u2113 \u03b54+4/\u2113 ) = O\u0303 (d3+2/\u2113 \u03b54+4/\u2113 ) ,\nwhere in the last equal sign we have included the additional factor d arising from the matrix order (see Remark 3.8).\n(2) For the computation of the observable, according to Remark 3.4, one just needs to multiply\nthe original gate complexity by the sampling factor k = O(n4L/\u03b52). This completes the proof.\nA.1.2 Quantum simulation for the spectral discretisation\nThe approximate operator in (A.2) can also evolved by the quantum simulation.\nTheorem A.2. Assume further that max1\u2264j\u2264d \u2225Fj\u2225 = O(1) and T = O(1).\n(1) There exists a quantum algorithm that produces a state \u03b5-close to w(T )/\u2225w(T )\u2225 with the gate complexity given by\nNGates = O\u0303 (d2+2/\u2113 \u03b52+4/\u2113 ) .\n(2) The observable of the Liouville representation can be simulated with gate complexity given by\nNGates(\u27e8O\u27e9) = O\u0303 (n4Ld2+2/\u2113\n\u03b54+4/\u2113\n) ,\nwhere nL = \u2225(\u03c1\u03c9)0\u2225/Md/2.\nProof. We first quantify the number of gates used in the quantum simulation. According to Theorem 1 in [6], e\u2212iA\u0303 + j \u2206t/2 in (A.6) can be simulated within error \u03b7 with\nO ( \u03c4(md + log 2.5(\u03c4/\u03b7)) log(\u03c4/\u03b7)\nlog log(\u03c4/\u03b7) ) 2-qubits gates, where \u03c4 = s\u2225A\u0303+j \u2225max\u2206t/2, s is the sparsity of A\u0303 + j and \u2225A\u0303 + j \u2225max denotes the largest entry of A\u0303+j in absolute value. This result is near-optimal by Theorem 2 therein. One can check that the sparsity of A\u0303+j is s = O(M). Therefore, U\u2206t defined in (A.2) can be simulated within error O(d(3\u03b7 +\u2206t2)) [51, Proposition 1.12] with\nNGates(U\u2206t) = O(d\u03c4md \u00b7 polylog),\nwhere\n\u03c4 =MA\u0303max\u2206t, A\u0303max = max j \u2225A\u0303\u00b1j \u2225max = O(M),\npolylog = log2.5(\u03c4/\u03b7) log(\u03c4/\u03b7)\nlog log(\u03c4/\u03b7) .\nIn the following, we choose \u03b7 \u223c \u2206t2, and hence obtain the same mesh strategy for the QLSA. With the mesh strategy given in (A.11), one has the number of qubits per dimension is\nm = O(logM) = O ( log d1/\u2113\n\u03b51+2/\u2113\n) .\nThe total number of qubits is md = dm. With these settings, we obtain\n\u03c4 = O ( d2/\u2113 \u03b52+4/\u2113 \u2206t ) , \u03c4/\u03b7 = O (d1+2/\u2113 \u03b54+4/\u2113 ) ,\nand the total number of gates required to iterate to the n-th step is\nNGates = nNGates(U\u2206t) = O (d2+2/\u2113 \u03b52+4/\u2113 log d1/\u2113 \u03b51+2/\u2113 \u00b7 polylog ) .\n(2) For the computation of the observable, one just needs to add the multiplicative factor\nO(n4L/\u03b52). This completes the proof.\nRemark A.2. We emphasise that here only the total cost of the Hamiltonian simulation component at each time-step is included. The simulation protocol here is different from the traditional timemarching Hamiltonian simulation since non-unitary procedures are involved at each time step, leading to exponential increase of the cost as discussed in Remark A.1. It is worth pointing out that this obstacle can be overcome by our recently proposed technique - the Schro\u0308dingerisation approach [39,40]. Please refer to Section 4.5 of [40] for details."
        }
    ],
    "title": "Time complexity analysis of quantum algorithms via linear representations for nonlinear ordinary and partial differential equations",
    "year": 2023
}