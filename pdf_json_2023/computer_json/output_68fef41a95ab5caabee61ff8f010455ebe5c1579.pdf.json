{
    "abstractText": "In recent years, data-driven inference of cell-cell communication has helped reveal coordinated biological processes across cell types. While multiple cell-cell communication tools exist, results are specific to the tool of choice, due to the diverse assumptions made across computational frameworks. Moreover, tools are often limited to analyzing single samples or to performing pairwise comparisons. As experimental design complexity and sample numbers continue to increase in single-cell datasets, so does the need for generalizable methods to decipher cell-cell communication in such scenarios. Here, we integrate two tools, LIANA and Tensor-cell2cell, which combined can deploy multiple existing methods and resources, to enable the robust and flexible identification of cell-cell communication programs across multiple samples. In this protocol, we show how the integration of our tools facilitates the choice of method to infer cell-cell communication and subsequently perform an unsupervised deconvolution to obtain and summarize biological insights. We explain how to perform the analysis step-by-step in both Python and R, and we provide online tutorials with detailed instructions available at https://ccc-protocols.readthedocs.io/. This protocol typically takes ~1.5h to complete from installation to downstream visualizations on a GPU-enabled computer, for a dataset of ~63k cells, 10 cell types, and 12 samples. . CC-BY-NC-ND 4.0 International license available under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (which this version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731 doi: bioRxiv preprint",
    "authors": [
        {
            "affiliations": [],
            "name": "Hratch Baghdassarian"
        },
        {
            "affiliations": [],
            "name": "Daniel Dimitrov"
        },
        {
            "affiliations": [],
            "name": "Erick Armingol"
        },
        {
            "affiliations": [],
            "name": "Julio Saez-Rodriguez"
        },
        {
            "affiliations": [],
            "name": "Nathan E. Lewis"
        }
    ],
    "id": "SP:2000aff7d56b5131e8bd97644b8bedb021ecb72e",
    "references": [
        {
            "authors": [
                "A.A. Almet",
                "Z. Cang",
                "S. Jin",
                "Q. Nie"
            ],
            "title": "The landscape of cell-cell communication through single-cell transcriptomics",
            "venue": "Current Opinion in Systems Biology",
            "year": 2021
        },
        {
            "authors": [
                "E. Armingol",
                "A. Officer",
                "O. Harismendy",
                "N.E. Lewis"
            ],
            "title": "Deciphering cell-cell interactions and communication from gene expression",
            "venue": "Nat. Rev. Genet",
            "year": 2021
        },
        {
            "authors": [
                "D Dimitrov"
            ],
            "title": "Comparison of methods and resources for cell-cell communication inference from single-cell RNA-Seq data",
            "venue": "Nat. Commun",
            "year": 2022
        },
        {
            "authors": [
                "N. Shakiba",
                "R.D. Jones",
                "R. Weiss",
                "Del Vecchio",
                "D. Context-aware synthetic biology by controller design"
            ],
            "title": "Engineering the mammalian cell",
            "venue": "Cell Syst. 12, 561\u2013592",
            "year": 2021
        },
        {
            "authors": [
                "J Mitchel"
            ],
            "title": "Tensor decomposition reveals coordinated multicellular patterns of transcriptional variation that distinguish and stratify disease",
            "year": 2022
        },
        {
            "authors": [
                "L. Jerby-Arnon",
                "A. Regev"
            ],
            "title": "DIALOGUE maps multicellular programs in tissue from single-cell or spatial transcriptomics data",
            "venue": "Nat. Biotechnol",
            "year": 2022
        },
        {
            "authors": [
                "R.O. Ramirez Flores",
                "J.D. Lanzer",
                "D. Dimitrov",
                "B. Velten",
                "J. Saez-Rodriguez"
            ],
            "title": "Multicellular factor analysis of single-cell data for a tissue-centric understanding of disease",
            "year": 2023
        },
        {
            "authors": [
                "E Armingol"
            ],
            "title": "Context-aware deconvolution of cell-cell communication with Tensor-cell2cell",
            "venue": "Nat. Commun",
            "year": 2022
        },
        {
            "authors": [
                "L Heumos"
            ],
            "title": "Best practices for single-cell analysis across modalities",
            "venue": "Nat. Rev. Genet",
            "year": 2023
        },
        {
            "authors": [
                "C Kuppe"
            ],
            "title": "Spatial multi-omic map of human myocardial infarction",
            "venue": "Nature 608,",
            "year": 2022
        },
        {
            "authors": [
                "M Ale\u010dkovi\u0107"
            ],
            "title": "Breast cancer prevention by short-term inhibition of TGF\u03b2 signaling",
            "venue": "Nat. Commun",
            "year": 2022
        },
        {
            "authors": [
                "J. Tanevski",
                "R.O.R. Flores",
                "A. Gabor",
                "D. Schapiro",
                "J. Saez-Rodriguez"
            ],
            "title": "Explainable multiview framework for dissecting spatial relationships from highly multiplexed data",
            "venue": "Genome Biol. 23,",
            "year": 2022
        },
        {
            "authors": [
                "Zheng",
                "R. et al. MEBOCOST"
            ],
            "title": "Metabolic Cell-Cell Communication Modeling by Single Cell Transcriptome",
            "venue": "BioRxiv",
            "year": 2022
        },
        {
            "authors": [
                "W. Zhao",
                "K.G. Johnston",
                "H. Ren",
                "X. Xu",
                "Q. Nie"
            ],
            "title": "Inferring neuron-neuron communications from single-cell transcriptomics through NeuronChat",
            "venue": "Nat. Commun",
            "year": 2023
        },
        {
            "authors": [
                "E. Armingol",
                "R.O. Larsen",
                "M. Cequeira",
                "H. Baghdassarian",
                "N.E. Lewis"
            ],
            "title": "Unraveling the coordinated dynamics of protein- and metabolite-mediated cell-cell communication",
            "year": 2022
        },
        {
            "authors": [
                "Z. Zhang",
                "Y. Qin",
                "Y. Wang",
                "S. Li",
                "X. Hu"
            ],
            "title": "Integrated analysis of cell-specific gene expression in peripheral blood using ISG15 as a marker of rejection in kidney transplantation",
            "venue": "Front. Immunol",
            "year": 2023
        },
        {
            "authors": [
                "S Wang"
            ],
            "title": "A systematic evaluation of the computational tools",
            "venue": "Brief. Funct. Genomics",
            "year": 2022
        },
        {
            "authors": [
                "Z. Liu",
                "D. Sun",
                "C. Wang"
            ],
            "title": "Evaluation of cell-cell interaction methods by integrating single-cell RNA sequencing data with spatial information",
            "venue": "Genome Biol. 23,",
            "year": 2022
        },
        {
            "authors": [
                "T.G. Dietterich"
            ],
            "title": "Ensemble Methods in Machine Learning",
            "venue": "Multiple Classifier Systems",
            "year": 2000
        },
        {
            "authors": [
                "J.S. Nagai",
                "N.B. Leimk\u00fchler",
                "M.T. Schaub",
                "R.K. Schneider",
                "Costa",
                "I.G. CrossTalkeR"
            ],
            "title": "analysis and visualization of ligand-receptorne tworks",
            "venue": "Bioinformatics 37, 4263\u20134265",
            "year": 2021
        },
        {
            "authors": [
                "L Garcia-Alonso"
            ],
            "title": "Mapping the temporal and spatial dynamics of the human endometrium in vivo and in vitro",
            "venue": "Nat. Genet",
            "year": 2021
        },
        {
            "authors": [
                "Lagger",
                "C. et al. scAgeCom"
            ],
            "title": "a murine atlas of age-related changes in intercellular communication inferred with the package scDiffCom",
            "venue": "BioRxiv",
            "year": 2021
        },
        {
            "authors": [
                "S Jin"
            ],
            "title": "Inference and analysis of cell-cell communication using CellChat",
            "venue": "BioRxiv",
            "year": 2020
        },
        {
            "authors": [
                "M Liao"
            ],
            "title": "Single-cell landscape of bronchoalveolar immune cells in patients with COVID-19",
            "venue": "Nat. Med",
            "year": 2020
        },
        {
            "authors": [
                "F.A. Wolf",
                "P. Angerer",
                "Theis",
                "F.J. SCANPY"
            ],
            "title": "large-scale single-cell gene expression data analysis",
            "venue": "Genome Biol. 19, 15",
            "year": 2018
        },
        {
            "authors": [
                "M. Efremova",
                "M. Vento-Tormo",
                "S.A. Teichmann",
                "Vento-Tormo",
                "R. CellPhoneDB"
            ],
            "title": "inferring cell-cell communication from combined expression of multi-subunit",
            "venue": "CC-BY-NC-ND 4.0 International license available under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (which this version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731 doi: bioRxiv preprint ligand-receptor complexes. Nat. Protoc. 15, 1484\u20131506",
            "year": 2020
        },
        {
            "authors": [
                "Raredon",
                "M.S. B"
            ],
            "title": "Computation and visualization of cell-cell signaling topologies in single-cell systems data using Connectome",
            "venue": "Sci. Rep. 12,",
            "year": 2022
        },
        {
            "authors": [
                "R. Hou",
                "E. Denisenko",
                "H.T. Ong",
                "J.A. Ramilowski",
                "A.R.R. Forrest"
            ],
            "title": "Predicting cell-to-cell communication networks using NATMI",
            "venue": "Nat. Commun",
            "year": 2020
        },
        {
            "authors": [
                "Cabello-Aguilar",
                "S. et al. SingleCellSignalR"
            ],
            "title": "inference of intercellular networks from single-cell transcriptomics",
            "venue": "Nucleic Acids Res. 48, e55",
            "year": 2020
        },
        {
            "authors": [
                "S Jin"
            ],
            "title": "Inference and analysis of cell-cell communication using CellChat",
            "venue": "Nat. Commun",
            "year": 2021
        },
        {
            "authors": [
                "R. Kolde",
                "S. Laur",
                "P. Adler",
                "J. Vilo"
            ],
            "title": "Robust rank aggregation for gene list integration and meta-analysis",
            "venue": "Bioinformatics 28,",
            "year": 2012
        },
        {
            "authors": [
                "D T\u00fcrei"
            ],
            "title": "Integrated intra\u2010 and intercellular signaling knowledge for multicellular omics analysis",
            "venue": "Mol. Syst. Biol",
            "year": 2021
        },
        {
            "authors": [
                "F No\u00ebl"
            ],
            "title": "Dissection of intercellular communication using the transcriptome-based framework ICELLNET",
            "venue": "Nat. Commun",
            "year": 2021
        },
        {
            "authors": [
                "Shao",
                "X. et al. CellTalkDB"
            ],
            "title": "a manually curated database of ligand-receptor interactions in humans and mice",
            "venue": "Brief. Bioinformatics 22,",
            "year": 2021
        },
        {
            "authors": [
                "D Fazekas"
            ],
            "title": "SignaLink 2 - a signaling pathway resource with multi-layered regulatory networks",
            "venue": "BMC Syst. Biol. 7,",
            "year": 2013
        },
        {
            "authors": [
                "Z. Fang",
                "X. Liu",
                "Peltz",
                "G. GSEApy"
            ],
            "title": "a comprehensive package for performing gene set enrichment analysis in Python",
            "venue": "Bioinformatics 39,",
            "year": 2023
        },
        {
            "authors": [
                "M. Kanehisa",
                "M. Furumichi",
                "Y. Sato",
                "M. Ishiguro-Watanabe",
                "M. Tanabe"
            ],
            "title": "CC-BY-NC-ND 4.0 International license available under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (which this version posted April 30, 2023",
            "venue": "Nucleic Acids Res. 49,",
            "year": 2021
        },
        {
            "authors": [
                "Badia-I-Mompel",
                "P. et al. decoupleR"
            ],
            "title": "ensemble of computational methods to infer biological activities from omics data",
            "venue": "Bioinformatics Advances 2, vbac016",
            "year": 2022
        },
        {
            "authors": [
                "M Schubert"
            ],
            "title": "Perturbation-response genes reveal signaling footprints in cancer gene expression",
            "venue": "Nat. Commun. 9,",
            "year": 2018
        }
    ],
    "sections": [
        {
            "text": ""
        },
        {
            "heading": "Introduction",
            "text": "Cell-cell communication (CCC) coordinates higher-order biological functions in multicellular organisms1,2, dictating phenotypes in response to different contexts such as disease state, spatial location, and organismal life stage. In recent years, many tools have been developed to leverage single-cell and spatial transcriptomics data to understand CCC events driving various biological processes2. While each computational strategy contributes unique and valuable developments, many are tool-specific and challenging to integrate due to a plethora of different inference methods and resources housing prior knowledge2,3. Moreover, most tools do not account for the relationships of coordinated CCC events (CCC programs) across different contexts4, either disregarding context altogether by analyzing samples individually or being limited to pairwise comparisons. Thus, as the ability to generate large single-cell and spatial transcriptomics datasets and the interest in studying CCC programs continues to increase5\u20137, the need to robustly decipher CCC is becoming essential."
        },
        {
            "heading": "Development of the protocol",
            "text": "We combine two independent yet highly complementary tools that leverage existing\nmethods to enable robust and hypothesis-free analysis of context-driven cell-cell communication programs (Fig.1). LIANA3 is a computational framework that implements multiple available ligand-receptor resources (i.e., database of ligand-receptor interactions) and methods to analyze CCC. In particular, the user can employ LIANA to select any method and resource of choice or combine multiple approaches simultaneously to obtain consensus predictions. Tensor-cell2cell8 is a dimensionality reduction approach devised to uncover context-driven CCC programs across multiple samples simultaneously. Specifically, Tensor-cell2cell uses CCC scores inferred by any method and arranges the data into a 4D tensor to capture the coordinated relationship between ligand-receptor interactions, communicating cell type pairs, and samples. Together, LIANA and Tensor-cell2cell unify existing approaches to enable researchers to easily use their preferred CCC resource and method and subsequently analyze any number of samples into biologically-relevant CCC insights without the additional complications of installing separate tools or reconciling discrepancies between them.\nFor this protocol, we adapted LIANA and Tensor-cell2cell to enable their smooth integration. Thus, our protocol demonstrates the concerted use of both tools, describes the insights they provide, and facilitates the interpretation of their outputs. We base this protocol on recent best practices for single-cell transcriptomics and CCC inference9. We begin by processing the key inputs of our tools. Then, we guide the selection of methods and prior-knowledge resources to score intercellular communication, using LIANA's consensus method and resource to infer the potential CCC events for each sample. We use Tensor-cell2cell to summarize the intercellular communication events across samples, and we describe key technical considerations to enable consistent decomposition results. Finally, we guide the interpretation of the decomposition results, and show multiple downstream analyses and visualizations to facilitate interpretation of the context-dependent CCC programs. For example, we illustrate how biologically-relevant results can be obtained by coupling the outputs with pathway-enrichment analyses. We also provide quickstart and in-depth online tutorials with detailed descriptions of all steps described in this protocol and their crucial parameters. All\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nthese materials are available in both Python and R at https://ccc-protocols.readthedocs.io/. Collectively, these materials provide a comprehensive and flexible playbook to investigate cell-cell communication from single-cell transcriptomics.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nresource, and expression data, LIANA outputs CCC scores for all interactions in a sample. We adapted both tools to be highly compatible with each other, so LIANA outputs can be directly passed to Tensor-cell2cell to detect the programs from the scores computed with LIANA. Tensor-cell2cell uses the communication scores generated for multiple samples to identify context-driven CCC programs."
        },
        {
            "heading": "Applications of the protocol",
            "text": "LIANA and Tensor-cell2cell have been used for diverse purposes. LIANA was initially\nused to compare and evaluate different ligand-receptor methods in diverse biological contexts. Tensor-cell2cell was originally applied to link CCC programs with different severities of COVID-19 and Autism Spectrum Disorder (ASD)8. Briefly, LIANA evaluated different methods and showed that they have limited agreement in terms of communication mechanisms3,8, while Tensor-cell2cell revealed distinct CCC program dysregulations associated with severe COVID-19 specifically rather than moderate cases, as well as combinations of programs distinguishing ASD from neurotypical condition. Notably, LIANA provides a consensus resource and can aggregate multiple methods into consensus communication scores. Additionally, there is a natural complementarity between the two tools, as Tensor-cell2cell can use input scores from any CCC method (Fig.1) and generates consistent decomposition results across methods. Thus, our tools are highly generalizable and applicable to the analysis of any single-cell transcriptomics datasets. For example, LIANA has been used for the analysis of myocardial infarction10 and TGF\u03b2 signaling in breast cancer11, among others. Our tools are also applicable to other data modalities containing potentially interacting cell populations. Specifically, one can adapt LIANA or use existing spatial tools12 and combine their outputs with Tensor-cell2cell to generate spatially-informed CCC insights across contexts. Similarly, one can also obtain metabolite-mediated intercellular interactions13,14, and decompose those into patterns across contexts with Tensor-cell2cell15. One can also apply Tensor-cell2cell to extract CCC programs occurring at specific tissues16 or at a whole-body organism level16,17. In this protocol, we focus on how one can leverage the different CCC methods and resources, generalized by LIANA, to infer context-dependent CCC programs with Tensor-cell2cell from single-cell transcriptomics data.\nComparison with other methods A plethora of ligand-receptor methods have emerged, most of which were published with their own resources1,3,8. Many of these provide distinct scoring functions to prioritize interactions, yet studies have reported low agreement between their predictions3,18,19. Due to the lack of a gold standard, the benchmark of these methods remains limited2,3 and it is challenging to choose the method that works best. To this end, in addition to providing multiple individual methods via LIANA, we also enable their consensus, which we use in this protocol, under the assumption that the wisdom of the crowd is less biased than any individual method20.\nWhile many methods exist to infer ligand-receptor interactions from a single sample, fewer approaches were designed to compare CCC interactions across conditions. These include CrossTalkeR21, which utilizes network topological measures to compare communication patterns, CellPhoneDB22, which accepts user-provided lists of differentially-expressed genes to return relevant ligand-receptor interactions, and scDiffCom23, which uses a combined\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\npermutation approach across both cell types and conditions. Still, the aforementioned approaches are limited to pairwise comparisons. To our knowledge the only approach other than Tensor-cell2cell that can handle more than two conditions is CellChat24; however it is still based on pairwise comparisons, subsequently applying a manifold learning to summarize pathway-focused similarities of contexts. A key advantage of Tensor-cell2cell is that it considers all samples simultaneously while preserving the relationships between ligand-receptor interactions and communicating cell-type pairs. Thus, Tensor-cell2cell preserves higher-order CCC relationships and translates those into mechanistic CCC programs of potentially interacting ligands, receptors and communicating cell types."
        },
        {
            "heading": "Limitations",
            "text": "Although our tools provide robust and flexible solutions to infer CCC patterns across\ncontexts, they inherit the limitations associated with inferring communication events from transcriptomics data. These include the assumption that gene co-expression is indicative of active signaling events, which are largely mediated by proteins and their interactions, while also disregarding any biological processes, such as protein translation, post-translational modifications, secretion, diffusion, and trigger of intracellular events that precede and follow the interaction itself2,3. Moreover, the aggregation of single cells into cell groups is essential when inferring potential CCC events, which could occlude some signals in heterogeneous tissues2, thereby biasing the insights that can be obtained. Finally, since the input of Tensor-cell2cell is a 4D-tensor, it requires that all elements are measured across all features and samples. Consequently, one should consider how to handle missing values caused by samples that do not present the same cell types and/or expressed genes when constructing this tensor. Deciding whether those reflect biologically-meaningful zeroes or a technical artifact may lead to variations in the resulting CCC patterns. We provide an discussion of the related parameter choices that may help users decide how to handle this challenge.\nExpertise needed to implement the protocol Our protocol requires basic understanding of Python or R and single-cell data analysis.\nYet, some of the detailed tutorials also touch on considerations that would be of interest to computational biologist power users.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint"
        },
        {
            "heading": "Materials",
            "text": ""
        },
        {
            "heading": "Equipment",
            "text": ""
        },
        {
            "heading": "Hardware",
            "text": "This protocol was run on a computer with the following specifications:\n\u25cf CPU: AMD Ryzen Threadripper 3960x (24 cores) \u25cf Memory: 128GB DDR4 \u25cf GPU: NVIDIA RTX A6000 48GB\nHowever, the minimal requirements for running this protocol are: \u25cf CPU: 64-bit Intel or AMD processor (4 cores) \u25cf Memory: 16GB DDR3 \u25cf GPU: NVIDIA GTX 1050 Ti (Optional) \u25cf Storage: At least 10GB available"
        },
        {
            "heading": "Software",
            "text": ".CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nggpubr R conda scater R conda zellkonverter R conda liana Commit ID:\nab70b34066f68df60e9ed0d 0ce72b0d00f871b7e\nR remotes\nseurat-disk Commit ID: 9b89970eac2a3bd770e744f 63c7763419486b14c R remotes\ndecoupleR Commit ID: c17d635e0720c86f2386c39 ad7dea8614df393f1 R biocmanager *: For GPU enabled use only Python packages should always be installed. R language packages only need to be installed if planning to run the notebooks in R."
        },
        {
            "heading": "Equipment setup",
            "text": "To facilitate the setup of a virtual environment containing all required packages with their corresponding versions, we provide an executable `setup_env.sh` script together with instructions on a Github repository we prepared for this protocol: https://github.com/saezlab/ccc_protocols/tree/main/env_setup\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint"
        },
        {
            "heading": "Procedure",
            "text": ".CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nimplemented in LIANA (step 4 in the Procedure section). An output containing the cell-cell communication scores across all interactions per sample is generated. (c) The LIANA output is then directly passed to Tensor-cell2cell to build the respective communication tensor used by the tensor component analysis (steps 5.1-5.2 in the Procedure section). The output generated by Tensor-cell2cell can be later employed for other downstream analyses (steps 5.3 and 6 in the Procedure section).\n1. Installation and Environment Setup Install Anaconda or Miniconda through the official instructions at: https://docs.anaconda.com/anaconda/install/index.html\nThen, open a terminal to create and activate a conda environment:\nIf you will be using a GPU, install PyTorch using conda:\nInstall Tensor-cell2cell, LIANA, and decoupler using PyPI:\nFor fully reproducible runs of our Tutorials in both Python and R, we have specified the required packages and their versions in Table 1. You can also follow instructions in the Environment setup section to install a clean virtual environment with all package requirements.\nNotebooks to run this tutorial can be created by starting jupyter notebook:\n2. Initial Setups\nFirst, if you are using a NVIDIA GPU with CUDA cores, set `use_gpu=True` and enable PyTorch with the following code block. Otherwise, set `use_gpu=False` or skip this part.\nThen, import all the packages we will use in this tutorial:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nAfterwards, specify the data and output directories:\nWe begin by loading the single-cell transcriptomics data. For this tutorial, we will use a lung dataset of 63k immune and epithelial cells across three control, three moderate, and six severe COVID-19 patients25. We use a convenient function to download the data and store it in the AnnData format, on which the scanpy26 package is built.\n3. Data Preprocessing Data preprocessing is crucial for the correct application of this (Fig.2a). Here, we only highlight the essential steps. However, other aspects of data preprocessing should be considered and performed according to the best practices of single-cell analysis (https://github.com/theislab/single-cell-best-practices).\n3.1. Quality Control \u25cf TIMING < 5 min\nThe loaded data has already been pre-processed to a degree and comes with cell annotations. Nevertheless, we highlight some of the key steps. To mitigate noise, we filter non-informative cells and genes:\nWe additionally remove a high mitochondrial content:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nWhich is followed by removing cells with a high number of total UMI counts, potentially representing more than one single cell (doublets):\n! CAUTION Here, we covered the absolute basics. We omit other common practice steps, such as the removal of cells with high ribosomal content and the correction of ambient RNA. Additionally, in certain scenarios, particularly in such where technical variation is expected to be notable, the application of quality control steps by sample is desirable.\n3.2. Normalization \u25cf TIMING < 2 min\nWe have now removed the majority of noisy readouts and we can proceed to count normalization, as most cell-cell communication tools typically use normalized count matrices as input. Normalized counts are usually obtained in two essential steps, the first being count depth scaling which ensures that the measured count depths are comparable across cells. This is then usually followed up with log1p transformation, which stabilizes the variance of the counts and enables the use of linear metrics downstream:\n\u2206 CRITICAL A key parameter of this command is: \u25cf target_sum ensures that after normalization each observation (cell) has a total count\nequal to that number.\nThese normalization steps ensure that the aggregation of cells into cell types, a common practice for CCC inference, is done on comparable cells with approximately normally-distributed feature values.\n? TROUBLESHOOTING Expression matrices with nan or inf values causes errors. Users should stick to common normalization techniques, and any nan, negative or inf values must be filled to avoid errors.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n4. Inferring cell-cell communication\nFollowing preprocessing of the single-cell transcriptomics data, we proceed to the inference of potential CCC events (Fig.3b). In this case, we will use LIANA to infer the ligand-receptor interactions for each sample. LIANA is available in Python and R, and supports Scanpy, SingleCellExperiment and Seurat objects as input. LIANA is highly modularized, and it natively implements the formulations of several methods, including CellPhoneDBv227, Connectome28, log2FC, NATMI29, SingleCellSignalR30, CellChat31, a geometric mean, as well as a consensus score in the form of a rank aggregate32 from any combination of methods (Fig.3). The high modularity of LIANA further enables the straightforward addition of any other ligand-receptor method.\nLIANA classifies the scoring functions from the different methods into two categories: those that infer the \u201cMagnitude\u201d and \u201cSpecificity\u201d of interactions. The \u201cMagnitude\u201d of an interaction is a measure of the strength of the interaction, and the \u201cSpecificity\u201d of an interaction is a measure of how specific an interaction is to a given pair of cell groups. Generally, these categories are complementary, and the magnitude of the interaction is often in agreement with the specificity of the interaction. In other words, a ligand-receptor interaction with a high magnitude score in a given pair of cell types is likely to also be specific, and vice versa.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n4.1. Selecting a method to infer cell-cell communication\nWhile there are many commonalities between the different methods implemented in LIANA, there also are many variations and different assumptions affecting how the magnitude and specificity scores are calculated (See Appendix 1). These variations can result in limited agreement in inferred predictions when using different CCC methods3,18,19. To this end, in LIANA we additionally provide a rank_aggregate score, that can be used to aggregate any of the scoring functions above into a consensus score.\nBy default, LIANA calculates an aggregate rank using a re-implementation of the RobustRankAggregate method32, and generates a probability distribution for ligand-receptors that are ranked consistently better than expected under a null hypothesis (See Appendix 1). The consensus of ligand-receptor interactions across methods can therefore be treated as a P-value. We show in detail how LIANA\u2019s rank aggregate or any of the individual methods can be used to infer communication events from a single sample or context at \u201cPython Tutorial 02 Infer-Communication-Scores\u201d [https://ccc-protocols.readthedocs.io/en/latest/notebooks/ccc_python/02-Infer-Communication-S cores.html].\n\u2206 CRITICAL When using LIANA with Tensor-cell2cell, we recommend selecting a scoring function that reflects the Magnitude of the interactions, as how the interactions Specificity relates to changes across samples is unclear. In this protocol, we will use the `magnitude_rank` scoring function from LIANA, under the assumption that ensemble approaches are potentially less biased than any single method alone20.\n? TROUBLESHOOTING The default decomposition method of Tensor-cell2cell is a non-negative Tensor Component Analysis, which, as implied, expects non-negative values as the inputs. Thus, when selecting the method of choice, make sure that you do not have negative CCC scores. If so, you can replace them by zeros or the minimum positive value.\n4.2. Selecting ligand-receptor resources\nWhen considering ligand-receptor prior knowledge resources, a common theme is the trade-off between coverage and quality, and similarly each resource comes with its own biases3. LIANA takes advantage of OmniPath33, which includes expert-curated resources of CellPhoneDBv227, CellChat31, ICELLNET34, connectomeDB202029, CellTalkDB35, as well as 10 others3,33. LIANA further provides a consensus expert-curated resource from the aforementioned five resources, along with some curated interactions from SignaLink36. In this protocol, we will use the consensus resource from LIANA, though any of the other resources are available via LIANA, and one can also use LIANA with their own custom resource.\nSelecting any of the lists of ligand-receptor pairs in LIANA can be done through the following command:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nHere \u2018consensus\u2019 indicates the use of LIANA\u2019s consensus resource , but it can be replaced by any other available resource (e.g. \u2018cellphonedb\u2019, \u2018cellchatdb\u2019, \u2018connectomeDB\u2019, etc.).\n? TROUBLESHOOTING Users should choose a resource with gene identifiers and organism that corresponds to that of their data. By default, LIANA uses human gene symbol identifiers, but additionally provides a murine resource as well as functionalities to convert via orthology to other organisms.\n4.3. Running LIANA for each sample \u25cf Timing 4 minutes\nHere, we will run LIANA\u2019s `rank_aggregate` with six methods (by default, CellPhoneDBv2, CellChat, SingleCellSignalR, NATMI, Connectome, log2FC) on all of the samples in the dataset.\n\u2206 CRITICAL Key parameters here are: \u25cf adata stands for Anndata, the data format used by scanpy26, and we pass here with an\nobject with a single sample/context. \u25cf sample_key corresponds to the sample identifiers, available as a column in the\n`adata.obs` dataframe. \u25cf groupby corresponds to the cell group label stored in `adata.obs`. \u25cf resource_name - name of any of the resources available via LIANA \u25cf expr_prop is the expression proportion threshold (in terms of cells per cell type\nexpressing the protein) for any protein subunit involved in the interaction, according to which we keep or discard the interactions.\n\u25cf min_cells is the minimum number of cells per cell type required for a cell type to be considered in the analysis \u25cf n_perms is the number of permutations for P-value estimation \u25cf use_raw is a boolean that indicates whether to use the `adata.raw` slot, here the\nlog-normalized counts are assigned to `adata.X`, other options include passing the name of a layer via the `layer` parameter or using the counts stored in `adata.raw`.\n\u25cf verbose is a Boolean value that indicates whether to print the progress of the function \u25cf inplace indicates whether storing the results in place, i.e. to `adata.uns[\u201cliana_res\u201d]`.\n\u2206 CRITICAL LIANA considers interactions as occurring only if the ligand and receptor, and all of their subunits, are expressed in at least 10% of the cells (by default) in both clusters involved in the interaction. Any interactions that do not pass these criteria are not returned by default. To return those, the user can use the `return_all_lrs` parameter. These results will later be used to\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\ngenerate a tensor of ligand-receptor interactions across contexts that will be decomposed into CCC patterns by Tensor-Cell2cell. Thus, how non-expressed interactions are handled is critical to consider when building the tensor later on (see \u201cPython Tutorial 03 Generate-Tensor\u201d [https://ccc-protocols.readthedocs.io/en/latest/notebooks/ccc_python/03-Generate-Tensor.html])."
        },
        {
            "heading": "Visualize output",
            "text": "One can visualize the output as a dotplot, but with the addition of the samples."
        },
        {
            "heading": "Key parameters here are:",
            "text": "\u25cf source_labels is a list containing the names of the sender cells of interest. \u25cf target_labels is a list containing the names of the receiver cells of interest. \u25cf ligand_complex is a list containing the names of the ligands of interest. \u25cf receptor_complex is a list containing the names of the receptors of interest. \u25cf sample_key is a string containing the column name where samples are specified.\n\u25a0 PAUSE POINT We can export the liana results by sample to a csv, and save them for later use:\nAlternatively one could just export the whole AnnData object, together with the ligand-receptor results stored at `adata.uns[\u2018liana_res\u2019]`:\n5. Comparing cell-cell communication across multiple samples 5.1. Building a 4D-communication tensor \u25cf Timing <1 minute\nFirst, we generate a list containing all samples from our AnnData object. For visualization purposes we sort them according to COVID-19 severity. Here, we can find the names of each of the samples in the \u2018sample_new\u2019 column of the adata.obs information:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nTensor-cell2cell performs a tensor decomposition to find context-dependent patterns of cell-cell communication. It builds a 4D-communication tensor, which in this case is built from the communication scores obtained from LIANA for every combination of ligand-receptor and sender-receiver cell pairs per sample (Fig.2c). For this protocol and associated tutorials, we implemented a function that facilitates building this communication tensor:\n? TROUBLESHOOTING Since the `magnitude_rank` from LIANA represents a score where the values closest to 0 represent the most probable communication events, we need to invert the communication scores to use it with Tensor-cell2cell. See the parameter `inverse_fun` below for further details for transforming this score.\n\u2206 CRITICAL Key parameters here are:\n\u25cf liana_res is the dataframe containing the results from LIANA, usually located in `adata.uns[\u2018liana_res\u2019]. We can pass directly the AnnData object to the parameter adata to this function. If the AnnData object is passed, we do not need to specify the liana_res parameter. \u25cf sample_key, source_key, target_key, ligand_key, receptor_key, and score_key are the column names in the dataframe containing the samples, sender cells, receiver cells, ligands, receptors, and communication scores, respectively. Each row of the dataframe contains a unique combination of these elements. \u25cf inverse_fun is the function we use to convert the communication score before building the tensor. In this case, the 'magnitude_rank' score generated by LIANA considers low values as the most important ones, ranging from 0 to 1. In contrast, Tensor-cell2cell requires higher values to be the most important scores, so here we pass a function (lambda x: 1 - x) to adapt LIANA's magnitude-rank scores (subtracts the LIANA's score from 1). If None is passed instead, no transformation will be performed on the communication score. If using other scores coming from one of the methods implemented in LIANA, a similar transformation can be done depending on the parameters and assumptions of the scoring method. \u25cf how controls which ligand-receptor pairs and cell types to include when building the tensor. This decision depends on whether the missing values across a number of samples for both ligand-receptor interactions and sender-receiver cell pairs are considered to be biologically-relevant. Options are:\n\u25cb 'inner' is the most strict option since it only considers cell types and\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nligand-receptor pairs that are present in all contexts (intersection). \u25cb 'outer' considers all cell types and ligand-receptor pairs that are present across\ncontexts (union). \u25cb 'outer_lrs' considers only cell types that are present in all contexts (intersection),\nwhile all ligand-receptor pairs that are present across contexts (union). \u25cb 'outer_cells' considers only ligand-receptor pairs that are present in all contexts\n(intersection), while all cell types that are present across contexts (union). \u25cf outer_fraction controls the elements to include in the union scenario of the how options.\nOnly elements that are present at least in this fraction of samples/contexts will be included. When this value is 0, the tensor includes all elements across the samples. When this value is 1, it acts as using how='inner'.\n\u25cf context_order is a list specifying the order of the samples. The order of samples does not affect the results, but it is useful for posterior visualizations.\nWe can check the shape of this tensor to verify the number of samples, ligand-receptor pairs, sender cells, and receiver cells, respectively:\nIn addition, optionally we can generate the metadata for coloring the elements in each of the tensor dimensions (i.e., for each of the contexts/samples, ligand-receptor pairs, sender cells, and receiver cells) in posterior visualizations. This metadata corresponds to dictionaries for each of the dimensions, containing the elements and their respective major groups, such as a signaling categories for a ligand-receptor interactions, a hierarchically more granular cell type, or a disease condition for a sample. In cases where we do not account for such information, we do not need to generate such dictionaries.\nFor example, we can build a dictionary for the contexts/samples dictionary by using the metadata in the AnnData object. In this example dataset, we can find samples in the column \u2018sample_new\u2019, while their majors groups (representing COVID-19 severity) are found in the column \u2018condition\u2019:\nThen, the metadata can be generated with:\nNotice that the None elements in the variable dimensions_dicts represent the dimensions where we are not including additional metadata. If you want to include metadata about major groups for those dimensions, you have to replace the corresponding None by a dictionary as described before.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n\u25a0 PAUSE POINT We can export our tensor and its metadata for performing the tensor decomposition later:\nThen, we can load them with:\n5.2. Running Tensor-cell2cell across samples \u25cf Timing 5 minutes with a \u2018regular\u2019 run or 40 minutes with a \u2018robust\u2019 run (using a GPU in both cases)\nNow that we have built the tensor and its metadata, we can run Tensor Component Analysis via Tensor-cell2cell with one simple command that we implemented for our unified tools:\n\u2206 CRITICAL Key parameters of this command are:\n\u25cf rank is the number of factors or latent patterns we want to obtain from the analysis. You can either indicate a specific number or leave it as None to perform the decomposition with a suggested number from an elbow analysis. \u25cf tf_optimization indicates whether running the analysis in the 'regular' or the 'robust' way. The regular way runs the tensor decomposition fewer times than the robust way to select an optimal result. Additionally, the former employs less strict convergence parameters to obtain optimal results than the latter, which is also translated into a faster generation of results. \u25cf random_state is the seed for randomization. It controls the randomization used when initializing the optimization algorithm that performs the tensor decomposition. It is useful for reproducing the same result every time that the analysis is run. If None, a different randomization will be used each time. \u25cf device indicates whether we are using the 'cpu' or a GPU with 'cuda' cores. See the Installation section of this tutorial for instructions to enable the use of GPU(s). \u25cf output_folder is the full path to the folder where the results will be saved. Make sure that this folder exists before passing it here.\nThis command will output three main results: a figure with the elbow analysis for suggesting a number of factors (only if rank=None), a figure with the loadings assigned to each element\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nwithin a tensor dimension per factor obtained, and an excel file containing the values of these loadings.\n? TROUBLESHOOTING Elbow analysis returns a rank equal to one, or the curve is increasing instead of decreasing. This may be due to high sparsity in the tensor. The sparsity can be decreased by re-building the 4D tensor after re-running LIANA (Step 4.3) with a smaller `expr_prop` (e.g. `expr_prop=0.05`) or by only re-building the tensor (Step 5.1) with a higher `outer_fraction` (e.g. `outer_fraction=0.8`).\n5.3. Downstream visualizations: Making sense of the factors \u25cf Timing <2 minutes\nThe figure representing the loadings in each factor generated in the previous section can be interpreted by interconnecting all dimensions within a single factor. For example, if we take Factor 4 in Fig.4, the CCC program here occurs in each sample in a manner proportional to their loadings, here correlated with COVID-19 severity. Relevant interactors can be interpreted according to their loadings (i.e. ligand-receptor pairs, sender cells, and receiver cells with high loadings play a more prominent role in an identified CCC program). Ligands in high-loading ligand-receptor pairs are sent predominantly by high-loading sender cells, and interact with the cognate receptors on the high-loadings receiver cells. In this factor, the program would be predominantly driven by changes in the receptor expression of receiver cells such as macrophages, neutrophils and myeloid dendritic cells.\nWe can access the loading values of samples in each of the factors with:\nIn this case we obtain a dataframe where rows represent the samples, columns the factors generated by the decomposition, and entries are the loadings of each element within the corresponding factor. We can also access the loadings for the elements in the other dimensions by replacing \u2018Contexts\u2019 with \u2018Ligand-Receptor Pairs\u2019, \u2018Sender Cells\u2019, or \u2018Receiver Cells\u2019. Then, we can use these loadings to perform various downstream analyses (Fig.5).\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nprograms. (c-e) Similarly, ligand-receptor interactions can be analyzed from their loadings per or across factors. (c) Key ligand-receptor pairs whose loadings are above a threshold can be clustered depending on their importance across all cell-cell communication programs. They can also be ranked according to their loadings within a factor (factor-specific analyses), and this information can be used to run an enrichment analysis such as (d) GSEA or (e) PROGENy to associate each of the programs with different functions or pathways. (f) Finally, cell type loadings can be jointly used within a factor to have an overall representation of the cell-cell communication (i.e., a factor-specific network of communication).\nFor example, we can use loadings to compare groups of samples (Fig.5a-b) with box plots and statistical tests:\n\u2206 CRITICAL In this case, we can change the statistical test and the multiple-test correction with the parameters `statistical_test` and `pval_correction`. Here we used an independent t-test and a Benjamini-Hochberg correction. Additionally, we can set verbose=True to print exact test statistics and P-values.\nWe can also generate heatmaps for the elements with loadings above a certain threshold in a given dimension (Fig.5b,c,f). Furthermore, we can cluster these elements by the similarity of their loadings across all factors:\n? TROUBLESHOOTING Note that here we plot the loadings of the dimension representing the ligand-receptor pairs. In addition, we prioritize the pairs with high loadings using the parameter `loading_threshold=0.1`. In this case, the elements are included only if they are greater than or equal to that threshold in at least one of the factors. If we use `loading_threshold=0`, we would consider all of the elements. Considering all of the elements would require modifying the parameter `figsize` to enlarge the figure.\n! CAUTION Changing the parameter `use_zscore` to True would standardize the loadings of\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\none element across all factors. This is useful to compare an element across factors and highlight the factors in which that element is most important. Modifying `row_cluster` to True would also cluster the factors depending on the elements that are important in each of them.\n6. Pathway Enrichment Analysis: Interpreting the context-driven communication\nThe decomposition of ligand-receptor interactions across samples into loadings associated with the conditions reduces the dimensionality of the inferred interactions substantially. Nevertheless, we are still working with 1,054 interactions across multiple factors associated with the disease labels. To this end, as is commonly done when working with omics data types, we can perform pathway enrichment analysis to identify the general biological processes of interest. By using the loadings for each ligand-receptor pair, we can rank them within each factor and use this ranking as input to enrichment analysis (Fig.5d-e). Pathway enrichment thus serves two purposes; it further reduces the dimensionality of the inferred interactions, and it enhances the biological interpretability of the inferred interactions.\nHere, we will show the application of classical gene set enrichment analysis on the ligand-receptor loadings. We will use GSEA37 with KEGG Pathways38, as well as a multivariate linear regression from decoupler-py39 with the PROGENy pathway resource40.\nFirst, we assign ligand-receptor loadings to a variable:\n6.1. Classic Pathway Enrichment\nFor the pathway enrichment analysis, we use ligand-receptor pairs instead of individual genes. KEGG was initially designed to work with sets of genes, so first we need to generate ligand-receptor sets for each of its pathways. A ligand-receptor pair is assigned as part of a pathway set if all of the genes in the pair are part of the gene set of such pathway:\nNote that we use the `lr_pairs` database that we loaded in the Selecting ligand-receptor resources section.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n\u2206 CRITICAL Key parameters of this command are: \u25cf complex_sep indicates the symbol separating the gene names in the protein complex. \u25cf lr_sep is the symbol separating a ligand and a receptor complex. \u25cf organism is the organism matching the gene names in the single-cell dataset. It could\nbe either \u201chuman\u201d or \u201cmouse\u201d. \u25cf pathwaydb is the name of the database to be loaded, provided with the cell2cell\npackage. Options are \u201cGOBP\u201d, \u201cKEGG\u201d, and \u201cReactome\u201d.\nRun GSEA via cell2cell which calls the `gseapy.prerank` function internally \u25cf Timing < 1 minute\n\u2206 CRITICAL Key parameters of this command are: \u25cf lr_set is a dictionary associating pathways (keys) with ligand-receptor pairs (values). \u25cf weight represents the original parameter p in GSEA. It is an exponent that controls the\nimportance of the ranking values (loadings in our case). \u25cf min_size indicates the minimum number of LR pairs that a set has to contain to be\nconsidered in the analysis. \u25cf permutations indicates the number of permutations to perform to generate the null\ndistribution. \u25cf random_state is the reproducibility seed. \u25cf significance_threshold is the P-value threshold to consider significance.\nNow that we have obtained the normalized-enrichment scores (NES) and corresponding P-values from GSEA, we can plot those using the following function from cell2cell:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n6.2. Footprint enrichment analysis In footprint enrichment analysis, instead of considering the genes whose products (proteins) are directly involved in a process of interest, we consider the genes affected by it - i.e. those that change downstream as a consequence of the process41. In this case, we will use the PROGENy resource to infer the pathways driving the identified context-dependent patterns of ligand-receptor pairs. PROGENy was built in a data-driven manner using perturbation data40. Consequently, it assigns different weights to each gene in its pathway genesets according to its importance. Thus, we need an enrichment method that can account for weights. To do so, we will use a multivariate linear regression implemented in decoupler-py39.\nAs we did in GSEA using Tensor-cell2cell, we first have to generate ligand-receptor gene sets while also assigning a weight to each ligand-receptor interaction. This is done by taking the mean between the ligand and receptor weights. For ligand and receptor complexes, we first take the mean weight for all subunits. We keep ligand-receptor weights only if all the proteins in the interaction are sign-coherent and present for a given pathway.\nLoad the PROGENy genesets and then convert them to sets of weighted ligand-receptor pairs:\nRun footprint enrichment analysis using the `mlm` method from decoupler-py \u25cf Timing < 1 minute:\nHere, `estimate` and `pvals` correspond to the t-values and P-values assigned to each pathway.\nFinally, we generate Heatmap for the 14 Pathways in PROGENy across all Factors:\nFrom the heatmap, we can also generate a Barplot for the PROGENy pathways for a specific factor:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint"
        },
        {
            "heading": "Troubleshooting",
            "text": "Troubleshooting advice is summarized in Table 2.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint"
        },
        {
            "heading": "Timing",
            "text": "Step 1. Installation of Anaconda/Miniconda and Python packages: 5-30 mins. Step 2. Initial setups: ~1 min. Step 3. Deciphering cell-cell communication with LIANA: ~5 min. Step 4. Comparing cell-cell communication across multiple samples with Tensor-cell2cell: Rank estimation with elbow analysis takes 5 min, while the tensor decomposition 40 min. Step 5. Downstream visualizations: 1 min. Step 6. Functional Enrichment Analysis of KEGG and PROGENy pathways respectively using GSEA and linear regression take 1 min each."
        },
        {
            "heading": "Anticipated Results",
            "text": "Deciphering cell-cell communication with LIANA yields all ligand-receptor interactions, defined in the prior knowledge resource, for every pair of cell types within the dataset. For each interaction, a set of statistics is assigned. These typically include a value that reflects the magnitude and specificity of interaction depending on the method of choice. The magnitude scores for each interaction in each sample are transformed into a 4D tensor that is then decomposed by Tensor-cell2cell. Prior to decomposition, it is recommended to estimate the optimal number of factors required to reconstruct the original tensor. For each output factor, we obtain four vectors that represent the sample, ligand-receptor interaction, sender cell type, and receiver cell type loadings. We can interpret the loadings as the relative importance of each element in each dimension of the original tensor. Together, the four vectors in a given factor constitute the CCC programs. The vectors are interconnected such that their combination across dimensions define a CCC program, with loadings in the sample dimension representing the context-dependence of the program and elements from each of the other dimensions (ligand-receptor interactions and cell types) with high loadings being key mediators of this program. By focusing on sample loadings associated with a given condition label, we can thus identify the cell types and interactions also associated with that label. To aid the interpretation of LIANA and Tensor-cell2cell results, we also provide a wide range of visualizations and strategies to summarize the interaction loadings into biologically-meaningful insights. We anticipate that our unified protocol will aid the scientific community in studying CCC using large single-cell datasets with a high number of samples and biological conditions.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint"
        },
        {
            "heading": "Acknowledgements",
            "text": "D.D. is supported by the European Union\u2019s Horizon 2020 research and innovation program\n(860329 Marie-Curie ITN \u201cSTRATEGY-CKD\u201d). E.A. is supported by the Chilean Agencia\nNacional de Investigaci\u00f3n y Desarrollo (ANID) through its scholarship program DOCTORADO\nBECAS CHILE/2018 -72190270, the Fulbright Chile Commission, and the Siebel Scholars\nFoundation. This work was further supported by the NVIDIA Academic Hardware Grant\nProgram. N.E.L. is supported in part by NIGMS R35 GM119850. H.B. is also supported by an\nORISE fellowship."
        },
        {
            "heading": "Conflict of interests",
            "text": "JSR reports funding from GSK, Pfizer and Sanofi and fees from Travere Therapeutics, and\nAstex. During the course of this work, NEL reports funding from Sanofi, Amgen, Sartorius, and\nIonis, and is a co-founder of NeuImmune Inc. and Augment Biologics."
        },
        {
            "heading": "Authors contributions",
            "text": "H.B., D.D, and E.A. conceived the project, adapted the computational tools, developed the\nprotocol, and wrote the initial version of the manuscript. J.S.R. and N.E.L. revised the\nmanuscript and supervised the project. H.B., D.D, and E.A. contributed equally. J.S.R. and\nN.E.L are both corresponding authors and have contributed equally.\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nBibliography 1. Almet, A. A., Cang, Z., Jin, S. & Nie, Q. The landscape of cell-cell communication\nthrough single-cell transcriptomics. Current Opinion in Systems Biology 26, 12\u201323\n(2021).\n2. Armingol, E., Officer, A., Harismendy, O. & Lewis, N. E. Deciphering cell-cell\ninteractions and communication from gene expression. Nat. Rev. Genet. 22, 71\u201388\n(2021).\n3. Dimitrov, D. et al. Comparison of methods and resources for cell-cell\ncommunication inference from single-cell RNA-Seq data. Nat. Commun. 13, 3224\n(2022).\n4. Shakiba, N., Jones, R. D., Weiss, R. & Del Vecchio, D. Context-aware synthetic\nbiology by controller design: Engineering the mammalian cell. Cell Syst. 12,\n561\u2013592 (2021).\n5. Mitchel, J. et al. Tensor decomposition reveals coordinated multicellular patterns of\ntranscriptional variation that distinguish and stratify disease individuals. BioRxiv\n(2022) doi:10.1101/2022.02.16.480703.\n6. Jerby-Arnon, L. & Regev, A. DIALOGUE maps multicellular programs in tissue from\nsingle-cell or spatial transcriptomics data. Nat. Biotechnol. 40, 1467\u20131477 (2022).\n7. Ramirez Flores, R. O., Lanzer, J. D., Dimitrov, D., Velten, B. & Saez-Rodriguez, J.\nMulticellular factor analysis of single-cell data for a tissue-centric understanding of\ndisease. BioRxiv (2023) doi:10.1101/2023.02.23.529642.\n8. Armingol, E. et al. Context-aware deconvolution of cell-cell communication with\nTensor-cell2cell. Nat. Commun. 13, 3665 (2022).\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n9. Heumos, L. et al. Best practices for single-cell analysis across modalities. Nat. Rev.\nGenet. 1\u201323 (2023) doi:10.1038/s41576-023-00586-w.\n10. Kuppe, C. et al. Spatial multi-omic map of human myocardial infarction. Nature 608,\n766\u2013777 (2022).\n11. Ale\u010dkovi\u0107, M. et al. Breast cancer prevention by short-term inhibition of TGF\u03b2\nsignaling. Nat. Commun. 13, 7558 (2022).\n12. Tanevski, J., Flores, R. O. R., Gabor, A., Schapiro, D. & Saez-Rodriguez, J.\nExplainable multiview framework for dissecting spatial relationships from highly\nmultiplexed data. Genome Biol. 23, 97 (2022).\n13. Zheng, R. et al. MEBOCOST: Metabolic Cell-Cell Communication Modeling by\nSingle Cell Transcriptome. BioRxiv (2022) doi:10.1101/2022.05.30.494067.\n14. Zhao, W., Johnston, K. G., Ren, H., Xu, X. & Nie, Q. Inferring neuron-neuron\ncommunications from single-cell transcriptomics through NeuronChat. Nat.\nCommun. 14, 1128 (2023).\n15. Armingol, E., Larsen, R. O., Cequeira, M., Baghdassarian, H. & Lewis, N. E.\nUnraveling the coordinated dynamics of protein- and metabolite-mediated cell-cell\ncommunication. BioRxiv (2022) doi:10.1101/2022.11.02.514917.\n16. Zhang, Z., Qin, Y., Wang, Y., Li, S. & Hu, X. Integrated analysis of cell-specific gene\nexpression in peripheral blood using ISG15 as a marker of rejection in kidney\ntransplantation. Front. Immunol. 14, 1153940 (2023).\n17. Ghaddar, A. et al.Whole-body gene expression atlas of an adult metazoan. BioRxiv\n(2022) doi:10.1101/2022.11.06.515345.\n18. Wang, S. et al. A systematic evaluation of the computational tools for\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nligand-receptor-based cell-cell interaction inference. Brief. Funct. Genomics 21,\n339\u2013356 (2022).\n19. Liu, Z., Sun, D. & Wang, C. Evaluation of cell-cell interaction methods by integrating\nsingle-cell RNA sequencing data with spatial information. Genome Biol. 23, 218\n(2022).\n20. Dietterich, T. G. Ensemble Methods in Machine Learning. in Multiple Classifier\nSystems vol. 1857 1\u201315 (Springer Berlin Heidelberg, 2000).\n21. Nagai, J. S., Leimk\u00fchler, N. B., Schaub, M. T., Schneider, R. K. & Costa, I. G.\nCrossTalkeR: analysis and visualization of ligand-receptorne tworks. Bioinformatics\n37, 4263\u20134265 (2021).\n22. Garcia-Alonso, L. et al. Mapping the temporal and spatial dynamics of the human\nendometrium in vivo and in vitro. Nat. Genet. 53, 1698\u20131711 (2021).\n23. Lagger, C. et al. scAgeCom: a murine atlas of age-related changes in intercellular\ncommunication inferred with the package scDiffCom. BioRxiv (2021)\ndoi:10.1101/2021.08.13.456238.\n24. Jin, S. et al. Inference and analysis of cell-cell communication using CellChat.\nBioRxiv (2020) doi:10.1101/2020.07.21.214387.\n25. Liao, M. et al. Single-cell landscape of bronchoalveolar immune cells in patients\nwith COVID-19. Nat. Med. 26, 842\u2013844 (2020).\n26. Wolf, F. A., Angerer, P. & Theis, F. J. SCANPY: large-scale single-cell gene\nexpression data analysis. Genome Biol. 19, 15 (2018).\n27. Efremova, M., Vento-Tormo, M., Teichmann, S. A. & Vento-Tormo, R. CellPhoneDB:\ninferring cell-cell communication from combined expression of multi-subunit\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nligand-receptor complexes. Nat. Protoc. 15, 1484\u20131506 (2020).\n28. Raredon, M. S. B. et al. Computation and visualization of cell-cell signaling\ntopologies in single-cell systems data using Connectome. Sci. Rep. 12, 4187\n(2022).\n29. Hou, R., Denisenko, E., Ong, H. T., Ramilowski, J. A. & Forrest, A. R. R. Predicting\ncell-to-cell communication networks using NATMI. Nat. Commun. 11, 5011 (2020).\n30. Cabello-Aguilar, S. et al. SingleCellSignalR: inference of intercellular networks from\nsingle-cell transcriptomics. Nucleic Acids Res. 48, e55 (2020).\n31. Jin, S. et al. Inference and analysis of cell-cell communication using CellChat. Nat.\nCommun. 12, 1088 (2021).\n32. Kolde, R., Laur, S., Adler, P. & Vilo, J. Robust rank aggregation for gene list\nintegration and meta-analysis. Bioinformatics 28, 573\u2013580 (2012).\n33. T\u00fcrei, D. et al. Integrated intra\u2010 and intercellular signaling knowledge for\nmulticellular omics analysis. Mol. Syst. Biol. 17, (2021).\n34. No\u00ebl, F. et al. Dissection of intercellular communication using the\ntranscriptome-based framework ICELLNET. Nat. Commun. 12, 1089 (2021).\n35. Shao, X. et al. CellTalkDB: a manually curated database of ligand-receptor\ninteractions in humans and mice. Brief. Bioinformatics 22, (2021).\n36. Fazekas, D. et al. SignaLink 2 - a signaling pathway resource with multi-layered\nregulatory networks. BMC Syst. Biol. 7, 7 (2013).\n37. Fang, Z., Liu, X. & Peltz, G. GSEApy: a comprehensive package for performing\ngene set enrichment analysis in Python. Bioinformatics 39, (2023).\n38. Kanehisa, M., Furumichi, M., Sato, Y., Ishiguro-Watanabe, M. & Tanabe, M. KEGG:\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\nintegrating viruses and cellular organisms. Nucleic Acids Res. 49, D545\u2013D551\n(2021).\n39. Badia-I-Mompel, P. et al. decoupleR: ensemble of computational methods to infer\nbiological activities from omics data. Bioinformatics Advances 2, vbac016 (2022).\n40. Schubert, M. et al. Perturbation-response genes reveal signaling footprints in\ncancer gene expression. Nat. Commun. 9, 20 (2018).\n41. Dugourd, A. & Saez-Rodriguez, J. Footprint-based functional analysis of multiomic\ndata. Current Opinion in Systems Biology 15, 82\u201390 (2019).\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\nThe copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint\n.CC-BY-NC-ND 4.0 International licenseavailable under a was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made The copyright holder for this preprint (whichthis version posted April 30, 2023. ; https://doi.org/10.1101/2023.04.28.538731doi: bioRxiv preprint"
        }
    ],
    "title": "Combining LIANA and Tensor-cell2cell to decipher cell-cell communication across multiple samples",
    "year": 2023
}