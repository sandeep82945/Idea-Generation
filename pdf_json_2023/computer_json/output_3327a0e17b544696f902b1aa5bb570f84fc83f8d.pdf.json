{
    "abstractText": "PlantSimEngine provides a high-level interface for model generation for the simulation and modelling of plants, soil and atmosphere, with a focus on ease of use and computational efficiency. It is designed to help researchers and practitioners prototype, implement and evaluate plant or crop models at any scale, without the hassle of technical computer science details. The package defines a framework for declaring processes and implementing associated models for their simulation, with key features including but not limited to:",
    "authors": [
        {
            "affiliations": [],
            "name": "R\u00e9mi Vezy"
        }
    ],
    "id": "SP:d599913725de3f56f1f67d581d0d6fa9109ea531",
    "references": [
        {
            "authors": [
                "N. Brisson",
                "B. Mary",
                "D. Ripoche",
                "Jeuffroy",
                "M.-H",
                "F. Ruget",
                "B.B. Nicoullaud",
                "P. Gate",
                "F. Devienne-Barret",
                "R. Antonioletti",
                "C. D\u00fcrr",
                "G. Richard",
                "N. Beaudoin",
                "S. Recous",
                "X. Tayot",
                "D. Plenet",
                "P. Cellier",
                "J.M. Machet",
                "Meynard",
                "J.M.J. M",
                "R. Delecolle"
            ],
            "title": "STICS: A generic model for the simulation of crops and their water and nitrogen balances. I. Theory and parameterization applied to wheat and corn",
            "venue": "Agronomie,",
            "year": 1998
        },
        {
            "authors": [
                "H. E",
                "N.I. Huth",
                "D.P. Holzworth",
                "E.I. Teixeira",
                "R.F. Zyskowski",
                "J.N.G. Hargreaves",
                "D.J. Moot"
            ],
            "title": "Plant Modelling Framework: Software for building and running crop models on the APSIM platform",
            "venue": "Environmental Modelling & Software,",
            "year": 1998
        },
        {
            "authors": [
                "Vezy."
            ],
            "title": "PlantSimEngine: A Simulation Engine For The Soil-Plant-Atmosphere System",
            "venue": "Journal of Open Source Software, 8(86), 5371.",
            "year": 2023
        },
        {
            "authors": [
                "F.B. Carlson"
            ],
            "title": "MonteCarloMeasurements.jl: Nonlinear Propagation of Arbitrary Multivariate Distributions by means of Method Overloading",
            "venue": "CoRR, abs/2001.07625",
            "year": 2020
        },
        {
            "authors": [
                "R.A. Duursma"
            ],
            "title": "Plantecophys - An R Package for Analysing and Modelling Leaf Gas Exchange Data",
            "venue": "PLOS ONE, 10(11), e0143346. https://doi.org/10.1371/journal.pone. 0143346",
            "year": 2015
        },
        {
            "authors": [
                "D.P. Holzworth",
                "N.I. Huth",
                "P.G. deVoil",
                "E.J. Zurcher",
                "N.I. Herrmann",
                "G. McLean",
                "K. Chenu",
                "Oosterom",
                "E.J. van",
                "V. Snow",
                "C. Murphy",
                "A.D. Moore",
                "H. Brown",
                "J.P.M. Whish",
                "S. Verrall",
                "J. Fainges",
                "L.W. Bell",
                "A.S. Peake",
                "P.L. Poulton",
                "Z. Hochman",
                "B.A. ... Keating"
            ],
            "title": "APSIM \u2013 Evolution towards a new generation of agricultural systems simulation",
            "venue": "Environmental Modelling & Software,",
            "year": 2014
        },
        {
            "authors": [
                "J.W. Jones",
                "G. Hoogenboom",
                "C.H. Porter",
                "K.J. Boote",
                "W.D. Batchelor",
                "L. Hunt",
                "P.W. Wilkens",
                "U. Singh",
                "A.J. Gijsman",
                "J.T. Ritchie"
            ],
            "title": "The DSSAT cropping system model",
            "venue": "European Journal of Agronomy,",
            "year": 2003
        },
        {
            "authors": [
                "C. Pradal",
                "S. Dufour-Kowalski",
                "F. Boudon",
                "C. Fournier",
                "C. Godin"
            ],
            "title": "OpenAlea: A visual programming and component-based software platform for plant modelling",
            "venue": "Functional Plant Biology,",
            "year": 2008
        },
        {
            "authors": [
                "R. Vezy"
            ],
            "title": "MultiScaleTreeGraph.jl: Read, Write, Analyze, Compute and Plot Multi-scale Tree Graph Files. Zenodo",
            "year": 2023
        },
        {
            "authors": [
                "Y. Wang",
                "P. K\u00f6hler",
                "L. He",
                "R. Doughty",
                "R.K. Braghiere",
                "J.D. Wood",
                "C. Frankenberg"
            ],
            "title": "Testing stomatal models at the stand level in deciduous angiosperm and evergreen gymnosperm forests using CliMA Land (v0.1)",
            "venue": "Geoscientific Model Development,",
            "year": 2021
        },
        {
            "authors": [
                "K. Yun",
                "Kim",
                "S.-H"
            ],
            "title": "Cropbox: A declarative crop modelling framework",
            "venue": "In Silico Plants,",
            "year": 2022
        },
        {
            "authors": [
                "Vezy."
            ],
            "title": "PlantSimEngine: A Simulation Engine For The Soil-Plant-Atmosphere System",
            "venue": "Journal of Open Source Software, 8(86), 5371. https://doi.org/10.21105/joss.05371.",
            "year": 2023
        }
    ],
    "sections": [
        {
            "text": "PlantSimEngine: A Simulation Engine For The Soil-Plant-Atmosphere System R\u00e9mi Vezy 1,2\n1 CIRAD, UMR AMAP, F-34398 Montpellier, France. 2 AMAP, Univ Montpellier, CIRAD, CNRS, INRAE, IRD, Montpellier, France.\nDOI: 10.21105/joss.05371\nSoftware \u2022 Review \u2022 Repository \u2022 Archive\nEditor: Chris Vernon Reviewers:\n\u2022 @ashiklom \u2022 @tpoisot \u2022 @tomyun\nSubmitted: 10 February 2023 Published: 26 June 2023\nLicense Authors of papers retain copyright and release the work under a Creative Commons Attribution 4.0 International License (CC BY 4.0)."
        },
        {
            "heading": "Summary",
            "text": "PlantSimEngine provides a high-level interface for model generation for the simulation and modelling of plants, soil and atmosphere, with a focus on ease of use and computational efficiency. It is designed to help researchers and practitioners prototype, implement and evaluate plant or crop models at any scale, without the hassle of technical computer science details. The package defines a framework for declaring processes and implementing associated models for their simulation, with key features including but not limited to:\n\u2022 Easy definition of new processes, such as light interception, photosynthesis, growth, soil water transfer, etc\u2026 \u2022 Fast, interactive prototyping of models, with constraints to help users avoid errors, but sensible defaults to avoid over-complicating the model writing process \u2022 Automatically manage input and output variables, time-steps, objects, coupling of models with a dependency graph \u2022 Switch between models without changing any code, with a simple syntax to define the model to use for a given process \u2022 Reduce the degrees of freedom by fixing variables, passing measurements, or using a simpler model for a given process \u2022 Fast computation, with 100th of nanoseconds for one model, two coupled models (see this benchmark script), or the full energy balance of a leaf using PlantBiophysics.jl (Vezy & Treillou, 2023), a package that uses PlantSimEngine \u2022 Out of the box sequential, parallel (multi-threaded) or distributed (multi-process) computations over objects, time-steps and independent processes (thanks to Floops.jl) \u2022 Easily scalable, with methods for computing over objects, time-steps and even Multi-Scale Tree Graphs (Vezy, 2023) \u2022 Composable, allowing the use of any types as inputs such as Unitful to propagate units, or MonteCarloMeasurements.jl (Carlson, 2020) to propagate measurement error"
        },
        {
            "heading": "Statement of need",
            "text": "There is a growing demand for robust and efficient tools for simulating and modeling plants, soil and atmosphere in the scientific community. Most often, models are defined by agronomists, plant or soil scientists, who are not necessarily familiar with the intricacies of computer science such as computational performance, parallelization, management of time-steps and objects.\nModels are developed either in interpreted programming languages for easier and faster prototyping, or in compiled languages for faster computation. However, interpreted languages are often slow to execute, and compiled languages are slow to prototype in. Furthermore, the development of models is often an iterative, time-consuming process that requires hypothesis testing and frequent switch between models for comparing their different versions. It also\nVezy. (2023). PlantSimEngine: A Simulation Engine For The Soil-Plant-Atmosphere System. Journal of Open Source Software, 8(86), 5371. https://doi.org/10.21105/joss.05371.\n1\nrequires unit testing to ensure that the implementation is correct, and integration testing to evaluate the model within its framework.\nThis process is often tedious and error-prone, and requires a lot of time and effort. The need for a tool that can help researchers and practitioners prototype, implement and evaluate plant or crop models at any scale, without the hassle of technical computer science details, is therefore clear.\nPlantSimEngine addresses this need by providing a flexible and user-friendly framework for declaring processes and implementing models for their simulation. The package focuses on key aspects of simulation and modeling, such as ease of definition of new processes, fast and interactive prototyping of models, streamlined management of input and output variables, and the ability to switch between models without changing any underlying code. It also provides a way to test the models or forcing processes to observations to reduce the number of degrees of freedom. It also offers fast computation, scalability, and composability, making it ideal for developing Functional-Structural Plant Models (FSPMs) and crop models. For example the simulation of a toy model for leaf area over a year at daily time-scale took 260 \u03bcs to perform (i.e. 688 ns per day) on an M1 MacBook Pro 14, and 275 \u03bcs (i.e. 756 ns per day) when coupled to a model for light interception based on the Beer-Lambert law of light extinction (see provided benchmark script), which shows that PlantSimEngine scales well with several models. These performances are on par with what could be expected if the package was developed using a compiled language such as Fortran or C, and is by far faster than any interpreted language implementation.\nThe idea behind the innovative features of PlantSimEngine is to enable users to accurately model, predict and analyze the behavior of complex processes to improve decision making and optimize process design."
        },
        {
            "heading": "State of the field",
            "text": "PlantSimEngine is a state-of-the-art plant simulation software that offers significant advantages or different pattern designs over existing tools such as OpenAlea (Pradal et al., 2008), STICS (Brisson et al., 1998), APSIM (Brown et al., 2014; Holzworth et al., 2014) or DSSAT (Jones et al., 2003).\nThe use of Julia programming language in PlantSimEngine allows for quick and easy prototyping of models compared to compiled languages (STICS, APSIM, DSSAT) and can achieve significantly better performance than typical interpreted languages (e.g. Python used in OpenAlea), without the need for translation into another compiled language. For example PlantBiophysics.jl, a Julia package that implements ecophysiological models using PlantSimEngine.jl is 38649 times faster than the same implementation in R in plantecophys (Duursma, 2015).\nThe package\u2019s impressive features are primarily provided by the Julia programming language. Julia is a high-level, high-performance, and dynamic programming language widely used in various scientific fields, and particularly for biology (Roesch et al., 2023). The Julia community has recently developed remarkable tools such as Cropbox.jl (Yun & Kim, 2022), and CliMA Land (Wang et al., 2021).\nCropbox.jl is a declarative crop modeling framework that share a common objective with PlantSimEngine: simplifying the process of defining models by eliminating the complexities of underlying simulations. While both frameworks can be applied across a wide range of scales, including land surface models (LSM), crop models, and functional-structural plant models (FSPM), they differ in their implementation strategies.\nCropbox.jl defines a domain-specific language (DSL) tailored specifically for crop modeling, providing an intuitive approach for model definition. On the other hand, PlantSimEngine prioritizes speed as a fundamental aspect, ensuring efficient computations and enabling scalability right\nVezy. (2023). PlantSimEngine: A Simulation Engine For The Soil-Plant-Atmosphere System. Journal of Open Source Software, 8(86), 5371. https://doi.org/10.21105/joss.05371.\n2\nfrom the start. This is accomplished through meticulous considerations, such as type stability and pre-allocation to optimize performance. Type stability in PlantSimEngine ensures that variables maintain consistent types throughout computations, which leads to efficient execution. Additionally, the compatibility of PlantSimEngine with MultiScaleTreeGraph.jl (Vezy, 2023) further enhances its scalability and facilitates multi-scale computations. MultiScaleTreeGraph.jl provides a powerful framework for representing and analyzing hierarchical structures, enabling PlantSimEngine to seamlessly handle complex systems spanning multiple scales.\nCliMA Land is a next generation LSM that can simulate the Soil-Plant-Atmosphere continuum on a large scale. One interesting feature from PlantSimEngine that could be useful for CliMA Land is the ease of model coupling, including the concepts of hard and soft-coupled models, and automatic computation of the dependency graph.\nThe automatic computation of the dependency graph of models and the uniform API of PlantSimEngine enables users to switch models without having to modify any underlying code. This is a significant advantage over CliMA Land and other existing tools for the development of complex soil-plant-atmosphere models. Previous initiatives have been implemented in OpenAlea to provide a way to build a dependency graph for soft-dependencies (i.e. independent models that are coupled via inputs and outputs) close to PlantSimEngine dependency management, but lacks compatibility with hard-dependencies, i.e. models that make an explicit, hard-coded call to another model. PlantSimEngine leverages Julia\u2019s multiple-dispatch to automatically compute the full dependency graph at compile time, including hard-dependencies. PlantSimEngine also offers a simple and generic API to define methods for model calibration that are used to programmatically calibrate models and sub-models.\nAdditionally, PlantSimEngine offers the ability to reduce the number of degrees of freedom by fixing variables, passing measurements, or using a simpler model for a given process, making it an easier and more flexible solution for plant simulation.\nPlantSimEngine\u2019s approach streamlines the process of model development by automatically managing model coupling, time-steps, parallelization, input and output variables, and the type of objects used for simulations (vectors, dictionaries, and multi-scale tree graphs)."
        },
        {
            "heading": "Mention",
            "text": "PlantSimEngine is used in the following packages:\n\u2022 PlantBiophysics.jl, for the simulation of biophysical processes for plants such as photosynthesis, conductance for heat, water vapor and CO2, latent, sensible energy fluxes, net radiation and temperature\n\u2022 XPalm.jl, an experimental crop model for oil palm"
        }
    ],
    "title": "PlantSimEngine: A Simulation Engine For The Soil-Plant-Atmosphere System",
    "year": 2023
}