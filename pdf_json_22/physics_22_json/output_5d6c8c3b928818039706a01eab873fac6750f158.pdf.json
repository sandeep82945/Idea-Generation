{
    "abstractText": "We present an image processing algorithm developed for quantitative analysis of directional solidification of metal alloys in thin cells using X-ray imaging. Our methodology allows to identify the fluid volume, fluid channels and cavities, and to separate them from the solidified structures. It also allows morphological analysis within the solid fraction, including automatic decomposition into dominant grains by orientation and connectivity. In addition, the interplay between solidification and convection can be studied by characterizing convection plumes in the fluid, and solute concentrations above the developing solidification front. The image filters used enable the developed code (open-source) to work reliably even for single images with low signal-to-noise ratio, low contrast-to-noise ratio, and low image resolution. This is demonstrated by applying the code to several dynamic in situ X-ray imaging experiments with a solidifying gallium-indium alloy in a thin cell. Grain (and global) dendrite orientation statistics, convective plume parameterization, etc. can be obtained from the code output. The limitations of the presented approach are also explained.",
    "authors": [
        {
            "affiliations": [],
            "name": "A PREPRINT"
        },
        {
            "affiliations": [],
            "name": "Mihails Birjukovs"
        },
        {
            "affiliations": [],
            "name": "Natalia Shevchenko"
        }
    ],
    "id": "SP:400865f5cbe1ed06f46969a7ac17439d9c34379b",
    "references": [
        {
            "authors": [
                "Morteza Amoorezaei",
                "Sebastian Gurevich",
                "Nikolas Provatas"
            ],
            "title": "Orientation selection in solidification patterning",
            "venue": "Acta Materialia - ACTA MATER",
            "year": 2012
        },
        {
            "authors": [
                "Andrew Kao"
            ],
            "title": "Magnetic Effects on Microstructure and Solute Plume Dynamics of Directionally Solidifying Ga-In Alloy",
            "venue": "JOM",
            "year": 2020
        },
        {
            "authors": [
                "Doru Stefanescu",
                "Roxana Ruxanda"
            ],
            "title": "Fundamentals of Solidification",
            "venue": "In: vol",
            "year": 2004
        },
        {
            "authors": [
                "C. Beckermann"
            ],
            "title": "Modelling of macrosegregation: Applications and future needs",
            "venue": "In: International Materials Reviews",
            "year": 2002
        },
        {
            "authors": [
                "R. Reed",
                "T. Tao",
                "Nils Warnken"
            ],
            "title": "Alloys-By-Design: Application to nickel-based single crystal superalloys",
            "venue": "Acta Materialia",
            "year": 2009
        },
        {
            "authors": [
                "Jonathan D. Madison"
            ],
            "title": "Investigation of Solidification Defect Formation by Three-Dimensional Reconstruction of Dendritic Structures",
            "venue": "University of Michigan,",
            "year": 2010
        },
        {
            "authors": [
                "P. Auburtin"
            ],
            "title": "Freckle Formation and Freckle Criterion in Superalloy Castings",
            "venue": "Metallurgical and Materials Transactions B",
            "year": 2000
        },
        {
            "authors": [
                "C. Beckermann",
                "J. Gu",
                "William Boettinger"
            ],
            "title": "Development of a freckle predictor via Rayleigh number method for single-crystal Nickel-base superalloy castings",
            "venue": "Metallurgical and Materials Transactions A 31 (Oct",
            "year": 2000
        },
        {
            "authors": [
                "Ali Saad"
            ],
            "title": "Simulation of Channel Segregation During Directional Solidification of In\u201475 wt pct Ga. Qualitative Comparison with In Situ Observations",
            "venue": "Metallurgical and Materials Transactions A (accepted)",
            "year": 2015
        },
        {
            "authors": [
                "Natalia Shevchenko"
            ],
            "title": "Chimney Formation in Solidifying Ga-25wt pct In Alloys Under the Influence of Thermosolutal Melt Convection",
            "venue": "Metallurgical and Materials Transactions A",
            "year": 2013
        },
        {
            "authors": [
                "Mark Asta"
            ],
            "title": "Solidification microstructures and solid-state parallels: Recent developments, future directions",
            "venue": "Acta Materialia",
            "year": 2009
        },
        {
            "authors": [
                "Tomorr Haxhimali"
            ],
            "title": "Orientation selection in dendritic evolution",
            "venue": "Nature materials 5 (Aug",
            "year": 2006
        },
        {
            "authors": [
                "Joel Strickland",
                "Bogdan Nenchev",
                "H.B. Dong"
            ],
            "title": "On Directional Dendritic Growth and Primary Spacing\u2014A Review",
            "venue": "Crystals",
            "year": 2020
        },
        {
            "authors": [
                "Juan Ramirez",
                "C. Beckermann"
            ],
            "title": "Evaluation of a Rayleigh-number-based freckle criterion for Pb-Sn alloys and Ni-base superalloys",
            "venue": "Metallurgical and Materials Transactions A",
            "year": 2003
        },
        {
            "authors": [
                "Natalia Shevchenko"
            ],
            "title": "The effect of natural and forced melt convection on dendritic solidification in Ga\u2013In alloys",
            "venue": "Journal of Crystal Growth",
            "year": 2015
        },
        {
            "authors": [
                "Natalia Shevchenko"
            ],
            "title": "Investigations of fluid flow effects on dendritic solidification: Consequences on fragmentation, macrosegregation and the influence of electromagnetic stirring",
            "venue": "IOP Conference Series: Materials Science and Engineering",
            "year": 2017
        },
        {
            "authors": [
                "Daniel Anderson",
                "Peter Guba"
            ],
            "title": "Convective Phenomena in Mushy Layers",
            "venue": "Annual Review of Fluid Mechanics",
            "year": 2020
        },
        {
            "authors": [
                "Peter Soar"
            ],
            "title": "The integration of structural mechanics into microstructure solidification modelling",
            "venue": "IOP Conference Series: Materials Science and Engineering",
            "year": 2020
        },
        {
            "authors": [
                "Biao Cai"
            ],
            "title": "Revealing the mechanisms by which magneto-hydrodynamics disrupts solidification microstructures",
            "venue": "Acta Materialia",
            "year": 2020
        },
        {
            "authors": [
                "Shengya He",
                "Natalia Shevchenko",
                "Sven Eckert"
            ],
            "title": "In situ observation of directional solidification in Ga-In alloy under a transverse DC magnetic field",
            "venue": "IOP Conference Series: Materials Science and Engineering",
            "year": 2020
        },
        {
            "authors": [
                "Sven Eckert"
            ],
            "title": "Electromagnetic melt flow control during solidification of metallic alloys",
            "venue": "The European Physical Journal Special Topics",
            "year": 2013
        },
        {
            "authors": [
                "Guillaume Reinhart"
            ],
            "title": "Impact of solute flow during directional solidification of a Ni-based alloy: In-situ and real-time X-radiography",
            "year": 2020
        },
        {
            "authors": [
                "Hadjer Soltani"
            ],
            "title": "Equiaxed grain structure formation during directional solidification of a refined Al- 20wt.%Cu alloy: In situ analysis of temperature gradient effects",
            "venue": "Journal of Crystal Growth",
            "year": 2022
        },
        {
            "authors": [
                "Yang Tang"
            ],
            "title": "Intermittent Nucleation and Periodic Growth of Grains under Thermo-solutal Convection during Directional Solidification of Al-Cu Alloy",
            "venue": "Acta Materialia",
            "year": 2021
        },
        {
            "authors": [
                "Stephan Boden"
            ],
            "title": "X-Ray Radioscopic Visualization of the Solutal Convection during Solidification of a Ga-30",
            "venue": "Wt Pct In Alloy\u201d. In: Metallurgical and Materials Transactions A",
            "year": 2008
        },
        {
            "authors": [
                "Maike Becker"
            ],
            "title": "A comparative in situ X-radiography and DNN model study of solidification characteristics of an equiaxed dendritic Al-Ge alloy sample",
            "venue": "Acta Materialia",
            "year": 2020
        },
        {
            "authors": [
                "Pierre Delaleau"
            ],
            "title": "Mesoscopic Simulation of Dendritic Growth Observed in X-ray Video Microscopy During Directional Solidification of Al-Cu Alloys",
            "venue": "ISIJ International",
            "year": 2010
        },
        {
            "authors": [
                "Thomas Werner"
            ],
            "title": "In situ observation of the impact of hydrogen bubbles in Al\u2013Cu melt on directional dendritic solidification",
            "venue": "Journal of Materials Science",
            "year": 2021
        },
        {
            "authors": [
                "Shyamprasad Karagadde"
            ],
            "title": "3-D microstructural model of freckle formation validated using in situ experiments",
            "venue": "Acta Materialia",
            "year": 2014
        },
        {
            "authors": [
                "Andrew Kao"
            ],
            "title": "Thermal dependence of large-scale freckle defect formation",
            "year": 2018
        },
        {
            "authors": [
                "Wajira Mirihanage"
            ],
            "title": "Retrieval of three-dimensional spatial information from fast in situ two-dimensional synchrotron radiography of solidification microstructure evolution",
            "venue": "Acta Materialia",
            "year": 2014
        },
        {
            "authors": [
                "Karl Tassenberg"
            ],
            "title": "DenMap single crystal solidification structure feature extraction: Automation and application",
            "venue": "In: Materials Characterization (Nov. 2020)",
            "year": 2020
        },
        {
            "authors": [
                "Weihao Wan"
            ],
            "title": "Automatic Identification and Quantitative Characterization of Primary Dendrite Microstructure Based on Machine Learning",
            "venue": "Crystals",
            "year": 2021
        },
        {
            "authors": [
                "Turlough Hughes",
                "A.J. Robinson",
                "Shaun"
            ],
            "title": "Mcfadden. \u201cMultiple Dendrite Tip Tracking for In-Situ Directional Solidification: Experiments and Comparisons to Theory",
            "venue": "In: Materials Today Communications",
            "year": 2021
        },
        {
            "authors": [
                "A. Viardin"
            ],
            "title": "Automatic detection of equiaxed dendrites using computer vision neural networks",
            "year": 2022
        },
        {
            "authors": [
                "Nan Wang"
            ],
            "title": "Dynamic evolution of microstructure morphology in thin-sample solidification: Deep learning assisted synchrotron X-ray radiography",
            "venue": "In: Materials Characterization",
            "year": 2021
        },
        {
            "authors": [
                "Johannes Schindelin"
            ],
            "title": "Fiji: An Open-Source Platform for Biological-Image Analysis",
            "venue": "Nature methods",
            "year": 2012
        },
        {
            "authors": [
                "Caroline Schneider",
                "Wayne Rasband",
                "Kevin Eliceiri"
            ],
            "title": "NIH Image to ImageJ: 25 years of image analysis",
            "venue": "Nature Methods",
            "year": 2012
        },
        {
            "authors": [
                "Nobuyuki Otsu"
            ],
            "title": "A Threshold Selection Method from Gray-Level Histograms",
            "venue": "In: Systems, Man and Cybernetics, IEEE Transactions on 9 (Jan",
            "year": 1979
        },
        {
            "authors": [
                "Robert Haralick",
                "Stanley Sternberg",
                "Xinhua Zhuang"
            ],
            "title": "Image Analysis Using Mathematical Morphology",
            "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on PAMI-9 (Aug",
            "year": 1987
        },
        {
            "authors": [
                "Kostadin Dabov"
            ],
            "title": "Image denoising with block-matching and 3D filtering",
            "venue": "Proceedings of SPIE - The International Society for Optical Engineering",
            "year": 2006
        },
        {
            "authors": [
                "Kostadin Dabov"
            ],
            "title": "Image Denoising by Sparse 3-D Transform-Domain Collaborative Filtering",
            "venue": "IEEE transactions on image processing : a publication of the IEEE Signal Processing Society",
            "year": 2007
        },
        {
            "authors": [
                "Marc Lebrun"
            ],
            "title": "An Analysis and Implementation of the BM3D Image Denoising Method",
            "venue": "Image Processing On Line",
            "year": 2012
        },
        {
            "authors": [
                "Ymir Makinen",
                "Lucio Azzari",
                "Alessandro Foi"
            ],
            "title": "Collaborative Filtering of Correlated Noise: Exact Transform- Domain Variance for Improved Shrinkage and Patch Matching",
            "venue": "IEEE Transactions on Image Processing PP (Aug",
            "year": 2020
        },
        {
            "authors": [
                "Bartomeu Coll",
                "Jean-Michel Morel"
            ],
            "title": "A non-local algorithm for image denoising",
            "venue": "In: vol",
            "year": 2005
        },
        {
            "authors": [
                "Bartomeu Coll",
                "Jean-Michel Morel"
            ],
            "title": "Non-Local Means Denoising",
            "venue": "Image Processing On Line 1 (Sept",
            "year": 2011
        },
        {
            "authors": [
                "Leonid I. Rudin",
                "Stanley Osher",
                "Emad Fatemi"
            ],
            "title": "Nonlinear total variation based noise removal algorithms",
            "venue": "Physica D: Nonlinear Phenomena",
            "year": 1992
        },
        {
            "authors": [
                "RC Gonzalez",
                "R Woods"
            ],
            "title": "Digital Image Processing",
            "venue": "Jan.",
            "year": 2006
        },
        {
            "authors": [
                "John Canny"
            ],
            "title": "A Computational Approach To Edge Detection",
            "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on PAMI-8 (Dec",
            "year": 1986
        },
        {
            "authors": [
                "Mihails Birjukovs",
                "Tobias Lappan"
            ],
            "title": "Particle tracking velocimetry in liquid gallium flow around a cylindrical obstacle",
            "venue": "Experiments in Fluids",
            "year": 2022
        },
        {
            "authors": [
                "Mihails Birjukovs"
            ],
            "title": "Particle tracking velocimetry and trajectory curvature statistics for particle-laden liquid metal flow in the wake of a cylindrical obstacle",
            "year": 2022
        },
        {
            "authors": [
                "Mihails Birjukovs"
            ],
            "title": "Resolving Gas Bubbles Ascending in Liquid Metal from Low-SNR Neutron Radiography Images",
            "venue": "Applied Sciences",
            "year": 2021
        },
        {
            "authors": [
                "C. Harris",
                "M. Stephens"
            ],
            "title": "A Combined Corner and Edge Detector",
            "venue": "Proceedings 4th Alvey Vision Conference",
            "year": 1988
        },
        {
            "authors": [
                "Javier S\u00e1nchez",
                "Nelson Monz\u00f3n",
                "Agust\u00edn Salgado"
            ],
            "title": "An Analysis and Implementation of the Harris Corner Detector",
            "venue": "Image Processing On Line",
            "year": 2018
        },
        {
            "authors": [
                "Carlo Tomasi",
                "Roberto Manduchi"
            ],
            "title": "Bilateral Filtering for Gray and Color Images",
            "venue": "In: vol. 98. Feb",
            "year": 1998
        },
        {
            "authors": [
                "Leonard Kaufman",
                "Peter Rousseeuw"
            ],
            "title": "Partitioning Around Medoids (Program PAM)",
            "year": 1990
        },
        {
            "authors": [
                "David Honz\u00e1tko",
                "Martin Kruli\u0161"
            ],
            "title": "Accelerating block-matching and 3D filtering method for image denoising on GPUs",
            "venue": "Journal of Real-Time Image Processing",
            "year": 2019
        },
        {
            "authors": [
                "Axel Davy",
                "Thibaud Ehret"
            ],
            "title": "GPU acceleration of NL-means, BM3D and VBM3D",
            "venue": "Journal of Real-Time Image Processing",
            "year": 2021
        },
        {
            "authors": [
                "Kostadin Dabov"
            ],
            "title": "BM3D Image Denoising With Shape-Adaptive Principal Component Analysis",
            "venue": "Proc. Workshop on Signal Processing with Adaptive Sparse Structured Representations (SPARS\u201909) (Apr",
            "year": 2009
        },
        {
            "authors": [
                "Tianshu Liu"
            ],
            "title": "OpenOpticalFlow: An Open Source Program for Extraction of Velocity Fields from Flow Visualization Images",
            "venue": "Journal of Open Research Software",
            "year": 2017
        },
        {
            "authors": [
                "Tianshu Liu",
                "Robert Zboray",
                "Pavel Trtik"
            ],
            "title": "Optical flow method for neutron radiography flow diagnostics",
            "venue": "Physics of Fluids",
            "year": 2021
        }
    ],
    "sections": [
        {
            "text": "Keywords Dynamic X-ray imaging \u00b7 In situ analysis \u00b7 Image processing \u00b7 Directional solidification \u00b7 Liquid metal alloys"
        },
        {
            "heading": "1 Introduction",
            "text": "Solidification is a central aspect of many industrial applications, particularly in metallurgy, e.g. production of nickelbased superalloys, lightweight aluminum and magnesium alloys, etc. [1\u20133]. A well-known and common problem is the risk of defect formation during these processes. Segregation of solute species originates at the micro scale, but propagates to and emerges at the macro scale (macrosegregation), leading to non-uniformity of the distribution of the inter-metallic phases in industrial alloys [4]. In addition, during solidification of alloys, partitioning of elements leads to the formation of a solute boundary layer in the vicinity of the liquid\u2013solid interface. In cases where the density of the solute may be lighter than that of the bulk liquid, buoyancy forces in the boundary layer directed back towards the bulk liquid cause the formation of solute plumes that emanate from the solid-liquid interface. Under certain conditions, the escaping solute can form stable channels called chimneys. After complete solidification, these disturbances remain as defects in the castings known as freckles, which are essentially anisotropic alloy composition inhomogeneities in\nar X\niv :2\n21 0.\n00 84\n6v 1\n[ co\nnd -m\nthe form of channels with diameters proportional to few primary dendrite arm spacings and lengths varying from millimeters to centimeters [2, 5\u201310].\nIt is therefore desirable to control solidification such that defects do not occur. However, control requires understanding the underlying physics, and solidification processes in liquid metal alloys are very complex, with many possible regimes of pattern formation depending on system parameters (e.g. temperature gradient, cooling rate, alloy component mass fractions) [1, 3, 11\u201313]. There exists an interplay of many physical mechanisms on different length scales: primary and secondary dendrite arm growth, liquid\u2013solid interface instabilities, liquid mass flow near the interface and in the bulk (in general, both natural and forced convection), concentration transport, liquid flow in through solidified dendrite structures and remelting, global and local temperature dynamics, etc. [3, 11, 14\u201318]. One way to control such complex dynamics is by applying magnetic field to the domain where solidification occurs \u2013 however, one then has to consider additional physical mechanisms within the system, such as liquid flow damping or forcing by the Lorentz force, which also includes a thermoelectric contribution. This and other factors introduced by magnetic field application significantly alters solidified microstructures [2, 19\u201321].\nA very prospective and commonly used method for studying solidification dynamics without or with applied magnetic field is by using downscaled model systems \u2013 Hele-Shaw cells where binary alloy solidification can be observed at the meso-scale (i.e. dendrite grains with spatially resolved individual dendrites) using in situ dynamic X-ray transmission contrast radiography. Even though one obtains only the projections of the solidified microstructures, it has proven to be a very effective means of probing systems with solidification processes for physical insights [2, 9, 10, 15, 16, 20, 22\u201331]. In addition to the challenges associated with imaging, there is also the matter of extracting valuable information from the acquired images. Ideally, to get the full picture of system dynamics, one has to separate the liquid from the solid, identify the solidification front and any liquid enclosures within the solidified microstructure, and obtain the microstructure skeletons. One could then perform orientation analysis for the skeletons, derive the primary dendrite spacing statistics, determine the local velocity with which the solidification front travels, as well as measure the solute concentration near the solidification front as it moves, since the concentration largely determines the front evolution. In this regard, detecting convective plumes and analyzing their shapes is also of interest, as is velocimetry in the liquid flow regions. In addition, it could also be of interest to detect and separate different grains (if any) within the microstructure seen in the images. Of course, the problem lies in doing all of the above automatically and reliably, which is relevant given the amount of images usually acquired in X-ray radiography experiments and the amount of information captured within each image.\nHowever, while there exist solutions for some of the above problems, most appear to be limited to segmentation/detection of dendritic structures [32\u201337]. In [32\u201334], the focus is the detection of the dendrite cores from images of planes normal to the solidification direction \u2013 this, and the fact the algorithm presented in [32, 33] uses template matching as one of its stages, makes it hardly applicable to studying X-ray images with directionally solidifying dendrite \"forests\" (e.g., as in [2, 9, 10, 15, 25]) where planes parallel to the growth direction are imaged. In addition, at least observing the demonstrated application examples, it seems that these methods should be reliably applicable in the cases when the images are fully filled with dendrites, i.e., in instances where there are both liquid and solid regions, one must first be separated from the other using different methods. Dendrite tip tracking is performed in [35] by segmenting the upper part of the solidified structures growing upwards. The key aspect of the segmentation procedure is to use the difference between two consecutive frames to highlight the newly formed solid, segment the relevant region and then derive the tip coordinates. The utilized approach also enables tracking the solidification front. However, in cases where the differences between the frames are smaller and significant noise is present, the algorithm could be expected to run into performance issues and a more general approach is desired. A versatile approach using neural networks for automated detection of equiaxed dendrite detection was reported in [36]. Another important example of automated dendrite segmentation using neural networks was shown in [37] where, unlike in [36], a binary mask for the solid structure was predicted instead of detecting separate dendrites. It is, however, worth pointing out that the example images/cases presented in [36, 37] do not exhibit significant noise, which is often present even after some temporal averaging in dynamic X-ray radiography experiments where exposure times are relatively low \u2013 it is therefore not clear how well these methods will perform under such conditions.\nThe lack of a systematic approach to image processing beyond methods for segmentation presents a problem, since it has been clearly demonstrated that the microstructure evolution must be analyzed in conjunction with the other processes in solidifying systems. Currently the most common tool used for image analysis in the field is ImageJ with its many custom plugins developed by the community [38, 39]. While ImageJ is open-source, with an impressive arsenal of methods, many of them are not automated, robust, or publically available. In contrast, it would be very convenient to have an open-source all-in-one solution for X-ray image analysis. It should also be noted that such code could be applied to the output of numerical simulations as well, the difference being that the latter do not have the image noise associated with experimental measurements. Thus, more direct comparisons between simulations and experiments, which seem to be largely lacking, could be possible.\nThis was the motivation for us to present our solution \u2013 the first version of the open-source code developed for automatic analysis of dynamic X-ray radiography images of directional solidification processes studied using Hele-Shaw cells. The current version does not yet have an integrated optical flow component (e.g., like the code used in [25]), but otherwise it meets the above mentioned analysis functionality requirements. Moreover, it was designed for robustness and is quite resilient to image noise and low image contrast. Utilized approaches to image and data processing combine both well-known state of art and our original methods, particularly for solid structure segmentation and dendrite grain analysis. The performance of the methodology implemented in the code is demonstrated on data from in situ X-ray radiography experiments [10, 15]."
        },
        {
            "heading": "2 Image characterization",
            "text": ""
        },
        {
            "heading": "2.1 Image acquisition",
            "text": "All images used in this paper were acquired at the X-ray lab at Helmholtz-Zentrum Dresden-Rossendorf (HZDR). The Hele-Shaw solidification cell with dimensions 35mm\u00d7 25mm\u00d7 0.15mm was imaged at 1 frame per second with a 1 s exposure time. The imaging system utilized the Phoenix X-ray XS225D-OEM X-ray tube and is described in more detail in [2, 9, 10, 15, 20]. For each image sequence recording, dark current signals and X-ray beam profile signals were recorded for subsequent image correction and normalization during pre-processing. For every set of system parameters, repeated recordings were made to ensure the results are reproducible, as well as for redundancy."
        },
        {
            "heading": "2.2 Image properties",
            "text": "Images are 16-bit gray-scale TIFFs and the field of view (FOV) typically has a \u223c 760\u00d7 576 px (pixel) image size with a pixel size [13.7; 37.6] \u00b5m (actual image size varies between different image sequences due to boundary cropping). Figure 1 is an example of an acquired image of a dendritic network in the solidifying Ga-In alloy [10, 15].\nTo simplify further description and analysis, it is important to at least informally define key image features. In Figure 1, one can see the solidification front (SF) outline with a black dashed curve. Here we define the SF as an the envelope of the FOV region with the solidified structures. A more precise operational definition in the image processing context will be given in Section 3.3. The region (or multiple) containing solidified structures delimited by the solidification\nfront is the solid zone (SZ). This zone may also include liquid cavities isolated from the bulk liquid and channels that are connected to the bulk liquid (above the SF), e.g. one such channel will later form from the larger of the closed liquid pools highlighted in Figure 1. Thus, the liquid zone (LZ) is the difference between the FOV and the SZ, minus the cavities and channels. These definitions will be used throughout the rest of this article.\nThe images exhibit Poisson (multiplicative) noise, as well as salt-and-pepper noise due to momentarily overexposed or unresponsive (\"dead\") camera pixels. The X-ray beam flux over the FOV is non-uniform with a fall-off near the edges of the acquired images. The contrast-to-noise ratio (CNR) is different for the LZ and the SZ. The convective plume CNR in the LZ is initially rather good , but typically degrades over time as the solid fill factor (SFF, the ratio of the SZ area to the FOV area) of the cell increases \u2013 this is because the solute is ejected above the SF, the LZ is saturated, and the contrast between the liquid alloy components diminishes. In addition, the CNR in the SZ may also vary over the image since there is solute flow across the solidified structures, potentially occluding them. The signal-to-noise ratio (SNR) is usually adequate for structures in the SZ, but it is rather low for the convective plumes in the LZ. In addition, some of the images may exhibit larger-scale artifacts \u2013 for instance, as shown in Figure 1 with red dashed frames. In this case the artifacts are the spots where the two parallel walls of the Hele-Shaw cells were fused together."
        },
        {
            "heading": "3 Image processing",
            "text": ""
        },
        {
            "heading": "3.1 Assumptions and considerations",
            "text": "The developed image processing code must enable in-depth analysis of both the LZ and SZ over time, as well as the dynamics associated with the SF evolution. Therefore, the objectives are as follows:\n1. Segment the LZ and SZ. 2. Derive the SF. 3. Identify channels connected to the LZ, and also liquid cavities within the SZ. 4. Segment the convective plumes within the LZ for shape analysis. 5. Extract skeletons of the structures (in this case dendrites) within the SZ. 6. Perform orientation analysis for the structures identified within the LZ. 7. Decompose the SZ structures into sub-domains (grains) by orientation and connectivity. 8. Measure the solute concentration near the SF.\nThe following assumptions are made regarding the images and the physical system:\n\u2022 When treating the SZ, the noise is considered white Gaussian. This is because after pre-processing (Algorithm 2) the image luminance does not vary too much at length scales much greater then the dendrite thickness and inter-dendrite spacing (Figure 1) \u2013 this is in contrast with the LZ (compare the luminance distribution within the dark-blue dashed frame against that above the SF).\n\u2022 Persistent larger-scale artifacts (i.e. not pixels with outlying luminance values) in the images, if present, are considered stationary over time.\n\u2022 Dendrites in the SZ have linear or only slightly curved shapes. \u2022 Dendrites may overlap in the imaging plane and thus their X-ray radiography projections may cross.\nGiven the above, the following considerations determine the methods of choice:\n\u2022 Low image resolution means that care must be taken when attempting to remove noise from dendrites. This is because the pixel size is a significant fraction of the dendrite width. At the same time, the textures in the solid domain are rather fine (inter-dendrite spacings are roughly of the same order of magnitude as the dendrite width). The SNR is such that the dendrites are corrupted by noise enough that methods which are not texture-/morphology-aware cannot achieve satisfactory non-destructive denoising.\n\u2022 Liquid flow across the dendrites acts as correlated noise when attempting to derive dendrite morphology. This further complicates the solid structure analysis \u2013 treating this issue jointly with the Gaussian noise stemming from under-exposure does not produce good enough results and a separate approach is needed.\n\u2022 While the CNR at the SF is rather high in the example seen in Figure 1, in other cases the SF is not as smooth and is less contrast. Note that segmenting liquid cavities and channels can be even more difficult. Therefore, dedicated filters are required to significantly increase the CNR of the liquid/solid phase boundary before SZ/LZ segmentation.\n\u2022 The segmentation method for SZ/LZ separation must reliably work under potentially varying image quality: the ray produced by the X-ray tube may flicker and has non-uniform intensity; solid fraction increase and solute ejection\ninto the bulk liquid strongly change the image luminance distribution both locally and globally; these effects should be modelled by the utilized segmentation method.\n\u2022 Methods used for LZ denoising must be such that the shapes of convective plumes are not overly deformed or smeared out, but denoising here is much less constrained than in the SZ.\n\u2022 Image quality varies greatly across different experiments and image sequences, both our own and those performed by other researchers \u2013 it is therefore worthwhile to develop a code that is resilient and can operate under adverse conditions potentially much worse that what is seen in Figure 1.\n\u2022 Such a code with many components and methods will inevitably have a rather large number of parameters \u2013 these should either be mostly fixed/general or should be quickly optimizeable.\nImage processing is organized in stages outlined in Algorithm 1. Throughout the paper we will provide the default parameters for the various procedures involved.\nAlgorithm 1: Overall structure of the image processing pipeline Input: Raw image sequence\n1 Pre-process images (Algorithm 2) 2 Remove image artifacts (Algorithm 3) 3 Segment the SZ (Section 3.3.2 & Algorithm 4) 4 Identify channels connected to the LZ, and also liquid cavities within the SZ (Algorithm 5) 5 Derive the SF and segment the LZ (Algorithm 5) 6 Extract skeletons of the structures (in this case dendrites) within the SZ (Algorithms 6, 7 & 8) 7 Perform orientation analysis for the structures identified within the LZ (Algorithms 9 & 10) 8 Decompose the SZ structures into sub-domains (grains) by orientation and connectivity (Algorithms 9 & 10) 9 Measure the solute concentration near the SF (Algorithm 11)\n10 Segment the convective plumes within the LZ for shape analysis (Algorithm 12) Output:\n\u2022 SF shape, height map and growth rate over time \u2022 Solute concentration dynamics near the SF \u2022 Shape dynamics for convective plumes in the LZ \u2022 Dendrite structure maps with highlighted features \u2022 Dendrite orientation spectra for the SZ \u2022 Dendrite orientation spectra and relative areas for grains identified within the SZ"
        },
        {
            "heading": "3.2 Pre-processing",
            "text": "Image pre-processing is performed in ImageJ as shown in Algorithm 2. For dark current correction, the mean projection of recorded dark current noise images is subtracted from all images in the raw image sequence. Then the dark currentcompensated flat field is computed from the mean projection of X-ray beam flux distribution images. Afterwards the dark current-compensated FOV images are normalized with respect to the flat field compensated for the dark current. All of the above can be formulated as follows:\nAlgorithm 2: Pre-processing for raw images Input: Raw image sequence: 16-bit 1-channel TIFFs\n1 Crop images to the FOV of interest, in our case typically yielding image resolutions of \u223c 760\u00d7 380 pixels 2 (Optional) Temporal filtering with a Gaussian kernel 3 Compensate the images for camera dark current (mean) 4 Compensate the flat field (reference) images for dark current (mean) 5 Perform flat field correction (FFC, 32-bit precision) 6 Convert to 16-bit 7 Remove outlying bright luminance values (median thresholding) 8 Normalize the resulting images (pixel luminance re-scaled to [0; 1])\nOutput: Temporally averaged, dark current and flat-field corrected normalized images\nI = I0 \u2212 \u3008Idark\u3009 \u3008Ibeam\u3009 \u2212 \u3008Idark\u3009\n(1)\nwhere I are the luminance maps of the corrected images, I0 are the cropped raw images, and Idark and Ibeam are the dark current and X-ray beam flux images. This transformation, specifically the flat-field correction (FFC) results in the spatial dependence of the SNR.\nAfterwards, bright outliers are removed using median thresholding with a 1- to 2-px radius. The threshold is chosen such that outlier removal modifies only the pixels where luminance by far exceeds the local median (within the designated radius). Pixels with luminance above the threshold are then assigned the local median values. Finally, the images are normalized and saved, then passed to Wolfram Mathematica for further processing."
        },
        {
            "heading": "3.3 Liquid/solid zone separation",
            "text": ""
        },
        {
            "heading": "3.3.1 Artifact removal",
            "text": "Sometimes the images will still contain artifacts even after cropping and pre-processing (for example as in Figure 1). While FFC ensures that such artifacts are no longer strong outliers, these image areas still significantly affect image luminance histograms and may interfere with image filtering (especially BM3D, significantly disrupting patch matching) and segmentation. We therefore use a procedure that identifies and inpaints these defects, i.e. makes them seamless with respect to the surrounding image textures. The artifact mask for an image sequence is obtained as outlined in Algorithm 3:\nAlgorithm 3: Artifact removal for pre-processed images Input:\n\u2022 Averaged reference images (Algorithm 2) \u2022 Pre-processed image sequence (Algorithm 2)\n1 Artifact mask: binarization (possibly multi-pass) with a user-defined threshold or another appropriate method (e.g. Otsu [40]) 2 Morphological dilation 3 Artifact inpainting using texture synthesis\nOutput: Images without artifacts\nDepending on the nature of artifacts, it may be necessary to perform segmentation in multiple stages. In our cases, a single pass with a user-defined threshold (usually > 0.975 for bright artifacts as in our case) was sufficient. Note that dark artifacts can be detected using an identical procedure applied to an inverted image. Morphological dilation using disk structural elements [41] is performed so that the artifact mask has a safety buffer. The latter is necessary for texture synthesis-based inpainting to properly fill the artifact zones using samples from adjacent textures sufficiently far from the artifacts. A 5-px element radius is used for structural elements for dilation, and inpainting is performed with a maximum Nneigh = 150 neighboring pixels used for texture comparison and a maximum of Nsamp = 300 sampling instances for texture fitting [42]."
        },
        {
            "heading": "3.3.2 Image filtering",
            "text": "Prior to segmentation, image filtering is performed to increase the CNR for the LZ/SZ boundaries, including liquid cavities (CNR tends to be especially low) and channels. Here the filters were applied such that they also eliminate dendrite structures while preserving larger-scale liquid zones and larger spaces between dendrites that are filled with liquid. It was decided to use block-matching 3D (BM3D) filtering [43\u201346], since, unlike other tested solutions, it consistently preserved the SZ shape well and also strongly increased the CNR of channels and cavities within the SZ.\nWe perform image filtering in two stages. First, BM3D is applied. BM3D works by exploiting structural similarity between different patches within an image and filtering the sufficiently similar patches collectively as 3D blocks, and then aggregating the filtered patches at respective positions to construct a filtered image [43\u201346]. Similarity between patches is measured using the L2-norms of the differences between hard-thresholded (based on the assumed noise variance \u03c3BM3D) spectra of their discrete cosine transforms (DCTs) or discrete wavelet transforms (DWTs) with biorthogonal spline wavelets (in general, depends on the implementation and settings) [44]. 3D block collaborative filtering is performed via combined hard-thresholded 2D transform (DCT/DWT) and 1D transform (Haar wavelet DWT) [44]. Importantly, the denoised image estimate produced this way can be used for a second stage of collaborative patch filtering, but now using the Wiener filter \u2013 this significantly improves the output image in terms of feature preservation and noise reduction [43\u201345].\nWe use the latest MATLAB implementation by Tampere University of Technology (Python version also available) which is based on [46]. It is integrated into our Wolfram Mathematica code using MATLink for seamless image processing. This version of BM3D introduces exact transform-domain noise variance calculation, improving patch matching, denoising (including handling different types of correlated noise) and filtered image reconstruction from aggregated filtered patches. In addition, a re-filtering procedure is introduced that prevents the loss of finer details within an image by performing secondary collaborative hard-thresholded DCT and Wiener filtering on intermediate noisy image estimates where initially smoothed out fine features separated (in the image frequency domain) from the filtered noise have been added back in [46].\nFor filtering prior to the SF segmentation, we configure BM3D as follows: \"normal profile\" (developer-optimized presets for patch size, patch search neighborhood size, maximum patch count in 3D blocks, etc., for both DWT hard-thresholding and Wiener filtering stages), assuming Gaussian white noise with \u03c3BM3D = 0.02 (re-scaled internally according to the image bit depth) and with re-filtering enabled [46].\nThe second filtering stage is the non-local means (NM) filter [47] which we use to mitigate any artifacts left over and/or produced by BM3D and further increase the CNR for the SF and cavities and channels within the SZ. NM can be viewed as a simplified/precursor version of BM3D where similar patches within search neighborhoods are averaged with weights wij computed via\nwij = exp\n{[ \u2212max ( 0, 1\nk2\u03c3 \u00b7 ( E2ij pn \u2212 2 ))]} ; w\u0303ij = wij max(wij) ; w\u030300 = 1 (2)\nwhere i and j are the patch indices, Eij is the Euclidean distance between patches, pn is the noise power factor and k\u03c3 is the filtering parameter [48]. Here k\u03c3 = 0.75 and pn is computed based on the internally estimated noise variance [49]. The patch size is chosen to be rl = 3 px with the patch search neighborhood size rp = 5rl. Note that, because of the fast exponential decay of weights in (2), large Euclidean distances lead to nearly zero weights, acting as an automatic (smooth) patch similarity threshold (unlike the hard thresholding in BM3D) [47]. Once the filtering is done, one can proceed with the SZ segmentation."
        },
        {
            "heading": "3.3.3 Solid zone segmentation",
            "text": "Despite significant improvements to SNR and CNR due to filtering (Section 3.3.2), segmentation is still a challenge due to generally imperfect reference-based FFC, spatially varying SNR and CNR, X-ray beam fluctuations and strongly varying SFF and solute concentration in the LZ over time, as well as formation, growth/shrinking and disappearance of cavities and channels. The tests show that (at least in our cases) global segmentation methods, even advanced ones, are not able to detect the SZ stably and accurately over an entire image sequence that usually starts with no solid zone and possibly ends with SFF \u2248 1. We have therefore opted for an empirical \"physics-aware\" model that computes an adaptive binarization threshold for the filtered images. The segmentation steps are summarized in Algorithm 4.\nAlgorithm 4: SZ segmentation Input:\n\u2022 Raw image sequence (Algorithm 2) \u2022 Filtered image sequence (Section 3.3.2)\n1 (Optional) Apply Gaussian/median filtering to the raw images 2 Compute the mean inverse luminance (MIL) for the raw images 3 (Optional) Filter the MIL time series 4 Compute the MIL-based adaptive threshold time series (3) 5 Segment the SZ from the filtered (i.e. post BM3D and NM) images using the adaptive threshold\nOutput: SZ masks for the entire image sequence\nThe initial sequence of raw images is used, because it is desirable to capture the beam fluctuations as well. Optionally, small-radius median/Gaussian filtering may be applied first to mitigate outliers in the images. Afterwards the mean inverse luminance (MIL) \u30081\u2212 I(t)\u3009 is computed for all (normalized) images in a sequence where t is the time/frame index. To avoid over-fitting the adaptive threshold to the MIL time series, it is (optionally) filtered using the Gaussian total variation (TV) filter [50]. The adaptive threshold \u03c4(t) for images is computed from MIL as follows:\n\u03c4(t) = 1\u2212 C1 \u00b7 f1(t) \u00b7 fp2 (t); f1(t) = LTV\u30081\u2212 I(t)\u3009\ufe38 \ufe37\ufe37 \ufe38 SFF correction ; f2(t) = (g1 \u25e6 g2)(C2 + 1\u2212 f1(t))\ufe38 \ufe37\ufe37 \ufe38 LZ saturation correction\n(3)\nwhere g1(X) = X/min(X), g2(X) = X/max(X), X(t) is time series, C1 > 0, C2 \u2265 0, p \u2208 R and LTV is the TV filtering applied (if necessary) to the MIL time series.\nThe adaptive part of the threshold consists of two contributions: f1(t) and f2(t), where f1(t) is tied to the SFF of the FOV \u2013 the greater the SFF, the greater the MIL is because the SZ attenuates the X-ray significantly more intensely then the LZ; f2(t) is the correction based on f1(t) that accounts for the fact that, as the SFF increases, the solute is pushed out of the solid zone and the LZ becomes significantly more saturated. Both f1(t) and f2(t) also capture the instantaneous global illumination changes that could result from X-ray beam flickering. Moreover, f2(t) plays a very important role in cases where flow in the LZ rapidly transitions between natural and forced convection regimes (e.g. under the influence of applied magnetic field), since these transitions are accompanied by significant changes in the LZ luminance.\nThe SZ is segmented by binarizing the inverted filtered images with respective thresholds \u03c4(t). In the cases considered in this paper, we opted not to perform Gaussian/median pre-filtering for the raw image before MIL computation. TV filtering is performed for the MIL time series using a regularization parameter equal to 0.05 and restricting the number of TV iterations to 500 [50, 51]. Parameters C1, C2 and p for \u03c4(t) can vary rather significantly between cases, so they will be provided for each considered example in Section 4. However, we observe that C1 \u2208 [0; 10] \u00b7 10\u22122 in all cases. f2(t) in (3) is designed such that the threshold \u03c4(t) is stricter for greater SFF \u2013 this is because the difference in luminance between the SZ and LZ is much lower in the initial stages of solidification than it is when the cell with the alloy is almost entirely filled with the solid phase. This is due to the fact that much of the SZ is initially permeated by the solute some which is later expelled into the LZ. Corrections f1(t) and f2(t) can be completely different for various image sequences, therefore examples will be shown for specific cases in Section 4, in addition to the strategy for quickly optimizing C1, C2 and p. Generally, increasing C1 and p, and lowering C2 imposes a stricter threshold on the SZ mask."
        },
        {
            "heading": "3.3.4 Liquid zone, solidification front, cavity and channel segmentation",
            "text": "Next, liquid cavities and channels are identified, the SF is derived and the LZ is segmented \u2013 the steps involved are outlined in Algorithm 5. Steps 1 generates the SZ mask does not contain the areas occupied by artifacts \u2013 this is the mask used for the dendrite structure analysis in Section 3.4. Then the liquid phase mask is obtained in Step 2. Image padding in Step 3 is done because the cavities can also have a boundary at the bottom and the sides of the FOV. The top boundary is not padded because once the SF has passed the top of the FOV it is impossible to distinguish cavities at the FOV top from channels. This way the boundary component removal leaves only the cavities in the processed masks.\nSteps 4 to 9 fill and exclude the detected cavities from the liquid phase mask (Step 4) and, if necessary, one can also remove leftover artifacts (if any) from SZ segmentation (Step 5); the closing transform [41] (Step 6) is performed using disk structuring elements to fill the asperities in the 0- and 1-valued level sets in the mask \u2013 the asperities with length scales below a user-defined disk element size are filled conformally to the nearby level set boundary shape; the filling transform [52] (Step 7) completes the channel filling wherever it was imperfect after closing; Steps 8 and 9 detect channels as the differences between the output of Step 7 and the masks after cavity filling while removing small-scale segments that physically do not correspond to channels, i.e. are either too small to be classified as such or simply are artifacts.\nTo segment the LZ, one adds the artifact segments outside of the SZ to the masks with filled channels and cavities (Steps 10 to 13). The SF is obtained by applying the Canny edge detection [53] to the LZ mask. The SF is then smoothed with a small-radius Gaussian filter to eliminate noise introduced by the preceding operations, after which Otsu binarization [40] is applied and the thinning transform [52] is performed so that the SF is exactly 1 px thick. The physics that can be derived from the sequence of the SF states over time are shown further in Section 4.\nOther chosen parameters are as follows: a 25- to 35-px radius (varies by case) for the structural elements for the closing transform (Step 6), 2-px radius for the Canny kernel (Step 14) and a 3-px radius for the Gaussian kernel (Step 15). Segment size thresholds are different for various image sequences, but mostly vary slightly about 300 px2 for artifact elimination in the liquid phase and 500 px2 for channels.\nAlgorithm 5: LZ, cavity and channel separation & SF derivation Input: SZ masks for the entire image sequence (Algorithm 4) Get the SZ & liquid phase masks with artifact areas excluded\n1 SZ: multiply the SZ masks by the inverted artifact mask 2 Liquid phase: invert the result and multiply by the inverted artifact mask\nSegment cavities & channels 3 Cavities: apply 1-px image padding (pixel value 0, all image boundaries except for the top) to the output of Step 2, remove border components, then revert the image padding 4 Subtract the cavity masks from the corresponding liquid phase masks (Step 2) and invert the resulting images 5 (Optional) Perform segment size thresholding for the resulting masks 6 Invert the masks, then apply the closing transform 7 Apply the filling transform and invert the result 8 From the output of Step 7, subtract the difference between it and its segment size-thresholded version 9 Channels: find the image difference between the output of Steps 4(5) & 8 and perform segment size\nthresholding for the result Derive the SF & segment the LZ\n10 Apply 1-px image padding (pixel value 0, all image boundaries except for the bottom) to the artifact mask, remove border components, then reverse the image padding 11 Apply the closing transform 12 Add the outputs of Steps 7 & 11 13 LZ: invert the output of Step 12 14 SF: perform edge detection for the output of Step 12\nSF correction & smoothing 15 Apply small-radius Gaussian filtering to the SF masks 16 Normalize the images and apply Otsu thresholding 17 Perform morphological thinning\nOutput: \u2022 SZ with artifacts excluded \u2022 Segmented LZ with artifacts excluded \u2022 Cavity masks \u2022 Channel masks \u2022 SF states"
        },
        {
            "heading": "3.4 Solid domain analysis",
            "text": ""
        },
        {
            "heading": "3.4.1 Image partitioning & scan region identification",
            "text": "Once the SZ has been segmented, one can proceed with the analysis of the solidified structures within the SZ. Since the local textures generally vary strongly throughout the SZ, as does their CNR, it was decided to split the FOV image into a number of partitions, determine which ones contain enough of the SZ for significant analysis (scan regions), and perform local filtering and feature extraction. This procedure is detailed in Algorithm 6.\nAlgorithm 6: Image partitioning & scan region identification Input:\n\u2022 Pre-processed images (Algorithm 2) \u2022 SZ masks with artifact areas excluded (Algorithm 5)\n1 Partition the pre-processed images into grids square patches with side lengths based on image dimensions (4) 2 Partition the SZ masks into corresponding square patches; memoize output 3 Assign all patches their position indices; memoize 4 Compute the SFF for the SZ mask patches and assign the values to the respective image patches 5 Designate the image patches with SFF > \u03b5SFF (\u03b5SFF > 0, user-defined) as scan regions\nOutput: Scan regions for further analysis (Algorithm 7)\nThe pre-processed images (Algorithm 2) are partitioned into a regular grid of square patches with side lengths given by\nL = s \u00b7min dim(z) (4)\nwhere z is the input image and s is the scaling factor. Partitioning is performed such that the image area coverage is maximized. In general, before proceeding further, one should also check the partition quality by re-assembling the obtained patches into a recovered image z\u2032 and comparing dim(z\u2032) versus dim(z) to ensure, if the partitioning was not pixel-perfect (very rarely), that no more than a few pixel rows/columns were lost. Once the images are partitioned, the SZ masks are partitioned in the same way, i.e. image and mask patches with identical image position indices (assigned to all patches) correspond pixel-to-pixel.\nSome patches, especially for the images near the beginning of the sequence, are going to be mostly filled with liquid, and thus are not eligible for solid structure analysis. Identifying which regions to scan for solid structures saves a significant amount of computation time. To determine the patches where significant amounts of the solid phase are present, the SFF is computed for every patch using the SZ mask patches. The patches with the SFF greater than a user-defined threshold \u03b5SFF are designated as scan regions and are passed to Alrorithm 7 for further analysis. The memoized image position indices for the patches will be used later for the FOV reconstruction.\nTests indicated that the optimal settings for the considered image sequences are s = 0.1 and \u03b5SFF = 0.3 for all the tested images sequences. This also accounts for the methods discussed further in Sections 3.4.2-3.5.3."
        },
        {
            "heading": "3.4.2 Scan region filtering & dendrite skeleton extraction",
            "text": "The identified scan regions are processed as indicated in Algorithm 7.\nAlgorithm 7: Scan region filtering & dendrite skeleton extraction Input: scan region images (Algorithm 6) Prepare filter input\n1 Re-scale the images and perform color tone mapping (CTM) 2 Re-scale the images again and perform FFC\nFilter the images 3 Apply BM3D filtering 4 Perform two iterations of non-local means masking (NMM) 5 Apply soft color tone map masking (SCTMM) 6 Apply FFC\nExtract dendrite skeletons 7 Segment dendrites using 2-threshold hysteresis binarization 8 Invert the mask 9 Apply the thinning transform\n10 Perform size thresholding 11 Multiply the resulting masks with their corresponding SZ mask patches (Algorithm 6, Step 2) 12 Perform morphological pruning (optionally in multiple passes) 13 Remove border pixels 14 Perform size thresholding\nOutput: Dendrite skeleton masks\nHere the strategy is to use BM3D to denoise the dendrite textures as non-destructively as possible. However, we have found that in general it can be difficult to obtain good results without preparing the images first. This is why the first stage is image normalization, color tone mapping (CTM) and FFC. The CTM(x, c) operation maps the colors (in this case the gray-scale values) of the input image x image using gamma compression with a global compression factor c [54] and thus compresses the dynamic range \u2013 this has the effect of dramatically increasing the CNR of the dendrites. Meanwhile FFC uses a coarse polynomial fit of the image luminance map to perform background correction (flattening) without reference [55]. In some cases this helps to reduce the large-wavelength correlated noise due to liquid metal flow across the dendrites. We use c = 0.5 for CTM and second-order FFC polynomials.\nNext the scan regions are filtered. One first applies BM3D to restore the dendrite textures in images, then two iterations of non-local means masking (NMM) are applied to mitigate any leftover correlated noise and increase dendrite CNR. NMM could be viewed as a generalized, locally adaptive version of unsharp masking \u2013 it takes the input image x and transforms it into an output image y as follows:\ny = 2 \u2217 x\u2212 wnm \u2217 NM(x, rl, rp) (5) where NM(x, rl, rp) is the NM filter, wnm is the NM mask weight, and rl and rp are explained in Section 3.3.2 where the NM filter weights are given by (2). We have previously applied NMM to particle detection in neutron radiography\nimages of particle-laden liquid metal flow for a similar purpose, with good results [56, 57]. Afterwards the soft color tone map masking (SCTMM) is applied for further background reduction and CNR enhancement. SCTMM transforms an original normalized image x to output y in the following way:\ny = x \u2217 (x\u2212 (1\u2212 CTM(x, c))) (6) The motivation and principles behind SCTMM are explained in detail in [58] and the applications in neutron imaging of bubble and particle flow in liquid metal are demonstrated in [56, 58]. Finally, another FFC iteration is performed. For this stage, the BM3D filter is configured as in Section 3.3.2 except that \u03c3BM3D = 0.035. For NMM, we use rl = 1 px, rp = 5rl, wnm = 1.25 and pn = 0.05. SCTMM is assigned c = 0.75.\nDendrite skeleton extraction is done in eight steps. One starts with double-Otsu hysteresis binarization [52], followed by mask inversion, morphological thinning and size thresholding (8-connectivity). Size threshold for the dendrites is set to 10 px2. Then the resulting skeleton masks are multiplied with their respective SZ mask patches which crops the skeleton parts that are within the liquid phase areas and thus cannot actually be dendrites. Afterwards the remaining skeleton asperities are removed with multi-pass morphological pruning (in our case 3 passes, each pruning branches of at most 1 px length \u2013 a balance between non-destructiveness and effectiveness) [52], then border pixels are removed and size thresholding is done again (this time with a 5 px2 threshold, also using 8-connectivity)."
        },
        {
            "heading": "3.4.3 Resolving unoriented & overlapping structures",
            "text": "After dendrite detection, the skeleton segment orientations (\u03d5, with respect to the image X axis) must be measured. However, it may be the case that the image filters do not properly resolve primary/secondary dendrites or cases with dendrite overlaps. In addition, some segments may not have clearly defined orientations, or could simply be leftover artifacts. To identify and correct such unresolved (in the sense of orientation) structures within all IWs, a procedure outlined in Algorithm 8 is performed for all IWs.\nAlgorithm 8: Resolve unoriented skeletons Input: IWs with dendrite skeletons (Algorithm 7) Identify unresolved skeletons\n1 Compute orientation angles (\u03d5, with respect to the image X axis) and aspect ratio (\u03c7) for dendrite segments 2 Colorize resolved (oriented) segments (\u03c7 > \u03c7c, \u03c7c \u2265 1 is user-defined) by their \u03d5 3 Separate resolved and unresolved segments into different masks\nResolve the skeletons (for masks with unresolved segments) 4 Detect skeleton corner points 5 Detect skeleton branch points 6 Threshold and filter corner and branch points 7 Remove the remaining corner and branch points from skeletons\nReassemble IW skeletons 8 Re-evaluate segment orientations for masks with (formerly) unresolved segments (Step 7) 9 Colorize resolved (oriented) segments (\u03c7 > \u03c7c) by their \u03d5\n10 Add the output of Step 9 to the previously set aside masks with initially resolved segments (Step 3) Output: IWs with resolved dendrite skeletons colorized by their orientations\nAlgorithm 8 uses the aspect ratio \u03c7 as a criterion to determine if the skeleton segments have a resolved (i.e. well-defined) orientation. Since morphological thinning is one of the steps in Algorithm 7 and Algorithm 8 does not add new pixels to masks, most of the skeleton lines should have a 1 px thickness and, provided they are long enough, therefore also high \u03c7. We found that \u03c7c = 5 yields good results. With this setting both very small segments, as well as large skeletons with unresolved overlapping branches, will have low \u03c7 and will be passed for further processing. Colorizing the segments by \u03d5 will play a key role later during dendrite grain decomposition (Section 3.5), but in Step 3 of algorithm 8 it is used to separate the masks with initially resolved and unresolved segments. The choice of the color scale does not matter as long as it is normalized (see Section 3.5) and the palette is visually convenient for the user. Note that to determine segment \u03d5 and \u03c7 we use best-fit ellipses, since we found this procedure to be more robust and accurate than line detection with the Hough transform or the RANSAC method, even for isolated and clearly-oriented 1 px-thick segments.\nOnce the masks with unresolved skeletons are separated, corner point detection is performed. We use the Harris-Stevens method [59, 60] with first-order Gaussian derivatives and set the corner detection range to 0.5 px. The corner detection threshold is set to 4.5 \u00b7 10\u22126 with a minimum corner distance of 0 px. Then morphological branch points are detected\n[61]. Afterwards the detected corner points are filtered by selecting corner pixel clusters with pixel count < 3 (using 8-connectivity), combined with the detected branch points, and then pixel clusters with \u2264 2 pixels (8-connectivity) are removed from the resulting mask. Finally, the size-thresholded combined mask is subtracted from the input mask with unresolved skeletons.\nWith this done, the resolved skeletons are now assigned colors based on \u03d5 subject to the \u03c7c = 5 criterion, and the resulting masks are recombined with those containing initially resolved skeletons."
        },
        {
            "heading": "3.4.4 Assembling the global dendrite skeleton",
            "text": "At this point all the remaining unresolved (white-colored) skeletons within IWs are considered unoriented dendrites and/or artifacts. These are excluded from any subsequent analysis. One can now reassemble the global (FOV) dendrite skeleton image by tiling the IWs according to their position indices from Step 3 of Algorithm 6. It is also now easy to generate maps with color-coded dendrite orientations with highlighted cavities and liquid/solid boundaries."
        },
        {
            "heading": "3.5 Dendrite grain decomposition",
            "text": "Before proceeding with decomposition of the resulting global dendrite skeleton into grains, an global orientation (\u03d5) spectrum must computed for the assembled skeleton. It is not only of physical interest, but will be used in Algorithm 9 as well. While a global \u03d5 spectrum is certainly relevant, it is often desirable to distinguish areas of \"coherent\" dendrite growth, i.e. dendrite grains with their areas and mean dendrite \u03d5. The presented dendrite grain decomposition (GDG) method does this by considering \u03d5 similarity and proximity of the dendrites detected within the FOV, and it does so by exploiting the color-space representation of \u03d5 generated by Algorithm 8."
        },
        {
            "heading": "3.5.1 Detecting dominant dendrite grains",
            "text": "GDG is performed in three stages: a primary scan which detects dominant dendrite grains; a refined scan which checks if the larger grains should be subdivided further and if the smaller grains are eligible; a filtering step which resolves ambiguities and overlaps between the detected dendrite grains. The first step of the GDG procedure is outlined in Algorithm 9.\nAlgorithm 9: Detecting dominant dendrite grains Input: Assembled global dendrite skeleton (Section 3.4.4)\n1 Compute the global \u03d5 spectrum from the global skeleton 2 Filter the \u03d5 spectrum & detect dominant peaks 3 Find dendrite segments near the \u03d5 peaks in the color-space 4 Build grain masks that cover the dendrite segments\nOutput: Separate masks for dominant dendrite grains\nThe \u03d5 spectrum is computed by measuring dendrite segment \u03d5 (this time without the \u03c7 > \u03c7c constraint) and lengths, and then constructing a histogram with uniformly-sized bins with values \u03c1 \u2208 [0; 1] weighed by the dendrite lengths. Length weights are used to account for boundary pixel removal in IWs which may break up longer dendrites into fragments. The \u03d5 bin values are then filtered using the total variation (TV) filter followed by the mean filter \u2013 this is to remove outliers and insignificant peaks from the spectrum. Then the peaks are detected and the ones with \u03c1 > \u03c1c are kept. Here the regularization parameter for the TV filter is 0.15, the mean filter radius is 2, the \u03d5 spectrum resolution is 200 bins and \u03c1c = 0.12.\nSince there is a mapping between \u03d5 \u2208 (\u2212\u03c0/2;\u03c0/2] and the dendrite skeleton color values (normalized) due to Algorithm 8, one can now find the segments in the global skeleton that correspond to the selected \u03d5 peaks. To do this, peak \u03d5 values are converted to coordinates r\u03d5 in the CIELAB (CIE76) color-space and the segments with Euclidean distance within \u03b4rLAB from r\u03d5 are selected. The selected segments are further filtered by assigning them weights wLAB \u2208 [0; 1] based on their distance from r\u03d5 (farthest to closest) and keeping segments with wLAB > wc. This makes the process more resilient to noise in the \u03d5 spectrum and helps to avoid grain mask overlaps later. Sometimes, however, there may be groups of two or more very close peaks r\u03d5 that survive the thresholding by \u03c1 > \u03c1c. In these cases we replace such groups of peaks with mutual Euclidean CIELAB distances < \u03b4r\u03d5 by their mean r\u03d5 values. We found that it is optimal for most cases to set \u03b4rLAB = 0.05, wc = 0.5 and \u03b4r\u03d5 = 2 \u00b7 \u03b4rLAB. Another issue that might come up is that \u03d5 \u2208 (\u2212\u03c0/2;\u03c0/2] and the \u03d5 spectrum does not have periodic boundary conditions. This means that if there were an actual peak of some width for dendrite orientations near \u03d5 = \u00b1\u03c0/2, it would be treated as two \u03d5 peaks by Algorithm 9. This problem can be solved by checking if the peaks closest to the (\u2212\u03c0/2;\u03c0/2] boundaries (edge peaks) are close\nenough to these boundaries and to one another across the \u03d5 = \u00b1\u03c0/2 boundary. In cases where two or more peaks are detected, the edge peaks \u03d51 and \u03d52 are subjected to constraints\nmin (\u03c0/2\u2212 |\u03d51,2|) \u2264 \u03b41; ||\u03d51| \u2212 |\u03d52|| \u2264 \u03b42 (7) and, if both are satisfied, the respective masks with dendrites within the color-space peak ranges are added before color-space proximity thresholding, effectively treating the edge peaks as one. By default we use \u03b41 = \u03b42 = 5 degrees.\nWhen the dendrite clusters corresponding to each r\u03d5 peak are found, a mask must be created for them that will delimit and separate them as one grain. This is done by applying the closing transform with disk structuring elements to the skeleton clusters, which fills the spaces between the dendrite skeletons while not affecting the outlying parts of the skeletons, i.e. preserving the shapes of the dendrites that protrude from the bulk of the cluster. Note that this may generate more than one grain mask per r\u03d5 peak since dendrite clusters with very similar orientations may be sufficiently far apart. Thus, grains are identified accounting for both dendrite orientations and spatial distribution. Afterwards the resulting grain-covering binary masks are thresholded by their area, and the remaining masks are separated for further analysis with a refined scan. Here we use structuring elements with a 5 px radius for closing and the minimum grain area is set to Smin = 2000 px2."
        },
        {
            "heading": "3.5.2 Refined dendrite grain scan",
            "text": "Once dominant grains are identified for each r\u03d5 peak, they are subjected to a secondary scan that is designed to check whether the originally recognized grains need to be further subdivided. This is done to both (implicitly) ensure grain uniqueness, minimize overlaps, and resolve smaller areas withing the larger grains that have distinct enough orientations. The scan follows steps similar to those of Algorithm 9, but with the following modifications:\n1. Steps 1 and 2 are now applied to the dendrites within the grain masks, not the global skeleton. 2. Area-adaptive \u03d5 spectrum resolution is used.\nPrior to \u03d5 spectra calculation, the dendrite skeletons belonging to the grains are isolated by multiplying the grain masks by the global dendrite skeleton. The area-adaptive resolution is set up such that, on the one hand, the algorithm can resolve finer differences in orientations within the initial grains and detect the underlying \u03d5 peaks, while on the other hand not using exceedingly large resolution for smaller grains with relatively few dendrites. In the latter case the algorithm would otherwise treat the noise in the spectrum as significant peaks despite the filtering. The adaptive spectrum bin count N\u03d5 (integer) is given by\nN\u03d5 = min ( Nmin, bN0 \u00b7 S S0 e )\n(8)\nwhere Nmin is the bin count lower bound, N0 is the baseline bin count, S is the grain area and S0 is the area of the entire SZ. Note that before computing S the filling transform is applied to the grain masks \u2013 this is necessary because the grain masks conform to the dendrite skeleton and may have holes. Here we alter \u03c1c = 0.2 and wc = 0.75 and set N0 = 200, Nmin = 3. The other relevant parameters as in Algorithm 9.\nNote that in some cases the refined scan may eliminate a grain instead of simply keeping or subdividing it. The former can happen if the areas of the resulting resolved grains are below the threshold, although such cases should be quite rare."
        },
        {
            "heading": "3.5.3 Resolving ambiguities & performing cleanup",
            "text": "When the initial grains have been scanned again and kept or decomposed further and/or eliminated, the final DGD step is performed \u2013 ambiguities and overlaps between the grains are resolved. Two cases must be treated here: the previous stages of DGD have, in separate instances, generated two grains with almost identical (i.e. overlapping) masks and this is indeed one and the same grain; there is partial overlap between the grains, but it is physical since the grains are adjacent and the dendrite orientation changes very slowly from one grain to the other, i.e. there exists a transition zone instead of a sharp boundary. In the former case one of the masks is redundant, and in the latter the overlap zone must be identified and designated as such, since no clear distinction between the two grains can be made in the transition zone. Finally, there is also the matter of potentially leftover dendrites with \u03d5 values that are significant outliers with respect to the mean \u03d5 for the grains. These issues are addressed by Algorithm 10.\nThe first step is performed by multiplying all possible pairs of dendrite grain masks. Then the uniqueness factors defined as u = 1\u2212 S\u2229/\u3008S\u3009 are computed for all dendrite grain pairs, where S\u2229 is the overlap mask area and \u3008S\u3009 is the mean grain area for the pair. Pairs with u < uc are considered redundant and only one grain mask from such pairs\nAlgorithm 10: Resolving ambiguities & performing grain cleanup Input: Dendrite grains output by the refined scan (Section 3.5.2)\n1 Compute the overlap masks for dendrite grain pairs 2 Compute the uniqueness factors u \u2208 [0; 1] for the grain pairs 3 Discard redundant grains (u < uc, uc is user-defined) 4 Designate the overlap masks for the pairs of remaining unique grains as overlap zones and subtract them from the grain masks 5 Perform total area thresholding for the resulting masks, then secondary size thresholding for the underlying segments \u2013 the output gives the final grain masks 6 Multiply the global skeleton by the final grain masks to isolate the respective dendrites 7 Remove dendrites with outlying \u03d5 values and perform dendrite size thresholding\nOutput: final dendrite grain masks & skeletons\nis kept. The overlap masks for all the other grains are kept as overlap zones and subtracted from the unique masks. The remaining segments are then thresholded both by total and individual areas. Afterwards, the resulting masks are multiplied by the local skeleton to isolate the grain dendrites. Finally, the dendrite skeletons are filtered by orientation and length: \u3008\u03d5\u3009 is measured for the grain dendrites and segments outside of the \u3008\u03d5\u3009 \u00b1 5\u03c3 interval (by default) are eliminated, followed by length thresholding. This concludes the DGD process.\nHere we use Smin = 2000 px2 for the total grain fragment area and S\u2032min = bSmin/5e for grain segment area thresholding, a 2 px length threshold for dendrites, and set uc = 0.05."
        },
        {
            "heading": "3.6 Liquid domain analysis",
            "text": ""
        },
        {
            "heading": "3.6.1 Measuring solute concentration above the solidification front",
            "text": "Measuring the solute concentration above the SF involves the following considerations:\n\u2022 Filtering the noise in the liquid region above the SF as non-destructively as possible, i.e. not to alter the luminance field too much, as it can later be used with the Beer-Lambert law to assess the concentration of the solute. \u2022 LZ/SZ segmentation will never be perfect and dendrite tips could be slightly above the SF, yielding errors in the luminance/concentration measurements \u2013 this must be mitigated.\nBoth are addressed by Algorithm 11.\nAlgorithm 11: Measuring solute concentration above the solidification front Input:\n\u2022 Pre-processed FOV images without artifacts (Algorithm 3) \u2022 Solidification front masks (Algorithm 5)\n1 Apply median filtering to the FOV images 2 Apply the bilateral filter 3 Perform NM filtering 4 Define the SF-conformal buffer zone by shifting the SF contour mask upwards 5 Define the concentration sampling zone by extruding the SF-shaped boundary upwards from the buffer zone upper\nboundary 6 Compute the mean luminance for vertical pixel bands within the sampling zone over the FOV width 7 (Optional) Use the Beer-Lambert law to convert the luminance to the solute concentration\nOutput: Mean luminance/concentration above the SF over the FOV width for all time stamps\nWe find that the combination of median, bilateral [62] and NM (in this order) filters in Steps 1-3, after some parameter tuning, yields a sufficiently well-filtered luminance/concentration field without offsetting the values too much or significantly affecting the larger-wavelength features. The bilateral filter is chosen in particular because of its luminance value range filter component, since with the right settings it should preserve luminance level sets within the images that are fairly close. Once the images are processed, sampling zones are defined for every frame. To address the above mentioned issue with dendrite tips possibly being above the SF, a buffer zone is created where no sampling occurs \u2013 this is done by shifting the SF mask (curve) upwards by a distance dbuf. Starting from this level, the SF curve is then\nextruded over a distance dsamp to create the SF-conformal sampling zone for the concentration measurements from the filtered images. Here the mean values are computed for 1 px-wide vertical strips of dsamp pixels above the buffer zone over the width of the FOV.\nIn our cases the default settings which work well for all examples herein are a 1-px radius for the median filter kernel, \u00b5b = 3 pixel value range factor and Gaussian kernel scale \u03c3b = 21 for the bilateral filter [63], and for the NM filter we set rl = 1 px with rp = 5rl. For the sampling zone generation, we set dbuf = 15 and dsamp = 30."
        },
        {
            "heading": "3.6.2 Convective plume segmentation",
            "text": "With convective plume segmentation, the luminance value preservation is not as serious a concern as long as the shapes are preserved. Here the idea is to filter the images and then decompose the resulting filtered LZ luminance map into Nlevel level sets (clusters) ranked by luminance. One can then, depending on the case, re-assemble Nplume level sets with the highest luminance back together to obtain the masks for the convective plumes above the SF. This is done via Algorithm 12.\nAlgorithm 12: Convective plume segmentation Input:\n\u2022 Pre-processed FOV images without artifacts (Algorithm 3) \u2022 LZ masks with filled channels and cavities (Algorithm 5)\n1 Perform Steps 1-3 from Algorithm 11 (with different parameters) 2 Gaussian filtering 3 NM filtering 4 Create a buffer zone above the LZ boundary (SF) in the LZ mask with filled cavities and channels using\nmorphological dilation 5 Multiply the filtered image by the resulting mask 6 Decompose the resulting image into level sets 7 Re-assemble selected level sets to get convective plume masks\nOutput: Mean luminance/concentration above the SF over the FOV width for all time stamps\nHere the median filter radius is 1 px and \u00b5b = 3 with \u03c3b = 21 as before, but the NM filter parameters are now rl = 2 px with rp = 5rl, respectively. We have noticed that segmentation yields better results when, after the previous three steps, Gaussian filtering with a \u03c3g = 3 kernel and then NM filtering with rl = 1 or 2 px and rp = 15 are applied.\nTo isolate the liquid region within the FOV, the image is multiplied by the LZ mask. However, before multiplication, a buffer zone is created above the LZ mask by morphological dilation using disk structuring elements with a radius of 15 px. The rationale here is the same as in the case with the concentration measurements above the SF \u2013 to eliminate the dendrite tips that may have been imperfectly segmented. If not removed, these would form \"parasitic\" level sets and reduce the actual level set count within the LZ.\nThe luminance (concentration) level sets for the convective plumes are obtained using the K-medoids method [64] with Nlevel medoids \u2013 the level sets are then ranked by their mean luminance (with the excluded solid and buffer region having the lowest, zero luminance after mask multiplication) and the top Nplume are re-assembled into the output mask for the convective plumes. The two involved parameters may vary notably for different image sequences, but we found that setting Nlevel \u2208 [5; 9] and Nplume \u2208 [1; 3] usually yields good results."
        },
        {
            "heading": "4 Application examples & performance",
            "text": "To demonstrate the resilience of the proposed solution, it was decided to test the developed methodology and code for conditions that are purposefully made worse than one would expect. Specifically, he have opted to use only a single frame for FFC in Algorithm 2 for an image sequence. This way the background features, i.e. setup elements caught within the FOV, artifacts, and the X-ray beam profile are still compensated for, but the resulting SNR is significantly lower."
        },
        {
            "heading": "4.1 Image filtering & segmentation",
            "text": "First consider the stages of FOV processing prior to SZ and LZ segmentation. Figures 2-4 show characteristic examples of input images versus the pre-processed and then filtered output. Figure 2 is a good example where many of the image features that can realistically be expected are present. Artifacts appear as overexposed corners and areas at the bottom image boundary in (a). A thermocouple is located in the upper-left corner of (a), visibly protruding from the left image boundary). Note also the tape for affixing the thermocouples, visible as rectangular areas with greater opacity at the left and upper boundaries of (a). Liquid channels and cavities are present in the lower part of the FOV, better visible in (b). One can observe that even with single frame FFC, the luminance distribution in (a) about the X-ray beam axis is almost entirely negated in (b), and so are the elements attached to the imaged liquid metal cell. However, as opposed to (a), noise is amplified in (b) and becomes visibly coarser-grained. Afterwards, the artifacts are removed and the result is shown in (c) \u2013 the formed artifact areas should no longer affect the NM and BM3D filter patch matching procedures. Finally, BM3D and NM are applied, in that order, resulting in an output seen in (d) with much more contrast LZ/SZ boundaries, as well as cleaner liquid metal cavities and channels. While the liquid metal plume in the upper part of (b) has been dramatically diffused, it is of no concern here as the result of this image filtering routine is used only for LZ/SZ separation (filters in Algorithm 11 are used for concentration measurements in the LZ instead).\nFigure 3 is an example where the SFF is \u223c 1 \u2013 again, significant liquid metal cavities are clearly resolved, even the narrow ones forming between dendrites. Note that the finer solid structure features are smoothed out with the given filter settings. A more complicated case is shown in Figure 4 where the boundary between liquid and solid appears to be much less clear in the upper part of the image, which is remedied by the filtering. The goodness of filtering, however, is only clear in the context of the objective, which is to segment the SZ/LZ.\nThe results of segmentation (Algorithm 4, using (3)) after FOV filtering are presented in Figures 5 and 6. Figure 5 represents an easier case where the front has a rather simple shape, with cavities forming and disappearing, and a channel forming over time to the left of the cell center line. A more challenging case is shown in Figure 6, which\ncorresponds to image filtering results seen in Figure 4. Here it is demonstrated that the segmentation algorithm has no issues detecting the earlier formations in (a) and (b) where forced convection is observed, is not hindered by the rapid onset of convective plumes in (c), and also captures the much less contrast structures seen in the upper part of (d) where the SFF is close to 1.\nThe adaptive MIL-based threshold \u03c4 for the case in Figure 6 is shown in Figure 7. Note that prior to frame \u223c 250 the FOV is devoid of solidified structures and only convective plumes are present. Once such structures appear in\nwithin the FOV, \u03c4 changes significantly to account for the SFF dynamics. In this case the parameters for (3) were set to C1 = 9 \u00b7 10\u22122, C2 = 15, p = \u22120.5. A general rule of thumb for setting up the parameters is to adjust C1 such that the SZ is correctly segmented in earlier frames of the sequence (i.e. in the initial phases of growth with smaller SFF values), then tune C2 and p until the later frames in the image sequences are also treated correctly. Initial C1 values prior to fine-tuning can also be inferred from later frames, since there is more information to work with. In our experience, parameter tuning can be done fairly quickly, i.e. \u223c 5 minutes per image sequence (segmentation iterations are fast since threshold values are given by (3) instead of more complex algorithms) was enough to achieve good and stable results. Note that for the case considered in Figure 5, the parameter set was C1 = 8.5 \u00b7 10\u22123, C2 = 3 and p = 15. While different C2 and p combinations could, in general, yield rather similar results and in some cases tweaking C2 alone can yield desirable results quickly, p adjustments together with C2 often allow one to get the same results faster.\nAfter SZ/LZ segmentation is complete, these segments are further differentiated to separate liquid cavities and channels from the SZ, and to determine the shape of the SF. There are also safeguards against artifacts that can potentially be left over after LZ/SZ segmentation, as it is hardly possible to always find optimal C1, C2 and p immediately. Therefore, it is good if the code has backup options. Figures 8 and 9 illustrate the steps involved in separating segment classes.\nSubfigures (a) and (b) in Figures 8 and 9 are identical, since the SZ/LZ segmentation was performed well, but notice the boundary artifact present in both (a) and (b) in Figure 9, which is addressed later in step (d). In both cases, once cavities are identified (Algorithm 5), one readily obtains the bulk LZ segment, and can then derive the SF and find the channels extending below the SF. Examples of how the SF is traced along the SZ segment boundaries is shown in Figure 10. The resulting SF edge masks will be used later for concentration measurements above the SF and for convective plume segmentation in the LZ."
        },
        {
            "heading": "4.2 Analysis of solidified structures",
            "text": "With the SZ identified along with cavities and channels, one can now turn to the analysis of the solidified structures within the SZ. As outlined in Algorithm 6, first the FOV image is partitioned into IWs, as seen in Figure 11, and then each partition is processed using Algorithm 7. Examples of this are provided in Figures 12 and 13. Notice that the noise makes the identification of dendrites in the initial images (a) quite difficult, and Figure 13a additionally exhibits very low CNR for dendrites, mainly due to larger-wavelength correlated noise stemming from liquid flow. Note also that the dendrites have lower X-ray transparency that the surrounding liquid, and therefore it is the liquid that is colored white in (a).\nSubfigures (b) show that CTM and reference-less FFC make the dendrites and the spacings in between much clearer, but the SNR and CNR are unchanged. However, we found that this stage dramatically boosts the performance of BM3D, which is the next stage, the output of which is seen in (c). While the structures in Figure 12c are already clearly discernible to the human eye, the CNR is still lower that desired for reliable segmentation. Figure 13c, on the other hand, is problematic, since BM3D does not mitigate the correlated noise (uncorrelated Gaussian noise model is used for BM3D). This is where the next stage comes in with two iterations of NMM correction and SCTMM, after which reference-less FFC is applied again. Here NMM takes care of much of the correlated noise, SCTMM boosts CNR, and FFC acts as post-NMM large-wavelength background cleanup.\nAfterwards, double-Otsu hysteresis segmentation and image inversion yields the dendrite mask (e), and morphological thinning with size thresholding generates the IW dendrite skeleton (f). Now all that remains is to crop the dendrite\nskeletons, multiplying their masks by the SZ mask projected onto IWs \u2013 this process is demonstrated in Figures 14 and 15. After cropping is done for every IW, one has solid structure skeletons for the entire FOV \u2013 an example of IW skeletons output by Algorithm 7 for the case considered in Figures 2 and 8 is shown in Figure 16.\nObserve, however, that many of the IWs in Figure 16 exhibit multiple dendrite crossings and branching, making the orientation analysis problematic. To mitigate this issue, Algorithm 8 is applied to each of the IWs. Figures 17-19 show the steps involved in this procedure. Although the results have certain imperfections and a small amount of information may be lost in IW skeletons in general, we find that the set of parameters that we have selected for Algorithm 8 allows to recover much more information that would otherwise be lost. This is very clearly illustrated in Figures 20 and 21 where one can see the significant difference between before and after Algorithm 8 is applied.\nAs noticeable in Figure 21, some of the new segments still do not exhibit clear orientations or are otherwise ambiguous, but most of the information otherwise inaccessible from Figure 20 has been recovered with minimal losses. With this, one can now re-assemble the processed IWs into a global skeleton, which yields results showcased in Figures 22 (corresponding to Figure 21) and 23 (the case shown in Figures 3, 9 and 11).\nWhile Figures 22 and 23 are already quite informative, there is more to be extracted from the assembled skeletons. One can measure the orientation (\u03d5) spectrum, computing the relative orientation frequency by weighing over dendrite segment lengths to account for gaps due to IW boundaries and dendrite interruptions due to other reasons. An example of this is shown in Figure 24b where the \u03d5 spectrum is computed for the image seen in Figure 23. Note that the unoriented dendrite skeletons (colored black in Figure 23b) do not count towards the spectrum. One can also compute median \u03d5 for every IW to have a coarser but simplified overview of how dendrite \u03d5 are distributed over the FOV \u2013 this is seen in Figure 24a. In addition, by computing \u03d5 spectra for an entire image sequence, one can observe the dynamics over time. Statistics for liquid cavity (orange areas in Figure 23b) areas, aspect ratio, orientations, etc. can also be computed per frame and their dynamics visualized. The same is true for channels extending into the SZ (e.g., Figure 22b).\nImportantly, the \u03d5 spectrum shown in 24b is later used for the DGD procedure (Algorithm 9), which is used to decompose the global dendrite skeleton seen in Figure 23 into grains. Examples of this process are shown in Figures 25-27. Figure 25a is Figure 23b stripped of all background with only dendrites remaining \u2013 here the most intense \u03d5 spectrum peak shown in Figure 24b is considered. In (b), one can see the segments with \u03d5 within an interval of the selected \u03d5 peak (Algorithm 9) and (c) shows the result of thresholding by color-space distance. Afterwards, the grain masks are constructed using the closing transform, then size-thresholded, which results in grain masks as seen in (d). These operations are performed for every peak in the global \u03d5 spectrum that survives filtering and thresholding (Algorithm 9).\nMore examples of this are shown in Figures 26 and 27, which showcase characteristic cases that can be encountered. Specifically, Figure 26 is the case where peaks with \u223c \u00b1\u03c0/2 are detected, recognized as edge peaks and unified. Therefore, the dendrites seen in Figure 26a are correctly grouped together by color-space distance (which encodes \u03d5) and then unified into grains by proximity. Figure 27a, in turn, shows the case where there are two large grains that have a rather gradual transition into one another, akin to a buffer zone between the two. This is where thresholding after color-space distance measurements (b-c) is key.\nWhen the refined scans and grain cleanup (Section 3.5.2 and Algorithm 10) are done, one can assemble the resulting grains (both their masks and dendrite segments) within the FOV, examples of which are shown in Figures 28 and 29. It becomes visible in Figure 28, and especially (b) that the detected grains indeed constitute the major dendrite clusters with coherent (sufficiently similar) \u03d5 sets. Note also that in (a) the grains separated by the liquid cavities (e.g. upper-left corner and the lower-right part of the FOV) are correctly separated, even the ones with sufficiently similar \u03d5. This is because liquid cavities are accounted for in the grain cleanup process. Observe that the detected dendrite skeletons match the landscape seen in the background of (b).\nThe same holds for Figure 29, where in (a) one can see a black-colored cluster of skeletons designated as undetermined, i.e. they do not belong to either of the two adjacent grains with certainty and are a transition zone. This is because both grains are very close to this area and the \u03d5 of dendrites within this zone is somewhere between the mean \u03d5 for the two grains in question. It might seem that the lower part of one of the grains in (a), highlighted with light blue, should be treated as a separate smaller grain because the long diagonal cavities seem to split it in two. However, one can clearly see in (b) that they are actually connected via one of the dendrites that bridges a narrow gap between the two liquid metal cavities. A similar situation holds for the grain highlighted with light red in Figure 28a. If one does observe some small clusters of grains with similar \u03d5 in Figures 28b and 29b that were discarded by the DGD process, then these grains are most likely below the size threshold. One can, of course, always adjust settings accordingly if capturing smaller grains is necessary.\nOnce the dominant grains are detected, their relative areas (with respect to the SZ area) and \u03d5 statistics can be determined, which is demonstrated in Figure 30 for the case seen in Figure 29. Again, note that this can be done for all or selected frames in an image sequence to observe the dynamics of grain formation, fragmentation and how their statistics change."
        },
        {
            "heading": "4.3 Solidification front dynamics",
            "text": "In addition to the above, having derived the SF, one can now look at its dynamics. Figure 31 shows how the SF height over the cell width changes over time for the case shown in Figure 5, as the SF advances vertically upwards and the SFF increases. This also contains the shape information to some degree. If the latter is not of interest, or if a more continuous dynamics visualization is needed, one can generate an image as in Figure 32 where the color encodes the front height and variations over time and cell width can be clearly seen for an entire image sequence. Figure 32 is obtained by median-filtering the front height matrix (elements indexed by time and width coordinates) with a 2-pixel (element) kernel radius. The resulting matrix can then be used to calculate the matrix of instantaneous SF propagation velocity, which is shown in Figure 33. In the case of velocity, outlier removal (as in Algorithm 2) and bilateral filtering (\u00b5b = 2 pixel value range factor and Gaussian kernel scale \u03c3b = 21) are performed. If mean dynamics are of interest, they can be readily derived from the above matrices. The corresponding results can be seen in Figure 34.\nSolute concentration can be measured above the SF as explained in Algorithm 11 and plotted for different locations along the cell width over time, which is showcased in Figure 35.\nNote the maximum spot within X \u2208 (8.2; 12.3) mm and t \u2208 (1505; 1755) s, which corresponds to a rapid channel opening at the SF (Figure 5). Figure 11 reveals the sudden appearance of a highly concentrated \"trace\" in the same region as the velocity minimum/maximum in Figure 33. Once a liquid metal cavity breaches the SF and a channel forms, much greater X-ray transmission is consistently measured, as it should be, implying increased Ga concentration. The trail shift to the left is simply due to the change in the location of the channel outlet at the SF, which is caused by remelting. Observe also the banded structure for t . 1500 \u2013 these are not artifacts due to data processing, but rather physical concentration oscillations above the SF, as well as the result of SF fluctuations."
        },
        {
            "heading": "4.4 Convective plume segmentation",
            "text": "Finally, one can analyze what occurs above the SF in the bulk of the LZ further by examining the convection plumes using Algorithm 12. The results of its applications to example frames representing different cases are shown in Figures 36-39. As with the concentration measurements just above the SF, the buffer zone mask is intended to prevent the interference from potentially sticking out dendrite tips that in general may occur above the derived SF for low SNR/CNR images. In addition, the artifact areas must be excluded, since any information contained there is otherwise meaningless. This makes obvious that the code successfully segments the plumes in the showcased examples and largely preserves their shapes despite the clearly visible large-grained noise.\nThis multiple level set representation, in conjunction with morphological analysis shown in Figures 8 and 9, as well as the SF dynamics and SZ analysis, should provide a wealth of details, enabling in-depth analysis and physical interpretation of solidification processes studies using experimental setups that are similar in principle to those considered in this paper. It is worth noting that what can be seen in the above sub-figures (a) a purposely lowered SNR. Given the results seen in (b), higher SNR images should enable even better results. This, of course, also holds for the SZ analysis."
        },
        {
            "heading": "5 Further improvements & extensions",
            "text": "While many of the necessary features are already present in the code, there is most certainly room for functionality expansion and performance boosting. Specifically, we propose the following:\n\u2022 Transition to GPU implementations of BM3D and NM filters, such as the ones presented in [65, 66] \u2013 this should greatly reduce computational time per image sequence.\n\u2022 Test a possibly better suited BM3D version, BM3D-SAPCA (shape-adaptive principal component analysis) [67].\n\u2022 Integrate an optical flow velocimetry code by Liu et. al. [68, 69] directly into the presented image processing code via MATLink for a more in-depth liquid flow analysis and seamless start-to-finish data processing. This will be invaluable, in particular when combined with the presented plume segmentation and the SF analysis routines.\n\u2022 Improve upon the IW partitioning approach to eliminate the gaps between the skeletons from separate IWs \u2013 this would require a robust method that combines the overlapping parts of the IWs. Successfully implementing this will further boost the quality of dendrite structure analysis.\n\u2022 Derive solid phase thickness over the cell and Ga/In concentrations.\n\u2022 Compute inter-dendrite primary spacing.\n\u2022 Demonstrate that the showcased methodology readily translates to higher-resolution images, e.g. from synchrotron measurements and numerical simulation output."
        },
        {
            "heading": "6 Conclusions",
            "text": "To summarize, we have demonstrated a robust and noise-resilient image processing pipeline for analyzing directional metal alloy solidification processes in laboratory-scale experiments using Hele-Shaw liquid metal cells and dynamic X-ray imaging. The developed methodology at present allows one to segment liquid and solidified zones within the field of view, detect the skeletons of solidified structures in the solid zone, perform orientation analysis, detect dominant dendrite grains (if any), quantify the dynamics of the solidification front and solute concentration above it, detect and separate liquid metal channels and cavities, as well as segment and characterize convective plumes in the liquid zone. Even with artificially lowered SNR, the code performed reliably and the demonstrated performance is such that in-depth physical analysis of images is feasible. With the addition of extra features in the future, such as optical flow velocimetry\nfor the liquid zone and convective plumes, as well as other improvements outlined above, the presented methods and code should be of great value to the relevant scientific community for further physics-focused research.\nThe code combines both existing and original methods, is open-source, and is available on GitHub: MihailsBirjukovs/Meso-scale_Solidification_Analysis."
        },
        {
            "heading": "Acknowledgements",
            "text": "This research is supported by Hemlholtz-Zentrum Dresden-Rossendorf (HZDR) and a DAAD Short-Term Grant (2021, 57552336). The authors acknowledge the project \u201dDevelopment of numerical modelling approaches to study complex multiphysical interactions in electromagnetic liquid metal technologies\u201d (No. 1.1.1.1/18/A/108) wherein some of the utilized image processing methods were developed."
        }
    ],
    "title": "IMAGING OF DIRECTIONAL SOLIDIFICATION OF METAL ALLOYS IN THIN CELLS",
    "year": 2022
}