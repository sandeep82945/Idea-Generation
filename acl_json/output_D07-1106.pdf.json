{
    "abstractText": "We present a method for learning to find English to Chinese transliterations on the Web. In our approach, proper nouns are expanded into new queries aimed at maximizing the probability of retrieving transliterations from existing search engines. The method involves learning the sublexical relationships between names and their transliterations. At run-time, a given name is automatically extended into queries with relevant morphemes, and transliterations in the returned search snippets are extracted and ranked. We present a new system, TermMine, that applies the method to find transliterations of a given name. Evaluation on a list of 500 proper names shows that the method achieves high precision and recall, and outperforms commercial machine translation systems.",
    "authors": [
        {
            "affiliations": [],
            "name": "Jian-Cheng Wu"
        },
        {
            "affiliations": [],
            "name": "Jason S. Chang"
        }
    ],
    "id": "SP:7cd83b2731896e828b9324010f3295142364e2d6",
    "references": [
        {
            "authors": [
                "GW Bian",
                "HH Chen"
            ],
            "title": "Cross-language information access to multilingual collections on the internet",
            "venue": "Journal of American Society for Information Science & Technology (JASIST), Special Issue on Digital Libraries,",
            "year": 2000
        },
        {
            "authors": [
                "Y. Cao",
                "H. Li"
            ],
            "title": "Base Noun Phrase Translation Using Web Data and the EM Algorithm",
            "venue": "In Proceedings of the 19th International Conference on Computational Linguistics (COLING\u201902),",
            "year": 2002
        },
        {
            "authors": [
                "PJ. Cheng",
                "JW. Teng",
                "RC. Chen",
                "JH. Wang",
                "WH. Lu",
                "LF. Chien"
            ],
            "title": "Translating unknown queries with web corpora for cross-language information retrieval",
            "venue": "In Proceedings of the 27th ACM International Conference on Research and Development in Infor-",
            "year": 2004
        },
        {
            "authors": [
                "I. Goto",
                "N. Kato",
                "N. Uratani",
                "T. Ehara"
            ],
            "title": "Transliteration considering context information based on the maximum entropy method",
            "venue": "In Proceedings of Ninth Machine Translation Summit,",
            "year": 2003
        },
        {
            "authors": [
                "F. Huang",
                "S. Vogel",
                "A. Waibel"
            ],
            "title": "Automatic extraction of named entity translingual equivalence based on multi-feature cost minimization",
            "venue": "In Proceeding of the 41st ACL, Workshop on Multilingual and MixedLanguage Named Entity Recognition, Sapporo,",
            "year": 2003
        },
        {
            "authors": [
                "A. Kilgarriff",
                "G. Grefenstette"
            ],
            "title": "Introduction to the Special Issue on the Web as Corpus",
            "venue": "Computational Linguistics",
            "year": 2003
        },
        {
            "authors": [
                "P. Koehn",
                "K. Knight"
            ],
            "title": "Feature-Rich Statistical Translation of Noun Phrases",
            "venue": "In Proceedings of the 41st Annual Meeting on Association for Computational Linguistics,",
            "year": 2003
        },
        {
            "authors": [
                "J. Kupiec"
            ],
            "title": "An Algorithm for Finding Noun Phrase Correspondences in Bilingual Corpora",
            "venue": "In Proceedings of the 31st Annual Meeting of the Association for Computational Linguistics,",
            "year": 1993
        },
        {
            "authors": [
                "KL Kwok"
            ],
            "title": "NTCIR-2 Chinese, Cross Language Retrieval Experiments Using PIRCS",
            "venue": "In Proceedings of NTCIR Workshop Meeting,",
            "year": 2001
        },
        {
            "authors": [
                "KL Kwok",
                "P Deng",
                "N Dinstl",
                "HL Sun",
                "W Xu",
                "P Peng",
                "J. Doyon"
            ],
            "title": "CHINET: a Chinese name finder system for document triage",
            "year": 2005
        },
        {
            "authors": [
                "C.J. Lee",
                "Jason S. Chang"
            ],
            "title": "Acquisition of English-Chinese Transliterated Word Pairs from ParallelAligned Texts using a Statistical Machine Transliteration Model",
            "venue": "In Proceedings of HLT-NAACL 2003 Workshop,",
            "year": 2003
        },
        {
            "authors": [
                "H. Li",
                "M. Zhang",
                "J. Su"
            ],
            "title": "A joint sourcechannel model for machine transliteration",
            "venue": "In Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics,",
            "year": 2004
        },
        {
            "authors": [
                "Y. Li",
                "G. Grefenstette"
            ],
            "title": "Translating Chinese Romanized name into Chinese idiographic characters via corpus and web validation",
            "venue": "In Proceedings of CORIA",
            "year": 2005
        },
        {
            "authors": [
                "T. Lin",
                "J.C. Wu",
                "J.S. Chang"
            ],
            "title": "Extraction of Name and Transliteration in Monolingual and Parallel Corpora",
            "venue": "In Proceedings of AMTA 2004,",
            "year": 2004
        },
        {
            "authors": [
                "WH. Lu",
                "LF. Chien",
                "HJ. Lee"
            ],
            "title": "Translation of web queries using anchor text mining",
            "venue": "ACM Transactions on Asian Language Information Processing,",
            "year": 2002
        },
        {
            "authors": [
                "WH Lu",
                "LF Chien",
                "HJ Lee"
            ],
            "title": "Anchor text mining for translation of Web queries: A transitive translation approach",
            "venue": "ACM Transactions on Information Systems",
            "year": 2004
        },
        {
            "authors": [
                "M. Nagata",
                "T. Saito",
                "K. Suzuki"
            ],
            "title": "Using the Web as a bilingual dictionary",
            "venue": "In Proceedings of 39th. ACL Workshop on Data-Driven Methods in Machine Translation,",
            "year": 2001
        },
        {
            "authors": [
                "J.-H Oh",
                "H. Isahara"
            ],
            "title": "Mining the Web for Transliteration Lexicons: Joint-Validation Approach",
            "venue": "In IEEE/WIC/ACM International Conference on Web Intelligence,",
            "year": 2006
        },
        {
            "authors": [
                "J.-H. Oh",
                "K.-S. Choi"
            ],
            "title": "An ensemble of grapheme and phoneme for machine transliteration",
            "venue": "In Proceedings of IJCNLP05,",
            "year": 2005
        },
        {
            "authors": [
                "Y. Qu",
                "G. Grefenstette"
            ],
            "title": "Finding Ideographic Representations of Japanese Names Written in Latin Script via Language Identification and Corpus Validation",
            "venue": "In Proceedings of the 42 Annual Meeting of the Association for Computational Linguistics,",
            "year": 2004
        },
        {
            "authors": [
                "CK Quah"
            ],
            "title": "Translation and Technology, Palgrave Textbooks in Translation and Interpretation",
            "year": 2006
        },
        {
            "authors": [
                "Y Zhang",
                "F Huang",
                "S Vogel"
            ],
            "title": "Mining translations of OOV terms from the web through cross-lingual",
            "year": 2005
        }
    ],
    "sections": [
        {
            "text": "Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pp. 996\u20131004, Prague, June 2007. c\u00a92007 Association for Computational Linguistics"
        },
        {
            "heading": "1 Introduction",
            "text": "Increasingly, short passages or web pages are being translated by desktop machine translation software or are submitted to machine translation services on the Web every day. These texts usually contain some proportion of proper names (e.g., place and people names in \u201cThe cities of Mesopotamia prospered under Parthian and Sassanian rule.\u201d), which may not be handled properly by a machine translation system. Online machine translation services such as Google Translate1 or Yahoo! Babelfish2 typically use a bilingual dictionary that is either manually compiled or learned from a par-\n1 Google Translate: translate.google.com/translate_t 2 Yahoo! Babelfish: babelfish.yahoo.com\nallel corpus. However, such dictionaries often have insufficient coverage of proper names and technical terms, leading to poor translation performance due to out of vocabulary (OOV) problem.\nHandling name transliteration is also important for cross language information retrieval (CLIR) and terminology translation (Quah 2006). There are also services on the Web specifically targeting transliteration aimed at improving CLIR, including CHINET (Kwok et al. 2005) and LiveTrans (Lu, Chien, and Lee 2004).\nThe OOV problems of machine translation (MT) or CLIR can be handled more effectively by learning to find transliteration on the Web. Consider the sentence in Example (1), containing three proper names. Google Translate produces the sentence in Example (2) and leaves \u201cParthian\u201d and \u201cSassanian\u201d not translated. A good response might be a translation like Example (3) with appropriate transliterations (underlined). (1) The cities of Mesopotamia prospered under\nParthian and Sassanian rule. (2) \u57ce\u5e02\u7e41\u69ae\u4e0b parthian \u9054\u7c73\u4e9e\u3001sassanian \u7d71\n\u6cbb\u3002 (3) \u7f8e\uf96a\uf967\u9054\u7c73\u4e9e3\u57ce\u5e02\u5728\u5df4\u5e95\u4e9e4\u548c\u85a9\u73ca5\u7d71\u6cbb\u4e0b\n\u7e41\u69ae\u8d77\uf92d\u3002 These transliterations can be more effectively retrieved from mixed-code Web pages by extending each of the proper names into a query. Intuitively, by requiring one of likely transliteration morphemes (e.g., \u201c\u5df4\u201d(Ba) or \u201c\u5e15\u201d(Pa) for names beginning with the prefix \u201cpar-\u201d), we can bias the search engine towards retrieving the correct trans-\n3 \u7f8e\uf96a\uf967\u9054\u7c73\u4e9e(Meisuobudamiya) is the transliteration of \u201cMesopotamia.\u201d 4 \u5df4\u5e95\u4e9e(Badiya) is the transliteration of \u201cParthian.\u201d 5 \u85a9\u73ca(Sashan) is the transliteration of \u201cSassanian.\u201d\n996\nliterations (e.g., \u201c \u5df4 \u5e95 \u4e9e \u201d(Badiya) and \u201c \u5e15 \u63d0 \u4e9e\u201d(Patiya)) in snippets of many top-ranked documents.\nThis approach to terminology translation by searching is a strategy increasingly adopted by human translators. Quah (2006) described a modern day translator would search for the translation of a difficult technical term such as \u201c\uf962\u65b9\u6027\u5c0e\u96fb \u6a39\u8102\u30d5\u30a3\u30eb\u30e0\u201d by expanding the query with the word \u201cfilm\u201d (back transliteration of the component \u201c\u30d5\u30a3\u30eb\u30e0\u201d of the term in question). This kind of query expansion (QE) indeed increases the chance of finding the correct translation \u201canisotropic conductive film\u201d in top-ranked snippets. However, the manual process of expanding query, sending search request, and extracting transliteration is tedious and time consuming. Furthermore, unless the query expansion is done properly, snippets containing answers might not be ranked high enough for this strategy to be the most effective.\nWe present a new system, TermMine, that automatically learns to extend a given name into a query expected to retrieve and extract transliterations of the proper name. An example of machine transliteration of \u201cParthian\u201d is shown in Figure 1. TermMine has determined the best 10 query expansions (e.g., \u201cParthian \u5df4 ,\u201d \u201cParthian \u5e15 \u201d). TermMine learns these effective expansions auto-\nmatically during training by analyzing a collection of place names and their transliterations, and deriving cross-language relationships of prefix and postfix morphemes. For instance, TermMine learns that a name that begins with the prefix \u201cpar-\u201d is likely to have a transliteration beginning with \u201c\u5df4\u201d or \u201c\u5e15\u201d). We describe the learning process in Section 3.\nThis prototype demonstrates a novel method for learning to find transliterations of proper nouns on the Web based on query expansion aimed at maximizing the probability of retrieving transliterations from existing search engines. Since the method involves learning the morphological relationships between names and their transliterations, we refer to this IR-based approach as morphological query expansion approach to machine transliteration. This novel approach is general in scope and can also be applied to back transliteration and to translation with slight modifications, even though we focus on transliteration in this paper.\nThe remainder of the paper is organized as follows. First, we give a formal statement for the problem (Section 2). Then, we present a solution to the problem by proposing new transliteration probability functions, describing the procedure for estimating parameters for these functions (Section 3) and the run-time procedure for searching and ex-\ntracting transliteration via a search engine (Section 4). As part of our evaluation, we carry out two sets of experiments, with or without query expansion, and compare the results. We also evaluate the results against two commercial machine translation online services (Section 5)."
        },
        {
            "heading": "2 Problem Statement",
            "text": "Using online machine translation services for name transliteration does not work very well. Searching in the vicinity of the name in mixed-code Web pages is a good strategy. However, query expansion is needed for this strategy to be effective. Therefore, to find transliterations of a name, a promising approach is to automatically expand the given name into a query with the additional requirement of some morpheme expected to be part of relevant transliterations that might appear on the Web.\nNow, we formally state the problem we are dealing with:\nWhile a proper name N is given. Our goal is to search and extract the transliteration T of N from Web pages via a generalpurpose search engine SE. For that, we expand N into a set of queries q1, q2, \u2026, qm, such that the top n document snippets returned by SE for the queries are likely to contain some transliterations T of the given name N.\nIn the next section, we propose using a probability function to model the relationships between names and transliterations and describe how the parameters in this function can be estimated."
        },
        {
            "heading": "3 Learning Relationships for QE",
            "text": "We attempt to derive cross-language morphological relationships between names and transliterations and use them to expand a name into an effective query for searching and extracting transliterations. For the purpose of expanding the given name, N, into effective queries to search and extract transliterations T, we define a probabilistic function for mapping prefix syllable from the source to the target languages. The prefix transliteration function P(TP | NP) is the probability of T has a prefix TP under the condition that the name N has a prefix NP.\nP (TP | NP) = Count (TP,NP) / Count (NP) (1)\nwhere Count (TP,NP) is the number of TP and NP co-occurring in the pairs of training set (see Table 1), and Count(NP) is the number of NP occurring in training set.\nSimilarly, we define the function P (TS | NS) for\npostfixes TS and NS:\nP (TS | NS) = Count (TS,NS) / Count (NS) (2)\nThe prefixes and postfixes are intended as a syllable in the two languages involved, so the two prefixes correspond to each other (See Table 2&3). Due to the differences in the sound inventory, the Roman prefix corresponding to a syllabic prefix in Chinese may vary, ranging from a consonant, a vowel, or a consonant followed by a vowel (but not a vowel followed by a consonant). So, it is likely such a Roman prefix has from one to four letters. On the contrary, the prefix syllable for a name written in Chinese is readily identifiable.\nWe also observe that a preferred prefix (e.g., \u201c\u827e\u201d(Ai)) is often used for a Roman prefix (e.g., \u201ca-\u201d or \u201cir-\u201d), while occasionally other homophonic characters are used (e.g., \u201c\u57c3\u201d(Ai)). The skew distribution creates problems for reliable estimation of transliteration functions. To cope with this data sparseness problem, we use homophone classes and a function CL that maps homophonic characters to the same class number. For instance, \u201c\u827e\u201d and \u201c\u57c3\u201d are homophonic, and both are assigned the same class identifier(see Table 4 for more samples).\nTherefore, we have\nCL (\u201c\u827e\u201d) = CL (\u201c\u57c3\u201d) = 275.\nWith homophonic classes of transliteration morphemes, we define class-based transliteration probability as follows\nPCL(C | NP) = Count(TP,NP) / Count(NP) (3) where CL(TP) = C\nPCL(C | NS) = Count(TS,NS) / Count(NS) (4)\nwhere CL(TS) = C and then we rewrite P (TP | NP) and P (TS | NS) as\nP (TP | NP) = PCL(CL(TP ) | NP) (5)\nP (TS | NS) = PCL(CL(TS ) | NS) (6)\nWith class-based transliteration probabilities, we are able to cope with difficulty in estimating parameters for rare events which are under represented in the training set. Table 5 shows that \u201c\u57c3\u201d belongs to a homophonic class co-occurring with \u201ca-\u201d for 46 times, even when only one instance of (\u201c\u57c3\u201d, \u201ca-\u201d).\nAfter cross-language relationships for prefixes and postfixes are automatically trained, the prefix relationships are stored as prioritized query expansion rules. In addition to that, we also need a transliteration probability function to rank candidate transliterations at run-time (Section 4). To cope with data sparseness, we consider names (or transliterations) with the same prefix (or postfix) as a class. With that in mind, we use both prefix and postfix to formulate an interpolation-based estimator for name transliteration probability:\nP(T | N)=max \u03bb1P(TP | NP)+\u03bb2P(TS | NS) (7) NP, NS where \u03bb1 + \u03bb2 = 1 and NP, NS, TP, and TS are the\nprefix and postfix of the given name N and transliteration T.\nFor instance, the probability of \u201c\u7f8e\uf96a\uf967\u9054\u7c73\n\u4e9e \u201d(Meisuobudamiya) as a transliteration of \u201cMesopotamia\u201d is estimated as follows\nP (\u7f8e\uf96a\uf967\u9054\u7c73\u4e9e | \u201cMesopotamia\u201d) = \u03bb1P (\u201c\u7f8e\u201d | \u201cme-\u201d)+ \u03bb2 P (\u201c\u4e9e\u201d | \u201c-a\u201d)\nThe system follows the procedure shown in Figure 2 to estimate these probabilities. In Step (1),\nthe system generates all possible prefix pairs for each name-transliteration pair. For instance, consider the pair, (\u201cAabenraa,\u201d \u201c\u963f\u672c\uf915\u201d), the system will generate eight pairs:\n(a-, \u963f-), (aa-, \u963f-), (aab-, \u963f-), (aabe-, \u963f-), (-a, -\uf915), (-aa, -\uf915), (-raa, -\uf915), and (-nraa, -\uf915).\nFinally, the transliteration probabilities are estimated based on the counts of prefixes, postfixes, and their co-occurrences. The derived probabilities embody a number of relationships: (a) Phoneme to syllable relationships (e.g., \u201cb\u201d vs.\n\u201c \u5e03 \u201d as in \u201cBrooklyn\u201d and \u201c \u5e03 \uf939 \u514b \uf9f4\u201d(Bulukelin)),\n(b) Syllable to syllable relationships (e.g., \u201cbu\u201d vs. \u201c\u5e03\u201d),\n(c) Phonics rules (e.g., \u201cbr-\u201c vs. \u201c\u5e03\u201d and \u201c\u514b\u201d vs. \u201ccl-\u201d). The high probability of P(\u201c\u514b\u201d | \u201ccl-\u201d) amounts to the phonics rule that stipulates \u201cc\u201d be pronounced with a \u201ck\u201d sound in the context of \u201cl.\u201d"
        },
        {
            "heading": "4 Transliteration Search and Extraction",
            "text": "At run-time, the system follows the procedure in Figure 3 to process the given name. In Step (1), the system looks up in the prefix relationship table to find the n best relationships (n = MaxExpQueries) for query expansion with preference for relationships with higher probabilistic value. For instance, to search for transliterations of \u201cActon,\u201d the system looks at all possible prefixes and postfixes of \u201cActon,\u201d including a-, ac-, act-, acto-, -n, -on, -ton, and -cton, and determines the best query expansions: \u201cActon \u963f,\u201d \u201cActon \u4e9e,\u201d \u201cActon \u827e,\u201d \u201cActon \u9813,\u201d \u201cActon \u9a30,\u201d etc. These effective expansions are automatically derived during the training stage described in Section 3 by analyzing a large collection of name-transliteration pairs.\nIn Step (2), the system sends off each of these queries to a search engine to retrieve up to MaxDocRetrieved document snippets. In Step (3), the system discards snippets that have too little proportion of target-language text. See Example (4) for a snippet that has high portion of English text and therefore is less likely to contain a transliteration. In Step (4), the system considers the substrings in the remaining snippets.\nFor instance, Examples (5-7) shows remaining snippets that have high proportion of Chinese text. The strings \u201c\u963f\u514b\u9813\u201d(Akedun) is a transliteration found in snippet shown in Example (5), a candidate beginning with the prefix \u201c\u963f\u201d and ending with the postfix \u201c\u9813\u201d and is within the distance of 1 of the instance \u201cActon,\u201d separated by a punctuation token. The string \u201c\u57c3\u514b\u9813\u201d (Aikedun) found in Example (6) is also a legitimate transliteration beginning with a different prefix \u201c\u57c3,\u201d while \u201c\u827e \u79d1\u9a30\u201d(Aiketeng) in Example (7) is a transliteration beginning with yet another prefix \u201c\u827e.\u201d Transliteration \u201c\u57c3\u514b\u9813\u201d appears at a distance of 3 from \u201cActon,\u201d while two instances of \u201c\u827e\u79d1\u9a30\u201d appear at the distances of 1 and 20 from the nearest instances of \u201cActon.\u201d\n(4) Acton moive feel pics!! - \u651d\u5f71\n\u76ee\u524d\u4f4d\u7f6e: \u6587\u85dd\u7dda > \u904a\u85dd\u652f\u7dda > \u651d\u5f71 > Acton moive feel pics!! Hop Hero - Acton moive feel pics!! http://www.hkmassive.com/forum/viewthread.php? tid=2368&fpage=1 Watch the slide show! ...\n(5) New Home Alert - Sing Tao New Homes Please select, Acton \u963f\u514b\u9813, Ajax \u4e9e\u7a4d\u58eb, Alliston \u963f\uf9e9\u65af\u9813, Ancaster \u5b89\u5361\u65af\u7279, Arthur \u963f\u745f, Aurora \u5967\uf90f\uf925, Ayr \u827e\u723e, Barrie \u5df4\uf9e9, Beamsville, Belleville ... (6) STS-51-F \u2013 Wikipedia \u524d\u6392\u5de6\u8d77\uff1a\u82f1\u683c\uf91f\u3001\u6d77\u56e0\u8332\u3001\u798f\uf952\u9813\u3001\u5e03\uf9e9\u5947\n\u65af ... \u5361\u723e\u00b7\u6d77\u56e0\u8332 (Karl Henize \uff0c\u66fe\u57f7\ufa08 STS-51F \u4efb\u52d9)\uff0c\u4efb\u52d9\u5c08\u5bb6; \uf90f\uf9d4\u00b7\u57c3\u514b\u9813 (Loren Acton\uff0c \u66fe\u57f7\ufa08 STS-51-F \u4efb\u52d9)\uff0c\u6709\u6548\u8f09\u8377\u5c08\u5bb6; \u7d04\u7ff0-\u5927 \u885b\u00b7\u5df4\u6258 (John-David F. ...\n(7) \u6fb3\u6d32\u827e\u79d1\u9a30-00-Acton-Australia.htm Acton Systems is a world leading manufacturer supplying stuctured cabling systems suited to the Australian and New Zealand marketplace. \u6fb3\u6d32\u827e \u79d1\u9a30\u4e43\u5c08\u696d\u4e4b\u6574\u5408\u5f0f\u914d\u7dda\u7cfb\u7d71\u88fd\u9020\u5546, \u7522\u54c1\u92b7\u552e \u65bc\u6fb3\u6d32\u53ca\uf9cf\u897f\uf91f\u3002 Custom made leads are now available ...\nThe occurrence counts and average distance from instances of the given name are tallied for each of these candidates. Candidates with a low occurrence count and long average distance are excluded from further consideration. Finally, all candidates are evaluated and ranked using Equation (7) given in Section 3."
        },
        {
            "heading": "5 Evaluation",
            "text": "In the experiment carried out to assess the feasibility to the proposed method, a data set of 23,615 names and transliterations was used. This set of place name data is available from NICT, Taiwan for training and testing. There are 967 distinct Chinese characters presented in the data, and more details of training data are available in Table 7. The English part consists of Romanized versions of names originated from many languages, including Western and Asian languages. Most of the time, the names come with a Chinese counterpart based solely on transliteration. But occasionally, the Chinese counterpart is part translation and part transliteration. For instance, the city of \u201cSouthampton\u201d has a Chinese counterpart consisting of \u201c \u5357 \u201d (translation of \u201csouth\u201d) and \u201c\u6f22\u666e\u9813\u201d (transliteration of \u201campton\u201d).\nWe used the set of parameters shown in Table 8 to train and run System TermMine. A set of 500 randomly selected were set aside for testing. We paired up the prefixes and postfixes in the remaining 23,116 pairs, by taking one to four leading or trailing letters of each Romanized place names and the first and last Chinese transliteration character to estimate P (TP | NP) and P (TS | NS).\nMinTargetRate 0.5 Min rate of target text in a snippet\nMinOccCount 1 Min number of cooccurrence of query and transliteration candidate in snippets MaxAvgDistance 4 Max distance be-tween N and T WeightPrefixProb 0.5 Weight of Prefix probability (\u03bb1) WeightPostfixProb 0.5 Weight of Postfix probability (\u03bb2) We carried out two kinds of evaluation on System TermMine, with and without query expansion. With QE option off, the name itself was sent off as a query to the search engine, while with QE option turned on, up to 10 expanded queries were sent for each name. We also evaluated the system against Google Translate and Yahoo! Babelfish. We discarded the results when the names are returned untranslated. After that, we checked the correctness of all remaining results by hand. Table 9 shows a sample of the results produced by the three systems.\nIn Table 10, we show performance differences of system TermMine in query expansion option. Without QE, the system returns transliterations (applicability) less than 50% of the time. Nevertheless, there are enough snippets for extracting and ranking of transliterations. The precision rate of the top-ranking transliterations is 88%. With QE turned on, the applicability rate increases significantly to 60%. The precision rate also improved slightly to 0.89.\nThe performance evaluation of three systems is shown in Table 11. For the test set of 500 place names, Google Translate returned 146 transliterations and Yahoo! Babelfish returned only 44, while TermMine returned 300. Of the returned transliterations, Google Translate and Yahoo! Babelfish achieved a precision rate around 50%, while TermMine achieved a precision rate almost as high as 90%. The results show that System TermMine outperforms both commercial MT systems by a wide margin, in the area of machine transliteration of proper names.\nMethod Evaluation TermMine QETermMine QE+\n# of cases performed 238 300 Applicability 0.48 0.60 # Correct Answers 209 263 Precision 0.88 0.89 Recall 0.42 0.53 F-measure 0.57 0.66"
        },
        {
            "heading": "6 Comparison with Previous Work",
            "text": "Machine transliteration has been an area of active research. Most of the machine transliteration method attempts to model the transliteration process of mapping between graphemes and phonemes. Knight and Graehl (1998) proposed a multilayer model and a generate-and-test approach to perform back transliteration from Japanese to English based on the model. In our work we address an issue of producing transliteration by way of search.\nGoto et al. (2003), and Li et al. (2004) proposed a grapheme-based transliteration model. Hybrid transliteration models were described by AlOnaizan and Knight (2002), and Oh et al. (2005).\nRecently, some of the machine transliteration study has begun to consider the problem of extracting names and their transliterations from parallel corpora (Qu and Grefenstette 2004, Lin, Wu and Chang 2004; Lee and Chang 2003, Li and Grefenstette 2005).\nCao and Li (2002) described a new method for base noun phrase translation by using Web data. Kwok, et al. (2001) described a system called CHINET for cross language name search. Nagata et al. (2001) described how to exploit proximity and redundancy to extract translation for a given term. Lu, Chien, and Lee (2002) describe a method for name translation based on mining of anchor texts. More recently, Zhang, Huang, and Vogel (2005) proposed to use occurring words to expand queries for searching and extracting transliterations. Oh and Isahara (2006) use phonetic-similarity to recognize transliteration pairs on the Web.\nIn contrast to previous work, we propose a simple method for extracting transliterations based on a statistical model trained automatically on a bilingual name list via unsupervised learning. We also carried out experiments and evaluation of training and applying the proposed model to extract transliterations by using web as corpus."
        },
        {
            "heading": "7 Conclusion and Future Work",
            "text": "Morphological query expansion represents an innovative way to capture cross-language relations in name transliteration. The method is independent of the bilingual lexicon content making it easy to adopt to other proper names such person, product, or organization names. This approach is useful in a number of machine translation subtasks, including name transliteration, back transliteration, named entity translation, and terminology translation.\nMany opportunities exist for future research and improvement of the proposed approach. First, the method explored here can be extended as an alterative way to support such MT subtasks as back transliteration (Knight and Graehl 1998) and noun phrase translation (Koehn and Knight 2003). Finally, for more challenging MT tasks, such as handling sentences, the improvement of translation quality probably will also be achieved by combining this IR-based approach and statistical machine translation. For example, a pre-processing unit may replace the proper names in a sentence with transliterations (e.g., mixed code text \u201cThe cities of \u7f8e\n\uf96a\uf967\u9054\u7c73\u4e9e prospered under \u5df4\u5e95\u4e9e and \u85a9\u73ca rule.\u201d before sending it off to MT for final translation."
        }
    ],
    "title": "Learning to Find English to Chinese Transliterations on the Web",
    "year": 2007
}