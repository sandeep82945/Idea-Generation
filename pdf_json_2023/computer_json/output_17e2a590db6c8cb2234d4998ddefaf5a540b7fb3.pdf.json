{
    "abstractText": "Approximation-aware testing has been recently proposed because conventional methods cannot take into account the flexibility encountered in approximate circuits for handling errors. However, the security vulnerabilities of approximation-aware testing techniques have not been fully considered. Approximate circuits utilize several schemes with a variety of error patterns, that open new opportunities for attackers. In this paper, the security threats in approximation-aware testing methods are investigated. To the best of the authors\u2019 knowledge, the topic on the security analysis of approximation-aware testing techniques has not been treated in the technical literature. Two malicious tampering attacks are proposed in addition to an attack that can invalidate hardware Trojan detection. The proposed two tampering attacks, namely tampering of the exact netlist (TEN) and tampering of the error metric (TEM), are evaluated with experiments. The results show that original non-acceptable faults can be mistakenly assigned as acceptable faults and that approximation-aware testing techniques can invalidate the detection of hardware Trojans in approximate circuits due to fault classification.",
    "authors": [
        {
            "affiliations": [],
            "name": "Yuqin Dou"
        },
        {
            "affiliations": [],
            "name": "Chongyan Gu"
        },
        {
            "affiliations": [],
            "name": "Chenghua Wang"
        },
        {
            "affiliations": [],
            "name": "Weiqiang Liu"
        }
    ],
    "id": "SP:7d0ec6e4c7e5271b48a20ab5555a74ef1ec103dc",
    "references": [
        {
            "authors": [
                "W. Liu",
                "F. Lombardi",
                "M. Shulte"
            ],
            "title": "A Retrospective and Prospective View of Approximate Computing Point of View",
            "venue": "Proceedings of the IEEE, vol. 108, no. 3, pp. 394\u2013399, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "W. Liu",
                "C. Gu",
                "M. O\u2019Neill",
                "G. Qu",
                "P. Montuschi",
                "F. Lombardi"
            ],
            "title": "Security in Approximate Computing and Approximate Computing for Security: Challenges and Opportunities",
            "venue": "Proceedings of the IEEE, pp. 1\u201318, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "M. Traiola",
                "A. Virazel",
                "P. Girard",
                "M. Barbareschi",
                "A. Bosio"
            ],
            "title": "A survey of testing techniques for approximate integrated circuits",
            "venue": "Proceedings of the IEEE, vol. 108, no. 12, pp. 2178\u20132194, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "A. Chandrasekharan",
                "S. Eggersgl\u00fc\u00df",
                "D. Gro\u00dfe",
                "R. Drechsler"
            ],
            "title": "Approximation-aware Testing for Approximate Circuits",
            "venue": "Proc. 23rd Asia and South Pacific Design Automation Conference (ASP- DAC), pp. 239\u2013244, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "M. Traiola",
                "A. Virazel",
                "P. Girard",
                "M. Barbareschi",
                "A. Bosio"
            ],
            "title": "Maximizing Yield for Approximate Integrated Circuits",
            "venue": "Design, Automation Test in Europe Conference Exhibition (DATE), pp. 810\u2013815, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "M. Traiola",
                "A. Virazel",
                "P. Girard",
                "M. Barbareschi",
                "A. Bosio"
            ],
            "title": "On the comparison of different atpg approaches for approximate integrated circuits",
            "venue": "IEEE 21st International Symposium on Design and Diagnostics of Electronic Circuits Systems (DDECS), pp. 85\u201390, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "F. Regazzoni",
                "C. Alippi",
                "I. Polian"
            ],
            "title": "Security: the Dark Side of Approximate Computing",
            "venue": "International Conference on Computer-Aided Design (ICCAD), pp. 1\u20136, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Y. Dou",
                "S. Yu",
                "C. Gu",
                "M. O\u2019Neill",
                "C. Wang",
                "W. Liu"
            ],
            "title": "Security Analysis of Hardware Trojans on Approximate Circuits",
            "venue": "Proceedings of the 2020 on Great Lakes Symposium on VLSI, (New York, NY, USA), p. 315\u2013320, Association for Computing Machinery, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "P. Yellu",
                "Q. Yu"
            ],
            "title": "Can We Securely Use Approximate Computing",
            "venue": "IEEE International Symposium on Circuits and Systems (ISCAS), pp. 1\u20135, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "S.A. Islam"
            ],
            "title": "On the (In)security of Approximate Computing Synthesis",
            "venue": "arXiv preprint arXiv:1912.01209, 2019.",
            "year": 1912
        },
        {
            "authors": [
                "J. Liang",
                "J. Han",
                "F. Lombardi"
            ],
            "title": "New Metrics for the Reliability of Approximate and Probabilistic Adders",
            "venue": "IEEE Transactions on Computers, vol. 62, no. 9, pp. 1760\u20131771, 2013.",
            "year": 2013
        },
        {
            "authors": [
                "M. Traiola",
                "A. Virazel",
                "P. Girard",
                "M. Barbareschi",
                "A. Bosio"
            ],
            "title": "A Test Pattern Generation Technique for Approximate Circuits Based on an ILP-Formulated Pattern Selection Procedure",
            "venue": "IEEE Transactions on Nanotechnology, vol. 18, pp. 849\u2013857, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "M. Traiola",
                "A. Virazel",
                "P. Girard",
                "M. Barbareschi",
                "A. Bosio"
            ],
            "title": "Testing Approximate Digital Circuits: Challenges and Opportunities",
            "venue": "IEEE 19th Latin-American Test Symposium (LATS), 2018.",
            "year": 2018
        },
        {
            "authors": [
                "E. Love",
                "Y. Jin",
                "Y. Makris"
            ],
            "title": "Proof-carrying hardware intellectual property: A pathway to trusted module acquisition",
            "venue": "IEEE Transactions on Information Forensics and Security, vol. 7, no. 1, pp. 25\u201340, 2012.",
            "year": 2012
        },
        {
            "authors": [
                "W. Liu",
                "L. Chen",
                "C. Wang",
                "M. O\u2019Neill",
                "F. Lombardi"
            ],
            "title": "Design and Analysis of Inexact Floating-Point Adders",
            "venue": "IEEE Transactions on Computers, vol. 65, no. 1, pp. 308\u2013314, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "K. Nepal",
                "Y. Li",
                "R.I. Bahar",
                "S. Reda"
            ],
            "title": "ABACUS: A technique for automated behavioral synthesis of approximate computing circuits",
            "venue": "pp. 1\u20136, 2014.",
            "year": 2014
        },
        {
            "authors": [
                "J.D. Samantha V. Pham"
            ],
            "title": "An Analysis of Differences between Trojans inserted at RTL and at Manufacturing with Implications for their Detectability",
            "venue": "2012IEEE North Atlantic Test Workshop.",
            "year": 2012
        }
    ],
    "sections": [
        {
            "text": "Security and Approximation: Vulnerabilities in Approximation-aware Testing\nDou, Y., Gu, C., Wang, C., Liu, W., & Lombardi, F. (2022). Security and Approximation: Vulnerabilities in Approximation-aware Testing. IEEE Transactions on Emerging Topics in Computing (TETC) . Advance online publication. https://doi.org/10.1109/TETC.2022.3176761\nPublished in: IEEE Transactions on Emerging Topics in Computing (TETC)\nDocument Version: Peer reviewed version\nQueen's University Belfast - Research Portal: Link to publication record in Queen's University Belfast Research Portal\nPublisher rights Copyright 2022 IEEE. This work is made available online in accordance with the publisher\u2019s policies. Please refer to any applicable terms of use of the publisher.\nGeneral rights Copyright for the publications made accessible via the Queen's University Belfast Research Portal is retained by the author(s) and / or other copyright owners and it is a condition of accessing these publications that users recognise and abide by the legal requirements associated with these rights.\nTake down policy The Research Portal is Queen's institutional repository that provides access to Queen's research output. Every effort has been made to ensure that content in the Research Portal does not infringe any person's rights, or applicable UK laws. If you discover content in the Research Portal that you believe breaches copyright or violates any law, please contact openaccess@qub.ac.uk.\nOpen Access This research has been made openly available by Queen's academics and its Open Research team. We would love to hear how access to this research benefits you. \u2013 Share your feedback with us: http://go.qub.ac.uk/oa-feedback\nDownload date:10. Jan. 2024\n1 Security and Approximation: Vulnerabilities in Approximation-aware Testing\nYuqin Dou, Chongyan Gu, Chenghua Wang, Member, IEEE , Weiqiang Liu, Senior Member, IEEE and Fabrizio Lombardi, Fellow, IEEE\nAbstract\u2014Approximation-aware testing has been recently proposed because conventional methods cannot take into account the flexibility encountered in approximate circuits for handling errors. However, the security vulnerabilities of approximation-aware testing techniques have not been fully considered. Approximate circuits utilize several schemes with a variety of error patterns, that open new opportunities for attackers. In this paper, the security threats in approximation-aware testing methods are investigated. To the best of the authors\u2019 knowledge, the topic on the security analysis of approximation-aware testing techniques has not been treated in the technical literature. Two malicious tampering attacks are proposed in addition to an attack that can invalidate hardware Trojan detection. The proposed two tampering attacks, namely tampering of the exact netlist (TEN) and tampering of the error metric (TEM), are evaluated with experiments. The results show that original non-acceptable faults can be mistakenly assigned as acceptable faults and that approximation-aware testing techniques can invalidate the detection of hardware Trojans in approximate circuits due to fault classification.\nIndex Terms\u2014Approximation-aware testing, approximate circuit, security vulnerabilities, hardware Trojan\nF"
        },
        {
            "heading": "1 INTRODUCTION",
            "text": "EMERGING applications, such as machine learning, pat-tern recognition, big data processing and edge computing require high computation power; however, conventional computing techniques are not effective in providing higher performance under today\u2019s power consumption constraints. To address this issue, one of the most promising research directions is given by approximate computing [1]; approximate computing, aims to tradeoff computational accuracy for energy efficient designs at an acceptable loss of the original functionality. Due to the inherent error tolerance found in many applications, approximate computing can allow acceptable errors in computation without grossly affecting the outcome. Approximate computing techniques have been widely studied for highly energy efficient integrated circuit (IC) designs, ranging from arithmetic circuits to computer architectures; however, it has been reported that approximate hardware designs can have security vulnerabilities [2].\nDuring the last stage of a chip, a post-production test is normally utilized to ensure the functionality of its design and detect physical faults caused by manufacturing process variations. Due to the error tolerance of approximate circuits, conventional testing techniques used for exact circuits may not be suitable for approximate designs,\n\u2022 Y. Dou, C. Wang and W. Liu are with College of Electronic and Information Engineering, Nanjing University of Aeronautics and Astronautics (NUAA), China, 211106. E-mail: {yuqindou,chwang,liuweiqiang}@nuaa.edu.cn \u2022 C. Gu is with the Centre for Secure Information Technologies (CSIT), Institute of Electronics, Communications & Information Technology (ECIT), Queen\u2019s University Belfast (QUB), U.K., BT3 9DT. E-mail: c.gu@qub.ac.uk \u2022 F. Lombardi is with the Department of Electrical and Computer Engineering, Northeastern University, Boston, United States. E-mail: lombardi@ece.neu.edu\nManuscript received ** **, 2020; revised ,**, **, 2020.\nbecause faults acceptable in approximate designs may be mistakenly detected as faults in exact designs [3]. As the use of approximate circuits and systems grows, designers need to be aware that conventional testing procedures cannot be directly applied to approximate circuits and may introduce vulnerabilities [2]. Therefore, both the security and testing of approximate circuits need to be further considered and investigated together. Several approximationaware testing techniques [4], [5], [6] have been proposed for approximate computing designs to date; however, the use of approximation-aware testing may also introduce security vulnerabilities. Approximate circuits utilize different schemes with a variety of error patterns, that can open new opportunities for attackers.\nIn this paper, security vulnerabilities in the testing of approximate circuits are investigated. To the best of the authors\u2019 knowledge, this topic has not been previously investigated as a security analysis of approximate-aware testing techniques from the attackers\u2019 perspective. Specifically, this paper provides the following contributions:\n\u2022 Two malicious tampering attacks, namely tampering of the exact netlist (TEN) and tampering of the error metric (TEM), are proposed. The experiments for both TEN and TEM are executed on a 16-bit approximate adder; they show that the proposed attacks can affect the classification results in approximationaware testing. \u2022 It is shown that conventional testing techniques for detecting hardware Trojans are not valid in approximate-aware testing.\nThe remainder of this paper is organized as follows. Section 2 reviews the basic principles and security threats of approximate circuits, and introduces approximate-aware\n2\ntesting. Section 3 presents two potential security threats for approximation-aware testing. Section 4 concludes the paper."
        },
        {
            "heading": "2 REVIEW AND RELATED WORKS",
            "text": ""
        },
        {
            "heading": "2.1 Security Vulnerabilities in Approximate Circuits",
            "text": "Most of the current research investigations focus on using approximate computing (e.g., approximate circuits) to improve performance with an acceptable loss of accuracy. Although approximate computing designs save power and area, security vulnerabilities have been reported [2], [7], [8], [9] due to the uncertainty and unpredictability of the intrinsic errors during an approximate computational execution. [2] has provided a comprehensive classification of the works on this topic, including the challenges and opportunities in approximate computing. It has also reviewed both existing attacks and potential security vulnerabilities in approximate computing. Numerous approximate circuits have been proposed, including approximate adders, multipliers and dividers, for use in applications, such as image recognition, data analysis and computer vision. However, the security of approximate circuit designs is rarely considered. [10] has incorporated differential metrics to improve the efficiency of Trojan detection and pointed out that the error metrics of approximate circuit are not suitable for detecting Trojans. [7] has discussed the process by which the approximate part of an approximate circuit may introduce a new channel for information leakage. [11] has proposed an attack framework for approximate logic synthesis."
        },
        {
            "heading": "2.2 Approximation-aware Testing",
            "text": "Error metrics have been introduced to adjust the approximation of computing designs to manipulate errors to achieve the expected performance [12]. When testing an approximate circuit, the error metric should be used for benchmarking purposes; hence, some faults can be tolerated under specific error constraints using a given error metric [4]. To ensure the correct operation and functionality of approximate circuits, an approximation-aware testing method [4] has been proposed to accept some error patterns that do not affect the results and increase the number of acceptable chips as final products.\nApproximation-aware testing involves a preclassification process for automatic test pattern generation (ATPG) of approximate circuits. The pre-classification process firstly divides the possible faults of the approximate circuit into two categories: acceptable faults and nonacceptable faults, and it only uses non-acceptable faults to generate test vectors for production test. [13] generates test vectors that cover all non-acceptable faults while minimizing coverage of acceptable faults. [5] has applied approximation-aware testing to achieve an expected yield gain. [14] has proposed an architecture under test (AUT) structure in which the fault classification is implemented using off-the-shelf EDA tools.\nAccording to [3], approximation-aware testing includes three phases: fault classification, test vector generation, and test set application. In this paper, the first two phases have been discussed. As shown in Fig. 1, the fault classification process divides faults into acceptable faults and nonacceptable faults. It consists of four parts: the exact circuit\nnetlist, the approximate circuit netlist, the metric calculation module, and the fault classification module. First, a fault is inserted into the approximate circuit netlist, and the difference (\u03b4) between the exact (Eout) and approximate outputs (Aout) with the fault is established. The threshold t is determined from the error metric calculation module and is utilized to determine whether the fault is a non-acceptable fault. The fault is classified and added to the non-acceptable fault list when \u03b4 is greater than the threshold t. Otherwise, the fault is placed in the acceptable fault list. After fault classification, the non-acceptable fault is used again for the approximate circuit to generate the test vector. Faults that are not affected by the error metric are detected by the approximation-aware method. Hence, it can improve the efficiency of the number of acceptable chips. However, the introduction of new testing methods potentially brings new attack opportunities. Therefore, it is necessary to investigate security vulnerabilities in the approximation-aware testing process from an attacker\u2019s perspective. This paper presents two potential security threats to the approximation-aware method in the next section."
        },
        {
            "heading": "3 SECURITY THREATS IN APPROXIMATION-AWARE TESTING",
            "text": "Currently, most of the security issues associated with approximate circuits are only treated from a designer\u2019s perspective, and there has been little security analysis of the testing process for approximate circuits."
        },
        {
            "heading": "3.1 Security Threat I: Malicious Tampering Attacks",
            "text": "Two malicious tampering attack models, namely tampering the exact netlist (TEN) and tampering the error metric (TEM), are proposed in this section, and shown in Fig. 2. The goal of tampering attacks is to degrade the assessment of the chip by affecting the test quality of approximation-aware testing. This is mainly achieved by classifying more nonacceptable as acceptable faults. Table 1 lists the key features of each model."
        },
        {
            "heading": "3.1.1 Model Description for TEN",
            "text": "In approximation-aware testing, the accurate outputs of an exact circuit netlist are compared with the approximate results, that are utilized for fault classification. The exact circuit netlist doesn\u2019t require a specific design, or a specific provider, as it only provides an accurate output, that is usually provided by a third-party vendor. It reveals a vector\n3 Fault Classification ATPG\nEout\nAout\nError Metric\nTest\nSet\nFault Coverage\nReport\nFault Coverage\nReport\nFault List\nExact\nCircuit\nApproximate\nCircuit Approximate\nCircuit\nClassification\nAcceptable\nFaults List\nNon-acceptable\nFaults List\nY\nN\n\u03b4 \u2264 t\nDifference\nCalculation\n|Eout \u2212 Aout|\nFig. 1: Approximation-aware testing flow.\nof opportunities for adversaries to attack products [15]. For example, third-party vendors can easily tamper the exact netlist. The proposed TEN attack on approximation-aware testing is an example of such attack.\nAs shown in Fig. 2, the output of the exact circuit, Eout, can be incorrect when the exact circuit is maliciously tampered, for example by forcing the lowest two bits of the output of an exact circuit to 0. The difference between the exact circuit and approximate circuit, \u03b4 = |Eout \u2212 Aout|, would be incorrect and the output of the approximate circuit is classified into the wrong fault list. For example, a nonacceptable fault, (so it should be classified in the \u2018nonacceptable fault list\u2019), may be assigned to the \u2018acceptable fault list\u2019 and the associated chips are deemed acceptable and so, entering the market."
        },
        {
            "heading": "3.1.2 Model Description for TEM",
            "text": "Fault classification requires electronic design automation (EDA) tools. During the fault classification process, an error metric is utilized to define the threshold (t) and determine if the data is acceptable or non-acceptable by comparison between the results from the exact and the approximate circuits. However, the error metric can be tampered as it is stored in an EDA tool, and there is no parameter verification in fault classification. Hence, if the parameters are tampered, the user may not be aware. Therefore, it is assumed that the attacker is the developer of the EDA tools that can deceive the user with a tampered error metric\nAs shown in Fig. 2, the difference between the outputs of the exact and approximate circuits, \u03b4, is compared with the error metric t to determine the classification of the approximate circuit,i.e., whether the approximate circuit is acceptable or non-acceptable. When the error metric t is tampered by EDA tools, it can be easily achieved. For example, the tool can automatically expand the error metric after receiving the user-defined metric (W ), and use the tampered metric (Wi) for fault classification; so some unacceptable faults may be mistakenly classified and added to the \u2019acceptable fault list\u2019"
        },
        {
            "heading": "3.1.3 Verification of the Proposed TEN attack",
            "text": "To verify the effectiveness of the proposed TEN and TEM attacks, an evaluation has been pursued using 16-bit exact and approximate adders; as proposed in [16] a low-part-\nor-adder (LOA) structure1, as an approximate adder, is utilized. The fault classification under test uses the method of AUT construction proposed in [14]. The \u2018Stuck-at-Fault\u2019 fault model is used in the experiment. The fault injection and test vector generation is executed using an ATPG tool [17]. The worst case error metric (WCE), that represents the largest arithmetic distance between the full-precise and approximate outputs, is utilized as error metric. WCE is defined as:\nWCE = max \u2200i |O(i)approx \u2212O(i)prec| (1)\nwhere O(i)approx denotes the approximate result, O (i) prec denotes the exact result. WCE calculates the largest difference between them; the testing threshold t = WCE is in the range of (8, 256), but in this experiment, t = WCE is set to 8 as an example.\nTable 2 presents the impact of the proposed TEN attack on the classification results for different approximation levels2 (i.e., error tolerance), where the lowest two bits of the exact circuit netlist are tampered to output a 0. When the 16- bit approximate adder is set to different approximate levels, 12% - 43%, the numbers of non-acceptable faults with and without the proposed TEN attacks are different.\n1. The most significant bits of the output are implemented using an exact adder design while the least significant bits are computed by OR gates.\n2. The approximate level is given by the percentage of the number of approximate modules to the total number of modules in the approximate adder\n4\nNNAF = N T NAF denotes the number of same faults with and without the TEN attack, NAF and NTNAF, respectively. The number of non-acceptable faults with attack, NTNAF, is less than the number of non-acceptable faults without attack. NNAF \u2212 NTNAF shows that the number of acceptable faults is mistakenly classified as non-acceptable faults due to the TEN attacks. During chip testing, these mistakenly classified faults affect the yield of the chip. Interestingly, some originally acceptable faults are also mistakenly classified as non-acceptable faults, their number is given by NAF \u2192 NTNAF. They reduce the number of qualified chips entering the market as some qualified chips will be tested as unqualified chips.\nFig. 3 shows the number of non-acceptable faults for different approximation levels with or without the proposed TEN attack; the number of non-acceptable faults significantly decreases when the approximation level is increased. The number of non-acceptable faults changes for each approximation level; also, the number of acceptable faults varies according to the modification of the approximation level. Moreover, the higher the approximation level, the greater the change in the number of acceptable faults. Fig. 3 reflects the effectiveness of the proposed TEN attack on the error metric for approximation-aware testing."
        },
        {
            "heading": "3.1.4 Verification of the Proposed TEM Attack",
            "text": "To evaluate the effectiveness of the proposed TEM attack, the 16-bit approximate adder of [16] is utilized. The fault classification still utilizes the method of building the AUT. The AUT uses a subtraction circuit to replace the difference calculation module for approximation-aware testing, and the error threshold (t) is stored in a register. Finally, the AUT is synthesized into a netlist and fed to [17] for fault classification. The experiment introduces the TEM attack into the design of the AUT. During the construction process, verilog is used to implement the AUT, a modified version of [18] is used to identify and tamper with the error threshold (t) from the user, and finally outputs the AUT with the TEM attack. The approximate levels for the approximate adders are set to 12%, 18%, and 25%, respectively. The error threshold t ( shown in Fig. 2) is tampered with different values, in the range of (8, 256).\nFig. 4 shows the impact of the proposed TEM attack on fault classification for various error thresholds values given by t. The larger the threshold t, more is the number of acceptable faults. As for the experiment with the TEN attack, the error threshold t is set to the value of WCE; without malicious tampering, the number of non-acceptable faults is 978 (so, the baseline). However, the number of nonacceptable faults for various error thresholds t decreases rapidly with the proposed TEM attack. When the error\n5 g\nTrigger = {00} Payload\nInput Input\nOutput A\nT\nP\nG\nNetlist\nFig. 5: ATPG detection on RTL-level Trojans.\nthreshold t is maliciously manipulated to 28, the number of non-acceptable faults is 630, so a reduction of over 34% compared with the classification result without the proposed TEM attack. Therefore, 338 non-acceptable faults have been mistakenly classified into the acceptable fault list. This significantly affects performance because the classification results follow the same trend when the approximate levels are increased."
        },
        {
            "heading": "3.2 Security Threat II: Invalidation of Hardware Trojan Detection",
            "text": ""
        },
        {
            "heading": "3.2.1 Logic Testing",
            "text": "Logic testing is an effective method for the detection of hardware Trojans. It uses an ATPG technique to generate test vectors for Trojan detection. For RTL-based Trojans, an ATPG can efficiently generate all test vectors required to activate the Trojans [19]. The detection operation of an ATPG is shown in Fig. 5. A simple combinational logic Trojan, including the trigger and payload components, is inserted into a circuit and the trigger vector is set to {0, 0} as an example. When the Trojan is inserted at RTL level, the logic of the Trojan appears in the circuit netlist, that is fed to the ATPG. A fault g is utilized for the detection of the Trojan, and inserted in the Trojan circuit. When the fault g in the Trojan is detected, the ATPG generates a unique test pattern {0, 0} for testing."
        },
        {
            "heading": "3.2.2 Approximation-aware Testing",
            "text": "As for detecting Trojans by logic testing, as long as there is a Trojan that changes the output, logic testing can generate the activation vector of the Trojan. However, this mechanism may fail in approximation-aware testing due to fault classification and thresholds.\nApproximation-aware testing requires a fault classification process, in which some faults can be classified as acceptable faults. As shown in Fig. 6, where O is the exact result, Of1 is an output with acceptable faults, Of2 is an output with unacceptable faults, and Oht is an output with hardware Trojans. Using approximation aware testing, some faults may change the output of the circuit, however, the result is still within the threshold (|O \u2212Of1|). These faults are not detected, and no test vectors for the faults are generated by the ATPG tool. However, this may provide an opportunity for an hardware Trojan attack within the range of (|O \u2212Oht|). Hardware Trojans will change the result of the circuit by flipping the output to achieve the purpose of destroying function or information leakage.\nAcceptable\n0 \ud835\udc4a\ud835\udc36\ud835\udc38 |\ud835\udc42 \u2212 \ud835\udc42\ud835\udc531| |\ud835\udc42 \u2212 \ud835\udc42\ud835\udc532|\n|\ud835\udc42 \u2212 \ud835\udc42\u210e\ud835\udc61|\nNon-acceptable\nFig. 6: Characteristics of fault classification .\na0\nb0\nK\ncin\na1\nb1\ny0\ny1\ny2\n0 1\nFig. 7: An example of a 2-bit approximate adder with a hardware Trojan .\nA LOA 2-bit approximate adder with a logic lock3 is shown in Fig. 7. The low-bit output is replaced by an OR gate, where WCE=3, and the dotted box is a tamperproof memory. This part is used to determine the final key information. The red part is an example of the Trojan, it consists of an AND gate and a multiplexer. Its purpose is to leak the information key(K), that can be achieved by observing the output of y0 (note that the logical key is only used as an example of information leakage, Trojans can also connect to other circuits and leak other critical information). We assume that the key is 0, and it then compares the test vectors generated by logic testing and approximation-aware testing. From the structure of the Trojan, when a0 = b0 = 1, the original signal is flipped (when a0 = b0 = 1, y0 = k = 1, so different from the original result y0 = 1 ). Therefore, when the test vector has a0 = b0 = 1, the Trojan is detected.\nTable 3 shows the test vectors under two test methods. By comparison, 1111, 0111, 1011 in logic testing can detect the Trojan, but there is no test vector containing a0 = b0 = 1 in approximation-aware testing, because for approximation-aware testing, even if the Trojan changes the output signal, its result does not exceed WCE=3, which is acceptable for approximation-aware Testing. Therefore,\n3. Logic lock is a technology that protects the intellectual property of a circuit by obfuscating the circuit.\n6 the approximation-aware testing loses the ability to detect Trojans. Additionally, conventional testing techniques, such as N-detect and multiple excitations of rare occurrence (MERO), increase the detection probability of a Trojan with trigger nodes having a subset of low probability nodes by using more test vectors. However, approximation-aware testing only needs a small portion of test vectors for nonacceptable faults, so it is difficult to increase the number of test vectors because it could lead to the detection of many acceptable faults. Hence, hardware Trojan detection is more difficult for approximation-aware testing techniques than conventional testing."
        },
        {
            "heading": "4 CONCLUSION",
            "text": "Approximation-aware testing is widely used to ensure the functionality of approximate designs and detect physical faults. However, the security vulnerabilities of approximation-aware testing technique have not been fully considered. In this paper, two security threats, including malicious tampering and invalidation attack, have been proposed. This is the first time that the security vulnerabilities of approximation-aware testing have been investigated to the best of the authors\u2019 knowledge. Two malicious tampering attacks, namely TEN and TEM, have been proposed. These attacks affect the exact circuit netlist and error metric, respectively. A 16-bit approximate adder with different approximate levels has been utilized to evaluate the proposed attacks. The experimental results have shown that a number of non-acceptable faults can be mistakenly classified as acceptable faults by approximation-aware testing when these attacks are applied. Interestingly, there are also some originally acceptable faults that can be mistakenly labelled as non-acceptable faults. Both TEN and TEM can result in malfunctioning chips entering the market. Finally, the TEM attack affects the fault classification of approximation-aware testing. The experimental results of the proposed TEM attack have demonstrated that the number of non-acceptable faults is significantly increased when the testing threshold is deliberately reduced. The second type of security threat has shown that when both a hardware Trojan and a fault are activated in an approximate circuit, then approximationaware testing loses the ability to detect the hardware Trojan."
        },
        {
            "heading": "ACKNOWLEDGEMENT",
            "text": "This work has been supported by the NSFC (62022041), the Fundamental Research Funds for the Central Universities (NP2022103), the Royal Society Research Grant IEC/NSFC/ 211024, the EPSRC EP/N508664, and the EPSRC Quantum Communications Hub (EP/T001011/1)."
        }
    ],
    "title": "Security and Approximation: Vulnerabilities in Approximation-aware Testing",
    "year": 2022
}