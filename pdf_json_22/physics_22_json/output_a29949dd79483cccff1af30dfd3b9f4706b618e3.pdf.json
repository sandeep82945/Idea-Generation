{
    "abstractText": "Hanwei Liu, Baochuan Wang, Ning Wang, Zhonghai Sun, Huili Yin, Haiou Li, Gang Cao, and Guoping Guo CAS Key Laboratory of Quantum Information, University of Science and Technology of China, Hefei 230026, China CAS Center for Excellence in Quantum Information and Quantum Physics, University of Science and Technology of China, Hefei 230026, China Hefei National Laboratory, University of Science and Technology of China, Hefei 230088, China Origin Quantum Computing Company, Hefei 230088, China Author to whom correspondence should be addressed: bchwang@ustc.edu.cn",
    "authors": [
        {
            "affiliations": [],
            "name": "Hanwei Liu"
        },
        {
            "affiliations": [],
            "name": "Baochuan Wang"
        },
        {
            "affiliations": [],
            "name": "Ning Wang"
        },
        {
            "affiliations": [],
            "name": "Zhonghai Sun"
        },
        {
            "affiliations": [],
            "name": "Huili Yin"
        },
        {
            "affiliations": [],
            "name": "Haiou Li"
        },
        {
            "affiliations": [],
            "name": "Gang Cao"
        },
        {
            "affiliations": [],
            "name": "Guoping Guo"
        }
    ],
    "id": "SP:ba8116ab6e08dacc1a5f58a749d557fa856106d3",
    "references": [
        {
            "authors": [
                "Harris",
                "A.M. Archibald",
                "A.H. Ribeiro",
                "F. Pedregosa",
                "P. van"
            ],
            "title": "Mulbregt, and SciPy 1.0 Contributors, Nat",
            "venue": "Methods 17,",
            "year": 2020
        }
    ],
    "sections": [
        {
            "heading": "An automated approach for consecutive tuning of quantum dot arrays",
            "text": "Hanwei Liu1,2, Baochuan Wang1,2,a), Ning Wang1,2, Zhonghai Sun1,2, Huili Yin1,2, Haiou Li1,2,3, Gang Cao1,2,3, and Guoping Guo1,2,3,4\n1CAS Key Laboratory of Quantum Information, University of Science and Technology of China, Hefei 230026, China 2CAS Center for Excellence in Quantum Information and Quantum Physics, University of Science and Technology of China, Hefei 230026, China 3Hefei National Laboratory, University of Science and Technology of China, Hefei 230088, China 4Origin Quantum Computing Company, Hefei 230088, China a)Author to whom correspondence should be addressed: bchwang@ustc.edu.cn\nRecent progress has shown that the dramatically increased number of parameters has become a\nmajor issue in tuning of multi-quantum dot devices. The complicated interactions between quantum dots and gate electrodes cause the manual tuning process to no longer be efficient. Fortunately, machine learning techniques can automate and speed up the tuning of simple quantum dot systems. In this letter, we extend the techniques to tune multi-dot devices. We propose an automated approach that combines machine learning, virtual gates and a local-to-global method to realize the consecutive tuning of quantum dot arrays by dividing them into subsystems. After optimizing voltage configurations and establishing virtual gates to control each subsystem independently, a quantum dot array can be efficiently tuned to the few-electron regime with appropriate interdot tunnel coupling strength. Our experimental results show that this approach can consecutively tune quantum dot arrays into an appropriate voltage range without human intervention and possesses broad application prospects in large-scale quantum dot devices.\nSemiconductor quantum dots (QDs) are promising candidates for quantum computation1-3. Spin\nqubits are constructed by controlling electrons (or holes) in quantum dot devices4-9, which are controlled by tens of individual dynamic gate voltages with all of them being carefully set to isolate QDs to the fewelectron regime10-17. Tuning quantum dot devices to the appropriate voltage configurations is the top priority, and even for a double-dot device, the tuning procedure is complicated, including the control of reservoirs, QDs and barriers. In addition, crosstalk between electrodes exacerbates the tuning complexity and reduces the characterization accuracy18-23, which makes it difficult to tune a multi-dot system to the few-electron regime. Optimizing manipulation procedures to eliminate human intervention and crosstalk is now the key challenge in the optimal tuning of multi-dot devices.\nIn recent years, the idea of analyzing charge stability diagrams (CSDs) using convolutional neural\nnetworks (CNNs) has been proposed, based on which many experiments have achieved success in parameter extraction and device tuning, providing a solution for tuning quantum dot devices without human intervention24-32. This kind of data-driven machine learning (ML) technique can automate the tuning process through real-time analysis of the measurement results. There have been many proposals to accomplish this task, including using computer-supported algorithmic voltage control and feature matching for tuning33-36, and some machine-learning-guide methods to reduce the number of measurements37.\nFor large-scale quantum dot devices, as the number of QDs increases, it becomes harder to manually\ndetermine the appropriate gate-voltage configurations due to the complicated crosstalk between gate\nelectrodes. To address this issue, we propose an automated approach that uses a CNN-based tuning process incorporated with optimization techniques to tune multi-dot devices. The CNNs are pretrained using the purposefully collected datasets to identify charge states from CSDs of DQDs. The optimization algorithms are designed for parametric fitting and are applied to different procedures. We extend the autotuning algorithm from a single DQD to a multi-dot array through an innovative local-to-global method, by dividing the array into multiple DQDs and using a sharing dot as a transition. Furthermore, virtual gates are introduced to help reduce crosstalk when tuning multiple quantum dots38. We develop a program based on this approach to tune a quadruple-quantum dot device, and the results exhibit good stability and accuracy, indicating its potential for application to large-scale quantum dot arrays.\nFigure 1 shows a schematic of the autotuning process and a scanning electron micrograph of a\nquadruple-dot device identical to the one used in this experiment. This accumulation-mode device is fabricated with overlapping aluminum gate electrodes39,40 electrically isolated from the Si/SiGe heterostructure by aluminum oxide. The device accommodates two single-electron transistors (SETs) acting as charge sensors41 to detect the QD charge states using modulation signals. Opposing the two SETs, nine gate electrodes are fabricated to control the tunnel rates and electrochemical potentials of QDs. Plunger gates (labeled Pi, i = 1,2,3,4) accumulate electrons into QDs and shift the electrochemical potentials; barrier gates (labeled Bi, i = 1,2,3,4,5) separate QDs and adjust the tunnel rates between dots and to the reservoirs. The CSD shown in Fig. 1 is obtained by sweeping two plunger voltages while measuring the transconductance of the nearby charge sensor, and it contains information about the number of electrons in each dot and the interdot tunnel coupling strength between QDs.\nTo automate the tuning process and eliminate the need for human intervention, we choose to use the\nML technique as an alternative. In particular, we pretrained two CNNs to identify charge states, where CNN1 is used for locating the few-electron regime, and CNN2 is used for determining the coupling between QDs. To optimize the autotuning process, it is necessary to map CSDs to charge states, so that the program can make corrections to the tuning process in time. Our goal is to find the appropriate gatevoltage configuration corresponding to the few-electron regime with medium coupling strength, under which the spin qubit system can be constructed. We first implement the autotuning algorithm in DQD, and then extend it to larger QD systems, combined with virtual gates and the local-to-global method. By dividing the multi-dot system into numbers of DQDs and applying virtual gates to ensure the independent\ncontrol of QDs, the consecutive tuning of the multi-dot system is successfully achieved.\nThe CNNs are built on AlexNet42, and the training samples are cropped from a series of large-range\nCSDs. The training datasets consist of ~26,000 samples from existing experimental datasets mixed with ~3,000 samples from numerical simulations using the constant interaction model with different parameters. Sampled data from experiments contain noise, making CNNs more stable. Simulated data contribute to avoiding overfitting as they are clean and less distorted. All cropped samples are labeled as one of the three categories for charge state identification: no dot (none), single dot (SD) or double dot (DD). For coupling evaluation, the CNN is trained using the QD samples being in the double-dot state and the outputs are converted into a scalar corresponding to the coupling strength.\nWe define the output array \ud835\udc43\ud835\udc50\u210e\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52 = [\ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc52 , \ud835\udc43\ud835\udc46\ud835\udc37 , \ud835\udc43\ud835\udc37\ud835\udc37] for charge state identification and the\noutput scalar \ud835\udc43\ud835\udc50\ud835\udc5c\ud835\udc62\ud835\udc5d\ud835\udc59\ud835\udc56\ud835\udc5b\ud835\udc54 = 0 \u22c5 \ud835\udc43\ud835\udc64\ud835\udc52\ud835\udc4e\ud835\udc58 + 0.5 \u22c5 \ud835\udc43\ud835\udc5a\ud835\udc52\ud835\udc51ium + 1 \u22c5 \ud835\udc43\ud835\udc60\ud835\udc61\ud835\udc5f\ud835\udc5c\ud835\udc5b\ud835\udc54 for coupling evaluation. Here, \ud835\udc43 represents the probability given by CNN2. The loss function is defined by the cross-entropy of probabilities from assigned labels and CNN identifications, indicating the difference in probability distributions: loss = \u2212 \u2211 \ud835\udc43\ud835\udc61\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52\ud835\udc61(\ud835\udc56) \u22c5 ln[\ud835\udc43\ud835\udc5c\ud835\udc62\ud835\udc61(\ud835\udc56)]\ud835\udc56 . The subscript \ud835\udc56 indicates the ith element of the probability array, \ud835\udc43\ud835\udc61\ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc52\ud835\udc61 is the assigned probability of the corresponding dataset given by humans and \ud835\udc43\ud835\udc5c\ud835\udc62\ud835\udc61 is the output probability to the same dataset given by the CNN. The loss function is minimized using the Adam optimizer43 implemented in Python44. The schematic application of CNNs is illustrated in Fig. 1.\nThe CNN-based autotuning algorithm focuses on two key objectives: identifying few-electron\nregimes and tuning the coupling strength between QDs, which are related to voltages on the plunger and barrier gates respectively in our device architecture.\nTo make the autotuning algorithm efficient, we put restrictions on the voltage range within which\nthe program can reach. The voltage range is expected to be set carefully: a small range contains little information while a large range slows the scan. In this experiment, the voltage range for each gate is determined by extracting the saturation and cutoff points from their pinch-off curves (see the supplementary material). In addition, we set a threshold for CNN identification to exclude abnormal results, making the tuning process less likely to be interrupted by external factors, especially noise. The size of the CSD obtained in the experiment is approximately 300 mV \u00d7 300 mV, and the diagram is analyzed by CNN1 to determine where few-electron regimes may exist. Note that the diagram spans a voltage range that is too wide, making it infeasible for the CNN to directly analyze the full diagram. We use a sliding window to traverse the full diagram and take a small piece out each time so that only a small subpart of the diagram is analyzed at a time.\nOnce the few-electron regime is confirmed, the program proceeds to evaluate the interdot tunnel\ncoupling in the found few-electron regime. The quantified coupling given by CNN2 is normalized but has no physical meaning, the optimal value of which should be in the range of 0.3~0.7 (corresponding to the training samples containing anti-crossing regions where the interdot tunnel coupling strength is approximately 9-16 GHz). Values over 0.7 indicate over-strong coupling, and the program then decreases the voltage of the corresponding barrier gate and vice versa.\nWe select QD1 and QD2 from our quadruple-dot device to demonstrate the autotuning algorithm,\nand the results are illustrated in Fig. 2. The device is initialized manually, and voltage ranges and thresholds are set in advance. After confirming the presence of an electron transition, the program starts to search for the optimal voltage configuration that satisfies these two objectives.\nIn the stage of locating the few-electron regime, we calibrate a sliding window of size\n45 mV \u00d7 45 mV (21 px) to traverse the entire diagram with 8 mV (4 px) steps and CNN1 returns the\npossible charge state of each area (Fig. 2a and 2b). All the areas that are possibly in the double-dot state are selected as candidates so that the algorithm can select the one with minimum voltages as the fewelectron regime. As shown in Fig. 2b, the positions where the charge transition lines intersect have higher probability values. For areas that contain only a single or several parallel transition lines or only the background noise, the corresponding returned probability values are lower than 70%, and the program only reserves areas with a probability higher than 80% (see the supplementary material).\nFigures 2c and 2d show the process of tuning the interdot coupling of the found few-electron regime,\nand the red boxed area is used for identifying coupling strength. The change of barrier voltage shifts the charge transition lines on the CSD, and we dynamically adjust the sweep window with a change rate of 0.18\u0394\ud835\udc49B (the change rate depends on the device architecture) to cancel the shift of the anti-crossing. The coupling strength becomes stronger as the barrier gate voltage increases, and theoretically the output value given by CNN2 will also increase. Eight iterations are performed in the experiments and the output value gradually increases (Fig. 2d). The iteration stops due to the appearance of a qualified value of 0.37.\nThe autotuning success in the DQD system means it can be extended to large-scale QD systems.\nHowever, directly transplanting the autotuning algorithm to QD arrays is not feasible since the increasing number of QDs and gate electrodes creates more complex crosstalk, making it difficult for the tuned QDs to remain stable. To ensure that the tuning process does not affect the tuned QDs, a local-to-global method and a virtual gate technique are applied in our program. We demonstrate that the program using the CNNbased autotuning algorithm incorporated with the local-to-global method and virtual gates completes\nconsecutive tuning of a quadruple-dot device without any human intervention.\nThere are two main issues to consider in realizing automated tuning in multi-dot systems. One is to\neliminate crosstalk between gate electrodes, and the other is to analyze CSDs obtained in highdimensional gate-voltage spaces. To solve such problems, we propose the local-to-global method as a possible solution, the main idea of which is to divide multiple QDs into basic units, that is, the DQDs. Since the autotuning algorithm works well in tuning DQDs, the only concern is nondestructive tuning of the system after additional QDs are added.\nThe virtual gate technique can eliminate the crosstalk between gate electrodes and makes it possible\nto tune each QD independently, with which nondestructive tuning can be realized (Fig. 3a and 3b). The slopes of the charge transition lines are used to compute the cross-capacitance matrix \ud835\udc6across 38,45,46, with which the correspondence between virtual and physical gates can be established. The cross-capacitance causes physical gates to influence not only the electrochemical potential of corresponding QDs but also those of nearby QDs. A change in a virtual gate voltage corresponds to a linear combination of changes in several physical gate voltages, which can be described as\n( \u0394\ud835\udc49U1 \u0394\ud835\udc49U2 ) = ( 1 \ud835\udc5012 \ud835\udc5021 1 ) ( \u0394\ud835\udc49P1 \u0394\ud835\udc49P2 ) , (1)\nwhere \u0394\ud835\udc49U\ud835\udc56 and \u0394\ud835\udc49P\ud835\udc56 are the virtual and physical gate voltages respectively, and the cross-capacitance matrix elements \ud835\udc50\ud835\udc56\ud835\udc57 can be extracted from the slopes of charge transition lines on CSDs. Note that the coupling between non-neighboring QDs is too weak to have an impact; therefore, tuning a series of DQDs formed by two neighboring QDs is sufficient.\nFigure 3c shows a simple schematic of the local-to-global method. All tuned QDs are put into the\nidle state, that is, the plunger gate voltages are set to the few-electron regime, and barrier gates on both sides will be fixed in the tuned voltage in the subsequent tuning process. In experiments, it is only necessary to adjust voltages according to the electrode stacking order, which greatly simplifies the operation.\nWe demonstrate autotuning a linear quadruple-quantum dot array, and each pair of QDs in the array\ncan be used as a fundamental tuning unit, to which the autotuning algorithm for DQDs can be applied. After tuning a DQD system, the virtual gates need to be updated based on the tuning results before adding a new QD. The cycle of \u201cDQDs tuning \u2013 virtual gates updating \u2013 new dot adding\u201d stops after the last QD\nin the array has been tuned.\nThe QD array in this experiment is tuned in the order of QD1 to QD4, that is, starting with QD1 -\n1\n21\n31 2\n(a) (b) (c)\nPL (mV)\nP R\n( m\nV )\nUL (mV)\nU R\n( m\nV )\nPL PRB1 B2 B3 UL URB1 B2 B3\nU2 U3B2 B3 B4U1B1 P4 B5\nL R L R 32 4\n43\n4\nInitialized barrier\nTuned barrier\nPhysical gate\nVirtual gate (a .u\n.)\n(a .u\n.)\nFig. 3 Local-to-global method schematic representation. (a) and (b) show the comparison before and after applying virtual gates. (c) The local-to-global method. Gray dots represent QDs waiting to be tuned, blue dots are the DQDs being tuned, and green dots are QDs with virtual gates that have been established.\nQD2, followed by QD2 - QD3 and QD3 - QD4. Two plunger gates and one barrier gate are involved to tune each QD pair. Note that the shared dot in neighboring pairs, QD2 in QD1 - QD2 and QD2 - QD3 for example, is paired with the added dot as a new DQD system. Virtual gates ensure that the tuned dots are not affected too much when adding new QDs.\nIn our cases, three DQDs are tuned by the program in sequence, making QD2 and QD3 the shared\ndots. Therefore, these two dots are tuned twice in two loops. To prevent conflicts between two different voltage configurations, all parameters are extracted from the newest results. This criterion relies on the fact that new QDs have much stronger effects on each other than tuned QDs since no virtual gates are applied to new dots. As a result, the QD1 parameters are determined in the first loop, QD2 in the second, QD3 and QD4 in the third.\nFigure 4 shows the autotuning results of the quadruple quantum dot array and compares the charge\nstates of few-electron regimes before and after adding new QDs. The boxed areas in Fig. 4a, 4b are the few-electron regimes, while the boxed area in 4c corresponds to the second-to-last transition line of QD4. The CSDs of few-electron regimes measured using virtual gates are shown in Fig. 4d, 4e and 4f. The QDs marked in blue and green are controlled by physical and virtual gates, respectively. Adding and tuning new QDs slightly influences the interdot tunnel coupling strength and shifts the charge transition lines of the tuned QDs, while the shape of the anti-crossing remains almost unchanged and cannot be identified by the CNN. Fig. 4g shows the corresponding identified coupling value during the tuning of barrier gate voltages.\nThe program efficiency is reflected in the time consumption. We evaluate the time usage in different\nstages of the entire autotuning process, and the scan time is excluded because it mainly depends on the measurement method. The CNN identification is efficient, and it takes milliseconds to return the identified results of each input diagram; that is, it needs approximately 5 seconds to traverse the entire diagram and obtain Fig. 2b that contains 30 \u00d7 33 = 990 data points. The number of iterations of tuning\nbarrier gate voltages is determined by the initial state of a DQD system, and each iteration takes 5~10 seconds to change the barrier gate voltage and update the voltage range of the sweep window.\nFurthermore, the cross-capacitance matrix is updated by a computer using the Hough line\ntransform47 (see the supplementary material), which gives\n\ud835\udc6across = [\n1 0.211 0 0 0.484 1 0.307 0\n0 0.153 1 0.198 0 0 0.472 1\n] . (2)\nEvery time a new QD is added, the matrix is updated to include the new dot. We simplify the matrix by ignoring barrier gates, so that only the elements corresponding to plunger gates need to be updated.\nIn conclusion, our experimental results verify that the automated approach using CNNs, virtual\ngates and the local-to-global method can consecutively autotune multi-dot systems. CNNs play an important role in identifying charge states, upon which the DQDs can be well-tuned by the autotuning algorithm. Furthermore, the local-to-global method helps extend the tuning capability to multi-dot systems. Despite the fact that the automated tuning approach cannot determine the exact inter-dot tunnel coupling strength, which is vital for high fidelity spin qubit gates and needs to be done through specific experiments such as photon-assisted-tunneling48 (PAT), it still has great potential for eliminating human intervention when tuning large-scale quantum dot arrays."
        },
        {
            "heading": "SUPPLEMENTARY MATERIAL",
            "text": "See the supplementary material for details: Figs. S1 and S5 shows the parameter extraction from\npinch-off curves and CSDs, Figs. S2, S3 and S4 show the detailed results of the tuning process."
        },
        {
            "heading": "ACKNOWLEDGMENTS",
            "text": "This work was supported by the Innovation Program for Quantum Science and Technology (Grant\nNo. 2021ZD0302300), and the National Natural Science Foundation of China (Grant Nos. 12034018, 12074368, 92165207, and 61922074). This work was partially carried out at the University of Science and Technology of China Center for Micro and Nanoscale Research and Fabrication."
        },
        {
            "heading": "4793 (2022).",
            "text": "48W. G. van der Wiel, S. De Franceschi, J. M. Elzerman, T. Fujisawa, S. Tarucha, and L. P. Kouwenhoven, Rev. Mod. Phy. 75, 1\n(2002)."
        }
    ],
    "title": "An automated approach for consecutive tuning of quantum dot arrays",
    "year": 2022
}