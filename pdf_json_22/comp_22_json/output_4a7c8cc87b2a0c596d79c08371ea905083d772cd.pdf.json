{
    "abstractText": "Metaverse applications that incorporate Mobile Augmented Reality (MAR) provide mixed and immersive experiences by amalgamating the virtual with the physical world. Notably, due to their multi-modality such applications are demanding in terms of energy consumption, computing and caching resources to efficiently support foreground interactions of participating users and rich background content. In this paper, the metaverse service is decomposed and anchored at suitable edge caching/computing nodes in 5G and beyond networks to enable efficient processing of background metaverse region models embedded with target AROs. To achieve that, a joint optimization problem is proposed, which explicitly considers the user physical mobility, service decomposition, and the balance between service delay, user perception quality and power consumption. A wide set of numerical investigations reveal that, the proposed scheme could provide optimal decision making and outperform other nominal baseline schemes which are oblivious of user mobility as well as do not consider service decomposition.",
    "authors": [
        {
            "affiliations": [],
            "name": "Zhaohui Huang"
        },
        {
            "affiliations": [],
            "name": "Vasilis Friderikos"
        }
    ],
    "id": "SP:ed9a4d746fa6030e6872f3092af0ec86c350805f",
    "references": [
        {
            "authors": [
                "M. Xu",
                "D. Niyato",
                "J. Kang",
                "Z. Xiong",
                "C. Miao",
                "D.I. Kim"
            ],
            "title": "Wireless edge-empowered metaverse: A learning-based incentive mechanism for virtual reality",
            "venue": "arXiv preprint arXiv:2111.03776, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "R. Dong",
                "C. She",
                "W. Hardjawana",
                "Y. Li",
                "B. Vucetic"
            ],
            "title": "Deep learning for hybrid 5g services in mobile edge computing systems: Learn from a digital twin",
            "venue": "IEEE Transactions on Wireless Communications, vol. 18, no. 10, pp. 4692\u20134707, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "M. Xu",
                "W.C. Ng",
                "W.Y.B. Lim",
                "J. Kang",
                "Z. Xiong",
                "D. Niyato",
                "Q. Yang",
                "X.S. Shen",
                "C. Miao"
            ],
            "title": "A full dive into realizing the edgeenabled metaverse: Visions, enabling technologies, and challenges",
            "venue": "arXiv preprint arXiv:2203.05471, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "L. Li",
                "X. Qiao",
                "Q. Lu",
                "P. Ren",
                "R. Lin"
            ],
            "title": "Rendering optimization for mobile web 3d based on animation data separation and on-demand loading",
            "venue": "IEEE Access, vol. 8, pp. 88 474\u201388 486, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "F. Guo",
                "F.R. Yu",
                "H. Zhang",
                "H. Ji",
                "V.C. Leung",
                "X. Li"
            ],
            "title": "An adaptive wireless virtual reality framework in future wireless networks: A distributed learning approach",
            "venue": "IEEE Transactions on Vehicular Technology, vol. 69, no. 8, pp. 8514\u20138528, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "H. Kato",
                "T. Kobayashi",
                "M. Sugano",
                "S. Naito"
            ],
            "title": "Split rendering of the transparent channel for cloud ar",
            "venue": "2021 IEEE 23rd International Workshop on Multimedia Signal Processing. IEEE, 2021, pp. 1\u20136.",
            "year": 2021
        },
        {
            "authors": [
                "X. Yang",
                "Z. Chen",
                "K. Li",
                "Y. Sun",
                "N. Liu",
                "W. Xie",
                "Y. Zhao"
            ],
            "title": "Communication-constrained mobile edge computing systems for wireless virtual reality: Scheduling and tradeoff",
            "venue": "IEEE Access, vol. 6, pp. 16 665\u201316 677, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Z. Huang",
                "V. Friderikos"
            ],
            "title": "Proactive edge cloud optimization for mobile augmented reality applications",
            "venue": "2021 IEEE Wireless Communications and Networking Conference. IEEE, 2021, pp. 1\u20136.",
            "year": 2021
        },
        {
            "authors": [
                "A. Zhang",
                "J. Jacobs",
                "M. Sra",
                "T. H\u00f6llerer"
            ],
            "title": "Multi-view ar streams for interactive 3d remote teaching",
            "venue": "Proceedings of the 27th ACM Symposium on Virtual Reality Software and Technology, 2021, pp. 1\u20133.",
            "year": 2021
        },
        {
            "authors": [
                "V. Cozzolino",
                "L. Tonetto",
                "N. Mohan",
                "A.Y. Ding",
                "J. Ott"
            ],
            "title": "Nimbus: Towards latency-energy efficient task offloading for ar services",
            "venue": "IEEE Transactions on Cloud Computing, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "G. Niu",
                "Q. Chen"
            ],
            "title": "Learning an video frame-based face detection system for security fields",
            "venue": "Journal of Visual Communication and Image Representation, vol. 55, pp. 457\u2013463, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Z. Wang",
                "A.C. Bovik",
                "H.R. Sheikh",
                "E.P. Simoncelli"
            ],
            "title": "Image quality assessment: from error visibility to structural similarity",
            "venue": "IEEE transactions on image processing, vol. 13, no. 4, pp. 600\u2013612, 2004.",
            "year": 2004
        },
        {
            "authors": [
                "\u00d6.F. Gemici",
                "\u0130. H\u00f6kelek",
                "H.A. \u00c7\u0131rpan"
            ],
            "title": "Modeling queuing delay of 5g nr with noma under sinr outage constraint",
            "venue": "IEEE Transactions on Vehicular Technology, vol. 70, no. 3, pp. 2389\u20132403, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "W. Zhang",
                "Y. Wen",
                "K. Guan",
                "D. Kilper",
                "H. Luo",
                "D.O. Wu"
            ],
            "title": "Energyoptimal mobile cloud computing under stochastic wireless channel",
            "venue": "IEEE Transactions on Wireless Communications, vol. 12, no. 9, pp. 4569\u20134581, 2013.",
            "year": 2013
        },
        {
            "authors": [
                "A.P. Miettinen",
                "J.K. Nurminen"
            ],
            "title": "Energy efficiency of mobile clients in cloud computing",
            "venue": "2nd USENIX Workshop on Hot Topics in Cloud Computing (HotCloud 10), 2010.",
            "year": 2010
        },
        {
            "authors": [
                "Q. Liu",
                "S. Huang",
                "J. Opadere",
                "T. Han"
            ],
            "title": "An edge network orchestrator for mobile augmented reality",
            "venue": "IEEE INFOCOM, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "P.K. Korrai",
                "E. Lagunas",
                "S.K. Sharma",
                "S. Chatzinotas",
                "B. Ottersten"
            ],
            "title": "Slicing based resource allocation for multiplexing of embb and urllc services in 5g wireless networks",
            "venue": "2019 IEEE 24th International Workshop on Computer Aided Modeling and Design of Communication Links and Networks (CAMAD). IEEE, 2019, pp. 1\u20135.",
            "year": 2019
        },
        {
            "authors": [
                "S. Li",
                "P. Lin",
                "J. Song",
                "Q. Song"
            ],
            "title": "Computing-assisted task offloading and resource allocation for wireless vr systems",
            "venue": "2020 IEEE 6th International Conference on Computer and Communications (ICCC). IEEE, 2020, pp. 368\u2013372.",
            "year": 2020
        },
        {
            "authors": [
                "K. Tocz\u00e9",
                "S. Nadjm-Tehrani"
            ],
            "title": "Orch: Distributed orchestration framework using mobile edge devices",
            "venue": "2019 IEEE 3rd International Conference on Fog and Edge Computing. IEEE, 2019, pp. 1\u201310.",
            "year": 2019
        },
        {
            "authors": [
                "C. Sonmez",
                "A. Ozgovde",
                "C. Ersoy"
            ],
            "title": "Fuzzy workload orchestration for edge computing",
            "venue": "IEEE Transactions on Network and Service Management, vol. 16, no. 2, pp. 769\u2013782, 2019.",
            "year": 2019
        }
    ],
    "sections": [
        {
            "text": "Index Terms\u2014Metaverse, 5G, Augmented Reality, Mobility\nI. INTRODUCTION\nIN metaverse the digital and physical worlds are convergingby utilizing mobile augmented/virtual reality technologies, edge computing, increased data rate support in 5G and beyond networks, digital twin and the proliferation of high end devices such as head-mounted displays [1] [2]. Users equipped with mobile augmented reality (MAR) devices can upload and analyze their environment through augmented reality customization to achieve appropriate augmented reality objects (AROs) and access the metaverse utilizing 5G mobile edge caching/computing enabled networks [3]. In this emerging ecosystem, rendering 3-dimentional (3D) AROs with the background virtual environment and updating it in the metaverse is demanding in terms of energy consumption as well as in terms of caching and computing resources [3] [4]. Hence, in addition to the fact that such applications require low latency they are also energy sensitive and face challenges in ensuring user quality of experience and providing reliable interactions within the metaverse [1] [3].\nGenerally speaking, a metaverse scene will in essence consisted by a background view as well as many objects in foreground interactions. The background view at a defined amalgamated virtual and physical location can be deemed as static or slowly changing [3] [5]. A nominal background scene is the 3D model of the metaverse, a presentation of a related background virtual environment based on a certain user viewport [5] [6]. Even though this background does not change frequently its size can reach tens of megabytes and the corresponding complexity of rendering related functionalities measured by computation load is also significant (e.g., 10 CPU cycles/bit) [5] [7]. On the other hand, objects related to foreground interactions (such as for example user avatars) that\nare embedded in the metaverse scene change much more frequently. However, those are significantly less complex than the background scene (e.g., 4 CPU cycles/bit) [4] [5]. But, even though those objects are less complex their frequent changes require rendering them in a timely manner so that to avoid a considerable quality of experience degradation. Thus, in this paper, rendering for both foreground and background are deployed at at edge clouds (ECs) rather than only at terminals to make a full use of advanced caching and computing resources. Noticing that uploaded information are focused in foreground interactions while background content checking consumes not only computing resources but also lots of local cache to match and integrate AROs and related models of metaverse. The metaverse application could also be decomposed into computational and storage intensive functions which serve as a chain for better assignment and resource allocation [8].\nThe general work flow of a metaverse AR application supported by ECs is shown in Fig. (1). After triggered by certain behavior with foreground interactions [9], background contents like for example pre-cached 3D models and AROs are searched in the EC cache. If not found, the request is redirected to the metaverse region stored in a cloud deeper in the network. Finally, according to user\u2019s physical mobility and virtual orientation extracted from foreground interactions, the matched AROs and model are integrated into the frames and streamed to the user [3] [5]. At the same time, updated information is sent to the metaverse region for synchronization so that the user could be aware of changes caused by other participants if they share the same metaverse region. Hereafter, we assume a nominal frame rate as 15 frames/second and the rendering happens at every other frame (1\u030333.2ms interval) [10] [11].\nFig. (2) further reveals the difference between cases that consider the user mobility with service decomposition or not related to rendering requirements in the metaverse application. Clearly, when neglecting user mobility and service\nar X\niv :2\n20 9.\n08 89\n9v 1\n[ cs\n.N I]\n1 9\nSe p\n20 22\ndecomposition as shown by case (a), models, target AROs and metaverse functions are all cached close to the user\u2019s initial location. However, when user mobility and service decomposition is enabled, as shown in case (b), then service delivery becomes more flexible and efficient in terms of assigning requests and allocating network resources. Observe that in case (a), although user A is only one (wireless) hop away from the supporting EC, it requires 3 hops (one wireless and two wireline in the access network) after the mobility event. However, when mobility and EC resources are taken into consideration, the same user A in case (b) could enjoy a better maximum delay by facing 2 hops regardless of changing the point of attachment. Hence, in a high mobility scenario, it might not always be ideal to allocate requests and services as close as possible to the user\u2019s initial location. The AR contents in the model might be similar in terms of the viewport of different users. Hence, participating users should be aware of each other\u2019s updates and could share rendering functions to save on consumed resources. In this paper, we apply Structural Similarity (SSIM) proposed by [12] for user perception experience. It is a widely accepted method that measures user perception quality of a image by comparing to its original version [12]. Caching more models and AROs also causes more processing and transmission delay with energy consumption [1] [3]. Hence, the the joint optimization has to accept some potential loss due to constraints of computing and storage resources. In this paper, by considering explicitly the user mobility, service decomposition and models of metaverse regions with embedded AROs, the proposed optimization framework seeks a balance between user perception quality, power consumption and service delay."
        },
        {
            "heading": "II. SYSTEM MODEL",
            "text": "With the set M = {1, 2, ...,M} we express the available Edge Clouds (ECs) in the wireless network. With r \u2208 R, we denote the corresponding MAR service requests in the metaverse region that are generated by mobile users that are equipped with MAR devices (each user makes a single request). The starting location of the request r is the access router where this user is initially connected to; this initial location is defined as f(r). A user moves to a destination\nk \u2208 K in the case of a mobility event (i.e., changing the point of attachment). In this paper, and without loss of generality, only adjacent access routers can be regarded as allowable destinations in the mobility event. A series of metaverse regions are set on ECs to interact with users. The corresponding metaverse region serving the user can be found through functions A(f(r)), A(k). As explained earlier, each metaverse region is pre-deployed on an server close to the mobile network and its distance to an EC is also predefined. In this paper, As already mentioned in previous sections, a set of AROs is assumed to be embedded across the different non real time view streams. To this end, we first define a set N = {1, 2, ..., N} to represent the set of available AROs. The model available to each user has multiple rendering and we define them as a set Sr = {1, 2, ..., S}. Then, the decision variable for proactively caching a model s at the EC j \u2208 M is denoted as psj . The subset Lrs represents the target AROs required by the user r in related model s \u2208 Sr and the size of each target ARO l \u2208 Lrs is denoted as Ol. Finally, the decision variable for proactively caching an ARO required by a request r is denoted as hsrl. More specifically, psj and h s rl can be written as follows,\npj = { 1, if rendering the related model s at node j, 0, otherwise. (1)\nhsrl =  1, if ARO l required by request r embedded\nin the model s is cached, 0, otherwise.\n(2) In addition to the above, the following constraints should also be satisfied,\u2211\nr\u2208R hsrl 6 1, \u2200j \u2208M, \u2200s \u2208 Sr, \u2200l \u2208 Lrs (3)\u2211 s\u2208Sr \u2211 l\u2208Lrs\nhsrl > 1, \u2200r \u2208 R (4)\u2211 j\u2208M psj > h s rl, \u2200r \u2208 R, \u2200s \u2208 Sr, \u2200l \u2208 Lrs (5)\nhsrl 6 h s rl \u2211 j\u2208M psj , \u2200r \u2208 R, \u2200s \u2208 Sr, \u2200l \u2208 Lrs (6)\nConstraints in (3) ensure that each ARO can be cached at most once in a related model. Constraints in (4) ensure that at least one model and an ARO is required to compose a valid request. Constraints in (5) guarantee that the ARO must be allocated to a model first before deciding to proactively cache it and constraints in (6) certify that any ARO planned to be stored in this model should not be cached when deciding not to proactively cache the model at all. Constraints (5) and (6) together ensure that either the model or ARO cannot be handled alone during the formulation.\nDenote Bj as the bandwidth allocated to the user\u2019s resource block and \u03b3rj as the Signal to Interference plus Noise Ratio (SINR) of the user r at the node j. Denote P tranrj as the current\ntransmit power of the user r at the node j, Pi as the base station power, Hrj as the channel gain, Nj as the noise and a as the path loss exponent and drj as the Euclidean Distance between the user and the access router in the cell. Furthermore, a nominal Rayleigh fading channel is utilized to model the channel between a 5G access point and the users [13]. In this case, the channel gain Hrj can be written as Hrj = \u221a 1 2 (t+ t \u2032 J), where J2 = \u22121, t and t\u2032 are random numbers following the standard normal distribution [14]. Then, the SINR \u03b3rj in a 5G wireless network can be written as follows [14],\n\u03b3rj = P tranrj H 2 rjd \u2212a rj Nj + \u2211 i\u2208M,i6=j PiH 2 rid \u2212a ri\n(7)\nDenote the data rate as g \u2208 G and the decision variable erg to decide whether to select the data rate g for user r,\nerg = { 1, if data rate g is selected for user r, 0, otherwise.\n(8)\nNoticing that the chosen data rate can also be written in Shannon Formula as Bj log2(1 + \u03b3rj). After choosing a data rate as gerg for the user, the transmit power P tranrj can be written as follows,\nP tranrj = Nj +\n\u2211 i\u2208M,i6=j PiH 2 rid \u2212a ri\nH2rjd \u2212a rj\n(2 gerg Bj \u2212 1) (9)\nNoticing that 2 gerg Bj = (1\u2212 erg) + erg2 g Bj and should satisfy the following constraint to ensure that a user could only select one data rate, \u2211\ng\u2208G erg = 1,\u2200r \u2208 R (10)\nIn a similar manner with [8], computational intensive and storage intensive MAR functionalities are defined as \u03b7 and %, respectively. In addition, the corresponding execution location for a functionality is denoted as xri and yri respectively [8]. In a mobility event, uf(r)k \u2208 [0, 1] is defined to represent the probability of a user moving from the initial location to an allowable destination, where adjacent servers {f(r), k} \u2282M. Such probabilities can also be learned from historical data, which are readily available from mobile operators. The size of foreground interactions is denoted as F fore\u03b7r , the size of pointers inside used for matching AROs is denoted as F%r and the size of the related model s used for background content checking is F backsr [8] [5]. During the matching and background content checking process, the target AROs or background content are possibly not pre-cached in the local cache and such case is known as a \u201dcache miss\u201d (otherwise there is a \u201dcache hit\u201d). Whenever confronted with a cache miss, the request is redirected to the metaverse region stored in a core cloud deeper in the network and suffers from an extra latency D as penalty. After rendering, the model and target AROs are integrated into a compressed final frame for transmission and its compressed size is denoted as F ressr .\nAt first, a joint optimization scheme considering the balance between the service delay, the perception quality and the power\nconsumption is designed to track the Metaverse AR requests in the EC supported network. The cache hit/miss is captured by the decision variable zrj and can be written as follows,\nzrj = 1, if \u2211 l\u2208Lrs \u2211 s\u2208Sr psjh s rl > Lrs,\n0, otherwise. (11)\nIn [8], constraints (10b) and (10d) reveal the cache limitation and the cache hit/miss relation. In this paper, they should be rewritten as follows,\u2211\nr\u2208R \u2211 l\u2208Lrs \u2211 s\u2208Sr\npsjh s rlOl \u2264 \u0398j ,\u2200j \u2208M (12)\u2211\nl\u2208N \u2211 s\u2208Sr hsrl + \u2264 Lrs + U(1\u2212 qrj) \u2200j \u2208M, r \u2208 R (13)\nwhere \u0398j is the cache capacity at node j. In (13), to rewrite the either-or constraint that \u2211 l\u2208N \u2211 s\u2208Sr h s rl < Lrs or zrj = 1, we define as a small tolerance value, U as a large arbitrary number and qrj as a new decision variable satisfying 1 \u2212 qrj = zrj [8]. Requiring more pre-cached models and embedded AROs in a request naturally lead to an extra burden for the matching function. More specifically, the processing delay of the computational intensive function can be written as,\nVrj = \u03c9\u03b7F\nfore \u03b7r\nf jV (14)\nSimilarly, the processing delay of the matching and background content checking function can be written as,\nWrj = \u03c9%(F%r +\n\u2211 l\u2208Lrs \u2211 s\u2208Sr psjh s rlOl + \u2211 s\u2208Sr F back sr psj)\nf jV (15)\nwhere \u03c9\u03b7 and \u03c9% (cycles/bit) represent the computation load of foreground interaction and background matching, f jV is the virtual CPU frequency (cycles/sec), F%r are the size of uploaded pointers of AROs in foreground interactions [8] [5]. When finding the target AROs during matching, their pointers included by foreground interactions should also be transferred to the metaverse for updating. Finally, the final frame integrating the model and target AROs of is transmitted back to the user. Hence, the wired transmission delay for each user after processed by functions can be written as follows,\u2211\ns\u2208Sr \u2211 j\u2208M (CjA(f(r)) + CjA(k))psj+\n(CA(f(r))f(r) + \u2211 k\u2208K CA(k)kuf(r)k) (16)\nwhere uf(r)k is the moving probability from the initial location f(r) to a potential destination k. In previous expressions, the product of decision variables psjhsrl and psjyrj exists and creates a non-linearity. In addition, note that when executing the matching function at the location j (Wrjyrj), the product of decision variables psjhsrlyrj also appears. To linearize the expressions above, so that to utilize linear integer programming solution methodologies, new auxiliary decision variables\nare brought in. A new decision variable \u03b1rsj is introduced as \u03b1rsj = psjyrj and the constraints should be added as follows,\n\u03b1rsj 6 psj , \u03b1rsj 6 yrj , \u03b1rsj > psj + yrj \u2212 1 (17)\nSimilarly, a new decision variable \u03b2rslj is introduced as \u03b2rslj = psjh s rl and the constraints should be added as follows,\n\u03b2rslj 6 psj , \u03b2rslj 6 h s rl, \u03b2rslj > psj + h s rl \u2212 1 (18)\nAlso, note that psj is a binary decision variable and causes psj = p 2 sj . Thus, we have psjh s rlyrj = \u03b1rsj\u03b2rslj . A new decision variable \u03bbrslj is introduced as \u03bbrslj = \u03b1rsj\u03b2rslj and the following constraints should be added as follows,\n\u03bbrslj 6 \u03b1rsj , \u03bbrslj 6 \u03b2rslj , \u03bbrslj > \u03b1rsj + \u03b2rslj \u2212 1 (19)\nHence, the product Wrjyrj can be rewritten as follows, \u03c9%(F%ryrj + \u2211 l\u2208Lrs \u2211 s\u2208Sr \u03bbrsljOl + \u2211 s\u2208Sr F back sr \u03b1rsj)\nf jV (20)\nBy checking whether users share the same metaverse region by A(f(t)) = A(f(r)), {t, r} \u2282 R, we can ensure the user could also view other updates happening in the same metaverse region. Based on the previous modelling of wireless channel, the wireless transmission delay in a mobility event can be written as follows,\u2211 r\u2208R F fore\u03b7r + \u2211 t\u2208R,A(f(t))=A(f(r)) \u2211 s\u2208Sr psjF res st gerg +\n\u2211 r\u2208R \u2211 k\u2208K uf(r)k F fore\u03b7r +\n\u2211 t\u2208R,A(t)=A(k) \u2211 s\u2208Sr psjF res st\ngerg (21)\nNoticing that with the aforementioned definition of erg and related constraint (10), 1erg can be replaced by erg for linearization. By introducing a new decision variable \u03c6rlsg with following constraints,\n\u03c6rsg 6 erg, \u03c6rsg 6 psj , \u03c6rsg > erg + psj \u2212 1 (22)\nThus, the previous formula (21) can be updated as follows, 1\ng \u2211 r\u2208R (1 + \u2211 k\u2208K\nuf(r)k)(F fore \u03b7r erg+\u2211\nt\u2208R,A(f(t))=A(f(r)) \u2211 s\u2208Sr \u03c6rsgF res st )\n(23)\nBased on the above derivations and inline with [8], the overall latency can be written as follows,\nL =(23) + \u2211 r\u2208R \u2211 i\u2208M\n(Cf(r)i + Vri)xri+\u2211 r\u2208R \u2211 i\u2208M \u2211 j\u2208M ((20) + Cij\u03berij + CA(f(r))f(r) + \u03c8rjD)+ \u2211 s\u2208Sr \u2211 j\u2208M\n(CjA(f(r)) + CjA(k))psj+\u2211 r\u2208R \u2211 k\u2208K (CA(k)k + Ckixri)uf(r)k\n(24)\nwhere Vri is the processing delay of computational intensive function [8]. Note that Lmax here denotes the maximum allowed service latency and therefore the following holds, L Lmax \u2208 [0, 1].\nThe energy cost of the system during each service time slot is measured by its total consumed power. The total power consists of the transmission power and the CPU processing power at target ECs. We denote the required CPU processing power of the user r at the node j as P cpurj and the CPU chip architecture coefficient as k0 (e.g. 10\u221215) [2]. Then, the power per CPU cycle at the EC can be achieved through k0(f j V ) 2 (Watt/cycle) based on measurements in [15] [16]. Thus, the total power consumption can be written as follows,\nP = \u2211 r\u2208R \u2211 j\u2208M (P tranrj + P cpu rj )\n= \u2211 r\u2208R \u2211 j\u2208M ( Nj +\n\u2211 i\u2208M,i6=j PiH 2 rid \u2212a ri\nH2rjd \u2212a rj\n(2 gerg Bj \u2212 1)+\nk0(f j V ) 2(Wrjyrj + Vrjxrj)f j V )\n(25) Pmax represents the maximum allowable total power of the system. It also has PPmax \u2208 [0, 1].\nSSIM is applied to reveal the quality of perception experience. In this paper, the video coding scheme (e.g. H.264) and frame resolution (e.g. 1280\u00d7720) are assumed as pre-defined [6]. Then SSIM is mainly affected by data rate and a concave function could be applied to reveal the relation between them [6]. Hence, the SSIM value is denoted as c and consists a set for each ARO under corresponding data rate as SSIMl, l \u2208 Lr. The overall quality of perception experience Q can be written as follows,\nQ = \u2211 r\u2208R \u2211 l\u2208Lr \u2211 g\u2208G \u2211 c\u2208SSIMl ergc (26)\nSimilarly, Qmax here denotes the maximum available quality of perception experience and satisfies QQmax \u2208 [0, 1].\nWe denote the weight parameter is denoted as \u00b5 \u2208 [0, 1] and the joint optimization problem can eventually be written as follows,\nmin \u00b5\n2 (\nL Lmax \u2212 Q Qmax ) + (1\u2212 \u00b5) P Pmax\n(27a)\ns.t. zrj = 1\u2212 qrj , \u2200j \u2208M, r \u2208 R (27b)\u2211 r\u2208R\n(xrj + yrj) \u2264 \u2206j ,\u2200j \u2208M (27c)\u2211 j\u2208M\nxrj = 1,\u2200r \u2208 R (27d)\u2211 j\u2208M yrj = 1,\u2200r \u2208 R (27e)\n\u03berij \u2264 xri, \u2200r \u2208 R, i, j \u2208M (27f) \u03berij \u2264 yrj , \u2200r \u2208 R, i, j \u2208M (27g) \u03berij \u2265 xri + yrj \u2212 1, \u2200r \u2208 R, i, j \u2208M (27h) \u03c8rj \u2264 zrj , \u2200r \u2208 R, j \u2208M (27i)\n\u03c8rj \u2264 yrj , \u2200r \u2208 R, j \u2208M (27j) \u03c8rj \u2265 zrj + yrj \u2212 1, \u2200r \u2208 R, j \u2208M (27k) xrj , yrj , psj , h s rl, zrj , qj \u2208 {0, 1}, \u03b1rsj , \u03b2rslj , \u03bbrslj , \u03c6rslg, \u03c8rj , \u03berij \u2208 {0, 1}, \u2200r \u2208 R, j \u2208M, l \u2208 Lrs, s \u2208 Sr (27l) (3), (4), (5), (6), (10), (12), (13), (17), (18), (19), (22)\nAs mentioned earlier, the constraint (27b) together with constraints (3) to (6) reveal the relation between pre-caching decisions and the cache miss/hit for each request [8]. The constraint (27c) is the virtual machine limitation while (27d) and(27e) guarantee the once execution of each function of a request at a single server as explained in [8]. The constraints (17) to (19) and (27f) to (27k) are auxiliary and required to solve the product of decision variables for linearization."
        },
        {
            "heading": "III. NUMERICAL INVESTIGATIONS",
            "text": "In this section, the effectiveness of the proposed optimization scheme, which will be referred to as Optim in the sequel, is investigated and compared with a number of nominal/baseline schemes. Same as in [8], a nominal tree-like network topology is applied with 20 ECs in total and 6 ECs being activated for the current metaverse AR service and 30 requests are sent by MAR devices. The remaining available resources allocated for metaverse AR support within an EC are assumed to be CPUs with frequency from 4 to 8 GHz, 4 to 8 cores and [100, 400]MBytes of cache memory [2] [8]. Each request requires a single free unit for each service function, such as for example a Virtual Machine (VM) [17]. Up to 14 available VMs are assumed in each EC, with equal splitting of the available CPU resources [8]. Note that different view ports lead to different models of the metaverse [5]. Hereafter, up to 4 different models per user can be cached and are similar for each user. All target AROs must be integrated with the corresponding model and rendered within the frame before being streamed to the end user based on a matched result. The size of pointers used for matching are only a few bytes in size and hence their transmission and processing latency are neglected in the simulations. The set of available data rates is {2, 3, ..., 8}Mbps and its corresponding SSIM values set is {0.955, 0.968, ..., 0.991} [6]. The carrier frequency of a nominal 5G access point is set to 2GHz, its transmit power is assumed to be 20dBm with the maximum of 100 resource blocks and we assume, without loss of generality, that each user can utilize one resource block [18] [19]. The noise power is 10\u221211W and the path loss exponent is 4 [18]. The location of the users is randomly generated as well as the potential destinations. Furthermore, we assume that each cell has a radius as 250m in the 5G wireless network [18]. As mentioned earlier, we assume a predefined video coding scheme, namely the H.264 with a fixed frame resolution as 1280\u00d7720 [6] in RGB (8 bits per pixel). Based on the given resolution, the size of foreground interactions after decoding and compressing can be calculated by multiplying the coefficients 59 and 10 \u22123 [5].\nThree baseline schemes implementing edge caching decisions are also implemented for comparison. These are the Random Selection Scheme (RandS), the Closest First Scheme (CFS) [20] and the utilization based scheme (UTIL) [21]. The RandS scheme operates a random EC selection, while the other two schemes both select the closest EC to the user\u2019s initial location. The CFS scheme also accepts the second closest one as a back up choice whilst the UTIL scheme set a capacity boundary to ensure an ideal EC working state; we assume that this is 80% occupied of available VMs [20] [21].\nAccording to Fig. (3), the service delay for each request drops, as expected, with an increasing weight \u00b5. With a larger weight, the Optim scheme tends to select a larger data rate and proactively cache fewer AROs, which lead to a smaller overall delay. Compared to the CFS scheme, for example, the gain in delay of the Optim scheme ranges from 6.4% to 24.8%. As shown by Fig. Table (I), the larger data rate caused by the increasing weight also leads to an increased perception quality for each target ARO. However, the power consumption in this case shows an ascending trend as revealed in Table (I). Thus, a trade-off exists and power consumption should be considered vis-a-vis with the gains it offers in delay and quality. By selecting a suitable weight, a balance could be achieved via the proposed Optim scheme between delay, quality and power consumption. As eluded before, the UTIL scheme has a stricter EC capacity limit and hence it is the most sensitive scheme to the weight. Fig. (4) further reveals how delay is impacted with an increase to the background model size. When the EC has sufficient resources the delay increase proportionally to the background model size. Hence, the delay of the Optim scheme is at first 6.3% better than the CFS scheme and it increases by 2.5% for each extra MB in background model size. But, when the EC becomes congested, the proposed Optim scheme has to accept sub-optimal solutions. However, the baseline schemes are much easier to excess the resource limit and suffer from a penalty. The gap between the CFS scheme and the Optim scheme could even reach 18.5%. Thus, they become much worse in delay and more sensitive to the background model size.\nTABLE I AVERAGE PERCEPTION QUALITY SSIM AND POWER CONSUMPTION WITH WEIGHT \u00b5\nWeight \u00b5 0 0.2 0.5 0.8 1 SSIM 0.958 0.979 0.986 0.990 0.992\nPower (W) 0.88 1.09 1.32 1.41 1.45\nFig. 4. Overall Delay with Background Model Size (6 EC, 30 Requests, EC Capacity is 14 and total mobility probability is 1)\nObserve that according to Table (II), even in the case where there is no mobility (i.e., users are stationary), the proposed Optim scheme still manages to outperform other baseline schemes because its service decomposition could better avoid potential EC overloading. Therefore, the proposed Optim scheme has an obvious advantage over baseline schemes especially during network congestion episodes and a high user physical mobility environment."
        },
        {
            "heading": "IV. CONCLUSIONS",
            "text": "Experiences in the metaverse are expected to be significantly demanding in terms of energy consumption, persistent high data rate support and advanced edge caching/computing capabilities in 5G and beyond networks. In this paper, a joint optimization framework is proposed that explicitly considers the model rendering, user mobility and service decomposition to achieve a balance between power consumption, user perception quality and service delay for content rich metaverse type of applications. Compared to nominal schemes which are mobility oblivious, the proposed optimization framework is able to provide an average reduction of 11.8% to 35.6% in terms of delay without sacrificing quality of experience or increasing the required power consumption."
        }
    ],
    "title": "Mobility Aware Optimization in the Metaverse",
    "year": 2022
}