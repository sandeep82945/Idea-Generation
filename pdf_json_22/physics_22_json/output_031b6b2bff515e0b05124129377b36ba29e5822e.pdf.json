{
    "abstractText": "Modeling hydrological fracture networks is a hallmark challenge in computational earth sciences. Accurately predicting critical features of fracture systems, e.g. percolation, can require solving large linear systems far beyond current or future high performance capabilities. Quantum computers can theoretically bypass the memory and speed constraints faced by classical approaches, however several technical issues must first be addressed. Chief amongst these difficulties is that such systems are often ill-conditioned, i.e. small changes in the system can produce large changes in the solution, which can slow down the performance of linear solving algorithms. We test several existing quantum techniques to improve the condition number, but find they are insufficient. We then introduce the inverse Laplacian preconditioner, which improves the scaling of the condition number of the system from O(N) to O( \u221a",
    "authors": [
        {
            "affiliations": [],
            "name": "John Golden"
        },
        {
            "affiliations": [],
            "name": "Daniel O\u2019Malley"
        },
        {
            "affiliations": [],
            "name": "Hari Viswanathan"
        }
    ],
    "id": "SP:0ac0542a5c458103f58b9b2021bc6671619c95a5",
    "references": [
        {
            "authors": [
                "A.W. Harrow",
                "A. Hassidim",
                "S. Lloyd"
            ],
            "title": "Quantum algorithm for linear systems of equations",
            "venue": "Phys. Rev. Lett",
            "year": 2009
        },
        {
            "authors": [
                "C Bravo-Prieto"
            ],
            "title": "Variational quantum linear solver: A hybrid algorithm for linear systems",
            "venue": "Bull. Am. Phys. Soc. 20,",
            "year": 2020
        },
        {
            "authors": [
                "S. Aaronson"
            ],
            "title": "Read the fine print",
            "venue": "Nat. Phys.https:// doi. org/",
            "year": 2015
        },
        {
            "authors": [
                "A. Montanaro",
                "S. Pallister"
            ],
            "title": "Quantum algorithms and the finite element method",
            "venue": "Phys. Rev. A",
            "year": 2016
        },
        {
            "authors": [
                "Huang",
                "H.-Y",
                "K. Bharti",
                "P. Rebentrost"
            ],
            "title": "Near-Term Quantum Algorithms for Linear Systems of Equations",
            "year": 1909
        },
        {
            "authors": [
                "M. Dukalski"
            ],
            "title": "Toward an application of quantum computing in geophysics",
            "venue": "In Fifth EAGE Workshop on High Performance Computing for Upstream 1\u20135. https:// doi. org/",
            "year": 2021
        },
        {
            "authors": [
                "S. Greer",
                "J. Hyman",
                "D. O\u2019Malley"
            ],
            "title": "A comparison of linear solvers for resolving flow in three-dimensional discrete fracture networks. Water Resour. Res.https:// doi",
            "year": 2022
        },
        {
            "authors": [
                "M.F. Asiani"
            ],
            "title": "The resource cost of large scale quantum computing",
            "venue": "Ph.D. thesis",
            "year": 2021
        },
        {
            "authors": [
                "Hyman",
                "J. D"
            ],
            "title": "dfnworks: A discrete fracture network framework for modeling subsurface flow and transport",
            "venue": "Comput. Geosci",
            "year": 2015
        },
        {
            "authors": [
                "R.T. Mills",
                "C. Lu",
                "P.C. Lichtner",
                "G.E. Hammond"
            ],
            "title": "Simulating subsurface flow and transport on ultrascale computers using PFLOTRAN",
            "venue": "J. Phys.: Conf. Ser",
            "year": 1205
        },
        {
            "authors": [
                "J. Hyman",
                "G. Aldrich",
                "H. Viswanathan",
                "N. Makedonska",
                "S. Karra"
            ],
            "title": "Fracture size and transmissivity correlations: Implications for transport simulations in sparse three-dimensional discrete fracture networks following a truncated power law distribution of fracture size",
            "venue": "Water Resour. Res",
            "year": 2016
        },
        {
            "authors": [
                "A. Pachalieva",
                "D. O\u2019Malley",
                "D. Harp",
                "H. Viswanathan"
            ],
            "title": "Physics-informed machine learning with differentiable programming for heterogeneous underground reservoir pressure management",
            "venue": "Sci. Rep. 2022,",
            "year": 2022
        },
        {
            "authors": [
                "G. Zyvoloski"
            ],
            "title": "FEHM: A control volume finite element code for simulating subsurface multi-phase multi-fluid heat and mass transfer",
            "venue": "In Los Alamos Unclassified Report",
            "year": 2007
        },
        {
            "authors": [
                "P Lichtner"
            ],
            "title": "PFLOTRAN User Manual: A Massively Parallel Reactive Flow and Transport Model for Describing Surface and Subsurface Processes",
            "venue": "Rep.,(Report No.: LA-UR-15-20403) Los Alamos National Laboratory",
            "year": 2015
        },
        {
            "authors": [
                "A.M. Childs",
                "R. Kothari",
                "R.D. Somma"
            ],
            "title": "Quantum algorithm for systems of linear equations with exponentially improved dependence on precision",
            "venue": "SIAM J. Comput",
            "year": 1920
        },
        {
            "authors": [
                "A. Ambainis"
            ],
            "title": "Variable Time Amplitude Amplification and a Faster Quantum Algorithm for Solving Systems of Linear Equations",
            "venue": "arXiv: 1010",
            "year": 2010
        },
        {
            "authors": [
                "Y. Suba\u015f\u0131",
                "R.D. Somma",
                "D. Orsucci"
            ],
            "title": "Quantum algorithms for systems of linear equations inspired by adiabatic quantum computing",
            "venue": "Phys. Rev. Lett. 122,",
            "year": 2019
        },
        {
            "authors": [
                "P Costa"
            ],
            "title": "Optimal Scaling Quantum Linear Systems Solver Via Discrete Adiabatic Theorem",
            "year": 2021
        },
        {
            "authors": [
                "C. Shao",
                "H. Xiang"
            ],
            "title": "Quantum circulant preconditioner for a linear system of equations",
            "venue": "Phys. Rev. A",
            "year": 2018
        },
        {
            "authors": [
                "B.D. Clader",
                "B.C. Jacobs",
                "C.R. Sprouse"
            ],
            "title": "Preconditioned quantum linear system algorithm",
            "venue": "Phys. Rev. Lett",
            "year": 2013
        },
        {
            "authors": [
                "I.B. Labutin",
                "I.V. Surodina"
            ],
            "title": "Algorithm for sparse approximate inverse preconditioners in the conjugate gradient method",
            "venue": "Reliab. Comput",
            "year": 2013
        },
        {
            "authors": [
                "C. Shao"
            ],
            "title": "Quantum Algorithms to Matrix Multiplication",
            "venue": "https:// doi",
            "year": 2018
        },
        {
            "authors": [
                "G. Strang"
            ],
            "title": "Computational Science and Engineering",
            "venue": "Sirsi)",
            "year": 2007
        },
        {
            "authors": [
                "R.M. Gray"
            ],
            "title": "Toeplitz and circulant matrices: A review",
            "venue": "Found. Trends Commun. Inf. Theory",
            "year": 2006
        }
    ],
    "sections": [
        {
            "text": "1 Vol.:(0123456789) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nwww.nature.com/scientificreports"
        },
        {
            "heading": "Quantum computing",
            "text": "and preconditioners for hydrological linear systems John Golden 1*, Daniel O\u2019Malley 2 & Hari Viswanathan 2\nModeling hydrological fracture networks is a hallmark challenge in computational earth sciences. Accurately predicting critical features of fracture systems, e.g. percolation, can require solving large linear systems far beyond current or future high performance capabilities. Quantum computers can theoretically bypass the memory and speed constraints faced by classical approaches, however several technical issues must first be addressed. Chief amongst these difficulties is that such systems are often ill-conditioned, i.e. small changes in the system can produce large changes in the solution, which can slow down the performance of linear solving algorithms. We test several existing quantum techniques to improve the condition number, but find they are insufficient. We then introduce the inverse Laplacian preconditioner, which improves the scaling of the condition number of the system from O(N) to O( \u221a\nN) and admits a quantum implementation. These results are a critical first step in developing a quantum solver for fracture systems, both advancing the state of hydrological modeling and providing a novel real-world application for quantum linear systems algorithms.\nQuantum algorithms for solving linear systems offer a potential for a practical quantum advantage over classical algorithms1. However, several technical and conceptual challenges remain before a meaningful, real-world example of quantum advantage can be exhibited for linear systems. On the technical side, many of these quantum linear systems (QLS) algorithms can only be implemented on future error-corrected hardware1, while others are designed for today\u2019s noisy intermediate-sized quantum devices but feature a less pronounced speed-up2. On the conceptual side, existing algorithms feature numerous caveats that must be satisfied in order for good performance3. The ideal system Ax = b for exhibiting quantum speed-up satisfies: (1) A is well-conditioned, (2) the quantum operator e\u2212iAt can be efficiently implemented, (3) a quantum state proportional to b can be efficiently prepared, (4) only specific values or statistics of the solution x are of interest, (5) there does not exist a classical algorithm which exploits these or other properties of the system to solve it equally as fast. The final point is particularly notable, as large systems of equations can often be replaced by small systems of equations which retain sufficient accuracy (and can be solved classically with modest cost)4. Existing applications for QLS algorithms have therefore been largely synthetic or specific examples, carefully chosen to avoid these constraints but also lacking in real-world application5,6.\nIn this work we initiate the study of simulating fluid flow through fracture systems with QLS algorithms. Hydrological flow is a very challenging problem in geophysics, because the contrast between the scales on which simulations are often done (kilometers or larger) and the scale of heterogeneities (centimeters or smaller) requires discretizing the problem over very large meshes. Here we address the common problem of determining the pressure of a subsurface liquid (e.g. water or oil), either at a specific location, i.e. at a well, or averaged across a wide region, i.e. effective permeability. Extracting the pressure at an individual location or studying averaged properties (rather than needing exact pressure at every point in the system) addresses point 4 in our list of QLS requirements. As we argue in section\u00a0\u201cFracture networks and coarse-graining\u201d, this type of problem cannot be reduced to a smaller system of equations without losing critical information, and so current classical techniques cannot capture the full scope of the problem at real-world scale (point 5). Since the matrices A appearing in subsurface flow applications are generally sparse, and the vectors b are relatively uniform, points 2 and 3 are plausibly addressed via quantum RAM3. However, these points are quite nuanced and will be studied in detail in a future work.\nOur focus for this work is point 1, improving the condition number of the linear system. The condition number of a matrix describes how sensitive the system is to small perturbations, or more specifically, how much an error in the right hand side, b, propagates to an error in the solution, x, in the worst case. Easy matrices, such as\nOPEN\n1CCS-3 (Information Sciences), Los Alamos National Laboratory, Los Alamos 87545, USA. 2EES-16 (Computational Earth Sciences), Los Alamos National Laboratory, Los Alamos 87545, USA. *email: golden@lanl.gov\n2 Vol:.(1234567890) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nunitary matrices, have condition number 1 and increasing the condition number makes the linear system harder to solve. Both quantum and classical linear systems algorithms generally perform worse on systems with large condition numbers. Classical methods to reduce the condition number, known as preconditioners, have been successfully developed and tailored specifically for fracture systems, the most prominent example being multigrid preconditioners7. However, they cannot simply be ported directly onto quantum computers due to the drastically different underlying technologies and algorithmic design constraints8. Therefore, in order to use quantum computers to solve large linear systems for fracture networks of relevance and outpace classical techniques, an effective quantum preconditioning algorithm for fracture networks must be developed. A good preconditioner is generally tied to the type of linear system being solved and exploits some underlying mathematical or physical structure in the problem. Meanwhile, one must also find an efficient way of calculating the preconditioned form of the system, which will be necessary to do on the quantum computer itself for very large systems due to memory constraints. These two constraints\u2014tailored to a specific application while also having an efficient quantum implementation\u2014are likely to play a prominent role in future attempts to solve large, interesting linear systems on quantum computers.\nWe show that existing techniques to reduce the condition number either do not have quantum implementations or are not well-suited for fracture systems. However, we find that the inverse Laplacian is both effective on fracture systems and can be efficiently implemented on a quantum computer. See Fig.\u00a01 for a summary of our results. Furthermore, we show that realistic fracture systems can be solved by a quantum computer with a polynomial advantage over classical approaches. Finally, we discuss the remaining algorithmic bottlenecks which need to be resolved to unlock the full potential of QLS for fracture systems."
        },
        {
            "heading": "Results",
            "text": "In this section, we describe the geophysical problem in further detail and argue why it is not fully tractable for classical computers (section\u00a0\u201cFracture networks and coarse-graining\u201d). We then review the three existing quantum preconditioner algorithms and study how well they improve the condition number of several synthetic fracture network examples. The condition number (without preconditioning) of these examples all scale as O(N), and the best of the preconditioners reduces this scaling to roughly O( \u221a N) (section\u00a0\u201cTest of existing quantum preconditioners\u201d), which is potentially sufficient to produce a polynomial advantage over classical techniques. Finally, we analyze how incorporating the preconditioner into a full QLS algorithm might affect overall runtime (section\u00a0\u201cAlgorithmic scaling with inverse Laplacian preconditioner\u201d).\nFracture networks and coarse-graining. In a complex fracture network, fractures of many scales\u2014 from kilometers to centimeters\u2014intersect. Critically, small fractures cannot generally be neglected because these can transform the network topology radically, e.g. pushing a system over a percolation threshold, see Fig.\u00a02. Small fractures may also collectively contribute a large surface area to the network providing a critical connection between fractures and the underlying rock. When modeling flow in these networks, it is therefore critical to include the full range of fracture scales, which has led to the development of advanced meshing\nFigure\u00a01. Summary of results. (a) Common requirements for good performance from QLS algorithms, and the ways in which subsurface flow problems can be made to meet them. Our primary contributions in this work are points 1 and 5, namely, introducing the inverse Laplacian preconditioner and providing arguments against the scalabality of classical methods. (b) Existing quantum preconditioners are not effective on subsurface flow through fracture systems, while classical fracture preconditioning techniques cannot reasonably be enacted via quantum algorithms. The inverse Laplacian is well-suited to fracture systems while also being efficiently realized on a quantum computer.\n3 Vol.:(0123456789) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\ntechniques9 and high-performance simulators10. However, these approaches do not provide a viable path to modeling the full range of scales. Even state-of-the-art high-performance computers and cutting-edge methods can only model large fracture networks with fracture lengths varying over three orders of magnitude11. Modeling real-world fracture networks to a high degree of accuracy requires meshes far beyond current or future classical capabilities\u2014e.g., a 1km domain with a 1cm resolution would require 1015 degrees of freedom. Larger systems of equations would be needed for larger domains or more finely resolved meshes.\nNumerical models of subsurface flow in a fracture network are based on a discretized version of7\nwhere k is the permeability, f is the fluid flux, and h is the pressure. Each of k, f, and h is a funciton that varies spatially throughout the domain. The pressure is key for applications of subsurface flow such as waste fluid disposal and hydraulic fracturing12. It is also critical for transport applications, since pressure gradients drive the transport. In fractured systems, k is highly heterogeneous with a sharp increase when moving from the rock matrix (where k is small) to a fracture (where k is large).\nWe discretize Eq.\u00a0(1) using a two-point flux finite volume method, which is one of the standard numerical schemes used in subsurface flow solver code bases including: fehm13, tough214, and pflotran15. The two-point flux finite volume method ensures mass conservation, which is a highly desireable property for these numerical solvers. This results in a coefficient matrix which is sparse, symmetric, and positive definite. We treat the permeability of the rock matrix as being constant. While the approximation is imperfect, it is a major step up from discrete fracture networking approaches which effectively treat the rock matrix as having zero permeability7. This approach does, however, capture the basic physics of fracture flow\u2014most but not all of the flow occurs in the high-permeability fractures.\nIn this work, we study a variety of 2D fracture network models. The simplest system we studied involved two fractures intersecting in a -configuration, and we then studied fractal-style recursion of the -system to generate more complicated fracture networks, see Fig.\u00a03. The relative permeability of the fractures as compared to the underlying rock is a critical parameter in the analysis of fracture systems, and we studied five different types:\nFracture Type 1: \u201cSimple, Low\u201d is the -system with fracture 10% more permeable as the underlying rock. Fracture Type 2: \u201cSimple, High\u201d is the -system with fractures 104 times more permeable than the underlying\nrock. Fracture Types 3 and 4: \u201cFractal, Low/High\u201d are the same as above, but with the fractal system. Fracture Type 5: \u201cFractal, Var.\u201d is the fractal system where the fractures have permeability contrast that scales\ndown as the fractures get smaller, i.e. largest fractures have contrast 104 and the smallest fractures have contrast 1.1, with the contrast scaling down as the (fracture length)1/2 , commonly used in pracice11.\nTest of existing quantum preconditioners. Recently developed QLS algorithms provide a novel path to modeling the full complexity of fracture networks. Since a quantum computer with n qubits can represent a 2n dimensional vector, vast systems of equations can be solved with a small number of qubits. That is, for the 1km domain with a 1cm resolution problem described above, a quantum computer could require as few as O(log(1015) \u2248 50) qubits, whereas a classical computer would require O(1015) classical bits. While additional\n(1)\u2207 \u00b7 (k\u2207h) = f\nFigure\u00a02. Fracture systems feature critical behavior, such as percolation, which is only apparent when taking many length scales in to account. Here we give a simplified conceptual diagram of the heirarchical structure of fracture networks. This model highlights how percolation, which has a large impact on effective permeability, is the result of many fractures of different lengths intersecting (here all fractures are represented as lines in two dimensions and we do not explicitly model the width or aperture). The red/blue/green colors indicate connected components in the fracture network\u2014the blue connected component in the right image results in percolation.\n4 Vol:.(1234567890) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nquantum resources will likely be necessary, either in the form of ancilla qubits or quantum RAM, this highlights the raw potential of the quantum approach for the huge systems of equations necessary to accurately model realistic subsurface flow. Furthermore, the computational complexity of quantum linear systems algorithms can in some cases be exponentially better than the best classical counterparts16.\nThe original QLS algorithm introduced by Harrow, Hassidim, and Lloyd (HHL)1 solves a sparse N-variable system of equations Ax = b with a runtime of O(log(N)\u03ba(A)2) , where \u03ba(A) := \ufffdA\ufffd\ufffdA\u22121\ufffd is the condition number of A (in this work we use \u2016A\u2016 with no subscripts to refer to the 2-norm (or operator norm), i.e. \ufffdA\ufffd \u2261 \ufffdA\ufffd2 , and explicitly use \u2016A\u2016F to refer to the Frobenius norm). The best classical algorithm, the Conjugate Gradient method, runs in O(N \u221a \u03ba(A)) on sparse matrices, so the quantum algorithm provides an exponential speed-up when \u03ba(A) is small (for notational clarity, we often use \u2018 \u03ba \u2019 alone to signify \u03ba(A)). Since the introduction of the HHL algorithm, many more QLS algorithms have been introduced, including improvements to HHL16,17, adiabatic approaches18,19, and variational algorithms implementable on near-term quantum computers2,5. A feature common to all of these quantum approaches is a scaling with \u03ba that is linear at best, as compared to the O( \u221a \u03ba) scaling of the best classical approaches. A common technique in classical analysis is to further reduce \u03ba by using a preconditioner. This technique relies on finding a matrix M such that \u03ba(MA) \u226a \u03ba(A) . One then finds the x satisfying MAx = Mb . The matrix M is generally dependent on the specific matrix A, and different preconditioning approaches have been developed for different contexts.\nDespite the significant interest and activity in QLS algorithms, relatively little work has been done to develop application-specific preconditioning algorithms. It is important to emphasize that in this work we only consider preconditioning algorithms which are implementable on a quantum computer, as opposed to any sort of hybrid classical-quantum preconditioning method. While we do not rule out the possibility of such an approach, the extreme memory requirements of full-scale subsurface flow problems (as described above) suggests that calculating the preconditioned matrix classically would be intractable. There are currently three general purpose quantum preconditioning algorithms in the literature: the circulant method20, the sparse approximate inverse method21, and the fast-inverse method22. These algorithms are described in detail in section\u00a0\u201cMethods\u201d, here we give only the salient points.\nThe circulant method is a one-size-fits-all approach, that is, the only input is a matrix A and the output is a preconditioner M. With SPAI one gives a sparsity pattern for the preconditioner M, and several techniques have been developed for determining good sparsity patterns for fracture systems23. The fast-inverse method is designed for systems of the form A+ B , where A\u22121 can be easily calculated. One then uses A\u22121 as the preconditioner. As discussed in section\u00a0\u201cMethods\u201d, fracture systems can be decomposed into + AF , where the Laplacian describes the system in the absence of fractures, and AF is the contribution of the fractures. Because the singular value decomposition of the Laplacian is known24, \u22121 can be efficiently calculated and used as a preconditioner.\nIn Fig.\u00a04 we numerically evaluate the effect of the circulant, SPAI, and inverse Laplacian preconditioners on all of the fracture types described in section\u00a0\u201cFracture networks and coarse-graining\u201d up to O(106) variables. To estimate how the preconditioner performance scales with N, we perform a linear regression on the logarithm of the final four data points for each preconditioner applied to each fracture type. We do not include the first points as they sometimes exhibited variance due to small matrix sizes, however for N > 103 , all of the results show clear exponential scaling in the number of qubits and polynomial scaling in the number of equations. We find that the circulant and SPAI methods are poor choices for the fracture systems under consideration. While these two preconditioners consistently reduce the condition number of the system, they do not improve how the condition number scales in N, which is necessary to unlock the full potential of QLS algorithms for large problems. The inverse Laplacian preconditioner, however, does meaningfully improve the scaling of the condition number. In the cases with low permeability contrast, the condition number of the system \u22121A is very low, scaling as \u2264 O(N0.05) . The high permeability contrast systems do not fair as well, with the \u03ba of the preconditioned fractal system scaling as O(N0.6) . The fractal system with variable permeability, which is the most realistic of the systems under consideration, has a preconditioned \u03ba which asymptotically scales as approximately O(N0.55).\nFigure\u00a03. 2D fracture networks under consideration. On the left, Fracture Types 1 & 2 feature a simple -style fracture network (with low & high permeability contrast, respectively). In the middle, Fracture Types 3 & 4 add more fractures via fractal recursion, keeping the permeability constant across fractures (again with low & high permeability contrast, respectively). On the right, Fracture Type 5 gives less permeability to shorter fractures.\n5 Vol.:(0123456789) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nAlgorithmic scaling with inverse Laplacian preconditioner. Identifying a preconditioner M which reduces the condition number of a system A is generally not sufficient to guarantee good performance of a QLS algorithm to solve the preconditioned system MAx = Mb . This is because one must find an efficient way to calculate the product MA in such a way as to make it readily accessible on a quantum computer. This can be accomplished either through a classical oracle which efficiently calculates MA, or through a quantum algorithm which uses oracles for A and M and then calculates MA. As described previously, in this work we only study cases where the preconditioner can be applied on the quantum computer itself, due to the considerable memory demands of full-scale hydrological simulations. Unfortunately, simply calculating MA in the general case on a quantum computer with generic matrix multiplication adds an O(N2) overhead25 and would remove any benefit from the reduced condition number. Each of the three methods previously discussed get around this limitation through clever techniques: the circulant method calculates the product with the quantum Fourier Transform algorithm, the SPAI method exploits sparseness of M and A, and the fast-inverse method assumes efficient block-encodings of M and A.\nAs described in section\u00a0\u201cTest of existing quantum preconditioners\u201d, the data presented in Fig.\u00a04 shows that the circulant and SPAI preconditioners do not meaningfully improve the scaling in N of the condition number for the fracture examples considered in this paper. Therefore, it is not worth determining the full algorithmic runtime for implementing either of these preconditioners in a full QLS algorithm. However, the inverse Laplacian reduces the condition number to scale between O(N0.05) to O(N0.6) , which is potentially sufficient for an advantage over classical algorithms. It is thus instructive to estimate the impact the inverse Laplacian preconditioner has on the overall runtime for solving subsurface flow systems.\nWhile implementing the inverse Laplacian preconditioner into the original HHL algorithm is potentially possible, the QLS algorithm of Tong et\u00a0al.22 already gives a direct method of applying the preconditioner and solving the resulting system. We can therefore use the scaling of their algorithm as a proof-of-concept to gain an understanding of whether the inverse Laplacian improves the condition number sufficiently to recover some quantum speed-up. This analysis purposefully ignores intricacies resulting from points 2 and 3 in our list of QLS caveats, i.e. efficiently turning the classical data A and b into appropriate quantum states and operators. We emphasize that this analysis is intended as a conservative estimate of how a preconditioned QLS algorithm might scale when solving fracture systems. There are hopefully more efficient implementations, which we discuss more in section\u00a0\u201cDiscussion\u201d and will explore further in future work.\nAs we show in section\u00a0\u201cMethods\u201d, the fast-inverse QLS algorithm with \u22121 as the preconditioner gives a runtime bounded below by\nFigure\u00a04. Efficacy of the preconditioners under analysis. The inverse Laplacian \u22121 gives the best scaling in all cases, while the circulant and SPAI preconditioners reduce \u03ba(A) but do not significantly improve the scaling in N. There are fewer data points for the circulant and SPAI preconditioners due to computational constraints.\n6 Vol:.(1234567890) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nThe scaling in N of \ufffdA\u2212 \ufffd and \ufffdA\u22121 \ufffd are dependent on the exact fracture systems being studied and must be determined experimentally. In Fig.\u00a05 we show the scaling of these components for the fractal system with variable contrast. We focus on this particular example since it is the most realistic of the different fracture types. As was the case in section\u00a0\u201cTest of existing quantum preconditioners\u201d, we estimate the large-N scaling of the different components by linear regression (on the log-log plot) of the data points for N > 103 . In Table\u00a01 we summarize the scaling of each component as well as the overall scaling (modulo log(N) ) compared with the scaling for Conjugate Gradient on the same systems.\nUsing the fast inverse QLS algorithm with the inverse Laplacian preconditioner, we can potentially achieve a polynomial improvement over the best generic classical scaling for all fracture systems considered here. This approach utilizes block encodings of \u22121 and A\u2212 to calculate the product \u22121A . However, since \ufffd \u22121\ufffd scales linearly in N, the block encoding takes at least this long. Future algorithms for QLS, specifically tailored to fracture systems, could be developed to calculate \u22121A even more efficiently by exploiting the sparseness of A."
        },
        {
            "heading": "Discussion",
            "text": "In this work, we have initiated the study of using QLS algorithms to solve systems of equations describing subsurface flow. As we argue in section\u00a0\u201cFracture networks and coarse-graining\u201d, capturing the full behavior of these systems at real-world scale is prohibitively memory-intensive for classical computers. Quantum computing provides an alternative path, potentially using significantly less resources and offering improved scaling in problem size. However, several conceptual problems must be addressed (in addition to the need for improved quantum computing hardware). The most prominent of these issues are the poor condition number of these systems and the means of loading information onto the quantum computer. Here we have studied the first problem through the use of quantum preconditioners, and we leave the latter problem to future work.\nWe have shown that two previously introduced quantum preconditioners, the circulant and SPAI methods, do not improve the scaling in N of \u03ba(A) and therefore will not help gain a quantum advantage for these fracture systems. However, the inverse Laplacian is an effective preconditioner for fracture systems and readily admits a quantum implementation. In particular, it can be implemented via the fast-inverse QLS algorithm, and the overall scaling of this solver scales better than the best generic classical algorithm.\n(2)O(\ufffd\ufffd\u22121\ufffd\ufffdA\u2212\ufffd\ufffd\ufffdA\u22121\ufffd\ufffd log(\ufffdA\u22121\ufffd\ufffd)/\u01eb).\nFigure\u00a05. Scaling of the components of the fast-inverse QLS algorithm for problems of increasing size for a fractal fracture network with high permeability contrast.\n7 Vol.:(0123456789) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nIn comparing against classical techniques, we have so far not addressed the fact that for PDE-based systems on a uniform mesh, such as those considered here, more specialized methods can be used. Geometric multigrid methods, which exploit the structured mesh, can solve systems of equations in O(N) or O(N logN)26. Due to the extensive caveats and stringent requirements attached to QLS algorithms, it is noteworthy (though by no means sufficient) that our preliminary results suggest that quantum performance will be at least comparable to stateof-the-art, highly tuned classical techniques. This is in addition to the memory requirements which classical techniques inevitably hit. Still, it is clearly necessary to further refine QLS algorithms with an even greater eye towards the specific physics and mathematical structures of the fracture systems at hand.\nAn obvious area of improvement is a more efficient quantum means of implementing the preconditioned system \u22121A . In the most realistic case we studied, the fractal system with variable contrast, \u03ba(\ufffd\u22121A) asymptotes to roughly O(N0.55) . Therefore in principle the scaling of solving just the preconditioned system, e.g. with recent adiabatic QLS algorithms18, would be O(N0.55 logN) , a significant improvement over the geometric multigrid methods.\nAlternatively, while the inverse Laplacian opens the door for polynomial speed-up over classical, an even better preconditioner is needed for exponential speed-up. For example, while a direct quantum port of the classical multigrid methods is not plausible, some of the ideas may be used to construct an analagous approach that can be implemented on a quantum computer. Reducing the condition number scaling to O(logN) in the quantum context would then be possible.\nThis study shows that fracture networks are a challenging real-world problem with a potential for serious advancements from quantum computation. The large linear systems necessary to accurately model flow behavior are sparse yet cannot be coarse-grained. The condition number \u03ba of the systems tends to scale linearly with N, however the inverse Laplacian preconditioner, which readily admits a quantum implementation, can improve this scaling considerably, and it is likely evern further advancements can be made in \u03ba . Future work will be devoted to incorporating our application-specific preconditioning techniques into a full quantum linear solver, ideally targeting an implementation on NISQ devices."
        },
        {
            "heading": "Methods",
            "text": "In this section we provide a more detailed review of the preconditioner methods evaluated in Section\u00a0\u201cTest of existing quantum preconditioners\u201d, as well as a derivation of the scaling bound for the fast-inverse algorithm found in section\u00a0\u201cAlgorithmic scaling with inverse Laplacian preconditioner\u201d.\nCirculant preconditioner. The circulant preconditioner method of Shao et\u00a0al.20 gives an efficient quantum implementation of a circulant preconditioner C based on the quantum Fourier transform F. An n\u00d7 n matrix C is circulant if Cij = C(i\u2212j) mod n . The use of circulant preconditioners in classical applications is motivated by the fact that, for a given circulant matrix C and an arbitrary matrix A, CA and C\u22121A can be computed in O(n log n) steps using the fast Fourier transform. Circulant preconditioners are particularly useful in solving Toeplitz systems27.\nFor an arbitrary matrix A, one can construct the circulant preconditioner via\nwhere Fjk = 1\u221an\u03c9 jk with \u03c9 = e\u22122\u03c0 i/n . C\u22121(A) is then used the preconditioner. F can be efficiently implemented via the quantum Fourier transform, and the middle term simplifies to\nAn algorithm for efficiently preparing the state in Eq.\u00a04 is given in20. This approach works for arbitrary dense non-Hermitian matrices, however there is no upper bound on \u03ba(CA) , and in practice for random dense matrices \u03ba(CA) = O(\u03ba(A)).\nSparse approximate inverse. The Sparse Approximate Inverse (SPAI) approach for solving a system Ax = b attempts to find a matrix M such that MA \u2248 I , where M has a (user-defined) sparsity pattern. For example, if one gives a sparsity pattern involving n non-zero rows and d non-zero elements per row, then M is given by solving n\u00d7 d independent least squares problems. The trick with this approach is determining which sparsity pattern to choose for M.\nClader et\u00a0al.21 showed that the preconditioned system\ncan be solved via a slightly modified version of the HHL algorithm. The overall scaling for actually solving Eq.\u00a0(5) with error \u01eb is\nIn section\u00a0\u201cTest of existing quantum preconditioners\u201d we adopt the relatively standard approach of using the sparsity pattern of A for M. One can also try other methods23, which can significantly reduce the condition number, but again do not improve the scaling in N for the fracture systems studied here. Finally, d does not need to be a constant. As long as \u03ba(MA) = O(1) , the sparsity pattern can scale with d \u221d N\u22641/7 in order to at least recover\n(3)C(A) = F\u2020diag(FAF\u2020)F,\n(4)diag(FAF \u2020)k =\n1\nn\n\u2211\np,q\n\u03c9(p\u2212q)kAp,q.\n(5)MAx = Mb\n(6)O\u0303(d7\u03ba(MA) log(N)/\u01eb2).\n8 Vol:.(1234567890) Scientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nsome quantum advantage. However, for the systems and sparsity patterns considered here, a small increase in d has a corresponding small decrease in \u03ba(MA) . For example, when applying the technique described in23 to the \u201csimple\u201d systems, i.e. fractal depth 1, increasing the density of M by a factor of five only decreases \u03ba(MA) by a factor of two. It is therefore difficult to imagine a system size or sparsity pattern where such an incremental increase in d could produce sufficiently large reductions in \u03ba(MA) as to make the procedure worthwhile.\nFast inverse. The fast inverse method of Tong et\u00a0al.22 solves linear systems Ax = b where A can be decomposed as\nwhere \ufffdAbig\ufffd \u226b \ufffdAsmall\ufffd . They then give a QLS algorithm which uses A\u22121big as a preconditioner and solves the system (I + A\u22121bigAsmall)x = A \u22121 bigb with scaling bounded by \ufffdAsmall\ufffd, \ufffdA \u22121 big\ufffd, and \ufffdA\u22121\ufffd.\nThis technique is dependent on efficient block-encodings of A\u22121big and Asmall . An (\u03b1,m, \u01eb)-block-encoding of the matrix A is given by the unitary UA:\nwhere \u2217 denotes arbitrary matrix blocks, \u03b1 is a rescaling constant such that \ufffdUA\ufffd = 1 , and the error \u01eb is bounded by \ufffdA\u2212 \u03b1(\ufffd0m| \u2297 In)UA(|Om\ufffd \u2297 In)\ufffd \u2264 \u01eb . Since the magnitude of \u03b1 plays a critical role in the scaling of this algorithm, we note that \ufffdUA\ufffd = 1 implies that \u03b1 \u2265 \ufffdA\ufffd.\nIn order to use A\u22121big as the preconditioner, Abig must be fast-invertible. A matrix M is fast-invertible matrix if one can efficiently prepare a (\ufffd(1),m, \u01eb)-block-encoding U \u2032M of M\u22121 . This requires access to an oracle for M\u22121 , and the number of queries to this oracle in preparing U \u2032M must be independent of \u03ba(M) . For example, if M is normal, and the eigenvalue decomposition M = VDV\u2020 gives a V that can be efficiently implemented in a quantum circuit and the elements of D can be accessed through an oracle, then M is fast-invertible.\nThe fast-inverse QLS algorithm takes as inputs an (\u03b1s ,ms, 0)-block-encoding Us of Asmall , and an (\u03b1\u2032b,m \u2032 b, 0) -block-encoding U \u2032b of A \u22121 big implemented via fast-inversion. They then use a modified version of the quantum singular value transformation28 to construct a block encoding of (Abig + Asmall)\u22121 with error \u01eb in\napplications of Us ,U \u2032b along with their inverses, controlled versions, and other primitive gates. Here \u03c3\u0303min is a lower bound for the smallest singular value of I + A\u22121bigAsmall , i.e. the preconditioned system.\nThis approach has the benefit of providing an upper bound on the condition number of the preconditioned matrix, with the downside of needing a decomposition of A that matches a lengthy list of requirements. For fracture problems, we have the natural decomposition of\nwhere the Laplacian describes the flow in the absence of fractures, and AF denotes the fracture matrix. Fortunately the discretized Laplacian is normal and has a known eigenvalue decomposition24, therefore it meets the fast-invertible conditions and we may use it as the preconditioner. However, we have no guarantee that \ufffd \ufffd \u226b \ufffdA\u2212 \ufffd , which is required to get good scaling. Still, we can numerically test the scaling of the algorithm to see how it performs in the absence of performance guarantees.\nThe parameters contributing to the performance of this algorithm, Eq.\u00a0(9), are the block-encoding parameters \u03b1\u2032b and \u03b1s , along with a lower bound on the smallest singular value of the preconditioned system MA, \u03c3\u0303min . In order to assess the potential usefulness of this algorithm for our application, we will explore the most optimistic values for these parameters. Due to minor technical details, we rescale the entire system by \ufffd \u22121\ufffd , which gives Abig = \ufffd \u22121\ufffd and \u03b1\u2032b (the block-encoding parameter for A \u22121 big ) = \ufffd(1) . We also have Asmall = (A\u2212\ufffd)\ufffd\ufffd\u22121\ufffd , so \u03b1s \u2265 \ufffdA\u2212\ufffd\ufffd\ufffd\ufffd\u22121\ufffd , and 1/\u03c3\u0303min \u2265 \ufffdA\u22121\ufffd\ufffd . Therefore the overall scaling for the fast-inverse QLS algorithm is bounded below by"
        },
        {
            "heading": "Data availability",
            "text": "The datasets used and/or analyzed during the current study are available from the corresponding author on reasonable request.\nReceived: 26 May 2022; Accepted: 5 December 2022"
        },
        {
            "heading": "Acknowledgements",
            "text": "This work was supported by the U.S. Department of Energy through the Los Alamos National Laboratory, LA-UR-22-24431. Los Alamos National Laboratory is operated by Triad National Security, LLC, for the National Nuclear Security Administration of U.S. Department of Energy (Contract No. 89233218CNA000001). DO and JG acknowledge support from Los Alamos National Laboratory\u2019s Laboratory Directed Research and Development program through project 20220077ER."
        },
        {
            "heading": "Author contributions",
            "text": "D.O. and J.G. conceived the study, J.G. conducted the experiments and analysed the results. All authors reviewed the manuscript."
        },
        {
            "heading": "Competing interests",
            "text": "The authors declare no competing interests."
        },
        {
            "heading": "Additional information",
            "text": "Correspondence and requests for materials should be addressed to J.G.\nReprints and permissions information is available at www.nature.com/reprints.\nPublisher\u2019s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.\n10\nVol:.(1234567890)\nScientific Reports | (2022) 12:22285 | https://doi.org/10.1038/s41598-022-25727-9\nOpen Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or\nformat, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article\u2019s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article\u2019s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http:// creat iveco mmons. org/ licen ses/ by/4. 0/.\n\u00a9 The Author(s) 2022"
        }
    ],
    "title": "Quantum computing and preconditioners for hydrological linear systems",
    "year": 2022
}