{
    "abstractText": "We introduce a new CCG parsing model which is factored on lexical category assignments. Parsing is then simply a deterministic search for the most probable category sequence that supports a CCG derivation. The parser is extremely simple, with a tiny feature set, no POS tagger, and no statistical model of the derivation or dependencies. Formulating the model in this way allows a highly effective heuristic for A\u2217 parsing, which makes parsing extremely fast. Compared to the standard C&C CCG parser, our model is more accurate out-of-domain, is four times faster, has higher coverage, and is greatly simplified. We also show that using our parser improves the performance of a state-ofthe-art question answering system.",
    "authors": [
        {
            "affiliations": [],
            "name": "Mike Lewis"
        },
        {
            "affiliations": [],
            "name": "Mark Steedman"
        }
    ],
    "id": "SP:4c0076f6b24fdaf13d02e99aedd53f83b544a778",
    "references": [
        {
            "authors": [
                "Omri Abend",
                "Ari Rappoport."
            ],
            "title": "Universal conceptual cognitive annotation (ucca)",
            "venue": "Proceedings of ACL.",
            "year": 2013
        },
        {
            "authors": [
                "Michael Auli",
                "Adam Lopez."
            ],
            "title": "A comparison of loopy belief propagation and dual decomposition for integrated CCG supertagging and parsing",
            "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human",
            "year": 2011
        },
        {
            "authors": [
                "Michael Auli",
                "Adam Lopez."
            ],
            "title": "Efficient CCG parsing: A* versus adaptive supertagging",
            "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies-Volume 1, pages 1577\u20131585.",
            "year": 2011
        },
        {
            "authors": [
                "Jason Baldridge",
                "Geert-Jan M Kruijff."
            ],
            "title": "Multimodal combinatory categorial grammar",
            "venue": "Proceedings of the tenth conference on European chapter of the Association for Computational LinguisticsVolume 1, pages 211\u2013218. Association for Compu-",
            "year": 2003
        },
        {
            "authors": [
                "Laura Banarescu",
                "Claire Bonial",
                "Shu Cai",
                "Madalina Georgescu",
                "Kira Griffitt",
                "Ulf Hermjakob",
                "Kevin Knight",
                "Philipp Koehn",
                "Martha Palmer",
                "Nathan Schneider."
            ],
            "title": "Abstract Meaning Representation for sembanking",
            "venue": "Proceedings of the 7th Linguis-",
            "year": 2013
        },
        {
            "authors": [
                "Srinivas Bangalore",
                "Aravind K Joshi."
            ],
            "title": "Supertagging: An approach to almost parsing",
            "venue": "Computational linguistics, 25(2):237\u2013265.",
            "year": 1999
        },
        {
            "authors": [
                "Jonathan Berant",
                "Andrew Chou",
                "Roy Frostig",
                "Percy Liang."
            ],
            "title": "Semantic parsing on freebase from question-answer pairs",
            "venue": "Proceedings of EMNLP.",
            "year": 2013
        },
        {
            "authors": [
                "Johan Bos."
            ],
            "title": "Wide-coverage semantic analysis with boxer",
            "venue": "Johan Bos and Rodolfo Delmonte, editors, Semantics in Text Processing. STEP 2008 Conference Proceedings, Research in Computational Semantics, pages 277\u2013286. College Publi-",
            "year": 2008
        },
        {
            "authors": [
                "Stephen Clark",
                "James R Curran."
            ],
            "title": "Widecoverage efficient statistical parsing with CCG and log-linear models",
            "venue": "Computational Linguistics, 33(4):493\u2013552.",
            "year": 2007
        },
        {
            "authors": [
                "Ronan Collobert",
                "Jason Weston",
                "L\u00e9on Bottou",
                "Michael Karlen",
                "Koray Kavukcuoglu",
                "Pavel Kuksa."
            ],
            "title": "Natural language processing (almost) from scratch",
            "venue": "The Journal of Machine Learning Research, 12:2493\u20132537.",
            "year": 2011
        },
        {
            "authors": [
                "Ronan Collobert."
            ],
            "title": "Deep learning for efficient discriminative parsing",
            "venue": "International Conference on Artificial Intelligence and Statistics, number EPFLCONF-192374. 998",
            "year": 2011
        },
        {
            "authors": [
                "Gregory F Coppola",
                "Alexandra Birch",
                "Tejaswini Deoskar",
                "Mark Steedman."
            ],
            "title": "Simple semisupervised learning for prepositional phrase attachment",
            "venue": "Proceedings of the 12th International Conference on Parsing Technologies, pages 129\u2013139.",
            "year": 2011
        },
        {
            "authors": [
                "Tejaswini Deoskar",
                "Christos Christodoulopoulos",
                "Alexandra Birch",
                "Mark Steedman."
            ],
            "title": "Generalizing a Strongly Lexicalized Parser using Unlabeled Data",
            "venue": "Proceedings of the 14th Conference of the European Chapter of the Association",
            "year": 2014
        },
        {
            "authors": [
                "Jason Eisner."
            ],
            "title": "Efficient normal-form parsing for combinatory categorial grammar",
            "venue": "Proceedings of the 34th annual meeting on Association for Computational Linguistics, pages 79\u201386. Association for Computational Linguistics.",
            "year": 1996
        },
        {
            "authors": [
                "Timothy AD Fowler",
                "Gerald Penn."
            ],
            "title": "Accurate context-free parsing with combinatory categorial grammar",
            "venue": "Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 335\u2013344. Association for Computa-",
            "year": 2010
        },
        {
            "authors": [
                "Yoav Goldberg",
                "Michael Elhadad."
            ],
            "title": "An efficient algorithm for easy-first non-directional dependency parsing",
            "venue": "Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Lin-",
            "year": 2010
        },
        {
            "authors": [
                "Brian Harrington."
            ],
            "title": "A semantic network approach to measuring relatedness",
            "venue": "Proceedings of the 23rd International Conference on Computational Linguistics: Posters, COLING \u201910, pages 356\u2013364. Association for Computational Linguis-",
            "year": 2010
        },
        {
            "authors": [
                "Julia Hockenmaier",
                "Mark Steedman."
            ],
            "title": "CCGbank: a corpus of CCG derivations and dependency structures extracted from the Penn Treebank",
            "venue": "Computational Linguistics, 33(3):355\u2013396.",
            "year": 2007
        },
        {
            "authors": [
                "Julia Hockenmaier"
            ],
            "title": "Data and models for statistical parsing with combinatory categorial grammar",
            "year": 2003
        },
        {
            "authors": [
                "Matthew Honnibal",
                "James R Curran."
            ],
            "title": "Fully lexicalising CCGbank with hat categories",
            "venue": "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 3Volume 3, pages 1212\u20131221. Association for Com-",
            "year": 2009
        },
        {
            "authors": [
                "Dan Klein",
                "Christopher D Manning."
            ],
            "title": "A* parsing: fast exact viterbi parse selection",
            "venue": "Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology-",
            "year": 2003
        },
        {
            "authors": [
                "Dan Klein",
                "Christopher D Manning."
            ],
            "title": "Accurate unlexicalized parsing",
            "venue": "Proceedings of the 41st Annual Meeting on Association for Computational Linguistics-Volume 1, pages 423\u2013430. Association for Computational Linguistics.",
            "year": 2003
        },
        {
            "authors": [
                "Jayant Krishnamurthy",
                "Tom M Mitchell."
            ],
            "title": "Joint syntactic and semantic parsing with combinatory categorial grammar",
            "venue": "June.",
            "year": 2014
        },
        {
            "authors": [
                "Jonathan K. Kummerfeld",
                "Jessika Roesner",
                "Tim Dawborn",
                "James Haggerty",
                "James R. Curran",
                "Stephen Clark."
            ],
            "title": "Faster parsing by supertagger adaptation",
            "venue": "Proceedings of the 48th Annual Meeting of the Association for Computational Lin-",
            "year": 2010
        },
        {
            "authors": [
                "Mike Lewis",
                "Mark Steedman."
            ],
            "title": "Combined Distributional and Logical Semantics",
            "venue": "Transactions of the Association for Computational Linguistics, 1:179\u2013192.",
            "year": 2013
        },
        {
            "authors": [
                "Mike Lewis",
                "Mark Steedman."
            ],
            "title": "Unsupervised induction of cross-lingual semantic relations",
            "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 681\u2013692, Seattle, Washington, USA, October. Asso-",
            "year": 2013
        },
        {
            "authors": [
                "Mike Lewis",
                "Mark Steedman."
            ],
            "title": "Improved CCG parsing with Semi-supervised Supertagging",
            "venue": "Transactions of the Association for Computational Linguistics (to appear).",
            "year": 2014
        },
        {
            "authors": [
                "Takashi Ninomiya",
                "Takuya Matsuzaki",
                "Yoshimasa Tsuruoka",
                "Yusuke Miyao",
                "Jun\u2019ichi Tsujii"
            ],
            "title": "Extremely lexicalized models for accurate and fast hpsg parsing",
            "venue": "In Proceedings of the 2006 Conference on Empirical Methods in Natural Language",
            "year": 2006
        },
        {
            "authors": [
                "Joakim Nivre."
            ],
            "title": "An efficient algorithm for projective dependency parsing",
            "venue": "Proceedings of the 8th International Workshop on Parsing Technologies (IWPT.",
            "year": 2003
        },
        {
            "authors": [
                "Sampo Pyysalo",
                "Filip Ginter",
                "Juho Heimonen",
                "Jari Bj\u00f6rne",
                "Jorma Boberg",
                "Jouni J\u00e4rvinen",
                "Tapio Salakoski."
            ],
            "title": "Bioinfer: a corpus for information extraction in the biomedical domain",
            "venue": "BMC bioinformatics, 8(1):50.",
            "year": 2007
        },
        {
            "authors": [
                "Siva Reddy",
                "Mirella Lapata",
                "Mark Steedman."
            ],
            "title": "Large-scale Semantic Parsing without Question-Answer Pairs",
            "venue": "Transactions of the Association for Computational Linguistics (to appear).",
            "year": 2014
        },
        {
            "authors": [
                "Laura Rimell",
                "Stephen Clark."
            ],
            "title": "Adapting a lexicalized-grammar parser to contrasting domains",
            "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 475\u2013484. Association for Computational Lin-",
            "year": 2008
        },
        {
            "authors": [
                "Mark Steedman."
            ],
            "title": "The Syntactic Process",
            "venue": "MIT Press.",
            "year": 2000
        },
        {
            "authors": [
                "Mark Steedman."
            ],
            "title": "Taking Scope: The Natural Semantics of Quantifiers",
            "venue": "MIT Press.",
            "year": 2012
        },
        {
            "authors": [
                "Emily Thomforde",
                "Mark Steedman."
            ],
            "title": "Semisupervised CCG lexicon extension",
            "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 1246\u20131256. Association for Computational Linguistics.",
            "year": 2011
        },
        {
            "authors": [
                "Stephen Tratz",
                "Eduard Hovy."
            ],
            "title": "A fast, effective, non-projective, semantically-enriched parser",
            "venue": "Proceedings of EMNLP.",
            "year": 2011
        },
        {
            "authors": [
                "Joseph Turian",
                "Lev Ratinov",
                "Yoshua Bengio."
            ],
            "title": "Word representations: a simple and general method for semi-supervised learning",
            "venue": "Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 384\u2013394. Association for",
            "year": 2010
        },
        {
            "authors": [
                "Wenduan Xu",
                "Stephen Clark",
                "Yue Zhang."
            ],
            "title": "Shift-reduce ccg parsing with a dependency model",
            "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (ACL 2014). Association for Computational Linguistics,",
            "year": 2014
        },
        {
            "authors": [
                "Yue Zhang",
                "Stephen Clark."
            ],
            "title": "Shift-reduce CCG parsing",
            "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies-Volume 1, pages 683\u2013692. Association for Computational Lin-",
            "year": 2011
        }
    ],
    "sections": [
        {
            "text": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 990\u20131000, October 25-29, 2014, Doha, Qatar. c\u00a92014 Association for Computational Linguistics"
        },
        {
            "heading": "1 Introduction",
            "text": "CCG is a strongly lexicalized grammatical formalism, in which the vast majority of the decisions made during interpretation involve choosing the correct definitions of words. We explore the effect of modelling this explicitly in a parser, by only using a probabilistic model of lexical categories (based on a local context window), rather than modelling the derivation or dependencies.\nExisting state-of-the-art CCG parsers use complex pipelines of POS-tagging, supertagging and parsing\u2014each with its own feature sets and parameters (and sources of error)\u2014together with further parameters governing their integration (Clark and Curran, 2007). We show that much simpler models can achieve high performance. Our model predicts lexical categories based on a tiny feature set of word embeddings, capitalization, and 2- character suffixes\u2014with no parsing model beyond a small set of CCG combinators, and no POS-\ntagger. Simpler models are easier to implement, replicate and extend.\nAnother goal of our model is to parse CCG optimally and efficiently, without using excessive pruning. CCG\u2019s large set of lexical categories, and generalized notion of constituency, mean that sentences can have a huge number of potential parses. Fast existing CCG parsers rely on aggressive pruning\u2014for example, the C&C parser uses a supertagger to dramatically cut the search space considered by the parser. Even the loosest beam setting for their supertagger discards the correct parse for 20% of sentences. The structure of our model allows us to introduce a simple but powerful heuristic for A\u2217 parsing, meaning it can parse almost 50 sentences per second exactly, with no beam-search or pruning. Adding very mild pruning increases the speed to 186 sentences per second with minimal loss of accuracy.\nOur approach faces two obvious challenges. Firstly, categories are assigned based on a local window, which may not contain the necessary context for resolving some attachment decisions. For example, in I saw a squirrel 2 weeks ago with a nut, the model cannot make an informed decision on whether to assign with an adverbial or adnominal preposition category, as the crucial words saw and squirrel fall outside the local context window. Secondly, even if the supertagger makes all lexical category decisions correctly, then the parser can still make erroneous decisions. One example is in coordination-scope ambiguities, such as clever boys and girls, where the two interpretations use the same assignment of categories.\nWe hypothesise that such decisions are relatively rare, and are challenging for any parsing model, so a weak model is unlikely to result in substantially lower accuracy. Our implementation of this model1, which we call EASYCCG, has high\n1Available from https://github.com/ mikelewis0/easyccg\n990\naccuracy\u2014suggesting that most parsing decisions can be made accurately based on a local context window.\nOf course, there are many parsing decisions that can only be made accurately with more complex models. However, exploring the power and limitations of simpler models may help focus future research on the more challenging cases."
        },
        {
            "heading": "2 Background",
            "text": ""
        },
        {
            "heading": "2.1 Combinatory Categorial Grammar",
            "text": "CCG (Steedman, 2000) is a strongly lexicalized grammatical formalism. Words have categories representing their syntactic role, which are either atomic, or functions from one category to another.\nPhrase-structure grammars have a relatively small number of lexical categories types (e.g. POS-tags), and a large set of rules used to build a syntactic analysis of a complete sentence (e.g. an adjective and noun can combine into a noun). In contrast, CCG parsing has many lexical category types (we use 425), but a small set of combinatory rule types (we use 10 binary and 13 unary rule schemata). This means that, aside from the lexicon, the grammar is small enough to be handcoded\u2014which allows us, in this paper, to confine the entire statistical model to the lexicon.\nCCG\u2019s generalized notion of constituency means that many derivations are possible for a given a set of lexical categories. However, most of these derivations will be semantically equivalent\u2014for example, deriving the same dependency structures\u2014in which case the actual choice of derivation is unimportant. Such ambiguity is often called spurious."
        },
        {
            "heading": "2.2 Existing CCG Parsing Models",
            "text": "The seminal C&C parser is by far the most popular choice of CCG parser (Clark and Curran, 2007). It showed that it was possible to parse to an expressive linguistic formalism with high speed and accuracy. The performance of the parser has enabled large-scale logic-based distributional research (Harrington, 2010; Lewis and Steedman, 2013a; Lewis and Steedman, 2013b; Reddy et al., 2014), and it is a key component of Boxer (Bos, 2008).\nThe C&C parser uses CKY chart parsing, with a log-linear model to rank parses. The vast number of possible parses means that computing the complete chart is impractical. To resolve this prob-\nlem, a supertagger is first run over the sentence to prune the set of lexical categories considered by the parser for each word. The initial beam outputs an average of just 1.2 categories per word, rather than the 425 possible categories\u2014making the standard CKY parsing algorithm very efficient. If the parser fails to find any analysis of the complete sentence with this set of supertags, the supertagger re-analyses the sentence with a more relaxed beam (adaptive supertagging)."
        },
        {
            "heading": "2.3 A\u2217 Parsing",
            "text": "Klein and Manning (2003a) introduce A\u2217 parsing for PCFGs. The parser maintains a chart and an agenda, which is a priority queue of items to add to the chart. The agenda is sorted based on the items\u2019 inside probability, and a heuristic upper-bound on the outside probability\u2014to give an upper bound on the probability of the complete parse. The chart is then expanded in best-first order, until a complete parse for the sentence is found.\nKlein and Manning calculate an upper bound on the outside probability of a span based on a summary of the context. For example, the summary for the SX heuristic is the category of the span, and the number of words in the sentence before and after the span. The value of the heuristic is the probability of the best possible sentence meeting these restrictions. These probabilities are pre-computed for every non-terminal symbol and for every possible number of preceding and succeeding words, leading to large look-up tables.\nAuli and Lopez (2011b) find that A\u2217 CCG parsing with this heuristic is very slow. However, they achieve a modest 15% speed improvement over CKY when A\u2217 is combined with adaptive supertagging. One reason is that the heuristic estimate is rather coarse, as it deals with the best possible outside context, rather than the actual sentence. We introduce a new heuristic which gives a tighter upper bound on the outside probability."
        },
        {
            "heading": "3 Model",
            "text": ""
        },
        {
            "heading": "3.1 Lexical Category Model",
            "text": "As input, our parser takes a distribution over all CCG lexical categories for each word in the sentence. These distributions are assigned using Lewis and Steedman (2014)\u2019s semi-supervised supertagging model. The supertagger is a unigram log-linear classifier that uses features of the \u00b13 word context window surrounding a word. The\nkey feature is word embeddings, initialized with the 50-dimensional embeddings trained in Turian et al. (2010), and fine-tuned during supervised training. The model also uses 2-character suffixes and capitalization features.\nThe use of word embeddings, which are trained on a large unlabelled corpus, allows the supertagger to generalize well to words not present in the labelled data. It does not use a POS-tagger, which avoids problems caused by POS-tagging errors.\nOur methods could be applied to any supertagging model, but we find empirically that this model gives higher performance than the C&C supertagger."
        },
        {
            "heading": "3.2 Parsing Model",
            "text": "Let a CCG parse y of a sentence S be a list of lexical categories c1 . . . cn and a derivation. If we assume all derivations licensed by our grammar are equally likely, and that lexical category assignments are conditionally independent given the sentence, we can compute the optimal parse y\u0302 as: y\u0302 = argmaxy \u220fn i=1 p(ci|S)\nAs discussed in Section 2.1, many derivations are possible given a sequence of lexical categories, some of which may be semantically distinct. However, our model will assign all of these an equal score, as they use the same sequence of lexical categories. Therefore we extend our model with a simple deterministic heuristic for ranking parses that use the same lexical categories. Given a set of derivations with equal probability, we output the one maximizing the sums of the length of all arcs in the corresponding dependency tree.\nThe effect of this heuristic is to prefer nonlocal attachments in cases of ambiguity, which we found worked better on development data than favouring local attachments. In cases of spurious ambiguity, all parses will have the same value of this heuristic, so one is chosen arbitrarily. For example, one of the parses in Figures 1a and 1b would be selected over the parse in Figure 1c.\nOf course, we could use any function of the parses in place of this heuristic, for example a head-dependency model. However, one aim of this paper is to demonstrate that an extremely simple parsing model can achieve high performance, so we leave more sophisticated alternatives to future work."
        },
        {
            "heading": "3.3 A\u2217 Search",
            "text": "For parsing, we use an A\u2217 search for the mostprobable complete CCG derivation of a sentence. A key advantage of A\u2217 parsing over CKY parsing is that it does not require us to prune the search space first with a supertagger, allowing the parser to consider the complete distribution of 425 categories for each word (in contrast to an average of 3.57 categories per word considered by the C&C parser\u2019s most relaxed beam). This is possible because A\u2217 only searches for the Viterbi parse of a sentence, rather than building a complete chart with every possible category per word (another alternative, used by Hockenmaier (2003), is to use a highly aggressive beam search in the parser).\nIn A\u2217 parsing, items on the agenda are sorted by their cost; the product of their inside probability and an upper bound on their outside probability.\nFor a span wi . . . wj with lexical categories ci . . . cj in a sentence S = w1 . . . wn, the inside probability is simply: \u220fj k=i p(ck|S)\nThe factorization of our model lets us give the following upper-bound on the outside probability: h(wi . . . wj) =\n\u220fk<i k=1maxckp(ck|S)\u00d7\u220fk\u2264n k=j+1maxckp(ck|S)\nThis heuristic assumes that all words outside the span will take their highest-probability supertag. Because the model is factored on lexical categories, this estimate is clearly an upper bound. As supertagging is over 90% accurate, the upper bound will often be exact, and in Section 4.3 we show empirically that it is extremely efficient. The values of the heuristic can be computed once for each sentence and cached.\nTo implement the preference for non-local attachment described in Section 3.2, if two agenda items have the same cost, the one with the longer dependencies is preferred.\nIntuitively, the parser first attempts to find a parse for the sentence using the 1-best category for each word, by building as complete a chart as possible. If it fails to find a parse for the complete sentence, it adds one more supertag to the chart (choosing the most probable tag not already in the chart), and tries again. This strategy allows the parser to consider an unbounded number of categories for each word, as it does not build a complete chart with all supertags."
        },
        {
            "heading": "3.4 Grammar",
            "text": "Here, we describe the set of combinators and unary rules in the EASYCCG grammar. Because we do not have any probabilistic model of the derivation, all rules can apply with equal probability. This means that some care needs to be taken in designing the grammar to ensure that all the rules are generally applicable. We also try to limit spurious ambiguity, and build derivations which are compatible with the C&C parser\u2019s scripts for extracting dependencies (for evaluation). We describe the grammar in detail, to ensure replicability.\nOur parser uses the following binary combinators from Steedman (2012): forward application, backward application, forward composition, backward crossed composition, generalized forward composition, generalized backward crossed composition. These combinators are posited to be linguistically universal. The generalized rules\nare generalized to degree 2. Following Steedman (2000) and Clark and Curran (2007), backward composition is blocked where the argument of the right-hand category is anN orNP . The unhelpful [nb] feature is ignored.\nAs in the C&C parser, we add a special Conjunction rule:\nY X >\nX \\X Where Y \u2208 {conj, comma, semicolon}. We block conjunctions where the right-hand category is type-raised, punctuation, N , or NP\\NP . This rule (and the restrictions) could be removed by changing CCGBank to analyse conjunctions with (X\\X)/X categories.\nWe also add syntagmatic rules for removing any punctuation to the right, and for removing openbrackets and open-quotes to the left\nThe grammar also contains 13 unary rules, listed in Table 1. These rules were chosen based on their frequency in the training data, and their clear semantic interpretations.\nFollowing Clark and Curran (2007), we also add a (switchable) constraint that only category combinations that have combined in the training data may combine in the test data. We found that this was necessary for evaluation, as the C&C conversion tool for extracting predicate-argument dependencies had relatively low coverage on the CCG derivations produced by our parser. While this restriction is theoretically inelegant, we found it did increase parsing speed without lowering lexi-\ncal category accuracy. We also use Eisner Normal Form Constraints (Eisner, 1996), and Hockenmaier and Bisk\u2019s (2010) Constraint 5, which automatically rule out certain spuriously equivalent derivations, improving parsing speed.\nWe add a hard constraint that the root category of the sentence must be a declarative sentence, a question, or a noun-phrase.\nThis grammar is smaller and cleaner than that used by the C&C parser, which uses 32 unary rules (some of which are semantically dubious, such as S[dcl]\u2192 NP\\NP ), and non-standard binary combinators such as merging two NP s into an NP . The C&C parser also has a large number of special case rules for handling punctuation. Our smaller grammar reduces the grammar constant, eases implementation, and simplifies the job of building downstream semantic parsers such as those of Bos (2008) or Lewis and Steedman (2013a) (which must implement semantic analogs of each syntactic rule)."
        },
        {
            "heading": "3.5 Extracting Dependency Structures",
            "text": "The parsing model defined in Section 3.2 requires us to compute unlabelled dependency trees from CCG derivations (to prefer non-local attachments). It is simple to extract an unlabelled dependency tree from a CCG parse, by defining one argument of each binary rule instantiation to be the head. For forward application and (generalized) forward composition, we define the head to be the left argument, unless the left argument is an endocentric head-passing modifier category X/X . We do the inverse for the corresponding \u2018backward\u2019 combinators. For punctuation rules, the head is the argument which is not punctuation, and the head of a Conjunction rule is the right-hand argument.\nThe standard CCG parsing evaluation uses a different concept of dependencies, corresponding to the predicate-argument structure defined by CCGBank. These dependencies capture a deeper information\u2014for example by assigning both boy and girl as subjects of talk in a boy and a girl talked. We extract these dependencies using the generate program supplied with the C&C parser."
        },
        {
            "heading": "3.6 Pruning",
            "text": "Our parsing model is able to efficiently and optimally search for the best parse. However, we found that over 80% of the run-time of our\npipeline was spent during supertagging. Naively, the log-linear model needs to output a probability for each of the 425 categories. This is expensive both in terms of the number of dot products required, and the cost of building the initial priorityqueue for the A\u2217 parsing agenda. It is also largely unnecessary\u2014for example, periods at the end of sentences always have the same category, but our supertagger calculates a distribution over all possible categories.\nNote that the motivation for introducing pruning here is fundamentally different from for the C&C pipeline. The C&C supertagger prunes the the categories so that the parser can build the complete set of derivations given those categories. In contrast, our parser can efficiently search large (or infinite) spaces of categories, but pruning is helpful for making supertagging itself more efficient, and for building the initial agenda.\nWe therefore implemented the following strategies to improve efficiency:\n\u2022 Only allowing at most 50 categories per word. The C&C parser takes on average 1.27 tags per word (and an average of 3.57 at its loosest beam setting), so this restriction is a very mild one. Nevertheless, it considerably reduces the potential size of the agenda.\n\u2022 Using a variable-width beam \u03b2 which prunes categories less likely than \u03b2 times the probability of the best category. We set \u03b2 = 0.00001, which is two orders-of-magnitude smaller than the equivalent C&C beam. Again, this heuristic is useful for reducing the length of the agenda.\n\u2022 Using a tag dictionary of possible categories for each word, so that weights are only calculated for a subset of the categories. Unlike the other methods, this approach does affect the probabilities which are calculated, as the normalizing constant is only computed for a subset of the categories. However, the probability mass contained in the pruned categories is small, and it only slightly decreases parsing accuracy. To build the tag dictionary, we parsed 42 million sentences of Wikipedia using our parser, and for all words occurring at least 500 times, we stored the set of observed word-category combinations. When parsing new sentences, these words are only allowed to occur with one of these categories."
        },
        {
            "heading": "4 Experiments",
            "text": ""
        },
        {
            "heading": "4.1 Experimental Setup",
            "text": "We trained our model on Sections 02-21 of CCGBank (Hockenmaier and Steedman, 2007), using Section 00 for development. For testing, we used Section 23 of CCGBank, a Wikipedia corpus annotated by Honnibal and Curran (2009), and the Bioinfer corpus of biomedical abstracts (Pyysalo et al., 2007). The latter two are out-of-domain, so are more challenging for the parsers.\nWe compare the performance of our model against both the C&C parser, and the system described in Lewis and Steedman (2014). This model uses the same supertagger as used in EASYCCG, but uses the C&C parser for parsing, using adaptive supertagging with the default values.\nAll timing experiments used the same 1.8Ghz AMD machine."
        },
        {
            "heading": "4.2 Parsing Accuracy",
            "text": "Results are shown in Table 2. Our parser performs competitively with a much more complex parsing model, and outperforms the C&C pipeline on both out-of-domain datasets. This result confirms our hypothesis that the majority of parsing decisions can be made accurately with a simple tagging model and a deterministic parser.\nWe see that the combination of the EASYCCG supertagger and the C&C parser achieves the best accuracy across all domains. This result shows that, unsurprisingly, there is some value to having a statistical model of the dependencies that the parser is evaluated on. However, the difference is not large, particularly out-of-domain, considering that a sophisticated and complex statistical parser is being compared with a deterministic one. Our parser is also far faster than this baseline.\nIt is interesting that the performance gap is\nmuch lower on out-of-domain datasets (2.8 points in domain, but only 0.65-0.75 out-of-domain), suggesting that much of the C&C parser\u2019s dependency model is domain specific, and does not generalize well to other domains.\nWe also briefly experimented using the C&C supertagger (with a beam of \u03b2 = 10\u22125) with the EASYCCG parser. Performance was much worse, with an F-score of 79.63% on the 97.8% of sentences it parsed on CCGBank Section 23. This shows that our model is reliant on the accuracy of the supertagger."
        },
        {
            "heading": "4.3 Parsing Speed",
            "text": "CCG parsers have been used in distributional approaches to semantics (Lewis and Steedman, 2013a; Lewis and Steedman, 2013b), which benefit from large corpora. However, even though the C&C parser is relatively fast, it will still take over 40 CPU-days to parse the Gigaword corpus on our hardware, which is slow enough to be an obstacle to scaling distributional semantics to larger cor-\npora such as ClueWeb. Therefore, it is important to be able to parse sentences at a high speed.\nWe measured parsing times on Section 23 of CCGBank (after developing against Section 00), using the optimizations described in Section 4.3. We also experimented with the null heuristic, which always estimates the outside probability as being 1.0. Times exclude the time taken to load models.\nResults are shown in Table 3. The best EASYCCG model is roughly four times faster than the C&C parser2. Adding the tag dictionary caused accuracy to drop slightly from 83.46 to 83.37, and meant the parser failed to parse a single sentence in the test set (\u201cAmong its provisions :\u201d) but other changes did not affect accuracy. The pruning in the supertagger improves parsing speed, by limiting the length of the priority queue it builds for the agenda. Of course, we could use a backoff model to ensure full coverage (analogously to adaptive supertagging), but we leave that to future work. Using our A\u2217 heuristic doubles the speed of parsing (excluding supertagging).\nTo better understand the properties of our model, we also investigate how parsing time varies with sentence length. Unlike the cubic CKY algorithm typically used by chart parsers, our A\u2217 search potentially takes exponential time in the sentence length. For this experiment, we used the Sections 02-21 of CCGBank. Sentences were divided into bins of width 10, and we calculated the average parsing time for sentences in each bin.\nResults are shown in Figure 2, and demon-\n2It is worth noting that the C&C parser code is written in highly-optimized C++, compared to our simple Java implementation. It seems likely that our parser could be made substantially faster with a similar level of engineering effort.\nstrate that while parsing is highly efficient for sentences of up to 50 words (over 95% of CCGBank), it scales super-linearly with long sentences. In fact, Section 00 contains a sentence of 249 words, which took 37 seconds to parse (3 times longer than the other 1912 sentences put together). In practice, this scaling is unlikely to be problematic, as long sentences are typically filtered when processing large corpora."
        },
        {
            "heading": "4.4 Semantic Parsing",
            "text": "A major motivation for CCG parsing is to exploit its transparent interface to the semantics, allowing syntactic parsers to do much of the work of semantic parsers. Therefore, perhaps the most relevant measure of the performance of a CCG parser is its effect on the accuracy of downstream applications.\nWe experimented with a supervised version of Reddy et al. (2014)\u2019s model for questionanswering on Freebase (i.e. without using Reddy et al.\u2019s lexicon derived from unlabelled text), using the WEBQUESTIONS dataset (Berant et al., 2013)3. The model learns to map CCG parses to database queries. We compare the performance of the QA system using both our parser and C&C, taking the 10-best parses from each parser for each sentence. Syntactic question parsing models were trained from the combination of 10 copies of Rimell and Clark (2008)\u2019s question dataset and one copy of the CCGBank\nThe accuracy of Reddy et al. (2014)\u2019s model varies significantly between iterations of the training data. Rather than tune the number of iterations, we instead measure the accuracy after each iteration. We experimented with the models\u2019 1-best answers, and the oracle accuracy of their 100 best answers. The oracle accuracy gives a better indication of the performance of the parser, by mitigating errors caused by the semantic component.\nResults are shown in Figure 3, and demonstrate that using EASYCCG can lead to better downstream performance than the C&C parser. The improvement is particularly large on oracle accuracy, increasing the upper bound on the performance of the semantic parser by around 4 points."
        },
        {
            "heading": "5 Related Work",
            "text": "CCG parsing has been the subject of much research. We have already described the C&C pars-\n3Using the Business, Film and People domains, with 1115 questions for training and 570 for testing.\ning model. Kummerfeld et al. (2010) showed that the speed of the C&C parser can be improved with domain-specific self-training\u2014similar improvements may be possible applying this technique to our model. Auli and Lopez (2011a) have achieved the best CCG parsing accuracy, by allowing the parser and supertagger to perform joint inference (though there is a significant speed penalty). Auli and Lopez (2011b) were the first to use A\u2217 parsing for CCG, but their system is both much slower and less accurate than ours (due to a different model and a different A\u2217 heuristic). Krishnamurthy and Mitchell (2014) show how CCG parsing can be improved by jointly modelling the syntax and semantics. Fowler and Penn (2010) apply the Petrov parser to CCG, making a small improvement in accuracy over the C&C parser, at the cost of a 300-fold speed decrease. Zhang and Clark (2011) and Xu et al. (2014) explored shift-reduce CCG parsing, but despite the use of a linear-time algorithm, parsing speed in practice is significantly slower than the C&C parser.\nParsers based on supertagging models have previously been applied to other strongly lexicalized formalisms, such as to LTAG (Bangalore and Joshi, 1999) and to HPSG (Ninomiya et al., 2006). A major contribution of our work over these is showing that factoring models on lexical categories allows fast and exact A\u2217 parsing, without the need for beam search. Our parsing approach could be applied to any strongly lexicalized formalism.\nOur work fits into a tradition of attempting to simplify complex models without sacrificing performance. Klein and Manning (2003b) showed that unlexicalized parsers were only slightly less accurate than their lexicalized counterparts. Col-\nlobert et al. (2011) showed how a range of NLP tagging tasks could be performed at high accuracy using a small feature set based on vectorspace word embeddings. However, the extension of this work to phrase-structure parsing (Collobert, 2011) required a more complex model, and did not match the performance of traditional parsing techniques. We achieve state-of-the-art results using the same feature set and a simpler model by exploiting CCG\u2019s lexicalized nature, which makes it more natural to delegate parsing decisions to a tagging model.\nOther parsing research has focused on building fast parsers for web-scale processing, typically using dependency grammars (e.g. Nivre (2003)). CCG has some advantages over dependency grammars, such as supporting surface-compositional semantics. The fastest dependency parsers use an easy-first strategy, in which edges are added greedily in order of their score, with O(nlog(n)) complexity (Goldberg and Elhadad, 2010; Tratz and Hovy, 2011). This strategy is reminiscent of our A\u2217 search, which expands the chart in a bestfirst order. A\u2217 has higher asymptotic complexity, but finds a globally optimal solution."
        },
        {
            "heading": "6 Future Work",
            "text": "We believe that our model opens several interesting directions for future research.\nOne interesting angle would be to increase the amount of information in CCGBank\u2019s lexical entries, to further reduce the search space for the parser. For example, PP categories could be distinguished with the relevant preposition as a feature; punctuation and coordination could be given more detailed categories to avoid needing their own combinators, and slashes could be extended\nwith Baldridge and Kruijff (2003)\u2019s multi-modal extensions to limit over-generation. Honnibal and Curran (2009) show how unary rules can be lexicalized in CCG. Such improvements may improve both the speed and accuracy of our model.\nBecause our parser is factored on a unigram tagging model, it can be trained from isolated annotated words, and does not require annotated parse trees or full sentences. Reducing the requirements for training data eases the task for human annotators. It may also make the model more amenable to semi-supervised approaches to CCG parsing, which have typically focused on extending the lexicon (Thomforde and Steedman, 2011; Deoskar et al., 2014). Finally, it may make it easier to convert other annotated resources, such as UCCA (Abend and Rappoport, 2013) or AMR (Banarescu et al., 2013), to CCG training data\u2014as only specific words need to be converted, rather than full sentences.\nOur model is weak at certain kinds of decisions, e.g. coordination-scope ambiguities or nonlocal attachments. Incorporating specific models for such decisions may improve accuracy, while still allowing fast and exact search\u2014for example, we intend to try including Coppola et al. (2011)\u2019s model for prepositional phrase attachment."
        },
        {
            "heading": "7 Conclusions",
            "text": "We have shown that a simple, principled, deterministic parser combined with a tagging model can parse an expressive linguistic formalism with high speed and accuracy. Although accuracy is not state-of-the-art on CCGBank, our model gives excellent performance on two out-of-domain datasets, and improves the accuracy of a questionanswering system. We have shown that this model allows an efficient heuristic for A\u2217 parsing, which makes parsing extremely fast, and may enable logic-based distributional semantics to scale to larger corpora. Our methods are directly applicable to other lexicalized formalisms, such as LTAG, LFG and HPSG."
        },
        {
            "heading": "Acknowledgments",
            "text": "We would like to thank Tejaswini Deoskar, Bharat Ram Ambati, Michael Roth and the anonymous reviewers for helpful feedback on an earlier version of this paper, and Siva Reddy for running the semantic parsing experiments."
        }
    ],
    "title": "A\u2217 CCG Parsing with a Supertag-factored Model",
    "year": 2014
}