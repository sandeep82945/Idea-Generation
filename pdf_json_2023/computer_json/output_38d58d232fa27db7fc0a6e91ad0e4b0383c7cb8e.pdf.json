{
    "abstractText": "Cybersecurity research demands continuous monitoring of the dynamic threat landscape to detect novel attacks. Researchers and security professionals often deploy honeypot networks to intercept and examine real attack data. However, due to the volume and variety of the collected data, it is very challenging for security analysts to investigate the attacks, compare their characteristics and infer their potential connections. To this end, we propose a novel graph-based cyberattack model for storing, analyzing, and visualizing honeynet-captured attacks as the main contribution of our work. Our model enables attack graph analysis and presents the attack data analogous to the Cyber Kill Chain framework to enable intuitive visualizations. We construct the attack graph by decomposing the intercepted attacks into a set of unique entities (represented as nodes) and actions (represented as edges) and merge them into a global attack graph. We develop a user-centric, interactive attack analysis and visualization tool that leverages the proposed model to aid the heuristic cyberattack investigation. We describe the design and technical implementation of the developed model and visual-interactive tool in detail. Finally, we demonstrate the developed tools and validate the model in an analysis of real-world attack data captured on our own distributed honeypot platform. We use the attack model and (sub)graph visualizations to depict attack topologies, identify recurring attackers, and quantify detected malware types. We also leverage graph data science algorithms to uncover and rank malware distribution networks, reveal hidden links between the attackers, and cluster the attack entities to identify potential botnets. INDEX TERMS Cyberattack analysis, attackmodeling, attacker links, big data, botnet detection, cyberthreat intelligence, cyberattack, cybersecurity, graph data science, graph modeling, honeynet, honeypot, malware distribution networks, threat modeling, visual analytics, visualization.",
    "authors": [
        {
            "affiliations": [],
            "name": "Matej Rabzelj"
        },
        {
            "affiliations": [],
            "name": "Ciril Bohak"
        },
        {
            "affiliations": [],
            "name": "Leon \u0160. Ju\u017eni\u010d"
        },
        {
            "affiliations": [],
            "name": "Andrej Kos"
        },
        {
            "affiliations": [],
            "name": "Urban Sedlar"
        }
    ],
    "id": "SP:df6e0a725567e30e2c4104ed43d7203531ca26c7",
    "references": [
        {
            "authors": [
                "V. Nicomette",
                "M. Ka\u00e2niche",
                "E. Alata",
                "M. Herrb"
            ],
            "title": "Set-up and deployment of a high-interaction honeypot: Experiment and lessons learned,\u2019",
            "venue": "Journal in Computer Virology,",
            "year": 2011
        },
        {
            "authors": [
                "E. Krokos",
                "A. Rowden",
                "K. Whitley",
                "A. Varshney"
            ],
            "title": "Visual Analytics for Root DNS Data,\u2019",
            "venue": "IEEE Symposium on Visualization for Cyber Security (VizSec). IEEE,",
            "year": 2018
        },
        {
            "authors": [
                "T. Yadav",
                "A.M. Rao"
            ],
            "title": "Technical Aspects of Cyber Kill Chain,\u2019",
            "year": 2015
        },
        {
            "authors": [
                "P.N. Bahrami",
                "A. Dehghantanha",
                "T. Dargahi",
                "R.M. Parizi",
                "K.-K.R. Choo",
                "H.H.S. Javadi"
            ],
            "title": "Cyber Kill Chain-Based Taxonomy of Advanced Persistent Threat Actors: Analogy of Tactics, Techniques, and Procedures,\u2019",
            "venue": "Journal of Information Processing Systems,",
            "year": 2019
        },
        {
            "authors": [
                "P.K. Manadhata",
                "J.M. Wing"
            ],
            "title": "A Formal Model for a System\u2019s Attack Surface,\u2019",
            "venue": "Advances in Information Security,",
            "year": 2011
        },
        {
            "authors": [
                "K.-w. Lye",
                "J.M. Wing"
            ],
            "title": "Game strategies in network security,\u2019",
            "venue": "International Journal of Information Security,",
            "year": 2005
        },
        {
            "authors": [
                "X. Cai",
                "K. Shi",
                "K. She",
                "S. Zhong",
                "Y. Tang"
            ],
            "title": "Quantized Sampled-Data Control Tactic for T-S Fuzzy NCS Under Stochastic Cyber-Attacks and Its Application to Truck-Trailer System,\u2019",
            "venue": "vol. 71,",
            "year": 2022
        },
        {
            "authors": [
                "A. Bose",
                "K. Shin"
            ],
            "title": "Agent-based modeling of malware dynamics in heterogeneous environments,\u2019",
            "venue": "Security and Communication Networks,",
            "year": 2013
        },
        {
            "authors": [
                "X. Cai",
                "K. Shi",
                "K. She",
                "S. Zhong",
                "Y.C. Soh",
                "Y. Yu"
            ],
            "title": "Performance Error Estimation and Elastic Integral Event Triggering Mechanism Design for T\u2013S Fuzzy Networked Control System Under DoS Attacks,\u2019",
            "venue": "vol. 31,",
            "year": 2023
        },
        {
            "authors": [
                "D. Dagon",
                "C. Zou",
                "W. Lee"
            ],
            "title": "Modeling Botnet Propagation Using Time Zones,\u2019",
            "venue": "Proceedings of the 13 Th Network and Distributed System Security Symposium NDSS,",
            "year": 2006
        },
        {
            "authors": [
                "H.S. Lallie",
                "K. Debattista",
                "J. Bal"
            ],
            "title": "A review of attack graph and attack tree visual syntax in cyber security,\u2019",
            "venue": "Computer Science Review,",
            "year": 2023
        },
        {
            "authors": [
                "C. Phillips",
                "L.P. Swiler"
            ],
            "title": "A graph-based system for networkvulnerability analysis,\u2019",
            "venue": "Proceedings of the 1998 Workshop on New Security Paradigms - NSPW \u201998. ACM Press,",
            "year": 1998
        },
        {
            "authors": [
                "J. Zeng",
                "S. Wu",
                "Y. Chen",
                "R. Zeng",
                "C. Wu"
            ],
            "title": "Survey of Attack Graph Analysis Methods from the Perspective of Data and Knowledge Processing,\u2019",
            "venue": "Security and Communication Networks,",
            "year": 2031
        },
        {
            "authors": [
                "I. Chokshi",
                "N. Ghosh",
                "S.K. Ghosh"
            ],
            "title": "Efficient generation of exploit dependency graph by customized attack modeling technique,\u2019",
            "venue": "in 2012 18th International Conference on Advanced Computing and Communications (ADCOM),",
            "year": 2012
        },
        {
            "authors": [
                "I. Kotenko",
                "M. Stepashkin"
            ],
            "title": "Attack Graph Based Evaluation of Network Security,\u2019",
            "venue": "Communications and Multimedia Security, ser. Lecture Notes in Computer Science,",
            "year": 2006
        },
        {
            "authors": [
                "X. Ou",
                "W.F. Boyer",
                "M.A. McQueen"
            ],
            "title": "A scalable approach to attack graph generation,\u2019",
            "venue": "Proceedings of the 13th ACM Conference on Computer and Communications Security, ser. CCS \u201906. Association for Computing Machinery,",
            "year": 2006
        },
        {
            "authors": [
                "S. Noel",
                "S. Jajodia"
            ],
            "title": "Managing attack graph complexity through visual hierarchical aggregation,\u2019",
            "venue": "Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security, ser. VizSEC/DMSEC \u201904. Association for Computing Machinery,",
            "year": 2004
        },
        {
            "authors": [
                "O.M. Sheyner"
            ],
            "title": "Scenario Graphs andAttackGraphs,\u2019",
            "venue": "Ph.D. dissertation, VOLUME",
            "year": 2023
        },
        {
            "authors": [
                "N. Idika"
            ],
            "title": "Characterizing and aggregating attack graph-based security metric,\u2019",
            "venue": "Ph.D. dissertation, Purdue UniversityWest Lafayette,",
            "year": 2011
        },
        {
            "authors": [
                "D. Tayouri",
                "N. Baum",
                "A. Shabtai",
                "R. Puzis"
            ],
            "title": "A Survey of MulVAL Extensions and Their Attack Scenarios Coverage",
            "year": 2022
        },
        {
            "authors": [
                "S. Noel",
                "S. Jajodia"
            ],
            "title": "Optimal IDS Sensor Placement and Alert Prioritization Using Attack Graphs,\u2019",
            "venue": "J. Network Syst. Manage.,",
            "year": 2008
        },
        {
            "authors": [
                "L.Wang",
                "T. Islam",
                "T. Long",
                "A. Singhal",
                "S. Jajodia"
            ],
            "title": "AnAttack Graph- Based Probabilistic Security Metric,\u2019",
            "venue": "Data and Applications Security XXII, ser. Lecture Notes in Computer Science,",
            "year": 2008
        },
        {
            "authors": [
                "S. Noel",
                "S. Jajodia",
                "L. Wang",
                "A. Singhal"
            ],
            "title": "Measuring Security Risk of Networks Using Attack Graphs,\u2019",
            "venue": "International Journal of Next Generation Computing,",
            "year": 2010
        },
        {
            "authors": [
                "N. Poolsappasit",
                "R. Dewri",
                "I. Ray"
            ],
            "title": "Dynamic Security Risk Management Using Bayesian Attack Graphs,\u2019",
            "venue": "IEEE Transactions on Dependable and Secure Computing,",
            "year": 2012
        },
        {
            "authors": [
                "R.E. Sawilla",
                "X. Ou"
            ],
            "title": "Identifying Critical Attack Assets in Dependency Attack Graphs,\u2019",
            "venue": "ESORICS",
            "year": 2008
        },
        {
            "authors": [
                "H. Huang",
                "S. Zhang",
                "X. Ou",
                "A. Prakash",
                "K. Sakallah"
            ],
            "title": "Distilling critical attack graph surface iteratively through minimum-cost SAT solving,\u2019",
            "venue": "Proceedings of the 27th Annual Computer Security Applications Conference, ser. ACSAC \u201911. Association for Computing Machinery,",
            "year": 2011
        },
        {
            "authors": [
                "L. Wang",
                "S. Jajodia",
                "A. Singhal",
                "P. Cheng",
                "S. Noel"
            ],
            "title": "K-Zero Day Safety: A Network Security Metric for Measuring the Risk of Unknown Vulnerabilities,\u2019",
            "venue": "IEEE Transactions on Dependable and Secure Computing,",
            "year": 2014
        },
        {
            "authors": [
                "X. Ou",
                "S. Govindavajhala",
                "A.W. Appel"
            ],
            "title": "MulVAL: A LogicbasedNetwork Security Analyzer,\u2019",
            "venue": "USENIX Security Symposium; http://www. usenix. org/events/sec05/tech/ou. html:",
            "year": 2005
        },
        {
            "authors": [
                "H. Holm",
                "M. Ekstedt",
                "T. Sommestad",
                "M. Korman"
            ],
            "title": "A Manual for the Cyber Security Modeling Language (simplified version),\u2019",
            "venue": "Department of Industrial Information and Control Systems, Royal Institute of Technology, Tech. Rep.,",
            "year": 2013
        },
        {
            "authors": [
                "M.L. Artz"
            ],
            "title": "NetSPA : A Network Security Planning Architecture,\u2019",
            "venue": "Thesis, Massachusetts Institute of Technology,",
            "year": 2002
        },
        {
            "authors": [
                "T. Li",
                "Y. Jiang",
                "C. Lin",
                "M.S. Obaidat",
                "Y. Shen",
                "J. Ma"
            ],
            "title": "DeepAG: Attack Graph Construction and Threats Prediction With Bi-Directional Deep Learning,\u2019",
            "venue": "IEEE Transactions on Dependable and Secure Computing,",
            "year": 2023
        },
        {
            "authors": [
                "B. Asvija",
                "R. Eswari",
                "M.B. Bijoy"
            ],
            "title": "Bayesian attack graphs for platform virtualized infrastructures in clouds,\u2019",
            "venue": "Journal of Information Security and Applications,",
            "year": 1930
        },
        {
            "authors": [
                "T. Wang",
                "Q. Lv",
                "B. Hu",
                "D. Sun"
            ],
            "title": "CVSS-based Multi-Factor Dynamic Risk Assessment Model for Network System,\u2019",
            "venue": "IEEE 10th International Conference on Electronics Information and Emergency Communication (ICEIEC),",
            "year": 2020
        },
        {
            "authors": [
                "D. Malzahn",
                "Z. Birnbaum"
            ],
            "title": "Wright-Hamor, \u2018\u2018Automated Vulnerability Testing via Executable Attack Graphs,\u2019",
            "venue": "International Conference on Cyber Security and Protection of Digital Services (Cyber Security),",
            "year": 2020
        },
        {
            "authors": [
                "H. Shiravi",
                "A. Shiravi",
                "A.A. Ghorbani"
            ],
            "title": "A Survey of Visualization Systems for Network Security,\u2019",
            "venue": "IEEE Transactions on Visualization and Computer Graphics,",
            "year": 2012
        },
        {
            "authors": [
                "S.-c. Liu",
                "Y. Liu"
            ],
            "title": "Network security risk assessment method based on HMM and attack graph model,\u2019",
            "venue": "in 2016 17th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD),",
            "year": 2016
        },
        {
            "authors": [
                "S. Peryt",
                "J. AndreMorales",
                "W. Casey",
                "A. Volkmann",
                "B.Mishra",
                "andY. Cai"
            ],
            "title": "Visualizing aMalwareDistributionNetwork,\u2019",
            "venue": "IEEE Symposium on Visualization for Cyber Security (VizSec),",
            "year": 2016
        },
        {
            "authors": [
                "A. Ulmer",
                "M. Schufrin",
                "D. Sessler",
                "J. Kohlhammer"
            ],
            "title": "Visual- Interactive Identification of Anomalous IP-Block Behavior Using Geo- IP Data,\u2019",
            "venue": "IEEE Symposium on Visualization for Cyber Security (VizSec),",
            "year": 2018
        },
        {
            "authors": [
                "J. McPherson",
                "K.-L. Ma",
                "P. Krystosk",
                "T. Bartoletti",
                "M. Christensen"
            ],
            "title": "PortVis: A tool for port-based detection of security events,\u2019",
            "venue": "Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security - VizSEC/DMSEC \u201904. ACM Press,",
            "year": 2004
        },
        {
            "authors": [
                "X. Yin",
                "W. Yurcik",
                "M. Treaster",
                "Y. Li",
                "K. Lakkaraju"
            ],
            "title": "VisFlowConnect: Netflow visualizations of link relationships for security situational awareness,\u2019",
            "venue": "Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security, ser. VizSEC/DMSEC \u201904. Association for Computing Machinery,",
            "year": 2004
        },
        {
            "authors": [
                "L. Williams",
                "R. Lippmann",
                "K. Ingols",
                "\u2018\u2018An"
            ],
            "title": "Interactive Attack Graph Cascade and Reachability Display,\u2019",
            "venue": "VizSEC",
            "year": 2007
        },
        {
            "authors": [
                "A. Xie",
                "Z. Cai",
                "C. Tang",
                "J. Hu",
                "Z. Chen"
            ],
            "title": "Evaluating Network Security With Two-Layer Attack Graphs,\u2019",
            "venue": "Proceedings of 2009 Annual Computer Security Applications Conference,",
            "year": 2009
        },
        {
            "authors": [
                "M. Chu",
                "K. Ingols",
                "R. Lippmann",
                "S. Webster",
                "S. Boyer"
            ],
            "title": "Visualizing attack graphs, reachability, and trust relationships with NAVIGATOR,\u2019",
            "venue": "Proceedings of the Seventh International Symposium on Visualization for Cyber Security, ser. VizSec \u201910. Association for Computing Machinery,",
            "year": 2010
        },
        {
            "authors": [
                "M. Angelini",
                "N. Prigent",
                "G. Santucci"
            ],
            "title": "PERCIVAL: Proactive and reactive attack and response assessment for cyber incidents using visual analytics,\u2019",
            "venue": "IEEE Symposium on Visualization for Cyber Security (VizSec),",
            "year": 2015
        },
        {
            "authors": [
                "S. Noel",
                "E. Harley",
                "M.K. Tam"
            ],
            "title": "Limiero, andM. Share, \u2018\u2018CyGraph: Graph- Based Analytics and Visualization for Cybersecurity,\u2019",
            "venue": "Handbook of Statistics. Elsevier, 2016,",
            "year": 2016
        },
        {
            "authors": [
                "S. O\u2019Hare",
                "S. Noel",
                "K. Prole"
            ],
            "title": "A Graph-Theoretic Visualization Approach to Network Risk Analysis,\u2019",
            "year": 2008
        },
        {
            "authors": [
                "M. Angelini",
                "S. Bonomi",
                "S. Lenti",
                "G. Santucci"
            ],
            "title": "Taggi, \u2018\u2018MAD: A visual analytics solution for Multi-step cyber Attacks Detection,\u2019",
            "venue": "Journal of Computer Languages,",
            "year": 2019
        },
        {
            "authors": [
                "O. Tsigkas",
                "O. Thonnard",
                "D. Tzovaras"
            ],
            "title": "Visual spam campaigns analysis using abstract graphs representation,\u2019",
            "venue": "Proceedings of the Ninth International Symposium on Visualization for Cyber Security, ser. VizSec \u201912. Association for Computing Machinery,",
            "year": 2012
        },
        {
            "authors": [
                "J.J. Fowler",
                "T. Johnson",
                "P. Simonetto",
                "M. Schneider",
                "C. Acedo",
                "S. Kobourov",
                "L. Lazos"
            ],
            "title": "IMap: Visualizing network activity over internet maps,\u2019",
            "venue": "Proceedings of the Eleventh Workshop on Visualization for Cyber Security, ser. VizSec \u201914. Association for Computing Machinery,",
            "year": 2014
        },
        {
            "authors": [
                "G. Ikuomenisan",
                "Y. Morgan"
            ],
            "title": "Systematic Review of Graphical Visual Methods in Honeypot Attack Data Analysis,\u2019",
            "venue": "Journal of Information Security,",
            "year": 2022
        },
        {
            "authors": [
                "J. Bertin"
            ],
            "title": "Semiology of Graphics: Diagrams, Networks, Maps",
            "venue": "ESRI Press,",
            "year": 2011
        },
        {
            "authors": [
                "G.A. Miller"
            ],
            "title": "The magical number seven, plus or minus two: Some limits on our capacity for processing information,\u2019\u2019Psychological",
            "venue": "Review, vol",
            "year": 1956
        },
        {
            "authors": [
                "L. Graham"
            ],
            "title": "Gestalt theory in interactive media design,\u2019",
            "venue": "Journal of Humanities & Social Sciences,",
            "year": 2008
        },
        {
            "authors": [
                "H. Kobayashi",
                "Z. Zhang",
                "H. Ochiai",
                "H. Esaki"
            ],
            "title": "Probing Firewalls of Malware-Infected Networks with Honeypot,\u2019",
            "venue": "Proceedings of the 14th International Conference on Future Internet Technologies. ACM,",
            "year": 2019
        },
        {
            "authors": [
                "E. Vasilomanolakis",
                "S. Karuppayah",
                "P. Kikiras",
                "M. M\u00fchlh\u00e4user"
            ],
            "title": "A honeypot-driven cyber incident monitor: Lessons learned and steps ahead,\u2019",
            "venue": "Proceedings of the 8th International Conference on Security of Information and Networks. ACM,",
            "year": 2015
        },
        {
            "authors": [
                "C. Wagner",
                "A. Dulaunoy",
                "G. Wagener"
            ],
            "title": "Iklody, \u2018\u2018MISP: The Design and Implementation of a Collaborative Threat Intelligence Sharing Platform,\u2019",
            "venue": "Proceedings of the 2016 ACM on Workshop on Information Sharing and Collaborative Security. ACM,",
            "year": 2016
        },
        {
            "authors": [
                "A. Kyriakou",
                "N. Sklavos"
            ],
            "title": "Container-Based Honeypot Deployment for the Analysis of Malicious Activity,\u2019",
            "venue": "Global Information Infrastructure and Networking Symposium (GIIS),",
            "year": 2018
        },
        {
            "authors": [
                "A. Bar",
                "B. Shapira",
                "L. Rokach",
                "M. Unger"
            ],
            "title": "Identifying Attack Propagation Patterns in Honeypots Using Markov Chains Modeling and Complex Networks Analysis,\u2019",
            "venue": "IEEE International Conference on Software Science, Technology and Engineering (SWSTE). IEEE,",
            "year": 2016
        },
        {
            "authors": [
                "H. Studiawan",
                "S. Djanali",
                "B. Pratomo"
            ],
            "title": "Graph-based forensic analysis of web honeypot,\u2019",
            "venue": "Journal of Telecommunications and Information Technology,",
            "year": 2016
        },
        {
            "authors": [
                "G. Fernandez",
                "A. Nieto",
                "J. Lopez"
            ],
            "title": "ModelingMalware-drivenHoneypots,\u2019\u2019 in Proceedings of Trust, Privacy and Security in Digital Business: 14th International Conference, TrustBus",
            "year": 2017
        },
        {
            "authors": [
                "K. Durkota",
                "V. Lisy",
                "C. Kiekintveld",
                "B. Bosansky",
                "M. Pechoucek"
            ],
            "title": "Case Studies of Network Defense with Attack Graph Games,\u2019",
            "venue": "IEEE Intelligent Systems,",
            "year": 2016
        },
        {
            "authors": [
                "A.H. Anwar",
                "C. Kamhoua",
                "N. Leslie"
            ],
            "title": "Honeypot Allocation over Attack Graphs in Cyber Deception Games,\u2019",
            "venue": "International Conference on Computing, Networking and Communications (ICNC),",
            "year": 2020
        },
        {
            "authors": [
                "Y. Gao",
                "G. Zhang",
                "C. Xing"
            ],
            "title": "A Multiphase Dynamic Deployment Mechanism of Virtualized Honeypots Based on Intelligent Attack Path Prediction,\u2019",
            "venue": "Security and Communication Networks,",
            "year": 2021
        },
        {
            "authors": [
                "S. Noel"
            ],
            "title": "A Review of Graph Approaches to Network Security Analytics,\u2019",
            "venue": "From Database to Cyber Security,",
            "year": 2018
        },
        {
            "authors": [
                "S.-Y. Ji",
                "B.-K. Jeong",
                "D.H. Jeong"
            ],
            "title": "Evaluating visualization approaches to detect abnormal activities in network traffic data,\u2019",
            "venue": "International Journal of Information Security, vol. 20,",
            "year": 2021
        },
        {
            "authors": [
                "T.L. Weissgerber",
                "N.M. Milic",
                "S.J. Winham",
                "V.D. Garovic"
            ],
            "title": "Beyond Bar and Line Graphs: Time for a New Data Presentation Paradigm,\u2019",
            "venue": "PLOS Biology,",
            "year": 2015
        },
        {
            "authors": [
                "T. Green"
            ],
            "title": "Cognitive dimensions of notations,\u2019",
            "venue": "People and Computers V. Cambridge, UK: Cambridge University Press, pp. pp 443\u2013460,",
            "year": 1989
        },
        {
            "authors": [
                "A.H.S. Chan",
                "A.W.Y. Ng"
            ],
            "title": "Perceptions of implied hazard for visual and auditory alerting signals,\u2019",
            "venue": "Safety Science,",
            "year": 2009
        },
        {
            "authors": [
                "O. Omojola"
            ],
            "title": "Using Symbols and Shapes for Analysis in Small Focus Group Research,\u2019",
            "venue": "The Qualitative Report,",
            "year": 2016
        },
        {
            "authors": [
                "M. Bastian",
                "S. Heymann",
                "M. Jacomy"
            ],
            "title": "Gephi: An Open Source Software for Exploring and Manipulating Networks,\u2019",
            "venue": "Proceedings of the international AAAI conference on web and social media,",
            "year": 2009
        },
        {
            "authors": [
                "M. Franz",
                "C.T. Lopes",
                "G. Huck",
                "Y. Dong",
                "O. Sumer",
                "G.D. Bader"
            ],
            "title": "Cytoscape.js: A graph theory library for visualisation and analysis,\u2019",
            "venue": "Bioinformatics, p. btv557,",
            "year": 2015
        },
        {
            "authors": [
                "R. Tarjan"
            ],
            "title": "Depth first search and linear graph algorithms,\u2019",
            "venue": "Siam Journal on Computing,",
            "year": 1972
        }
    ],
    "sections": [
        {
            "text": "INDEX TERMS Cyberattack analysis, attackmodeling, attacker links, big data, botnet detection, cyberthreat intelligence, cyberattack, cybersecurity, graph data science, graph modeling, honeynet, honeypot, malware distribution networks, threat modeling, visual analytics, visualization.\nI. INTRODUCTION\nIn order to secure online systems against known threats and discover new attacks, malicious behavior must be continuously monitored and actively studied. While known attack methods can be simulated in penetration testing scenarios to assess system security, novel attack techniques are more challenging to study. They can either be investigated during a post-incident forensic analysis on compromised systems or intercepted by specialized services, known as honeypots, to lure the attackers and collect data about their actions. Security researchers then analyze the acquired data to understand the mechanics of attack operations and attempt to model the attacks to aid their future detection and prevention. During the analysis, data visualization tools are often used to build\nvisual attack representations and help reduce data complexity, discover prominent features, and reveal hidden links.\nHoneypots are dedicated systems that resemble the functionality of production environments and emulate the behavior of real systems yet expose enough information or computing resources to appear attractive to attackers [1]. They include specialized software to log the actions of the adversaries and alert administrators. Advanced honeypot systems also offer highly interactive sandbox environments inside which the attacker is monitored during the post-exploitation phase of the attack [1]. Experts then process and analyze the collected data to assess threats and learn about potential new attack mechanisms. However, data analysis can be challenging due to the ever-increasing volume of recorded events, most of\nVOLUME 11, 2023 1\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nwhich are performed by automated bots; this problem is further exacerbated in large distributed honeypot systems with large numbers of targets.\nSince manual examination of massive amounts of recorded events is tedious and error-prone, automated attack identification using anomaly detection algorithms is often proposed [2]. This method relies on service or user models to distinguish between normal and abnormal events or user behavior and alert of a potential cyberattack. However, to build reliable attack detection models while minimizing false positives, a more profound, human-driven investigation is often required first to understand the objectives of the cyberattack andmodel its structure and mechanics [2]. Nevertheless, the volume and variety of the collected data often make it difficult for security analysts to investigate the attacks, compare their characteristics, or infer their potential connections. With this in mind and upon consultation with the stakeholders in the cyberdefence domain, we propose a novel attack graph model paired with amodern attack analysis tool suitable for heuristic cyberattack investigation using a visual-interactive approach. Our model stores honeypot-collected attack data in the form of a mathematical graph, while our attack analysis tool enables human-oriented visualization of logical attack structure, interactive discovery of cross-attack entity relations, and automation of attacker community detection using graph analysis algorithms.\nThe primary contribution of this paper is a novel graphbased cyberattack model for storage, analysis, and visualization of captured real-world attacks, either from a system of network honeypots or from real production systems. Our model stores the attack data in the form of attack entities, their metadata, and attacker actions and enables direct attack visualization on a graph that is consistent with Lockheed Martin\u2019s Cyber Kill Chain framework [3], depicting its chain of events on actual data. We construct the proposed model by decomposing the captured attacks into a set of unique attack entities and attacker actions. We model the individual attack entities as nodes and use edges to demonstrate actions or entity relations to form the attack graphs for each recorded attack. We then merge all individual attack graphs from multiple honeynet nodes into a single global attack graph to reveal data links between various attack entities, identify attack patterns, and uncover attacker networks.\nThe secondary contribution of our paper is a modern proofof-concept tool leveraging our proposed cyberattack model for visual-interactive, heuristic analysis of the captured attack data. We implement the proposed attack model in a webbased cyberattack visualization and analysis tool, enabling interactive data exploration, analysis, and topological classification of individual attacks. We then validate the usefulness of the proposed cyberattack model and the developed visual analysis tool by performing a practical analysis of captured real-world attacks. We believe the results obtained using our tools and methods are significant as they demonstrate the power of interactive visual analytics designed with end users inmind, for the detection, analysis, andmitigation of potential\ncyberthreats. The structure of this document is as follows. First, we review related work on cyberattack data collection, analysis, modeling, and visualization. We highlight the importance of continuous monitoring of the dynamic threat landscape and provide insights into the challenges of addressing a wide variety of cyberattacks with a unified model. We discuss the limitations of existing approaches to the design of salient, cognitively effective cyberattack visualizations and analysis tools. Next, we briefly describe our distributed honeypot system, which serves as the source of real-world data for our analyses. Based on that, we propose a novel attack presentation model tailored to real-world datasets and describe its design and implementation in detail. We focus on developing an extensible attack data model based on the Cyber Kill Chain framework and put emphasis on designing user-centric interactive visualizations to address the identified shortcomings of the previous works. Next, we illustrate typical security analyst use cases and use the developed tools and methods to demonstrate the identification and analysis of potential cyber threats. Finally, we conclude with the analysis results, discuss the encountered challenges and limitations of our approach, and outline prospects for future work in this area."
        },
        {
            "heading": "II. RELATED WORK",
            "text": "Cybersecurity is the practice of protecting systems, networks, and programs from digital attacks. It is a broad field of research concerning many highly specialized topics. These range from social engineering to hardware vulnerability exploitation and demand expert knowledge and extensive research due to the complexity and interdependent nature of modern technologies. Therefore, existing cybersecurity knowledge is fragmented across the community of experts and practitioners in industry, academia, and government sectors [4]. For these reasons, it is challenging to address a wide variety of cyberattacks with a unified model, let alone depict them with a single visualization technique. However, several intelligence-sharing initiatives were started to address the growing number of cyber threats, and several security frameworks were developed for attack and defense modeling."
        },
        {
            "heading": "A. CYBERATTACK GRAPH MODELING",
            "text": "Threat and attack modeling are essential parts of cybersecurity research. Security professionals use threat modeling to estimate threats in their specific environments and design corresponding cyberdefense strategies [5]. Attack modeling attempts to study the actions of threat actors further and understand the details of the attacks. Modeling, therefore, relies on the analysis of adversarial tactics, techniques, and procedures (TTP) [6], as well as their tools, to understand, detect and deflect the attacks. Models allow for the generalization of attacks to aid their detection and help penetration testers simulate or recreate them to assess the security of their systems. Several cyberattack models exist. Some are highly specific to individual domains, whereas others offer a high-level representation of general attack characteristics."
        },
        {
            "heading": "2 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nAttack modeling techniques (AMT) include various implementations of attack graphs and trees, attack surface modeling methods [7], application of game theory in network security [8], stochastic cyberattack modeling [9], agent-based models [10], error-estimation-based denial-of-service attack modeling [11], differential-equation-based models [12], as well as the DiamondModel of Intrusion Analysis [13] and the Cyber Kill Chain among others. In line with the direction of our research, we primarily focused on attack graph modeling and the Cyber Kill Chain framework.\nLallie et al. [14] argue that graph-based attack modeling is the most popular choice in academic literature. The attack graph model was first proposed in 1998 [15] and has since become one of the most widely used security tools. Attack graphs and trees may simulate attack steps and paths used by the attackers to invade the network [16]. They may depict exploitation co-dependencies and attack steps [17] or display network topology and form a basis for evaluating attack vectors and assessing network security [18]. However, attack data acquisition can quickly accumulate large amounts of information, making it difficult to store and visualize it as a graph. Therefore, approaches toward graph modeling must be scalable [19] and use carefully crafted visualization to deliver salient information and reduce graph complexity [14], [20]. High-level attack representations, such as the Cyber Kill Chain framework, avert this issue by trading details on attack data for a generalized image of attack execution. The Cyber Kill Chain breaks down Advanced Persistent Threat (APT) attacks into seven crucial execution steps (Reconnaissance, Weaponization, Delivery, Exploitation, Installation, Command & Control, and Actions on Objectives) to provide a temporal insight into the course of the attack. It has a proven track record, and has been used by the United States Department of Defence for many years [5].\nResearchers, therefore, classify modeling methods, security metrics, and attack graphs into different categories. Sheyner [21] describes scenario graphs, attack graphs, and network attack graphs. Idika [22] categorizes primary and secondary network security metrics and discusses conditionoriented, exploit-oriented, and condition-exploit-oriented attack graphs. Recent reviews of attack graph modeling offer even further categorization by graph types and properties (attack trees, fault trees, state graphs, exploit dependency graphs, logical attack graphs, multiple prerequisite attack graphs, Petri nets, Bayes attack graphs) [23] and graph algorithms used for data analysis (graph path algorithms, node importance sorting algorithms, Markov models, Bayesian networks) [14], as well as graph generation methods and their visual syntax [16].\nMany studies focus on attack graph generation for cyberattack analysis and network security assessment. Noel and Jajodia [24] used attack graph analysis to aid optimal IDS sensor placement in a network and prioritize IDS alerts. They predicted all possible attack paths to reach critical assets and minimized the number of required sensors while maintaining coverage of the whole network. Kotenko and\nStephashkin [18] used network hosts and attack actions to compose combined graph objects, such as routes and threats. They suggested a new approach to network security level evaluation using qualitative risk assessment and quantitative computation on the basis of Bayesian networks. Wang et al. [25] developed an attack graph-based probabilistic security metric for multi-step attacks exploiting multiple vulnerabilities. To do so, they considered the attacker\u2019s activity status and modeled the causal relationships between vulnerabilities to form an attack graph. Similarly, Noel et al. [26] addressed the limitations of models relying on individual security metrics and combined vulnerability interdependencies to analyze all potential attack paths through a network and provide ametric of overall system risk. Poolsappasit et al. [27] proposed a risk management framework using the Bayesian Attack Graphs (BAG) to quantify the chances of network compromise at various levels. They based their metrics on the Common Vulnerability Scoring System (CVSS) and used the acquired information to develop a security mitigation and management plan. Further, Sawilla and Ou [28] addressed the size and complexity of the attack graphs, which often prevented humans from fully comprehending the conveyed information. They did so by distilling the amount of information in a graph with the newly proposed AssetRank algorithm, a generalization of Google\u2019s PageRank [29], to assess the importance of the graph vertices representing vulnerabilities and attacker privileges. Huang et al. [30] also studied attack graph distillation to achieve a reasonable balance between the completeness of the graph and its usefulness. Their iterative method reduced the dependency attack graphs for moderately sized enterprise networks to an 85% smaller critical attack surface. Wang et al. [31] studied the use of attack graphs to develop a risk assessment metric for exploitation of yet unknown vulnerabilities (zero-day attacks). They developed the k-zero day safety metric and defined a zero-day attack graph composed of known and unknown exploits. Their metric was based on the count of the number of vulnerabilities required to be successfully exploited to compromise a network asset. A higher vulnerability count implied better security due to the lower likelihood of their presence. Most recent attack graphmodeling surveys were conducted by Zeng et al. [16], reviewing attack graph analysis methods from the perspective of data processing in 2019, Lallie et al. [14] surveying attack graph and attack tree visual syntax approach in 2020, and Tayouri et al. [23] surveying attack scenario coverage of MulVAL [32] extensions in 2022. The authors of the latter conducted a systematic literature review of 938 papers and identified four new major attack graph generation tools in the last 10 years. Namely, in 2013, Holm et al. [33], [34] presented a graph-based tool for quantitative cyber security analysis of enterprises. Their publications reviewed the shortcomings of the earlier security estimation tools, such as NetSPA [35] and MulVAL. They described the developed Cyber Security Modeling Language (CySeMoL) and an attack graph tool tailored for modeling the critical infrastructure in power distribution networks. In 2021, Nadeem\nVOLUME 11, 2023 3\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\net al. [36] presented SAGE, an intrusion alert-driven attack graph extractor for cyber threat intelligence. Their proposal did not rely on vulnerability information for the derivation of attack graphs; rather, it constructed them from the intrusion alerts on a temporal and probabilistic basis. The solution was evaluated on open-source datasets in order to analyze the distributed multi-staged attacks. In the same year, Li et al. [37] constructed a knowledge graph extractor to collect different aspects of attack techniques and enhance attack behavior graphs from cyber threat intelligence reports. Their solution, AttacKG, was heavily based on aggregated data from threat intelligence feeds and the MITRE ATT&CK [38] platform. Moreover, Li et al. [39] recently worked on deep learning approaches to threat detection using system logs. They proposed DeepAG, a framework for the detection of attack sequences, and the construction of attack graphs for attack path prediction. Asvija et al. [40] used BAG to address the security of platform virtualized infrastructures in cloud environments. They used the reported attacks on virtualized systems to encapsulate all possible attack paths on the virtualization stack. They then modeled the identified threats as a Bayesian attack graph and derived the exploit probabilities based on CVSS scores. Similarly, Wang et al. [41] proposed a CVSS-based multi-factor risk assessment model using attack paths to model an attacker\u2019s capability and estimate the probabilities for successful vulnerability exploitation. Lastly, Malzahn et al. [42] presented automated vulnerability testing via executable attack graphs in a virtual environment to enhance the reproducibility and consistency of risk analyses."
        },
        {
            "heading": "B. ATTACK GRAPH VISUALIZATION AND ANALYSIS TOOLS",
            "text": "Graphs are used to visualize network elements and their connections [43], display attack paths [44], and visualize malware distribution networks [45]. However, their usability often decreases with the increasing number of network nodes [19]. Geospatial representations allow for IP address mapping to their geographical origin or destination and assist in the real-time visualization of cyber threats [46]. Scatter plots are used for port activity visualization [47], whereas parallel plotsmay reveal anomalous network traffic patterns [48]. Security visualizations, therefore, encompass a wide range of varied data presentation techniques andmay entail fundamentally very different objectives.\nWilliams et al. [49] presented an interactive tool for simplified tracing of the attackers\u2019 paths and an intuitive understanding of the attack graph based on the underlying network topology. Their solution was based on NetSPA for graph generation and a Java application for its visualization. It scaled to networks with thousands of hosts. Xie et al. [50] proposed network security evaluation with two-layered attack graphs. They represented the host access graph in the upper layer and composed the lower layer of host-pair attack graphs. Their proposition addressed the intelligibility of graphs in large networks and focused on reducing the time for their computation. They presented an overall network security evaluation using grayscale images. Chu et al. [51] developed a tool named\nNAVIGATOR for the visualization of network assets, attacks, graphs, and operational recommendations. The tool allowed for network state visualization, as well as visualization of client-side, server-side, credential-based, and trust-based attacks. In 2015, Angelini et al. [52] presented PERCIVAL, a visual analytics environment for situational awareness and security event monitoring. Their visualization allowed for monitoring of attack progress and evolution. One year later, MITRECorporation introduced CyGraph [53], a graph-based analytics and visualization system for cybersecurity. Their system captured incremental attack and vulnerability information, as well as security events within a network environment. It correlated the captured data and built a predictive model of possible attack paths to provide an overall picture for situational awareness in cybersecurity. The system was based on TVA/Cauldron [54] and offered layered visualizations of stored attack graphs. In 2019, Angelini et al.presented a new visual analytics solution for multi-step cyber attack detection [55]. The solution was aimed at assisting security operators, improving network security using attack analysis, and identifying suitable mitigations. Furthermore, Leichtnam et al. [56] proposed STARLORD, a data representation model and visualization approach for linked security exploration of heterogeneous sources in a 3D graph. Their solution used clustering to select data for visualizations and highlighted links between malicious events. Peryt et al. [45] used graphs to visualize malware distribution networks based on toplevel-domain data collected from Google Safe Browsing reports. Tsigkas et al. [57] leveraged abstract graph representations to visually analyze spam campaigns, while Fowler et al. [58] proposed a graph and heatmap-based detection of security threats by visualizing a large volume of dynamic network data. Attack graph visualizations were extensively reviewed by Lallie et al. [14] in 2019 and Ikuomenisan and Morgan in 2022 [59]. Lallie et al. [14] reviewed the visual syntax design theory and conducted a systematic literature review of 370 papers on attack graphs to quantify the employed visualization methods and visualized constructs. Their analysis identified 181 attack graph visual syntax configurations. Their reviewed design theories included the use of Bertin\u2019s visual variables [60], Miller\u2019s law [61], The Primary and Secondary Notation Theory [62], The Physics of Notations [63], Petre\u2019s visual distance [62], and the Gestalt theories [64]. On the other hand, Ikuomenisan and Morgan [59] reviewed visualization practices and commonly used methods for the discovery and communication of attack patterns based on honeypot data [59]. They screened 218 papers using the PRISMA methodology and evaluated 37 papers with higher impact. They reviewed visualization frameworks for forensic honeypot data analysis and visual analysis pipelines for the transformation of raw input data into visual components. Ikuomenisan and Morgan [59] observed that a significant number of honeypot papers conducted summary statistics of static data (IP address, port, packet size), visually analyzed attack data only using simple graphical methods (line, bar and"
        },
        {
            "heading": "4 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\npie charts) and did not follow basic visualization principles and best practices in their use of color [59]. Similarly, Lallie et al. [14] revealed the absence of standardization, ambiguous semantics, and inadequacy of scientific approach towards the visualization design based on cognitive theories, concluding that many AMTs have not undergone an effective design process [14]. Ikuomenisan and Morgan [59] outlined rare implementations of customized visualization techniques (Hilbercurve for honeypot data analysis [65], honeypot driven cyberincident monitor [66], bipartite graph visualization applied to IDS alerts [67], visualization of actionable knowledge for DRDoSmitigation [68]) as a positive development for pattern discovery and perceptual experience and called for further research in the field. Lallie et al. [14] noted that ineffective design leads to cognitively inefficient systems and attributed the fragmentation of efforts to the immaturity of the research field. They further indicated that methods for formal evaluation of the diverse conceptual models and the effectiveness of their visualizations remain scarce and limited [14]. They emphasized the shortcomings of some of the employed evaluation approaches, citing their statistical insignificance, unclear measures, as well as personal judgment [14]. Moreover, the authors of the study outlined the internal and external semiotic inconsistency as the fundamental problem of AMTs, noting that 34 authors represented identical constructs using multiple shapes in the same papers. In quantitative terms, Lallie et al. [14] report that the most common graph visualization design choices included the top-down representation of event flow (58.6%), no use of color (56.9%), no use of edge texture or line density (79.0%), no mechanisms to aid the perceptible visual distance (87.0%), simple entity labels in the form of text (38.7%), no representation of attack goal (78.5%), representation of precondition nodes for the attack using plain text (24.7%) or ellipses (17.5%), and representation of exploits using rectangles (28.7%) [14].\nC. ATTACK DATA ACQUISITION Cybersecurity professionals rely on intelligence-sharing platforms, data feeds, and open-source tools to acquire the latest information on cyberattacks. These include threat intelligence feeds with known indicators of compromise (IOC), malware sharing uniform resource locators (URL), malware files and their signatures, IP addresses of malicious e-mail servers, botnet information, and more. Besides data feeds such as Open Threat Exchange (OTX) [69], which often provide application programming interface (API) access, knowledge databases intended for heuristic incident analysis, such as MITRE ATT&CK and Malware Information Sharing Platform (MISP) [70], provide comprehensive information on the operation of malware, known threat actors, their methods, and tools. Furthermore, programs like Common Vulnerability Exposure (CVE) [71] and National Vulnerability Database (NVD) [72] identify, define, and catalog publicly disclosed cybersecurity vulnerabilities in a common format. At the same time, Common Weakness Enumeration (CWE) categorically lists software and hardware weaknesses, while\nopen-source exploit databases [73] offer ready-made, proofof-concept solutions for penetration testers and hackers alike. Most common formats, protocols, and description languages for cyber threat intelligence sharing include the Structured Threat Information Expression (STIX) [74], Trusted Automated Exchange of Intelligence Information (TAXII) [75], Cyber Observable eXpression (CybOX) [76], Malware Attribute Enumeration and Characterization (MAEC) [77], and YARA [78]. Besides external data sources, cybersecurity analysts also rely on internal data sources, such as system, firewall, and IDS logs, as well as network captures to discover malicious events [56]. However, to study the latest methods used by adversaries and examine the details of novel attacks, security research often requires interception of actual attacks and direct acquisition of their data. For this purpose, network honeypots are used to mimic domain-specific infrastructure and intercept incoming threats. They are commonly deployed as virtualized software appliances or implemented using containerization technologies [79] and are generally classified by the service they are emulating and the level of interactivity they provide [1]. Low-interaction honeypots typically only simulate services, such as Secure Shell (SSH) or File Transfer Protocol (FTP), but do not offer actual functionalities and operating system-level (OS) access [1]. While they are helpful for quantitative threat estimation, they cannot provide a deeper introspection into the attack\u2019s course and the attacker\u2019s postexploitation actions (e.g., payload download, privilege escalation, actions on objectives). Therefore, high-interaction honeypots were developed as sophisticated cybertraps replicating production systems and allowing the attacker nearly unlimited target access [80]. However, such systems require significantly more effort for set-up and maintenance. They generate large quantities of data and require a thoughtful data acquisition, storage, and processing pipeline design. Data processing becomes even more difficult when operating a network of honeypot systems (called a honeynet), where data heavily vary in volume, velocity, and variety. However, honeynets can mimic a wide array of vulnerable services, replicate real IT (information technology) or OT (operational technology) networks and allow for detailed monitoring of the attackers\u2019 lateral movement across the deployed network services. Furthermore, a geographically distributed network of honeypots with a centralized data collection system allows for the observation of threat actors with a global presence, identification of their assets, and revealment of their malicious campaigns [81]. Bar et al. [82] studied attack propagation patterns using Markov chains on honeypot data in 2016. They performed complex network analysis on 167 million observed attacks and revealed patterns of attack correlations between the honeypots, identified central honeypots which propagated the attacks and profiled the attackers according to the attacking country. Studiawan et al. [83] focused on graphbased forensic analysis of web honeypots. They proposed attack-type analysis from honeypot logs represented as graph vertices and applied agglomerative clustering to categorize\nVOLUME 11, 2023 5\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nattacks based on PHP-IDS rules. Fernandez et al. [84] modeled malware-drive honeypots using recent IOCs to adapt honeypots for malware execution. Similarly, Wagener [85] studied self-adaptive honeypots for assessing attacker behavior. Durkota et al. [86], as well as Anwar et al. [87] studied honeypot allocation strategies using attack graphs and game theory. Inversely, Gao et al. [88] proposed a dynamic deployment strategy of virtualized honeypots based on intelligent attack path prediction to enhance their trapping capability. Ka\u00e2niche et al. [89] used honeypots to statistically model attack processes, while Ikuomenisan and Morgan [59] recently conducted a detailed systematic review of graphical visual methods in honeypot attack data analysis.\nIII. PROPOSED SOLUTION We propose a novel graph-based attack modeling technique and present a new visualization tool developed for cyberattack analysis. The model structures the captured attacker actions, participating attack entities, their properties, and relationships as a graph and leverages visualizations to provide insight into the course of cyberattack execution and reveal potential attack patterns and attacker communities.\nIn the implementation phase, we develop a proof-ofconcept solution based on web technologies that enable interactive visualizations of attacks. Its user interface is displayed in Fig. 1. It utilizes a graph-native database for data storage and retrieval and relies on our own distributed honeypot platform for direct attack data acquisition. It is intended for use by cybersecurity researchers and professionals.\nThe developed proof-of-concept tool can visualize individual captured attacks as a series of attacker actions analogous to the critical steps of the Cyber Kill Chain framework. It reveals individual attack topologies and characteristics and enables further data exploration using the visual-interactive discovery of links between the participating entities and metadata nodes. The implemented attack graph model enables node involvement detection in multiple attacks on the distributed honeypot network. Combined with the captured attack session data and enriched node metadata, it allows for the analysis of attacker hosts, external file servers, and malware files, revealing their potential hidden links, networks, and interdependencies. The web-based visualization tool can aid security analysts with charted statistical information on the aggregated attack data, identifying the most frequent returning attackers, most commonly deployed payloads, utilized distribution URLs, and similar details. It can plot the detected node communities and generate lists of malicious hosts, URLs, and file signatures, as well as export selected attack graphs into third-party open-source software for further network analysis.\nA. REQUIREMENTS ENGINEERING Based on the reviewed literature, we identified both the good practices of the attack graph modeling and visualization design, as well as the opportunities for their improvement. We conducted expert consultations with the potential users of our\nsolution in the cybersecurity domain. We consulted security operations center (SOC) operators, incident response analysts, and cybersecurity experts on their visual attack analysis approaches when dissecting a large number of attacks. We proposed an early idea of the interactive graph-based attack visualization tool with visual mapping of the attack data to the Cyber Kill Chain model to better aid the attack cognition. We performed task analysis and conducted cognitive walkthroughs with the potential users to identify their needs and investigate their workflow.We compiled a list of requirements for the design and development of our proof-of-concept solution. The following tables outline the top-level functional (Table 1) and non-functional requirements (Table 2). We framed the scope of our work by outlining the necessary attack coverage of our model to meet these requirements. To do so, we focused on the three critical aspects of cyberattacks on internet-connected systems: network security, system security, and malware detection. We identified a subset of potential attacker actions for each of the segments and aligned them with the crucial attack steps represented by the Cyber Kill Chain framework. Therefore, we addressed the further design of our solution mainly in the context of the Cyber Kill Chain attack steps 3, 4, and 5, as shown in Table 3."
        },
        {
            "heading": "IV. SYSTEM ARCHITECTURE",
            "text": "The overall system is composed of two major platforms: the honeypot-based data acquisition platform (CyberLab) and"
        },
        {
            "heading": "6 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nthe interactive attack visualization platform (CyberViz). Both systems consist of multiple interconnected microservices that collect, store, transform and visualize cyberattacks. This paper only briefly reviews the actual data acquisition platform and primarily focuses on the design and technical implementation of the attackmodeling and visualization. The high-level system architecture is depicted in Fig. 2.\nA. DATA ACQUISITION PLATFORM CyberLab is a distributed, high-interaction honeypot platform. It exposes inadequately protected SSH honeypots at its forefront and lures the attackers into fully monitored and almost full-featured Linux containers. The platform is distributed over multiple points of presence on a wide range of IP addresses. It supports simultaneous monitoring of multiple attackers and logs incoming and outgoing network activity, records complete terminal sessions, monitors filesystem changes and snapshots the attack evidence. Acquired attack data are stored in various database systems, processed, and exposed via internal APIs.\nCaptured data are then imported into the CyberViz system in JSON format via an internal API and enriched with open data from publicly available cyber intelligence feeds. The resulting data structure hierarchically describes each intercepted cyberattack with key-value records. Its data values include attack identifier and timestamp, target IP address and entry vector (port), attacker\u2019s IP address and its detailed information, such as autonomous system number (ASN), the fully qualified domain name (FQDN), and complete IP geolocation data (city, country, latitude, longitude). Other data fields also include a complete log of commands from interactive SSH sessions, a network log of outgoing and incoming connections\nto and from (malware distribution) servers and their exact IP address, port and protocol information, hostnames and URLs, as well as a list of service and filesystem changes, together with file details, such as file hash, file name, Multipurpose Internet Mail Extension (MIME) type, and malware scan results, including classification by malware detection engines."
        },
        {
            "heading": "B. CYBERATTACK MODEL",
            "text": "The reviewed literature on attack graph modeling techniques comprises numerous fundamentally different approaches. Their common goal often includes the estimation of the general level of network security or identification of (potential) attack paths within the system. We observed that many of the proposed attack graphs focused on modeling states of known network assets (e.g., hosts, security controls, and network devices under the operator\u2019s control). Oftentimes the models\u2019 primary represented constructs included the cyberattack preconditions, exploits, and postconditions [14]. The vulnerabilities of such systems were often known in advance, whereas the information of used exploits was retrieved from external intelligence feeds. This allowed the researchers to focus on the model of their network and investigate attacker actions in its context, assessing its security, discovering attack paths, and raising intrusion alerts. However, we observed a shortage of studies that focused on obtaining attack session data and modeling it in such a manner to allow for the investigation of the attackers\u2019 behavior outside of the controlled perimeter, enabling the discovery of attackers\u2018 network assets and mutual relations, as well as revealing their coordinated cyberattack campaigns. Therefore, we propose a new attack graph model tailored to the centralized data collection pipeline of a globally distributed honeypot network. The model is capable of representing the individual attack details, as well as inspecting the attacks\u2019 common denominators (e.g., shared data, metadata, and actions) for uncovering attacker networks and relations. We enrich the ingested data with externally obtained network information, file metadata, and unique attack identifiers and scan the downloaded malware files for knownmalware signatures. Like similar works, we do not complement our model with specific vulnerability information from the MITRE ATT&CK platform or the CVE program since knowledge of the exposed vulnerabilities is already built into the design of our honeypot system. However, we do generalize the captured fragmented attacker actions into a series of macroscopic steps of the Cyber Kill Chain framework to provide a temporal overview of the attack. We base our unified model\u2019s technical implementation on scalable graph technologies, proven functional by Noel et al. [53], [90]. We borrow and extend data modeling approaches from Leichtnam et al. [56] We draw inspiration for the analysis of malware distribution networks from Peryt et al. [45]. We employ attack propagation analysis and honeypot platform validation approaches from Ka\u00e2niche et al. [89] and Bar et al. [82], We leverage clustering ideas described by Studiawan et al. [83] and aid graph dilution using PageRank"
        },
        {
            "heading": "8 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nalgorithm as shown by Sawilla and Ou [28]. We apply the constructed model to our dataset of captured attacks on SSH honeypots and further extend the above proposals with a proof-of-concept visualization system for interactive attack exploration and visual analysis. We also carefully address the shortcomings of the preceding visualization solutions identified by Lallie et al. [14] and employ the most common visualization channels and graphical visual methods for honeypot attack data analysis as reviewed by Ikuomenisan et al. [59].\nWe position the newly proposed data model for structuring and presenting the acquired attack information as the principal contribution of our research. We demonstrate the use of our model to directly represent the attack topology and leverage graph databases to maintain consistency between the data storage and presentation layers. We implement the model by mapping the crucial (unique) entities participating in the attack (e.g., attacker\u2019s IP address, target IP address, malware server\u2019s IP address, target port, and malware files) into individual nodes and their properties, andmodel the identified attacker\u2019s actions (e.g., a new SSH session, an outgoing network connection) as node relationships. This allows us to describe, access, and visualize the individual attacks as connected graphs rather than storing them as independent objects with potentially duplicate data and metadata.\nWe deliberately place select metadata information (e.g., IP address geolocation information) on the graph, rather than assigning it to nodes as properties, to enable path-based querying and aid visual exploration of the nearby connected nodes. This complements existing graph edges denoting the attacker\u2019s actions with new edges representing metadata relationships. We further generalize the attack data and attackers\u2019 actions by complementing the specific stored relationship\ntypes and labels with their generic counterparts. To do so, we merge specific node labels (e.g., individual attack target, attacker\u2019s IP address, malware server\u2019s IP address) into generalized categories and nodes (e.g., all honeypot targets as one node, all IP addresses as one category) and connect them to a global attack graph encompassing all captured attacks. We also link multiple relationships (actions) into virtual higherlevel attack steps, following the Cyber Kill Chain framework (e.g., merging the attacker\u2019s connection to the target via SSH and their malware retrieval via HTTP into a single payload delivery stage). We attribute the unique attack identifier to each specific relationship and append an array of applicable attack identifiers to the generic relationships. Each of the individual cyberattacks is, therefore, a subgraph consisting of nodes and specific attack relationships in the global attack graph. This allows us to observe individual entities in the global attack context and enables the identification of node interactions between multiple attacks. The finalized model includes 34 different node labels, 15 node category labels, and 60 relationship types. It symbolizes our distributed honeypot system as a generic root node connecting all captured attacks. Actual attack targets in individual attacks are represented using unique honeypot identifiers to conceal their true IP address. This design enables simple path traversal across the root target node when analyzing multiple attacks. All attack entities of the model are merged into the graph for each newly imported attack session. This means that previously unseen entities are created as new nodes, whereas already existing entities are linked to the unique identifier of the imported attack. The representation of the proposed attack graph model is depicted in Fig. 3. A sample of the graphbuilding procedure is shown in Fig. 4.\nVOLUME 11, 2023 9\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics"
        },
        {
            "heading": "10 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nWith further simplification and applied visualization layouts, the proposed model offers a direct representation of the individual attack\u2019s structure and its phases of execution. It allows for visual attack classification based on the (sub)graph topology and enables the straightforward development of interactive visualizations. Further, the graph data model allows for applying graph data science algorithms, such as community detection, PageRank, and link prediction, directly to the global attack graph to reveal latent network characteristics.\nWe implemented the model using the neo4j graph database [91] and developed the data ingestion and transformation API in Python to convert the enriched JavaScript Object Notation (JSON) objects into openCypher [92] graph query language (GQL) statements. We used dedicated graph projections for running graph algorithms and additional virtual relationships for visualizations.\nC. VISUALIZATION DESIGN Authors of the Systematic Review of Graphical Visual Methods in Honeypot Attack Data Analysis [59] observed that scientific researchers often consider data visualization a trivial task and do not follow data visualization best practices, resulting in the ambiguous visual communication of information. Similarly, A Review of Attack Graph and Attack Tree Visual Syntax in Cyber Security [14] reported that many AMTs appear not to have undergone an effective design process and often overlooked the cognitive value of graphical models during their design. Therefore, we approached the visualization design in an attempt to address these findings and the identified solution requirements. We reviewed the relevant visual syntax design theories and design practices in an attempt to produce a cognitively efficient system.\nYang et al. [93] and Ji et al. [94] suggested approaches to effective network traffic visualization using a graph-based representation of complex structures, as well as using data filtration and dimensionality reduction techniques as reviewed by Sorzano et al. [95]. They also proposed the use of multiple coordinated views for better insight into the data. Weissgerber et al. [96] and Ikuomenisan and Morgan [59] suggested basic charts (such as line, bar, and pie) in security visualization be complemented with (interactive) graphical constructs offering higher data density, visual effectiveness, and better visual expressiveness to effectively communicate hidden patterns in data. Keim et al. [97] defined the functional steps of a visual analytics model, consisting of data processing, information visualization, pattern discovery, and knowledge generation, reinforced with visual-interactive data exploration. Bertin [60] described visual variables, entailing position, size, shape, value, color, orientation, and texture, to build the foundation of visual syntax. Miller [61] discussed the limits of human short-term memory in relation to the number of visual stimuli. He proposed an optimal number (7\u00b12) of objects and their properties (e.g., shapes, colors, edges) for effective visual communication. The Principle of Primary and Secondary Notation built a distinction between variables forming the generic diagram structure and objects\nexhibiting its relationships and aiding the perception of the observer [62]. Visual distance referred to perceptible steps that helped to distinguish between objects in a diagram, aiding object recognition and concept interpretation [62]. The Gestalt principles of visual perception proposed seven factors contributing to the effective diagram design, including simplicity, proximity, similarity, figure-ground relationship, direction, continuity, and closure [64]. The Cognitive Dimension of Notations [98] defined 14 cognitive dimensions, including consistency, abstraction, the closeness of mapping, the difficulty of mental operations, hidden dependencies, and viscosity. The Physics of Notations set the basic visual syntax principles and formed guidelines for the implementation of the design variables [63]. Most notably, these principles included object-to-concept mapping without redundancy and ambiguity (semiotic clarity), dual coding using text and visual notations, the cognitive fit of the developed model for its intended audience, visual expressiveness, and semantic transparency. Moreover, additional visualization design considerations included the logical depiction of events and information flow on the diagrams [14], as well considerations regarding the shape and color selection, leveraging their suggestive powers and perceptive links with hazards [99]. Lallie et al. [14] argued shapes should be used as the primary means of communicating information as they are the primary visual variable for aiding object recognition [63] and can capture important phenomena more powerfully and succinctly than words [100]. They further discussed the use of specific shapes and their suitability for the accommodation of textual labels. Following the reviewed design theories and visualization practices, we approached the solution design in accordance with the identified requirements. Based on the conducted consultations with cybersecurity experts, we identified two crucial visualization use cases for our attack analysis tool:\n1) Visualization-based workflow for the analysis of the global attack graph.\nThe tool should allow for visualization of the global attack graph model comprising all captured attacks. It should enable the analysis of entity involvement in multiple attacks to reveal potential attack patterns and identify node clusters and their hidden links. It should define and visualize graph feature projections based on select node relationships and calculated metrics. It should enable node searching and visualization of search results on a graph by matching text-based queries to any selected node properties. It should allow for configurable visualization of node clusters based on node attributes, support cluster coloring, and isolation, as well as display cluster sizes. It should allow graph filtering based on node and edge labels to allow for configurable preview without overplotting. The tool should also support interactivity between the main graph display and additional view panes portraying node and edge (meta)data. It should enable text-based previews of attack shell sessions and visualization of\nVOLUME 11, 2023 11\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nisolated attacks while previewing the global attack graph. Captured IP addresses should be linked to the CyberLab platform to allow users to display the history of their activity and show their malicious score. Lastly, the tool should enable easymodel export from the graph database to general-purpose graph analysis tools for external network analysis. It should also enable the export of the detected malicious IP address and malware details. The exported graph data should be complemented with node assets to maintain visualization consistency across all visualization environments. Ex-\ntracted entity data should be exported in common formats to allow its use for easy configuration of network protection appliances (e.g., blocking service access for exported attacker IP addresses on network firewalls and restricting user access to known malicious URL endpoints on IPS systems).\n2) Visualization-based workflow for detailed analysis of individual attacks.\nThe tool should enable navigation between the cap-"
        },
        {
            "heading": "12 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\ntured attack sessions and depict the individual attacks as graph structures to visually portray their phases of execution analogous to the Cyber Kill Chain framework and reveal their characteristics. It should display attack entities using a semiotically consistent node design and utilize interactivity to reveal node and relationship properties in the additional overlayed view panes. The visualization should enable node relationship exploration across multiple recorded attack sessions and implement elementary graph layout controls. The main graph should be complemented with charted statistical data on all captured attacks within the specified timeframe to better paint the context of the specific attack under analysis.\nWe build upon these findings to design a proof-of-concept interactive tool for the visualization and validation of the proposed attack graph model. We position graph visualizations as the primary means of communicating attack data and follow the proposition of Ji et al. [94] to implement additional coordinated view panes and display (textual) entity properties and details. We borrow the ideas of Ikuomenisan and Morgan [59] and complement graph data with charted statistical information on recorded attacks. We make use of the proposed dimensionality reduction techniques using feature projections [95] and introduce visualization controls to allow the selection of predefined graph projections and offer control over the visibility of graph features. We implement node, edge, and canvas interactivity, capturing hover, scroll, click, and drag events to allow for the accommodation of label data on hover, visual-interactive data exploration on click, and view control using scroll and drag gestures. The individual components of the proposed visualization tool and their features are displayed in Fig. 5.\nWe designed our proof-of-concept visualization solution in accordance with the identified use cases. Its user interface design is displayed in Fig. 5. It consists of three main display and control panes: the visualization control pane on the left, the graph display pane on the top, and the details view pane on the bottom of the interface. The control pane allows the selection of visualization to show in the graph display pane and enables control over its layout and features. Data control options enable visualization of the global attack graph and its five predefined projections (use case 1), including attacker IP to malware server IP address mappings, visualization of the identified malware distribution networks, including payload file names and their MD5 hashes, and the display of the attacker IP addresses, their used commands and command similarities. Additionally, data controls allow isolated specific attack subgraph display (use case 2) and allow browsing between the consecutive captured attacks. The graph display pane on the top shows the selected attack graph visualization. The display defaults to a force-directed, constrainbased layout for attack subgraph display, whereas live physics and animations are initially disabled when visualizing global\ngraph projections to aid browser performance. Layout selection, graph physics, and animations can be manually controlled using the control pane. The default layout uses node relationships and parameters, such as relationship weights, action frequency, and node similarity, to position nodes on canvas and allow for visual clustering of graph components to aid the human perception of the data. The visualization layout controls pane is dynamically populated with additional controls when switching between a specific attack and a global graph or its projection display. These controls include the implemented static layouts, continuous force simulation algorithms (e.g., Noverlap, ForceAtlas, ForceAtlas2), control of node and edge label visibility, graph fitting to view pane size, hover-based node isolation mode and node dragging support. The displayed graph is interactive and shows node labels and graph expansion context menu on hover. Users can dynamically extend the visualized attack graphs by clicking on the individual node\u2019s context menu item to visualize its directly connected neighboring nodes from the global attack graph and enable the discovery of adjacent malware files and connected attackers and servers. Node selection displays its details in the bottom pane and reveals its involvement in other cyberattacks in the collected data sample. Additional details include node labels, a list of attacks, and entity and relationship properties, including their calculated metrics (ranks, community memberships, similarity, etc.). Some of the displayed elements, such as the list of attacks, enable visualization of the related attacks in the main graph display pane with a single click (use case 2), whereas hovering over the attack IDs dynamically highlights the attack topology on a global graph (use case 1). Selecting a specific attack ID during global graph preview (use case 1) also depicts its shell session and isolated structure in an auxiliary display area within the details pane. Scrolling on the details pane reveals additional widgets with specific attack information and global attack graph statistics, including the details on entity label and edge type distribution, malware files, filenames, tags, attack origin statistics, top attacker IP addresses, returning attackers, and the like. Scrolling on the details pane or selecting the MORE LAYOUT OPTIONS button reveals global graph search controls, clustering and ranking controls, and node and edge label-based filtering options. Lastly, the solution also enables direct export of the global attack graph data in GEXF format and node design assets in SVG or PNG format to third-party graph analysis tools, such as Gephi [101]. This allows for custom network analysis scenarios and offers fine control over graph rendering but does not provide the same level of graph interactivity, statistical charts, and pre-made visualization tools and projections suited for cyber attack analysis. Besides tool functionality and user interface design considerations, we took heed of node design for cognitively effective graph visualization. We implemented a node design based on the findings of Lallie et al. [14], attaining to Miller\u2019s law [61], following the principles of primary and secondary notation [62], making use of color [99] and utilizing a subset\nVOLUME 11, 2023 13\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics"
        },
        {
            "heading": "14 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nof Bertin\u2019s visual variables [60]. We leverage Miller\u2019s law to define 7 elementary shapes aiding attack entity differentiation on the graph. We further dual-code attack entity types with color to denote their categories and role affiliations. We use red color to indicate the attackers, as it is commonly associated with danger and often used in the cybersecurity domain to indicate the adversaries (e.g., red team). Conversely, we use light blue to denote the target systems analogous to the blue teams. Other most common entities, such as the detected malware servers and the captured malware files, are colored magenta and dark blue, respectively. We attempted to distinguish malware files in other colors to avoid potential misinterpretations with light blue target systems. However, we found dark blue to best maintain the satisfactory visual contrast on both light and dark backgrounds of the implemented view panes while avoiding the potential positive connotation of green and insufficient contrast of yellow on light backgrounds. Composed elementary design primitives, consisting of shapes and colors, therefore, represent data types (e.g., IP addresses, port numbers, files) and roles or categories (e.g., attacker, target, malware) to form graph nodes. The shapes were selected on a subjective basis to be as associative with the represented constructs as possible. While some shapes share a degree of similarity, the entities they represent are often painted in a specific context or in small enough numbers to minimize their ambiguity. We do not consider node shape a limiting factor for label accommodation, as data labels are positioned directly next to the nodes. At the same time, type labels are superimposed only upon mouse hover. Further, we use two types of edge lines to visualize node relationships. In the context of individual attack visualizations correspondent to the Cyber Kill Chain framework, we rely on solid edges to reveal important node relationships and depict attack actions, whereas we use light, dotted edges to display select metadata links. This helps to create visually distinctive attack segments when visualizing an individual attack\u2019s structure or analyzing larger amounts of data. In some projections, additional features such as node size and edge width are used to display node importance (e.g., displaying node rank) and relationship weights (e.g., number of connections, node similarity score, etc.). We rely on the developed design system throughout the whole application, as well as the remainder of this document, with the only exception of intentionally using a completely different color palette for a visual representation of clusters. However, for the latter to apply, the cluster coloring option has to be explicitly enabled in the additional layout options pane. In such cases, cluster colors are also visualized in cluster legend alongside their absolute sizes. Lastly, we also enable the export of node designs as static assets when exporting graph data to third-party visualization solutions. This allows us to maintain semiotic consistency in all attack graph projections and statistic charts across the complete solution. The described node design primitives and a subset of composed nodes are visualized in Fig. 6.\nThe visualization tool was implemented as a web application. We used standard web technologies, such as JavaScript,\nHyperText Markup Language (HTML), and Cascading Style Sheets (CSS), to build a responsive user interface and visualization controls. Specific attack graph visualizations are based on Cytoscape.js [102], a graph theory library for visualization and analysis, offering great customisability. Global attack graph and their projections are visualized using Graphology [103] and Sigma.js [104], a JavaScript library aimed at visualizing graphs of thousands of nodes and edges. Large graphs are visualized using WebGL renderers to aid visualization performance by leveraging the computer\u2019s Graphics Processing Unit. Individual node designs are implemented as GLSL shader code, while continuous layout algorithms are run in separate threads using Web Workers to avoid reducing the browser\u2019s and, therefore, the solution\u2019s GUI performance (main thread). Graph data are acquired from node and edge descriptions using asynchronous web requests to an intermediary presentation API. The latter is developed in Node.js and functions as a concealment, transformation, and caching layer, preventing direct access and heavy load on the graph database from the web. The overall web application interface is shown in Fig. 5, whereas the designed attack graph visualizations are displayed in the Validation section.\nV. VALIDATION We used the developed visualization tool in an attempt to validate the design of our cyberattack model. To do so, we demonstrate the use of our solution from the user\u2019s perspective by following the outlined use case scenarios to review the captured attack data, navigate and display attack sessions, and reveal attacker communities and their attack characteristics. Due to the sensitive nature of the collected data, our solution is presently deployed in an on-premise private cloud environment for internal testing and evaluation. The implemented continuous data import mechanism resembles the slidingwindow algorithm. Captured honeypot attack data are aggregated for a seven-day period and automatically imported into the graph database on a daily basis. The import procedure utilizes the developed data ingestion, transformation, and enrichment API to transform raw cyberattack data artifacts collected on CyberLab honeypots into the proposed CyberViz model. The demonstrational attack data analysis conducted below was performed on a data sample of 5573 real-world SSH attacks with payload delivery phases captured between January 4, 2022, and January 13, 2022. The attack analysis and visualizations were conducted using the developed CyberViz tool."
        },
        {
            "heading": "A. GLOBAL ATTACK GRAPH DATA EXPLORATION",
            "text": "Following our first use case, the user utilizes the developed visualization tool to preview the global attack graph and perform an initial exploratory analysis of the collected attack data. To do so, the user selects the GLOBAL ATTACK GRAPH option from the data controls section on the left pane of the interface. The global attack graph, consisting of all captured attack entities and relations, is then drawn in the main graph display pane. The user also proceeds to toggle the RUN FORCEATLAS2 switch to run an arbitrary number of\nVOLUME 11, 2023 15\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\niterations of the selected layout algorithm and better position entities on the graph rather than allocating them random canvas coordinates. The applied force algorithm then forms node clusters based on relationship weights signifying the attack action frequency, metadata relationship count, and the attacker command similarity.\nThe global attack graph is accompanied by basic information about the sample under analysis (displayed in the data statistics section of the left pane), including the data aggregation timeframe, the number of unique graph nodes, and the number of unique captured attacks. Since the user intends to acquire more data on the collected sample, they select the MORE STATISTICS button to reveal global graph statistics, as well as entity and edge type distributions. These details are displayed in an overlayed pane on the bottom half of the interface. The described user actions form an initial state shown in Fig. 7 and serve as a starting point for attack data analysis.\nWithout the applied MAINTAIN SPREAD and ISOLATE ON HOVER options and without any applied entity or relationship filtering, the global attack graph remains severely overplotted for the time being. Therefore, the user rather initially shifts their attention to the entity type distribution chart plotted in the details pane of the interface, as it may help the user to quickly deduce initial observations regarding the sampled attacks. To allow for better readability, we have extracted the chart in question from its web-based form into a suitable paper format in Fig. 8. Nevertheless, the chart\u2019s web\nimplementation allows the user to hover over the individual stacked rows and reveal category labels, sizes, and details of entities constituting the global attack graph.\nFig. 8 depicts the entity type distribution in the global attack graph. It shows the dataset includes precisely 5573 captured attacks represented by 15114 unique nodes. However, the user might immediately notice a prominent skew of node counts representing the IP address data. The chart conveys there are 2338 nodes representing the unique IP addresses of the attackers (specific label AttackerIP, colored in red, represented with triangular shape in the graph) and only 197 nodes representing malware server IP addresses (specific label MalwareServerIP, colored in magenta, also represented using triangles in the graph). Moreover, hovering over the stacked rows in the chart reveals that the captured dataset only includes 448 unique malware file hashes and 264 unique malware file names, while there are 5573 recorded payload download actions. The detected skew is also similar for other generic node classes (FQDN, ASN, geolocation) and is indicative of significant reuse of malware distribution servers and their malicious payloads. In other words, the data sample in question likely includes a large number of very similar or repeated attacks conducted by many attacker IP addresses relying on a small number of reused malware file servers.\nTo further confirm this hypothesis, the user scrolls on the bottom details pane to reveal additional displays portraying the extended entity statistics. The latter include the top at-"
        },
        {
            "heading": "16 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\ntacker andmalware server IP address, topmalware ports, most frequent attacker and malware IP geolocations, as well as their reverse IP resolutions disclosing their domains or fully qualified domain names. These data are portrayed in Fig. 9 and Fig. 10.\nFig. 9 and Fig. 10 convey additional statistical data about the most active attackers and the most used malware server IP addresses and ports, as well as their geographical origin.\nAs evident in Fig. 9, the most commonly employed port for malware delivery is HTTP service port 80, while the only available target port is port 22, as the loaded data sample only contains SSH honeypot attacks. Moreover, Fig. 9 reveals that two of the most active malware distribution servers constitute nearly 74% of all captured attack traffic and certainly spark further research. Therefore, the user\u2019s next prediction might be that these servers are, in fact, well-known public repos-\nVOLUME 11, 2023 17\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nitories hosting penetration testing tools or malicious code. However, since statistical results only offer a brief overview of the captured attack data and do not capture the complete dynamics of the recorded attacks or portray realistic malware reuse patterns, the user decides to employ interactive graph analysis to uncover complex entity relations.\nIn order to reduce the global graph complexity, the user navigates to the layout controls section of the left pane and selectsMORE LAYOUT OPTIONS. The graph details pane is then replaced with additional controls enabling graph search, clustering, and node and edge type filtering. The user disables node display for entity types they consider unnecessary and uses layout controls to enable NODE LABELS and EDGE LABELS. They also enable the MAINTAIN SPREAD toggle, as well as ISOLATEONHOVER andENABLENODEDRAGGING options to aid graph navigation. Lastly, the user runs a desired layout algorithm to reduce node overlap. The diluted graph then enables them to easily visualize the highestranking malware servers and interactively display their direct links by hovering over their nodes, as shown in Fig. 11. Moreover, the user may click on the individual node to display its properties, visualize attack terminal sessions, and display attack patterns by hovering over the node attacks table (Fig. 12).\nThe simple graph analysis conducted above disproves the user\u2019s hypothesis of attackers relying on well-known public repositories for malware distribution. While the attack shell sessions reveal short and repetitive malware deployment\nscripts, the malware servers in the graph still appear directly unconnected to each other. They do not link to the samemetadata nodes, and their properties do not reveal DNS resolutions to any of the well-known public service domains. In fact, the two most used malware servers are situated in Verizon Business and China Telecom networks, with FQDN records indicating their intended use by a business or residential customers. The user may therefore anticipate many scenarios, including that these servers could have been compromised and repurposed as malware serving proxies by remote attackers."
        },
        {
            "heading": "B. MALWARE DISTRIBUTION NETWORK VISUALIZATION",
            "text": "While the interactive data exploration enables attack session visualization, discloses entity details, and allows metadata link analysis in the global context, such graph visualizations still suffer from overplotting and require the user to manually filter and navigate the graph to uncover interesting attack characteristics. Since the user is likely interested in visualizing relationships (attacker actions or attack steps and data links) between the crucial attack entities, such as the AttackerIP, MalwareServerIP, MalwareFileName, MalwareFileMD5, andAttackerCommand, we used graph data science algorithms and dimensionality reduction techniques to further dilute the data around those labels. We prepared multiple graph feature projections from the global attack graph, encompassing the select relationships between the nodes. One of such projections visualizes mal-"
        },
        {
            "heading": "18 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nware distribution networks. We reduced data dimensionality using a new virtual relationship, directly connecting unique malware server IP addresses with the unique file names of the downloaded payloads without intermediary nodes or decomposed attacker actions. Such a high-level virtual relationship roughly corresponds to the payload delivery step of the Cyber Kill Chain. The user can display the desired graph projection by selecting it in the data controls section of the left pane. The resulting malware distribution communities are then displayed in the main graf preview area, as shown in Fig. 13. The user may utilize additional visualization controls to search, cluster, and rank the nodes by arbitrary properties. In Fig. 13, the user first ranks the nodes by their log normalized download counts (due to the high variance of the number of download events) and then colors the clusters based on their assigned community identifier (obtained using theWeakly Connected Components search algorithm). Moreover, the user may scroll the details pane to reveal additional statistical data on captured malware files or match a file name pattern.\nNote: All of the available graph projections, node and rela-\ntionship rank, and community identifiers, as well as statistical data on a global graph and malware files, are automatically calculated during each data import event.\nThe identified malware distribution communities reveal potential hidden links between malware servers (purple triangles) based on the assigned malware file names (blue circles) in the analyzed attack sample. To better visualize file name patterns served by individual distribution servers, the user may decide to export the active graph from the web solution. To do so, they use theACTIVEGRAPH button in theEXPORT CONTROLS section of the control pane. The exported data are contained within a ZIP file and includes a GEXF graph description file and image assets for all exported entities. The user may open the graph file in their graph visualization suite of choice and apply custom rendering settings to generate an output such as the visualization of all served malware file names in Fig. 14.\nIn Fig. 14, the user also applied a weighted PageRank algorithm to the given network to measure the importance of individual nodes in relation to the number and weight (event count) of their edges. Rescaled node PageRank is then\nVOLUME 11, 2023 19\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\npresented as node size in graph visualization. However, since each unique file name is only stored in the global attack graph once, Fig. 13 and Fig. 14 may not accurately depict malware distribution communities in cases where two different payloads coincidentally share the same name but vary in attackers or contents. Since several malware files seem to be semantically named, there is a relatively high potential for name collisions. Therefore, the user employs a different graph projection based on a new virtual relationship between the malware server nodes and the MD5 hashes of the files they host. The user once again prepares the graph using the web interface and exports it in a suitable format to visualize the malware distribution communities more precisely.\nWhile Fig. 14 displays several connected communities, indicating that multiple unique malware servers host files with identical names, Fig. 15 illustrates that no two malware servers actually hosted identical files. This might be due to the common practice of malware obfuscation, file binding, or polymorphic encoding of payloads by the attackers. While the latter visualization is more appropriate for quantitative malware analysis, the former better illustrates potential associations between the malware servers. The likelihood of true positive associations increases with the increase in the number of files and the uniqueness of their names."
        },
        {
            "heading": "C. MALWARE FILE ANALYSIS AND BOTNET DETECTION",
            "text": "After visualizing malware distribution networks, the user might be interested in the details of the captured malware files. For this reason, our solution statically analyzes and classifies all captured malware files using multiple malware detection engines. Shell scripts, text files, and URLs are decomposed into individual shell commands or strings. All files are attributed with metadata, such as file hash, file name, and mime type. File names are correlated and grouped by their edit distances using the Levenshtein similarity algorithm to discover similar nomenclature patterns and potential human interaction (typographical errors). PageRank and Louvain community detection algorithm are used on subgraphs of MalwareServerIP and MalwareFileName nodes linked by ServedFileNameDirect edge. This allows for additional malware categorization based on file name patterns and reveals their cluster\u2019s affinity to particular malware distribution servers. Fig. 16 lists malware file statistics. The most common transferred payload types include plain text files and executable shell scripts. Three of the most common file names in the captured attack sample are \u20181sh\u2019, \u20182sh\u2019, and \u20183sh\u2019. They were used in a comparable number of attacks, and their file names constitute the majority (74%) of all transferred payloads, thus confirming the user\u2019s initial hypothesis of a"
        },
        {
            "heading": "20 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nhigh number of similar attack repetitions. All files with these three file names were distributed by two servers, as outlined in the upper left corner of Fig. 14.\nHowever, since the hashes of all served files differ, no inter-community links appear in Fig. 15. To further investigate this discrepancy, the user makes use of another graph projection encompassing all four of the crucial participating nodes: AttackerIP, MalwareServerIP, MalwareFileMD5, and MalwareFileName. Analogous to the malware distribution network visualization, this projection forms a new virtual relationship to directly connect unique AttackerIP and MalwareServerIP nodes. It calculates PageRank for the nodes in\nthe new network and considers the malware download count as a parameter of the virtual relationship. The nodes and edges are then scaled according to the new weights. They reveal multiple attacker groups focused on malware distribution servers and their served file names and payloads (Fig. 17).\nFig. 17 reveals that many attackers in the largest cluster are transferring multiple distinct malware payload variations. These payloads are concealed under three file names (\u20181sh\u2019, \u20182sh\u2019, and \u20183sh\u2019), each of which is hosted by both malware servers with the highest rank in the global attack graph. Some of the attackers from the cluster only transferred files from one of the malware servers, whereas others connected to both\nVOLUME 11, 2023 21\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nand revealed a potential hidden link between the servers. The number of different attacker IP addresses using each unique malware file is depicted on the bottom left chart in Fig. 16.\nThe graph further reveals that each of these three file names, in fact, conceals four different payloads, none of which was ever served by both of the servers. The user might again speculate that this is likely due to the payload obfuscation in an attempt to evade detection. Therefore, while the links between the two servers are revealed by individual attackers, the potential links between the attacker communities are revealed by file name patterns. By uncovering these links in our attack graph model, we managed to unveil the re-\nlationships between the payloads, thus increasing the chances of their detection.\nSuch graph projections also form a basis for botnet detection using multiple graph features (e.g., select links from the global graph and newly formed virtual relationships). Individual attackers may be associated based on their reliance on distinct malware distribution servers (networks) for payload delivery based on malware naming patterns, file hashes, command similarity, execution order, or a combination of these and other factors. Fig. 18 illustrates a rudimentary approach toward botnet detection based on community detection algorithms for the selected projection. In Fig. 18, the"
        },
        {
            "heading": "22 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nuser visualizes the results by color-coding themost significant connected components of the network.\nFig. 18 illustrates the potential botnets. The connected component search algorithm applied to the new network results in 57 communities, the largest 15 of which are colorcoded. Detection quality scales with the size of the captured attack sample and is amplified by the distributed nature of the underlying honeypot system. While the proposed approach is capable of botnet detection, misclassifications are likely to occur if the data are not complemented by amultitude of other dimensions. Either individual botnets may consist of several smaller groups of attackers or the individual attackers may belong to multiple botnets at the same time.\nTo automate attacker classification and assort attack-\ners into communities, connected component search [105] and community detection algorithms, such as the Louvain method [106], are automatically performed for all predefined graph projections during the data import procedure. Detected botnets are ordered by size and charted in the details pane of the interface. Extracted community sizes and malware server PageRank charts for graph projection in Fig. 18 are shown in Fig. 19.\nThe user may decide to use the graph data to categorize malware into virtual groups based on their file name similarity. They can do so by visualizing the Levenshtein distance between the individual malware file names. The user first applies graph filters to only visualize MalwareFileName nodes and models a new direct relationship with the calculated Lev-\nVOLUME 11, 2023 23\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nenshteinSimilarity parameter. Lastly, the user may measure the network modularity of the new graph and color code the individual classes. The resulting exported visualization is shown in Fig. 20.\nD. INDIVIDUAL ATTACK BROWSER Our second use case scenario includes the review of the individual captured attacks in isolation from the global attack graph. Instead of applying node and edge label filters on the global graph, the user can employDATA CONTROLS to enter the SPECIFIC ATTACK view and only retrieve nodes bound by specific relationships tied to the attack\u2019s unique identifier. In this manner, generic graph relationships are not retrieved,\nand the user can focus on the extracted subgraph (attack) topology. The user can review individual attacks by directly referencing their identifiers either using manual input, by selecting attack links displayed in various entity properties, or by timeconsecutively browsing between the captured attack events. An example of the simplified attack structure is shown in Fig. 21. Fig. 21 depicts the targeted honeypot system (cyan) and several consecutive stages of the attack execution chain. The attack event flow is depicted from the top right to the bottom left of the graph. It starts with the initial access to the target system over the SSH service on port 22 (attack vector). The"
        },
        {
            "heading": "24 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nattacker\u2019s IP address (red) is traced to the town of Natal, Brazil, based on the geographical IP data. It belongs to the Autonomous System number 53153 and resolves a reverse DNS lookup. The attacker then initiates an outgoing connection from the compromised system and retrieves the malware payload from another server in Hangzhou, China, listening on port 80. The payload delivery stage is modeled as an action originating from the attacker server to the malware distribution server, even though the outgoing connection is, in fact, established from the compromised host. This links the attacker and malware servers when visualizing the attack. During the malware download and installation stage, its distribution URL is recorded and decomposed it into URL parts. The latter are not displayed in the individual attack preview. The downloaded files and their properties, including their MIME type and extracted strings, are also stored in the database. The files are represented by their MD5 hash and file name(s). Captured files are then scanned for known malware with an array ofmalware detection engines and classifiedwith\nmalware category tags. These are linked to the detection result reference and displayed on the graph. Specific attack preview also enables the user to browse entity relations outside of the scope of the current attack. It allows them to discover entity links without the requirement to display all nodes of the global attack graph. The analysis is conducted inversely to the exploration of the global attack graph: instead of diluting the graph to identify hidden links, the user expands relationships starting from a specific attack to reach related nodes and reveal prominent features. Since the user is interested in the details of the attacker\u2019s malware, they hover over the malware file node to expand its direct links from the global attack graph. With a few clicks, the user reveals two virtual relationship types, the GenericFileDirectlyUsedByAttacker and GenericWasMalwareDetected, thus unveiling all attackers relying on the same malware file to execute the attack and malware scan results at various points in time. This is illustrated in Fig. 22. Fig. 22 illustrates the visual attack exploration mode on\nVOLUME 11, 2023 25\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics"
        },
        {
            "heading": "26 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nthe main graph display and lists the selected entity and attack session details in the bottom pane.Most notably, entity details reveal the total number of times this file was detected in a global attack graph. They also reveal the corresponding identifiers of these attacks and allow the user to visualize them on the graph with a single click. Besides the attack involvement data, the bottom pane displays a replay of the captured SSH session, revealing an automated malware installation\nscript. The topmost part of the figure shows the direct link expansion resulting from hovering over the selected file node. This option visualizes select directly connected nodes from the global attack graph. These include 20 additional attacker IP addresses utilizing the same malware file and indicating a potential correlation between the attackers.\nVOLUME 11, 2023 27\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nVI. CONCLUSIONS, LIMITATIONS, AND FUTURE WORK\nWe presented a novel approach for cyberattack modeling using graph theory and validated its usefulness with a proofof-concept implementation and analysis of two common use case scenarios. We described the developed model and visualization tool and demonstrated their benefits during a walkthrough of their use-case scenario. We presented the use of the designed software for honeynet attack data visualization and analysis. We used the developed attack graph model to\nexplore attack entity relationships and identify and visualize malware distribution networks. We presented statistical data on captured attacks, conducted malware file analysis, and displayed rudimentary botnet detection functionality. Lastly, we deduced the characteristics of the captured attack sample, revealing substantial malware reuse and uncovering hidden links between attackers, malware distribution servers, and malware files. With that, we demonstrated that the developed proof-of-concept aids cyberattack modeling, analysis, and"
        },
        {
            "heading": "28 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nvisualization. We believe the results obtained using our tools and methods are significant as they demonstrate the power of interactive visual analytics designed with end users in mind. They highlight the importance of continuous monitoring of the dynamic threat landscape and provide insights into the challenges of addressing a wide variety of cyberattacks with a unified model.\nWe aimed to design our solution in accordance with the reviewed visualization best practices in an attempt to ease attack cognition. We conducted expert consultations with the potential users of the tool in the cybersecurity domain and identified their needs. We consulted cybersecurity analysts and incident response teams and collected their continuous feedback throughout the solution development. We received both positive and negative feedback. Cybersecurity professionals complimented our graph-based approach to threat hunting and attack analysis. However, they expressed their concerns over the global attack graph complexity and the requirement ofmanual attack datamapping to fit or extend the model. They complimented the tool\u2019s interactivity and attack visualizations resembling the Cyber Kill Chain model but questioned its coverage and missed a wider array of integration with third-party intelligence data providers. Furthermore, we also identified several occasions of overplotting during the visualization of vast datasets. We concern overplotting may worsen and reduce the visualization performance and the effectiveness of attack data communication with an increase in data amount.\nWithin our future work, we plan to address the expressed user concerns and propositions regarding the demonstrated solution. We plan to extend the attack graph model with attack reconnaissance data collected from a network telescope (https://telescope.ltfe.org) and implement additional reconnaissance and post-exploitation data analysis tools. We intend to further improve the interactivity and visualizations\noffered by our tool by introducing timeline-based dynamic graph previews and implementing additional third-party data integrations with the MITRE ATT&CK framework, MISP platform, and the CVE program. Our major research directions entail data dimensionality reduction and prominent attack feature extraction approaches based on machine learning, including using large language models. We aspire that a holistic approach towards cyber incident analysis will enable better attacker profiling, identification of human actors, and detection of advanced persistent threats."
        },
        {
            "heading": "APPENDIX A DATA AVAILABILITY",
            "text": "The collected honeypot metadata that served as a basis for the processing and visualization described in this paper is publicly available on our project\u2019s website, https://cyber. ltfe.org, or available upon request. A limited subset of the data are also available in the Zenodo repository under the DOI:10.5281/zenodo.3687527. All published data are deidentified and pseudonymized to protect any sensitive information. All intermediate results and metadata can be made available at the authors\u2019 discretion upon request. Requests can be sent to the corresponding author. A supplementary video demonstration of the developed proof-of-concept solution is available at https://youtube.com/ watch?v=-YzH2zSFwbs."
        },
        {
            "heading": "30 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nvol. 35, p. 100219, 2020. [Online]. Available: https://www.sciencedirect. com/science/article/pii/S1574013719300772\n[15] C. Phillips and L. P. Swiler, \u2018\u2018A graph-based system for networkvulnerability analysis,\u2019\u2019 in Proceedings of the 1998 Workshop on New Security Paradigms - NSPW \u201998. ACM Press, 1998, pp. 71\u201379. [Online]. Available: http://portal.acm.org/citation.cfm?doid=310889.310919\n[16] J. Zeng, S. Wu, Y. Chen, R. Zeng, and C. Wu, \u2018\u2018Survey of Attack Graph Analysis Methods from the Perspective of Data and Knowledge Processing,\u2019\u2019 Security and Communication Networks, vol. 2019, p. e2031063, 2019. [Online]. Available: https://www.hindawi.com/journals/ scn/2019/2031063/\n[17] I. Chokshi, N. Ghosh, and S. K. Ghosh, \u2018\u2018Efficient generation of exploit dependency graph by customized attack modeling technique,\u2019\u2019 in 2012 18th International Conference on Advanced Computing and Communications (ADCOM), 2012, pp. 39\u201345.\n[18] I. Kotenko and M. Stepashkin, \u2018\u2018Attack Graph Based Evaluation of Network Security,\u2019\u2019 in Communications and Multimedia Security, ser. Lecture Notes in Computer Science, H. Leitold and E. P. Markatos, Eds. Springer, 2006, pp. 216\u2013227.\n[19] X. Ou, W. F. Boyer, and M. A. McQueen, \u2018\u2018A scalable approach to attack graph generation,\u2019\u2019 in Proceedings of the 13th ACM Conference on Computer and Communications Security, ser. CCS \u201906. Association for Computing Machinery, 2006, pp. 336\u2013345. [Online]. Available: https://doi.org/10.1145/1180405.1180446\n[20] S. Noel and S. Jajodia, \u2018\u2018Managing attack graph complexity through visual hierarchical aggregation,\u2019\u2019 in Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security, ser. VizSEC/DMSEC \u201904. Association for Computing Machinery, 2004, pp. 109\u2013118. [Online]. Available: https://doi.org/10.1145/1029208.1029225\n[21] O.M. Sheyner, \u2018\u2018Scenario Graphs andAttackGraphs,\u2019\u2019 Ph.D. dissertation,\nVOLUME 11, 2023 31\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nCarnegie Mellon University, 2014. [22] N. Idika, \u2018\u2018Characterizing and aggregating attack graph-based security\nmetric,\u2019\u2019 Ph.D. dissertation, Purdue UniversityWest Lafayette, 2011. [Online]. Available: https://docs.lib.purdue.edu/dissertations/AAI3444572/ [23] D. Tayouri, N. Baum, A. Shabtai, and R. Puzis. (2022) A Survey of MulVAL Extensions and Their Attack Scenarios Coverage. [Online]. Available: http://arxiv.org/abs/2208.05750 [24] S. Noel and S. Jajodia, \u2018\u2018Optimal IDS Sensor Placement and Alert Prioritization Using Attack Graphs,\u2019\u2019 J. Network Syst. Manage., vol. 16, pp. 259\u2013275, 2008. [25] L.Wang, T. Islam, T. Long, A. Singhal, and S. Jajodia, \u2018\u2018AnAttack GraphBased Probabilistic Security Metric,\u2019\u2019 in Data and Applications Security\nXXII, ser. Lecture Notes in Computer Science, V. Atluri, Ed. Springer, 2008, pp. 283\u2013296. [26] S. Noel, S. Jajodia, L. Wang, and A. Singhal, \u2018\u2018Measuring Security Risk of Networks Using Attack Graphs,\u2019\u2019 International Journal of Next Generation Computing, vol. 1, no. 1, pp. 135\u2013147, 2010. [27] N. Poolsappasit, R. Dewri, and I. Ray, \u2018\u2018Dynamic Security Risk Management Using Bayesian Attack Graphs,\u2019\u2019 IEEE Transactions on Dependable and Secure Computing, vol. 9, no. 1, pp. 61\u201374, 2012. [Online]. Available: http://ieeexplore.ieee.org/document/5936075/ [28] R. E. Sawilla and X. Ou, \u2018\u2018Identifying Critical Attack Assets in Dependency Attack Graphs,\u2019\u2019 in Computer Security - ESORICS 2008, S. Jajodia and J. Lopez, Eds. Springer Berlin Heidelberg, 2008, vol."
        },
        {
            "heading": "32 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\n5283, pp. 18\u201334. [Online]. Available: http://link.springer.com/10.1007/ 978-3-540-88313-5_2 [29] L. Page, S. Brin, R. Motwani, and T. Winograd, \u2018\u2018The PageRank Citation Ranking: Bringing Order to the Web. - Stanford InfoLab Publication Server.\u2019\u2019 [Online]. Available: http://ilpubs.stanford.edu:8090/422/ [30] H. Huang, S. Zhang, X. Ou, A. Prakash, and K. Sakallah, \u2018\u2018Distilling critical attack graph surface iteratively through minimum-cost SAT solving,\u2019\u2019 in Proceedings of the 27th Annual Computer Security Applications Conference, ser. ACSAC \u201911. Association for Computing Machinery, 2011, pp. 31\u201340. [Online]. Available: https://doi.org/10. 1145/2076732.2076738 [31] L. Wang, S. Jajodia, A. Singhal, P. Cheng, and S. Noel, \u2018\u2018K-Zero Day Safety: A Network Security Metric for Measuring the Risk of Unknown Vulnerabilities,\u2019\u2019 IEEE Transactions on Dependable and Secure Computing, vol. 11, no. 1, pp. 30\u201344, 2014. [32] X. Ou, S. Govindavajhala, and A. W. Appel, \u2018\u2018MulVAL: A LogicbasedNetwork Security Analyzer,\u2019\u2019 in 14th USENIX Security Symposium; http://www. usenix. org/events/sec05/tech/ou. html: Baltimore, Maryland, USA, 2005. [33] H. Holm, M. Ekstedt, T. Sommestad, and L. NordstrM, \u2018\u2018CySeMoL: A tool for cyber security analysis of enterprises,\u2019\u2019 in 22nd International Conference and Exhibition on Electricity Distribution (CIRED 2013). Institution of Engineering and Technology, 2013, pp. 1109\u20131109. [Online]. Available: https://digital-library.theiet.org/content/conferences/ 10.1049/cp.2013.1077 [34] H. Holm, M. Ekstedt, T. Sommestad, and M. Korman, \u2018\u2018A Manual for the Cyber Security Modeling Language (simplified version),\u2019\u2019 Department of Industrial Information and Control Systems, Royal Institute of Technology, Tech. Rep., 2013. [Online]. Available: https://www.semanticscholar.org/paper/ A-Manual-for-the-Cyber-Security-Modeling-Language-Holm-Ekstedt/ ffa6f7eb15f1e91e26d266d5d9f9824cbbf36862 [35] M. L. Artz, \u2018\u2018NetSPA : A Network Security Planning Architecture,\u2019\u2019 Thesis, Massachusetts Institute of Technology, 2002. [Online]. Available: https://dspace.mit.edu/handle/1721.1/29899 [36] A. Nadeem, S. Verwer, and S. J. Yang. SAGE: Intrusion Alert-driven Attack Graph Extractor. [Online]. Available: http://arxiv.org/abs/2107. 02783 [37] Z. Li, J. Zeng, Y. Chen, and Z. Liang. AttacKG: Constructing Technique Knowledge Graph from Cyber Threat Intelligence Reports. [Online]. Available: http://arxiv.org/abs/2111.07093 [38] MITRE ATT&CK\u00ae. [Online]. Available: https://attack.mitre.org/ [39] T. Li, Y. Jiang, C. Lin, M. S. Obaidat, Y. Shen, and J. Ma, \u2018\u2018DeepAG:\nAttack Graph Construction and Threats Prediction With Bi-Directional Deep Learning,\u2019\u2019 IEEE Transactions on Dependable and Secure Computing, vol. 20, no. 1, pp. 740\u2013757, 2023. [40] B. Asvija, R. Eswari, and M. B. Bijoy, \u2018\u2018Bayesian attack graphs for platform virtualized infrastructures in clouds,\u2019\u2019 Journal of Information Security and Applications, vol. 51, p. 102455, 2020. [Online]. Available: https://www.sciencedirect.com/science/article/pii/S2214212619305332 [41] T. Wang, Q. Lv, B. Hu, and D. Sun, \u2018\u2018CVSS-based Multi-Factor Dynamic Risk Assessment Model for Network System,\u2019\u2019 in 2020 IEEE 10th International Conference on Electronics Information and Emergency Communication (ICEIEC), 2020, pp. 289\u2013294. [42] D. Malzahn, Z. Birnbaum, and C. Wright-Hamor, \u2018\u2018Automated Vulnerability Testing via Executable Attack Graphs,\u2019\u2019 in 2020 International Conference on Cyber Security and Protection of Digital Services (Cyber Security), 2020, pp. 1\u201310. [43] H. Shiravi, A. Shiravi, and A. A. Ghorbani, \u2018\u2018A Survey of Visualization Systems for Network Security,\u2019\u2019 IEEE Transactions on Visualization and Computer Graphics, vol. 18, no. 8, pp. 1313\u20131329, 2012. [44] S.-c. Liu and Y. Liu, \u2018\u2018Network security risk assessment method based on HMM and attack graph model,\u2019\u2019 in 2016 17th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD), 2016, pp. 517\u2013522. [45] S. Peryt, J. AndreMorales,W. Casey, A. Volkmann, B.Mishra, andY. Cai, \u2018\u2018Visualizing aMalwareDistributionNetwork,\u2019\u2019 in 2016 IEEE Symposium on Visualization for Cyber Security (VizSec), 2016, pp. 1\u20134. [46] A. Ulmer, M. Schufrin, D. Sessler, and J. Kohlhammer, \u2018\u2018VisualInteractive Identification of Anomalous IP-Block Behavior Using GeoIP Data,\u2019\u2019 in 2018 IEEE Symposium on Visualization for Cyber Security (VizSec), 2018, pp. 1\u20138. [47] J. McPherson, K.-L. Ma, P. Krystosk, T. Bartoletti, and M. Christensen, \u2018\u2018PortVis: A tool for port-based detection of security events,\u2019\u2019 in\nProceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security - VizSEC/DMSEC \u201904. ACM Press, 2004, p. 73. [Online]. Available: http://portal.acm.org/citation.cfm?doid= 1029208.1029220 [48] X. Yin, W. Yurcik, M. Treaster, Y. Li, and K. Lakkaraju, \u2018\u2018VisFlowConnect: Netflow visualizations of link relationships for security situational awareness,\u2019\u2019 in Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security, ser. VizSEC/DMSEC \u201904. Association for Computing Machinery, 2004, pp. 26\u201334. [Online]. Available: https://doi.org/10.1145/1029208.1029214 [49] L. Williams, R. Lippmann, and K. Ingols, \u2018\u2018An Interactive Attack Graph Cascade and Reachability Display,\u2019\u2019 in VizSEC 2007: Proceedings of the Workshop on Visualization for Computer Security, ser. Mathematics and Visualization, J. R. Goodall, G. Conti, and K.-L. Ma, Eds. Springer, 2008, pp. 221\u2013236. [Online]. Available: https://doi.org/10. 1007/978-3-540-78243-8_15 [50] A. Xie, Z. Cai, C. Tang, J. Hu, and Z. Chen, \u2018\u2018Evaluating Network Security With Two-Layer Attack Graphs,\u2019\u2019 in Proceedings of 2009 Annual Computer Security Applications Conference, 2009. [Online]. Available: https://ieeexplore.ieee.org/document/5380503 [51] M. Chu, K. Ingols, R. Lippmann, S. Webster, and S. Boyer, \u2018\u2018Visualizing attack graphs, reachability, and trust relationships with NAVIGATOR,\u2019\u2019 in Proceedings of the Seventh International Symposium on Visualization for Cyber Security, ser. VizSec \u201910. Association for Computing Machinery, 2010, pp. 22\u201333. [Online]. Available: https://doi.org/10.1145/1850795. 1850798 [52] M. Angelini, N. Prigent, and G. Santucci, \u2018\u2018PERCIVAL: Proactive and reactive attack and response assessment for cyber incidents using visual analytics,\u2019\u2019 in 2015 IEEE Symposium on Visualization for Cyber Security (VizSec), 2015, pp. 1\u20138. [53] S. Noel, E. Harley, K. Tam,M. Limiero, andM. Share, \u2018\u2018CyGraph: GraphBased Analytics and Visualization for Cybersecurity,\u2019\u2019 in Handbook of Statistics. Elsevier, 2016, vol. 35, pp. 117\u2013167. [Online]. Available: https://linkinghub.elsevier.com/retrieve/pii/S0169716116300426 [54] S. O\u2019Hare, S. Noel, and K. Prole, \u2018\u2018A Graph-Theoretic Visualization Approach to Network Risk Analysis,\u2019\u2019 in Visualization for Computer Security, J. R. Goodall, G. Conti, and K.-L. Ma, Eds. Springer Berlin Heidelberg, 2008, vol. 5210, pp. 60\u201367. [Online]. Available: http://link.springer.com/10.1007/978-3-540-85933-8_6 [55] M. Angelini, S. Bonomi, S. Lenti, G. Santucci, and S. Taggi, \u2018\u2018MAD: A visual analytics solution for Multi-step cyber Attacks Detection,\u2019\u2019 Journal of Computer Languages, vol. 52, pp. 10\u201324, 2019. [Online]. Available: https://www.sciencedirect.com/science/article/pii/S1045926X17301106 [56] L. Leichtnam, E. Totel, N. Prigent, and L. M\u00e9, \u2018\u2018STARLORD: Linked security data exploration in a 3D graph,\u2019\u2019 in 2017 IEEE Symposium on Visualization for Cyber Security (VizSec), 2017, pp. 1\u20134. [57] O. Tsigkas, O. Thonnard, and D. Tzovaras, \u2018\u2018Visual spam campaigns analysis using abstract graphs representation,\u2019\u2019 in Proceedings of the Ninth International Symposium on Visualization for Cyber Security, ser. VizSec \u201912. Association for Computing Machinery, 2012, pp. 64\u201371. [Online]. Available: https://doi.org/10.1145/2379690.2379699 [58] J. J. Fowler, T. Johnson, P. Simonetto, M. Schneider, C. Acedo, S. Kobourov, and L. Lazos, \u2018\u2018IMap: Visualizing network activity over internet maps,\u2019\u2019 in Proceedings of the Eleventh Workshop on Visualization for Cyber Security, ser. VizSec \u201914. Association for Computing Machinery, 2014, pp. 80\u201387. [Online]. Available: https: //doi.org/10.1145/2671491.2671501 [59] G. Ikuomenisan and Y. Morgan, \u2018\u2018Systematic Review of Graphical Visual Methods in Honeypot Attack Data Analysis,\u2019\u2019 Journal of Information Security, vol. 13, no. 04, pp. 210\u2013243, 2022. [Online]. Available: https://www.scirp.org/journal/doi.aspx?doi=10.4236/jis.2022.134012 [60] J. Bertin, Semiology of Graphics: Diagrams, Networks, Maps. ESRI Press, 2011. [61] G. A. Miller, \u2018\u2018The magical number seven, plus or minus two: Some limits on our capacity for processing information,\u2019\u2019Psychological Review, vol. 63, pp. 81\u201397, 1956. [62] Why looking isn\u2019t always seeing: Readership skills and graphical programming: Communications of the ACM: Vol 38, No 6. [Online]. Available: https://dl.acm.org/doi/abs/10.1145/203241.203251 [63] D. L. Moody, \u2018\u2018The \"physics\" of notations: A scientific approach to designing visual notations in software engineering,\u2019\u2019 in Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 2, ser. ICSE \u201910. Association for Computing Machinery,\nVOLUME 11, 2023 33\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\n2010, pp. 485\u2013486. [Online]. Available: https://doi.org/10.1145/1810295. 1810442 [64] L. Graham, \u2018\u2018Gestalt theory in interactive media design,\u2019\u2019 Journal of Humanities & Social Sciences, 2008. [65] H. Kobayashi, Z. Zhang, H. Ochiai, and H. Esaki, \u2018\u2018Probing Firewalls of Malware-Infected Networks with Honeypot,\u2019\u2019 in Proceedings of the 14th International Conference on Future Internet Technologies. ACM, 2019, pp. 1\u20134. [Online]. Available: https://dl.acm.org/doi/10.1145/3341188. 3341190 [66] E. Vasilomanolakis, S. Karuppayah, P. Kikiras, and M. M\u00fchlh\u00e4user, \u2018\u2018A honeypot-driven cyber incident monitor: Lessons learned and steps ahead,\u2019\u2019 in Proceedings of the 8th International Conference on Security of Information and Networks. ACM, 2015, pp. 158\u2013164. [Online]. Available: https://dl.acm.org/doi/10.1145/2799979.2799999 [67] M. Dumas, J.-M. Robert, and M. J. Mcguffin, \u2018\u2018Alertwheel: Radial bipartite graph visualization applied to intrusion detection system alerts,\u2019\u2019 IEEE Network, vol. 26, no. 6, pp. 12\u201318, 2012. [Online]. Available: https://ieeexplore.ieee.org/document/6375888/ [68] M. Aupetit, Y. Zhauniarovich, G. Vasiliadis, M. Dacier, and Y. Boshmaf, \u2018\u2018Visualization of actionable knowledge to mitigate DRDoS attacks,\u2019\u2019 in 2016 IEEE Symposium on Visualization for Cyber Security (VizSec). IEEE, 2016, pp. 1\u20138. [Online]. Available: http://ieeexplore.ieee.org/ document/7739577/ [69] AlienVault - Open Threat Exchange. AlienVault Open Threat Exchange. [Online]. Available: https://otx.alienvault.com/ [70] C. Wagner, A. Dulaunoy, G. Wagener, and A. Iklody, \u2018\u2018MISP: The Design and Implementation of a Collaborative Threat Intelligence Sharing Platform,\u2019\u2019 in Proceedings of the 2016 ACM on Workshop on Information Sharing and Collaborative Security. ACM, 2016, pp. 49\u201356. [Online]. Available: https://dl.acm.org/doi/10.1145/2994539.2994542 [71] Common Vulnerabilities and Exposures. [Online]. Available: https: //www.cve.org/ [72] National Vulnerability Database. [Online]. Available: https://nvd.nist. gov/ [73] Offensive Security\u2019s Exploit Database Archive. [Online]. Available: https://www.exploit-db.com/ [74] Introduction to STIX. [Online]. Available: https://oasis-open.github.io/ cti-documentation/stix/intro [75] Introduction to TAXII. [Online]. Available: https://oasis-open.github.io/ cti-documentation/taxii/intro.html [76] CybOX - Cyber Observable Expression. [Online]. Available: https: //cyboxproject.github.io/ [77] About MAEC | MAEC Project Documentation. [Online]. Available: https://maecproject.github.io/about-maec/ [78] VirusTotal/yara. VirusTotal. [Online]. Available: https://github.com/ VirusTotal/yara [79] A. Kyriakou and N. Sklavos, \u2018\u2018Container-Based Honeypot Deployment for the Analysis of Malicious Activity,\u2019\u2019 in 2018 Global Information Infrastructure and Networking Symposium (GIIS), 2018, pp. 1\u20134. [80] M. Nawrocki,M.W\u00e4hlisch, T. C. Schmidt, C. Keil, and J. Sch\u00f6nfelder, \u2018\u2018A Survey on Honeypot Software and Data Analysis,\u2019\u2019 2016, unpublished. [Online]. Available: http://arxiv.org/abs/1608.06249 [81] IoT Cybersecurity: Research Challenges and Opportunities Ahead - IEEE Internet of Things. [Online]. Available: https://iot.ieee.org/newsletter/may-2020/ iot-cybersecurity-research-challenges-and-opportunities-ahead.html [82] A. Bar, B. Shapira, L. Rokach, and M. Unger, \u2018\u2018Identifying Attack Propagation Patterns in Honeypots Using Markov Chains Modeling and Complex Networks Analysis,\u2019\u2019 in 2016 IEEE International Conference on Software Science, Technology and Engineering (SWSTE). IEEE, 2016, pp. 28\u201336. [Online]. Available: http://ieeexplore.ieee.org/document/ 7515407/ [83] H. Studiawan, S. Djanali, and B. Pratomo, \u2018\u2018Graph-based forensic analysis of web honeypot,\u2019\u2019 Journal of Telecommunications and Information Technology, vol. 2016, pp. 60\u201365, 2016. [84] G. Fernandez, A. Nieto, and J. Lopez, \u2018\u2018ModelingMalware-drivenHoneypots,\u2019\u2019 in Proceedings of Trust, Privacy and Security in Digital Business: 14th International Conference, TrustBus 2017, 2017, pp. 130\u2013144. [85] G.Wagener, \u2018\u2018Self-Adaptive Honeypots Coercing and Assessing Attacker Behaviour,\u2019\u2019 Ph.D. dissertation, University of Luxembourg, 2011. [86] K. Durkota, V. Lisy, C. Kiekintveld, B. Bosansky, and M. Pechoucek, \u2018\u2018Case Studies of Network Defense with Attack Graph Games,\u2019\u2019 IEEE Intelligent Systems, vol. 31, no. 5, pp. 24\u201330, 2016. [Online]. Available: https://ieeexplore.ieee.org/document/7579429/\n[87] A. H. Anwar, C. Kamhoua, and N. Leslie, \u2018\u2018Honeypot Allocation over Attack Graphs in Cyber Deception Games,\u2019\u2019 in 2020 International Conference on Computing, Networking and Communications (ICNC), 2020, pp. 502\u2013506. [88] Y. Gao, G. Zhang, and C. Xing, \u2018\u2018A Multiphase Dynamic Deployment Mechanism of Virtualized Honeypots Based on Intelligent Attack Path Prediction,\u2019\u2019 Security and Communication Networks, vol. 2021, p. e6378218, 2021. [Online]. Available: https://www.hindawi.com/journals/ scn/2021/6378218/ [89] M. Ka\u00e2niche, Y. Deswarte, E. Alata, M. Dacier, and V. Nicomette, \u2018\u2018Empirical analysis and statistical modeling of attack processes based on honeypots,\u2019\u2019 in EEE/IFIP International Conference on Dependable Systems and Networks (DSN-2006), 2006. [90] S. Noel, \u2018\u2018A Review of Graph Approaches to Network Security Analytics,\u2019\u2019 in From Database to Cyber Security, P. Samarati, I. Ray, and I. Ray, Eds. Springer International Publishing, 2018, vol. 11170, pp. 300\u2013323. [Online]. Available: http://link.springer.com/10. 1007/978-3-030-04834-1_16 [91] Neo4j Graph Data Platform \u2013 The Leader in Graph Databases. Neo4j Graph Data Platform. [Online]. Available: https://neo4j.com/ [92] openCypher. [Online]. Available: https://opencypher.org/ [93] J. Yang, R. Xu, Z. Qi, and Y. Shi. Visual Anomaly Detection for Images:\nA Survey. [Online]. Available: http://arxiv.org/abs/2109.13157 [94] S.-Y. Ji, B.-K. Jeong, and D. H. Jeong, \u2018\u2018Evaluating visualization\napproaches to detect abnormal activities in network traffic data,\u2019\u2019 International Journal of Information Security, vol. 20, no. 3, pp. 331\u2013345, 2021. [Online]. Available: https://doi.org/10.1007/s10207-020-00504-9 [95] C. O. S. Sorzano, J. Vargas, and A. P. Montano. A survey of dimensionality reduction techniques. [Online]. Available: http://arxiv. org/abs/1403.2877 [96] T. L. Weissgerber, N. M. Milic, S. J. Winham, and V. D. Garovic, \u2018\u2018Beyond Bar and Line Graphs: Time for a New Data Presentation Paradigm,\u2019\u2019 PLOS Biology, vol. 13, no. 4, p. e1002128, 2015. [Online]. Available: https://journals.plos.org/plosbiology/article?id=10. 1371/journal.pbio.1002128 [97] D. Keim, G. Andrienko, J.-D. Fekete, C. G\u00f6rg, J. Kohlhammer, and G. Melan\u00e7on, \u2018\u2018Visual Analytics: Definition, Process, and Challenges,\u2019\u2019 in Information Visualization: Human-Centered Issues and Perspectives, ser. Lecture Notes in Computer Science, A. Kerren, J. T. Stasko, J.-D. Fekete, and C. North, Eds. Springer, 2008, pp. 154\u2013175. [Online]. Available: https://doi.org/10.1007/978-3-540-70956-5_7 [98] T. Green, \u2018\u2018Cognitive dimensions of notations,\u2019\u2019 People and Computers V. Cambridge, UK: Cambridge University Press, pp. pp 443\u2013460, 1989. [99] A. H. S. Chan and A. W. Y. Ng, \u2018\u2018Perceptions of implied hazard for visual and auditory alerting signals,\u2019\u2019 Safety Science, vol. 47, no. 3, pp. 346\u2013352, 2009. [Online]. Available: https://www.sciencedirect.com/ science/article/pii/S0925753508000908 [100] O. Omojola, \u2018\u2018Using Symbols and Shapes for Analysis in Small Focus Group Research,\u2019\u2019 The Qualitative Report, vol. 21, pp. 832\u2013847, 2016. [101] M. Bastian, S. Heymann, and M. Jacomy, \u2018\u2018Gephi: An Open Source Software for Exploring and Manipulating Networks,\u2019\u2019 in Proceedings of the international AAAI conference on web and social media, 2009. [102] M. Franz, C. T. Lopes, G. Huck, Y. Dong, O. Sumer, and G. D. Bader, \u2018\u2018Cytoscape.js: A graph theory library for visualisation and analysis,\u2019\u2019 Bioinformatics, p. btv557, 2015. [Online]. Available: https://academic.oup.com/bioinformatics/article-lookup/doi/ 10.1093/bioinformatics/btv557 [103] Graphology. Graphology. [Online]. Available: https://graphology.github. io/ [104] Sigma.js. [Online]. Available: https://www.sigmajs.org/ [105] R. Tarjan, \u2018\u2018Depth first search and linear graph algorithms,\u2019\u2019 Siam Journal on Computing, 1972. [106] V. D. Blondel, J.-L. Guillaume, R. Lambiotte, and E. Lefebvre, \u2018\u2018Fast\nunfolding of communities in large networks,\u2019\u2019 Journal of Statistical Mechanics: Theory and Experiment, vol. 2008, no. 10, p. P10008, 2008. [Online]. Available: http://arxiv.org/abs/0803.0476"
        },
        {
            "heading": "34 VOLUME 11, 2023",
            "text": "This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/\nM. Rabzelj et al.: Cyberattack Graph Modeling for Visual Analytics\nCIRIL BOHAK is a Research Scientist in the Nanovisualization Research Group at the Visual Computing Center at King Abdullah University of Science and Technology (KAUST). He is also an Assistant Professor at the Faculty of Computer and Information Science at the University of Ljubljana. He works on the development of novel rendering and visualization methods for visualizing data at the nanoscale. He obtained his B.Sc., M.Sc., and Ph.D. in Computer and Information Science from\nthe University of Ljubljana. He started his career as a researcher in Laboratory for Computer Graphics and Multimedia, researching in the fields of Music Information Retrieval, Computer Graphics, Human-Computer Interaction, Game Technology, and E-Learning. He continued his career as a full-time Teaching Assistant at the Faculty of Computer and Information Science, University of Ljubljana, teaching diverse CS-related courses. His current scientific focus is on Volumetric and Neural rendering and Data Visualization. He is developing and applying new rendering and visualization methods at the nanoscale for interactive and intuitive structure visualization.\nLEON \u0160TEFANI\u0106 JU\u017dNI\u010c is a ResearchAssociate of the Laboratory for Telecommunications at the Faculty of Electrical Engineering University of Ljubljana His main research interests are cybersecurity cloud architectures and data analysis He has received his B.Sc. degree and M.Sc. degree in the field of telecommunications from the Faculty of Electrical Engineering, University of Ljubljana.\nANDREJ KOS is a Full Professor at the University of Ljubljana, Faculty of Electrical Engineering. He is the Head of the Laboratory for Telecommunications as well as the Chairman of the Commission for Innovation. He received his Ph.D. at the University of Ljubljana in the field of telecommunications. Currently, at the center of his work are 5G/6G systems and services and the applications of cyber-physical systems, including the Internet of Things.\nMATEJ RABZELJ is a Ph.D. candidate and Research Associate at the Faculty of Electrical Engineering, University of Ljubljana. His areas of particular interest include cybersecurity, systems design, and PPDR solution development. He received a B.Sc. degree in Electronics Engineering in 2018 and an M.Sc. degree in Information and Communications Technology in 2020, both from the Faculty of Electrical Engineering, University of Ljubljana. In 2022 he participated as a national\ncyberdefense team member in NATO\u2019s Locked Shields exercise.\nURBAN SEDLAR is an Assistant Professor and Senior Researcher at the Laboratory for Telecommunications, Faculty of Electrical Engineering, University of Ljubljana. His recent work focuses on the area of cybersecurity threat assessment using large-scale honeypots. He has also been involved in several EC and national research and development projects on the topics of emergency response systems, cloud computing, and the Internet of Things.\nVOLUME 11, 2023 35\nThis work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/"
        }
    ],
    "title": "Cyberattack Graph Modeling for Visual Analytics",
    "year": 2023
}