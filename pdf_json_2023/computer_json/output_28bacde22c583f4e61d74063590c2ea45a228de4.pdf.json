{
    "abstractText": "The subpower membership problem SMP(A) of a finite algebraic structure A asks whether a given partial function from A to A can be interpolated by a term operation of A, or not. While this problem can be EXPTIME-complete in general, Willard asked whether it is always solvable in polynomial time if A is a Mal\u2019tsev algebras. In particular, this includes many important structures studied in abstract algebra, such as groups, quasigroups, rings, Boolean algebras. In this paper we give an affirmative answer to Willard\u2019s question for a big class of 2-nilpotent Mal\u2019tsev algebras. We furthermore develop tools that might be essential in answering the question for general nilpotent Mal\u2019tsev algebras in the future. 2012 ACM Subject Classification Theory of computation \u2192 Computational complexity and cryptography",
    "authors": [
        {
            "affiliations": [],
            "name": "Michael Kompatscher"
        }
    ],
    "id": "SP:d90021ad3f485bfc40a6af49b1ac90f02f6d5731",
    "references": [
        {
            "authors": [
                "Erhard Aichinger",
                "Peter Mayr"
            ],
            "title": "Finitely generated equational classes",
            "venue": "Journal of Pure and Applied Algebra,",
            "year": 2016
        },
        {
            "authors": [
                "Erhard Aichinger",
                "Neboj\u0161a Mudrinski"
            ],
            "title": "Some applications of higher commutators in Mal\u2019cev algebras",
            "venue": "Algebra universalis,",
            "year": 2010
        },
        {
            "authors": [
                "Libor Barto",
                "Andrei Krokhin",
                "Ross Willard"
            ],
            "title": "Polymorphisms, and how to use them",
            "venue": "In Dagstuhl Follow-Ups,",
            "year": 2017
        },
        {
            "authors": [
                "Clifford Bergman"
            ],
            "title": "Universal algebra: Fundamentals and selected topics",
            "venue": "CRC Press,",
            "year": 2011
        },
        {
            "authors": [
                "Bruno Buchberger. Bruno"
            ],
            "title": "Buchberger\u2019s PhD thesis 1965: An algorithm for finding the basis elements of the residue class ring of a zero dimensional polynomial ideal",
            "venue": "Journal of symbolic computation,",
            "year": 2006
        },
        {
            "authors": [
                "Andrei Bulatov",
                "V\u00edctor Dalmau"
            ],
            "title": "A simple algorithm for Mal\u2019tsev constraints",
            "venue": "SIAM Journal on Computing,",
            "year": 2006
        },
        {
            "authors": [
                "Andrei Bulatov",
                "Marcin Kozik",
                "Peter Mayr",
                "Markus Steindl"
            ],
            "title": "The subpower membership problem for semigroups",
            "venue": "International Journal of Algebra and Computation,",
            "year": 1650
        },
        {
            "authors": [
                "Andrei Bulatov",
                "Peter Mayr",
                "\u00c1gnes Szendrei"
            ],
            "title": "The subpower membership problem for finite algebras with cube terms",
            "venue": "Logical Methods in Computer Science,",
            "year": 2019
        },
        {
            "authors": [
                "Jakub Bul\u00edn",
                "Michael Kompatscher"
            ],
            "title": "Short definitions in constraint languages",
            "venue": "In Proceedings of the 48th International Symposium on Mathematical Foundations of Computer Science, (MFCS 2023),",
            "year": 2023
        },
        {
            "authors": [
                "Stanley Burris",
                "Hanamantagouda Sankappanavar"
            ],
            "title": "A course in universal algebra, volume 78",
            "year": 1981
        },
        {
            "authors": [
                "Victor Dalmau",
                "Peter Jeavons"
            ],
            "title": "Learnability of quantified formulas",
            "venue": "Theoretical Computer Science,",
            "year": 2003
        },
        {
            "authors": [
                "Stefano Fioravanti"
            ],
            "title": "Closed sets of finitary functions between finite fields of coprime order. Algebra universalis, 81(4):Art",
            "venue": "No 52,",
            "year": 2020
        },
        {
            "authors": [
                "Ralph Freese",
                "Ralph McKenzie"
            ],
            "title": "Commutator theory for congruence modular varieties, volume 125",
            "venue": "CUP Archive,",
            "year": 1987
        },
        {
            "authors": [
                "Merrick Furst",
                "John Hopcroft",
                "Eugene Luks"
            ],
            "title": "Polynomial-time algorithms for permutation groups",
            "venue": "In 21st Annual Symposium on Foundations of Computer Science (sfcs",
            "year": 1980
        },
        {
            "authors": [
                "Christian Herrmann"
            ],
            "title": "Affine algebras in congruence modular varieties",
            "venue": "Acta Universitatis Szegediensis,",
            "year": 1979
        },
        {
            "authors": [
                "Pawe\u0142 Idziak",
                "Petar Markovi\u0107",
                "Ralph McKenzie",
                "Matthew Valeriote",
                "Ross Willard"
            ],
            "title": "Tractability and learnability arising from algebras with few subpowers",
            "venue": "SIAM Journal on Computing,",
            "year": 2010
        },
        {
            "authors": [
                "Piotr Kawa\u0142ek",
                "Michael Kompatscher",
                "Jacek Krzaczkowski"
            ],
            "title": "Circuit equivalence in 2nilpotent algebras",
            "venue": "arXiv preprint arXiv:1909.12256,",
            "year": 2019
        },
        {
            "authors": [
                "Donald E Knuth"
            ],
            "title": "Efficient representation of perm groups",
            "venue": "Combinatorica, 11(1):33\u201343,",
            "year": 1991
        },
        {
            "authors": [
                "Michael Kompatscher",
                "Peter Mayr",
                "Patrick Wynne"
            ],
            "title": "Personal communication. presented at AAA 102, Szeged, 2022",
            "venue": "URL: https://www.math.u-szeged.hu/aaa102/Slides/Mayr,",
            "year": 2022
        },
        {
            "authors": [
                "Dexter Kozen"
            ],
            "title": "Complexity of finitely presented algebras",
            "venue": "In Proceedings of the 9th annual ACM Symposium on Theory of Computing (STOC), pages 164\u2013177,",
            "year": 1977
        },
        {
            "authors": [
                "Dexter Kozen"
            ],
            "title": "Lower bounds for natural proof systems",
            "venue": "In 18th Annual Symposium on Foundations of Computer Science (sfcs",
            "year": 1977
        },
        {
            "authors": [
                "Marcin Kozik"
            ],
            "title": "A finite set of functions with an EXPTIME-complete composition problem",
            "venue": "Theoretical Computer Science,",
            "year": 2008
        },
        {
            "authors": [
                "Ernst W Mayr",
                "Albert R Meyer"
            ],
            "title": "The complexity of the word problems for commutative semigroups and polynomial ideals",
            "venue": "Advances in mathematics,",
            "year": 1982
        },
        {
            "authors": [
                "Peter Mayr"
            ],
            "title": "The subpower membership problem for Mal\u2019cev algebras",
            "venue": "International Journal of Algebra and Computation,",
            "year": 2012
        },
        {
            "authors": [
                "Peter Mayr"
            ],
            "title": "Vaughan\u2013lee\u2019s nilpotent loop of size 12 is finitely based",
            "venue": "arXiv preprint arXiv:2206.06136,",
            "year": 2022
        },
        {
            "authors": [
                "Vladimir Shpilrain",
                "Alexander Ushakov"
            ],
            "title": "Thompson\u2019s group and public key cryptography",
            "venue": "In Applied Cryptography and Network Security: Third International Conference,",
            "year": 2005
        },
        {
            "authors": [
                "Vladimir Shpilrain",
                "Gabriel Zapata"
            ],
            "title": "Using the subgroup membership search problem in public key cryptography",
            "venue": "Contemporary Mathematics,",
            "year": 2006
        },
        {
            "authors": [
                "Charles C Sims"
            ],
            "title": "Computational methods in the study of permutation groups. In Computational problems in abstract algebra, pages 169\u2013183",
            "year": 1970
        },
        {
            "authors": [
                "Joel VanderWerf"
            ],
            "title": "Wreath products of algebras: generalizing the Krohn-Rhodes theorem to arbitrary algebras",
            "venue": "Semigroup Forum,",
            "year": 1996
        },
        {
            "authors": [
                "Ross Willard"
            ],
            "title": "Four unsolved problems in congruence permutable varieties",
            "venue": "URL: https://www.math.uwaterloo",
            "year": 2007
        }
    ],
    "sections": [
        {
            "text": "2012 ACM Subject Classification Theory of computation \u2192 Computational complexity and cryptography\nKeywords and phrases subpower membership problem, Mal\u2019tsev algebra, compact representation, nilpotence, clonoids\nFunding This paper was supported by the Charles University project UNCE/SCI/022.\nAcknowledgements I would like to thank Peter Mayr for introducing me to difference clonoids, and giving several helpful comments on earlier versions of this paper.\n1 Introduction\nIt is a recurring and well-studied problem in algebra to describe the closure of a given list of elements under some algebraic operations (let us only mention the affine and linear closure of a list of vectors, or the ideal generated by a list of polynomials). But also in a computational context, this problem has a rich history, appearing in many areas of computer science. In its formulation as subalgebra membership problem, the task is to decide whether a given finite list of elements of an algebraic structure generates another element or not.\nDepending on the algebraic structures studied, a variety of different problems emerges. One of the most well-known examples is the subgroup membership problem, in which the task is to decide, if for a given set of permutations \u03b11, . . . , \u03b1n on a finite set X, another permutation \u03b2 belongs to the subgroup generated by \u03b11, . . . , \u03b1n in SX . This problem can be solved in polynomial-time by the famous Schreier-Sims algorithm [30], whose runtime was analysed in [15] and [19]. The existence of such efficient algorithms is however not always guaranteed: if the symmetric group SX is for instance replaced by the full transformation semigroup on X, the corresponding membership problem is PSPACE-complete [22].\nA common feature of many algorithms for the subalgebra membership problem is to generate canonical generating sets of some sorts (such as computing the basis of a vector space via Gaussian elimination, or computing a Gr\u00f6bner basis via Buchberger\u2019s algorithm to solve the ideal membership problem [6]). But, in general, this is where the similarities end - depending on the algebraic structure, and the encoding of the input, the problem can range over a wide range of complexities, and have applications in vastly different areas such as cryptography [28, 29], computer algebra [6, 24], or proof complexity [22, 21].\nIn this paper, we study a version of the subalgebra membership problem that is called the subpower membership problem. For a fixed, finite algebraic structure A (henceforth\nar X\niv :2\n30 9.\n16 54\n9v 1\n[ m\nat h.\nR A\n] 2\n8 Se\np 20\n23\nalso just called an algebra) its subpower membership problem SMP(A) is the problem of deciding if a given tuple b \u2208 Ak is in the subalgebra of Ak generated by some other input tuples a1, . . . , an \u2208 Ak (here n and k are not fixed, but part of the input). This is equivalent to checking, whether the n-ary partial function that maps a1, . . . , an component-wise to b can be interpolated by a term function of A. For example, if p is a prime, SMP(Zp) is the problem of checking whether some vector b \u2208 Zkp is in the linear closure of a1, . . . , an \u2208 Zkp; this can easily be solved by Gaussian elimination. More general, for any finite group G, SMP(G) can be solved in polynomial time by a version of the Schreier-Sims algorithm [32].\nBesides being a natural problem in algebra, the subpower membership problem found some applications in some learning algorithms [7, 12, 17]. Moreover, an efficient algorithm for SMP(A) implies that it is also feasible to represent the relations invariant by some generating set of tuples. It was in particular remarked (see e.g. [9]), that a polynomial-time algorithm for SMP(A) would allow to define infinitary constraint satisfaction problems, in which the constraint relations are given by some generating tuples (with respect to A). This infinitary version of CSPs has the benefit that most of the algebraic machinery to CSPs (see e.g. [3]) still applies.\nExhaustively generating the whole subalgebra generated by a1, . . . , an in Ak gives an exponential time algorithm for SMP(A). And, in general, we cannot expect to do better: In [23] Kozik constructed a finite algebra A for which SMP(A) is EXP-complete. Even semigroups can have PSPACE-complete subpower membership problem [8].\nHowever, for so called Mal\u2019tsev algebras, better lower bounds are known. Mal\u2019tsev algebras are algebras defined by having a Mal\u2019tsev term m, i.e. a term satisfying the identities y = m(x, x, y) = m(y, x, x) for all x, y. Mal\u2019tsev algebras lie at the intersection of many areas of mathematics: they include algebraic structures of ubiquitous importance (groups, fields, vector spaces), but also appear in logic (Boolean algebras, Heyting algebras), commutative algebra (rings, modules, K-algebras), and non-associative mathematics (quasigroups, loops). Mayr showed in [25] that the subpower membership problem of every Mal\u2019tsev algebra is in NP. His proof is based on the fact that every subalgebra R \u2264 An has a small generating set, which generates every element of R in a canonical way (a so-called compact representation). Thus, to solve the subpower membership problem, one can \u201cguess\u201d a compact representation of the subalgebra generated by a1, . . . , ak, and then check in polynomial time if it generates b. If such a compact representation can be moreover found in deterministic polynomial time, then SMP(A) is in P; this is, in fact, the dominant strategy to prove tractability.\nSo far, the existence of such polynomial time algorithms was verified for groups and rings [32, 15], supernilpotent algebras [25], and algebras that generate residually finite varieties [9]. On the other hand, no examples of NP-hard or intermediate complexity are known. This leads to the question whether SMP(A) \u2208 P for all finite Mal\u2019tsev algebras A [32]. On a broader scale, this question was also posed for algebras with few subpowers [17, Question 8].\nAn elementary class of Mal\u2019tsev algebras, for which the question still remains open, are nilpotent algebra. In fact, they can also be seen as an important stepping stone in answering [17, Question 8], as nilpotent Mal\u2019tsev algebras coincide with nilpotent algebras with few subpowers. Generalizing the concept of nilpotent groups, nilpotent algebras are defined by having a central series of congruences. While they have several nice structural properties, in general nilpotent algebras do not satisfy the two finiteness conditions mentioned above (supernilpotence, residual finiteness), thus they are a natural starting point when trying to generalize known tractability results. But even for 2-nilpotent algebras not much is known, then all polynomial-time algorithms were only constructed by ad-hoc arguments for concrete examples (such as Vaughan-Lee\u2019s 12-element loop [26]).\nThe first contribution of this paper is to prove that all 2-nilpotent algebras of size p \u00b7 q for two primes p =\u0338 q have a tractable subpower membership problem. In fact, we prove an even stronger result in Theorem 20: SMP(A) is in P, whenever A has a central series 0A < \u03c1 < 1A such that |A/\u03c1| = p is a prime, and the blocks of \u03c1 have size coprime to p.\nWhile this is still a relatively restricted class of nilpotent algebras, our methods have the potential to generalize to all 2-nilpotent Mal\u2019tsev algebras and beyond. Thus, our newly developed tools to analyze SMP can be regarded as the second main contribution. More specifically, in Theorem 11 we show that whenever L \u2297 U is a wreath product (see Section 3), such that U is supernilpotent, then SMP(L \u2297 U) reduces to SMP(L \u00d7 U) (which is polynomial-time solvable by [25]) and a version of the subpower membership problem for a multi-sorted algebraic object called a clonoid from U to L. This reduction in particular applies to all 2-nilpotent algebras; an analysis of clonoids between affine algebras then leads to Theorem 20. If, in future research, we could get rid of the condition of U being supernilpotent, this would provide a strong tool in studying general Mal\u2019tsev algebras, as every Mal\u2019tsev algebra with non-trivial center can be decomposed into a wreath product.\nOur paper is structured as follows: Section 2 contains preliminaries and some background on universal algebra. In Section 3 we discuss how Mal\u2019tsev algebras with non-trivial center can be represented by a wreath product and we introduce the concept of difference clonoid of such a representation. In Section 4 we discuss some situations, in which the subpower membership problem of a wreath product can be reduced to the membership problem of the corresponding difference clonoid. In particular, we prove Theorem 11. Section 5 contains an analysis of clonoids between Zp and coprime Abelian groups, which then leads to the proof of our main result, Theorem 20. In Section 6 we discuss some possible directions for future research.\n2 Preliminaries\nIn the following, we are going to discuss some necessary notions from universal algebra. For more general background we refer to the textbooks [4, 11]. For background on commutator theory we refer to [14] and [2]. For an introduction to Malt\u2019sev algebras and compact representations we refer to [5, Chapters 1.7-1.9].\nIn this paper, we are going to denote tuples by lower case bold letters, e.g. a \u2208 Ak. In order to avoid double indexing in some situations, we are going to use the notation a(i) to denote the i-th entry of a, i.e. a = (a(1), a(2), . . . , a(k)). However, otherwise we are going to follow standard notation as used e.g. in [4]."
        },
        {
            "heading": "2.1 Basic notions for general algebras",
            "text": "An algebra A = (A; (fAi )i\u2208I) is a first-order structure in a purely functional language (fi)i\u2208I (where each symbol fi has an associated arity). We say A is finite if its domain A is finite. A subalgebra B = (B; (fBi )i\u2208I) of an algebra A = (A; (fAi )i\u2208I) (denoted B \u2264 A) is an algebra obtained by restricting all basic operations fAi to a subset B \u2286 A that is invariant under all fAi \u2019s. The subalgebra generated by a list of elements a1, . . . , an, denoted by SgA(a1, . . . , an) is the smallest subalgebra of A that contains a1, . . . , an. The product \u220f i\u2208I Ai of a family\nof algebras (Ai)i\u2208I in the same language is defined as the algebra with domain \u220f\ni\u2208I Ai, whose basic operations are defined coordinate-wise. The power An is the product of n-many copies of A. Subalgebras of (finite) powers of A are sometimes also called subpowers of A, which motivates the name \u201csubpower membership problem\u201d. So, formally the subpower\nmembership problem of A can be stated as follows:\nSMP(A) Input: b, a1, . . . , an \u2208 Ak for some n, k \u2208 N Question: Is b \u2208 SgAk (a1, . . . , an)?\nNote that the subpowers of A are exactly the relations on A that are invariant under A. A congruence \u03b1 of A is an equivalence relation on A that is invariant under A. We write Con(A) for the lattice of all congruence of A. We denote the minimal and maximal element of this lattice by 0A = {(x, x) | x \u2208 A} and 1A = {(x, y) | x, y \u2208 A}. For every congruence \u03b1 \u2208 Con(A), one can form a quotient algebras A/\u03b1 in the natural way.\nThe term operations of an algebra A are all finitary operations that can be defined by a composition of basic operations of A. Two standard ways to represent them is by terms or circuits in the language of A. For a term or circuit t(x1, . . . , xn) in the language of A, we write tA(x1, . . . , xn) for the induced term operation on A. Occasionally, if it is clear from the context, we are not going to distinguish between a term/circuit and the corresponding term operation. The term operations of an algebra A are closed under composition and contain all projections, therefore they form an algebraic object called a clone. For short, we denote this term clone of an algebra A by Clo(A). Note that SgAk (a1, . . . , an) = {t(a1, . . . , an) | t \u2208 Clo(A)}.\nWe call a ternary operation mA(x, y, z) \u2208 Clo(A) a Mal\u2019tsev term if it satisfies the identities mA(y, x, x) = mA(x, x, y) = y for all x, y \u2208 A, and call A a Mal\u2019tsev algebra if it has a Mal\u2019tsev term. For instance, every group is a Mal\u2019tsev algebra with Mal\u2019tsev term m(x, y, z) = xy\u22121z. Mal\u2019tsev terms are a classic topic of study in universal algebra (see e.g. [4, Chapter 7]), and are in particular known to characterize congruence permutable varieties."
        },
        {
            "heading": "2.2 Clonoids",
            "text": "We are also going to rely on a multi-sorted generalisation of clones, so-called clonoids that were first introduced in [1] (in a slightly less general way). For a set of operations between two sets C \u2286 {f : An \u2192 B | n \u2208 N}, and k \u2208 N let us write C(k) = {f : Ak \u2192 B | f \u2208 C} for the subset of k-ary functions. Then, for two algebras A = (A, (fi)i\u2208I), B = (B, (gj)j\u2208J ) (in possibly different domains and languages), a set C \u2286 {f : An \u2192 B | n \u2208 N} is called a clonoid from A to B, or (A, B)-clonoid, if it is closed under composition with term operations of A from the inside, and B from the outside, i.e.: \u2200n, k \u2208 N (1) f \u2208 C(n), t1, . . . , tn \u2208 Clo(A)(k) \u21d2 f \u25e6 (t1, . . . , tn) \u2208 C(k) (2) s \u2208 Clo(B)(n), f1, . . . , fn \u2208 C(k) \u21d2 s \u25e6 (f1, . . . , fn) \u2208 C(k)."
        },
        {
            "heading": "2.3 Commutator theory",
            "text": "Commutator theory is the subfield of universal algebra that tries to generalise notions such as central subgroups, nilpotence, or solvability from group theory to general algebras. The most commonly used framework is based on so-called term-conditions, which we outline in the following.\nLet A be an algebra. For congruences \u03b1, \u03b2, \u03b3 \u2208 Con(A) we say that \u03b1 centralized \u03b2 modulo \u03b3 (and write C(\u03b1, \u03b2; \u03b3)) if and only if for all p(x, y) \u2208 Clo(A), and all tuples a, b \u2208 An, c, d \u2208 Am, such that ai \u223c\u03b1 bi for i = 1, . . . , n and cj \u223c\u03b2 dj for j = 1, . . . , m, the implication\np(a, c) \u223c\u03b3 p(a, d) \u21d2 p(b, c) \u223c\u03b3 p(b, d)\nholds. A congruence \u03b1 is called central if C(\u03b1, 0A; 1A) holds. The center is the biggest central congruence. An algebra A is called n-nilpotent if there is a central series of length n, i.e. a series of congruences 0A = \u03b10 \u2264 \u03b11 \u2264 \u00b7 \u00b7 \u00b7 \u2264 \u03b1n = 1A, such that C(\u03b1i+1, 1A; \u03b1i) for i = 0, . . . , n \u2212 1. An algebra A is called Abelian, if it is 1-nilpotent, i.e. C(1A, 1A; 0A) holds.\nWe are, however, not going to work directly with these definitions. There is a rich structural theory in the special case of Mal\u2019tsev algebras (and, more general, in congruence modular varieties [14]) that gives us very useful characterizations of many commutator theoretical properties.\nBy a result of Herrmann [16], a Mal\u2019tsev algebra A is Abelian if and only if it is affine, i.e. all of its term operations are affine combination \u2211n i=1 \u03b1ixi + c over some module; in particular the Mal\u2019tsev term is then equal to x \u2212 y + z. More generally, we are going to a result of Freese and McKenzie [14] that states that a Mal\u2019tsev algebra A with a central congruence \u03c1 can always be written as a wreath product L \u2297 U, such that L is affine and U = A/\u03c1. We are going to discuss such wreath product representations in Section 3.\nLastly, we want to mention that the definition of the relation C naturally generalizes to higher arities C(\u03b11, . . . , \u03b1n, \u03b2; \u03b3). This notion was first introduced by Bulatov; we refer to [14] and [2] to more background on higher commutators. In particular, an algebra is called k-supernilpotent if C(1A, . . . , 1A; 0A), where 1A appears k + 1 times. There are several known characterizations of supernilpotent Mal\u2019tsev algebras. We are mainly going to use the following:\n\u25b6 Theorem 1 (Proposition 7.7. in [2]). Let A be a k-supernilpotent Mal\u2019tsev algebra, 0 \u2208 A a constant and t, s two n-ary terms in the language of A.Then tA = sA if and only if they are equal on all tuples from the set S = {a \u2208 An | |{i : a(i) \u0338= 0}| \u2264 k}. (In fact, this is a characterization of k-supernilpotence for Mal\u2019tsev algebras.)"
        },
        {
            "heading": "2.4 Compact representations and SMP",
            "text": "For any subset R \u2286 An, we define its signature Sig(R) to be the set of all triples (i, a, b) \u2208 {1, . . . , n} \u00d7 A2, such that there are ta, tb \u2208 R that agree on the first i \u2212 1 coordinates, and ta(i) = a and tb(i) = b; we then also say that ta, tb are witnesses for (i, a, b) \u2208 Sig(R).\nIf A is a Mal\u2019tsev algebra, and R \u2264 An, then it is known that R is already generated by every subset S \u2286 R with Sig(S) = Sig(R) [5, Theorem 1.8.2.]. In fact, R is then equal to the closure of S under the Mal\u2019tsev operation m alone, and a tuple a is in R iff can be written as m(. . . m(a1, b2, a2), . . . , bn, an), for some ai, bi \u2208 S. For given a \u2208 R such elements ai, bi \u2208 S can be found polynomial time in |S|, by picking a1 such that a1(1) = a(1), and ai, bi \u2208 S as witnesses for m(. . . m(a1, b2, a2), . . . , bi\u22121, ai\u22121))(i) and a(i) at position i.\nA compact representation of R \u2264 An is a subset S \u2282 R with Sig(S) = Sig(R) and |S| \u2264 2| Sig(R)| \u2264 2n|A|2. So, informally speaking, compact representations are small generating sets of R with the same signature. It is not hard to see that compact representations always exist. Generalizations of compact representations exist also for relations on different domains (R \u2264 A1 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 An), and relations invariant under algebras with few subpowers, we refer to [5, Chapter 2] for more background.\nBy the above, SMP(A) reduces in polynomial time to the problem of finding a compact representation of SgAk (a1, . . . , an) for some input tuples a1, . . . , an \u2208 Ak. We are going to denote this problem by CompRep(A). Conversely, it was shown in [9] that finding a compact representations has a polynomial Turing reduction to SMP(A). Note further that, to solve CompRep(A) it is already enough to find a subset S \u2286 R with Sig(S) = Sig(R) of polynomial size, since such a set S can then be thinned out to a compact representation.\nLet us call a set of pairs {(c, pc) | c \u2208 S} an enumerated compact representation of SgAk (a1, . . . , an), if S is a compact representation of SgAk (a1, . . . , an), and every pc is a circuit in the language of A of polynomial size (in n and k), such that pc(a1, . . . , an) = c. Enumerated compact representations were already (implicitly) used in several proofs. In [9, Theorem 4.13.] it was shown that, for algebras with few subpowers, enumerated compact representations always exist; this was used to prove that SMP(A) \u2208 coNP. Moreover, all of the known polynomial time algorithms for CompRep(A), in fact, compute enumerated compact representations. We are in particular going to need the following result that follows from [25]:\n\u25b6 Theorem 2 ([25]). Let A be a finite supernilpotent Mal\u2019tsev algebra. Then, there is a polynomial time algorithm that computes an enumerated compact representations of SgAk (a1, . . . , an), for given a1, . . . , an \u2208 Ak.\nTheorem 2 can be seen as a generalization of Gaussian elimination from affine to supernilpotent algebras. We remark that Theorem 2, although not explicitly stated as such in [25], follows directly from the algorithm computing a group representations (T1, T2, . . . , Tk) of SgAk (a1, . . . , an) and the fact that for such a group representation, there is a constant q such that T = (T1 + q \u00b7 T2 + \u00b7 \u00b7 \u00b7 + q \u00b7 Tk) has the same signature as SgAk (a1, . . . , an) (see Lemma 3.1. in [25]). Thus, T together with its defining circuits forms an enumerated compact representation of SgAk (a1, . . . , an).\nWe are furthermore going to use that there is an algorithm that allows us to fix some values of a relation given by enumerated compact representation:\n\u25b6 Lemma 3. Let A be a Mal\u2019tsev algebra. Then, there is a polynomial-time algorithm Fix-values(R, a1, . . . , am) that, for a given compact representation R of R = SgAk (X), and constants a1, . . . , am \u2208 A, returns a compact representation R\u2032 of {x \u2208 R | x(1) = a1, . . . , x(m) = am} (or \u2205 if the relation is empty). If R is moreover enumerated then Fix-values also computes polynomial size circuits defining the elements of R\u2032 from X.\nThe existence of such a Fix-values algorithm for compact representation is a well-known result ([7], see also [5, Algorithm 5]); the additional statement about enumerated compact representation follows easily from bookkeeping the defining circuits. We prove Lemma 3 in Appendix A.\n3 Wreath products and difference clonoids\nIn this section, we discuss how to represent Mal\u2019tsev algebras with non-trivial center by a so-called wreath product L \u2297 U, and associate to it its difference clonoid, which gives us a measure on how far it is from being the direct product L \u00d7 U.\n\u25b6 Definition 4. Let U = (U, (fU)f\u2208F ) and L = (L, (fL)f\u2208F ) be two algebras in the same language F , such that L is affine. Furthermore, let 0 \u2208 L and T = (f\u0302)f\u2208F be a family of operations f\u0302 : Un \u2192 L, for each f \u2208 F of arity n. Then we define the wreath product L \u2297T,0 U as the algebra (L \u00d7 U, (fL\u2297T U)f\u2208F ) with basic operations\nfL\u2297 T,0U((l1, u1), . . . , (ln, un)) = (fL(l1, . . . , ln) + f\u0302(u1, . . . , un), fU(u1, . . . , un)),\n(where + is the addition on L with respect to neutral element 0). For simplicity, we are going to write L \u2297 U, if T and 0 are clear from the context.\nThe name wreath product refers to the fact that this is a special case of VanderWerf\u2019s wreath products [31]. We remark that recently also alternative names for L \u2297 U were suggested, such as central extension (by Mayr) and semidirect product (by Zhuk). By a result of Freese and McKenzie we can represent Mal\u2019tsev algebras with non-trivial centers as wreath products:\n\u25b6 Theorem 5 (Proposition 7.1. in [14]). Let A be a Mal\u2019tsev algebra with a central congruence \u03b1, and let U = A/\u03b1. Then there is an affine algebra L, an element 0 \u2208 L and a set of operations T , such that A \u223c= L \u2297T,0 U.\nNote that, for a fixed quotient U = A/\u03b1, there is still some freedom in how to choose the operations fL of L, and the operations f\u0302 : Un \u2192 L in T (by adding/subtracting constants). To get rid of this problem, we are from now on always going to assume that L preserves 0, i.e. fL(0, 0, . . . , 0) = 0 for all f \u2208 F . It is then easy to observe that wreath products L \u22970,T U behaves nicely with respect to the direct product L \u00d7 U in the same language:\n\u25b6 Observation 6. Let A be a Mal\u2019tsev algebra with wreath product representation A = L \u22970,T U. Then tA = sA \u21d2 tL\u00d7U = sL\u00d7U.\nProof. Note that, for every term t in the language of A:\ntA((l1, u1), . . . , (ln, un)) = (tL(l1, . . . , ln) + t\u0302(u1, . . . , un), tU(u1, . . . , un)),\nfor some t\u0302 : Un \u2192 L (this can be shown by induction over the height of the term tree). Clearly tA = sA implies tU = sU, and tL \u2212 sL = c, t\u0302 \u2212 s\u0302 = \u2212c for some constant c \u2208 L. Since, by our assumptions, the operations of L preserve 0, we get tL = sL and t\u0302 = s\u0302. Thus tL\u00d7U = sL\u00d7U. \u25c0\nIn other terminology, the map tA 7\u2192 tL\u00d7U is a surjective clone homomorphism from Clo(A) to Clo(L \u00d7 U), i.e. a map that preserves arities, projections and compositions. The converse of Observation 6 does however not hold, since this map is usually not injective. We define the difference clonoid Diff0(A) as the kernel of the clone homomorphisms in the following sense:\n\u25b6 Definition 7. Let A = L \u22970,T U be a Mal\u2019tsev algebra given as a wreath product. (1) We define the equivalence relation \u223c on Clo(A) by\ntA \u223c sA :\u21d4 tL\u00d7U = sL\u00d7U\n(2) the difference clonoid Diff0(A) is defined as the set of all operation r\u0302 : Un \u2192 L, such that there are tA \u223c sA \u2208 Clo(A) with:\ntA((l1, u1), . . . , (ln, un)) = (tL(l) + t\u0302(u), tU(u)) (1) sA((l1, u1), . . . , (ln, un)) = (tL(l) + t\u0302(u) + r\u0302(u), tU(u)) (2)\n\u25b6 Notation 8. In the following, we will stick to the following convention: Function symbols with a hat will always denote operations from some power of U to L. For operations t, s : An \u2192 A, and r\u0302 : Un \u2192 L such as in (1) and (2) we are slightly going to abuse notation, and write s = t + r\u0302 and r\u0302 = (s \u2212 t).\nWe next show that Diff0(A) is indeed a clonoid from U to L (extended by the constant 0).\n\u25b6 Lemma 9. Let A = L \u22970,T U be a Mal\u2019tsev algebra given as wreath product. Then:\n(1) For all t \u2208 Clo(A), r\u0302 \u2208 Diff0(A) also t + r\u0302 \u2208 Clo(A), (2) Diff0(A) is a (U, (L, 0))-clonoid.\nProof. To prove (1), let t \u2208 Clo(A) and r\u0302 \u2208 Diff0(A). By definition of the difference clonoid, r\u0302 = s1 \u2212 s2 for two terms s1, s2 \u2208 Clo(A), with s1 \u223c s2. In particular, sU1 = sU2 . For any Mal\u2019tsev term m \u2208 Clo(A), necessarily m\u0302(u, u, v) = m\u0302(v, u, u) = 0 holds. This implies that\nt + r\u0302 = m(t, s2, s1) \u2208 Clo(A).\nWe next prove (2). So we only need to verify that Diff0(A) is closed under composition with Clo(U) (from the inside), respectively Clo((L, 0)) (from the outside).\nTo see that Diff0(A) is closed under (L, 0), note that 0 \u2208 Diff0(A), as t \u2212 t = 0, for every term t \u2208 Clo(A). Further (L, 0) is closed under +; for this, let r\u03021, r\u03022 \u2208 Diff0(A). By (1), we know that t + r\u03021 \u2208 Clo(A), for some term t \u2208 Clo(A). Again, by (1) also (t + r\u03021) + r\u03022)) \u2208 Clo(A), which shows that r\u03021 + r\u03022 \u2208 Diff0(A). For all unary eL \u2208 Clo(L), and t \u223c s with r\u0302 = t \u2212 s, note that eAt \u2212 eAs = eL \u25e6 r\u0302 \u2208 Diff0(A). Since L is affine, Clo(L, 0) is generated by + and its unary terms, thus Diff0(A) is closed under (L, 0).\nTo see that Diff0(A) is closed under U from the inside, simply notice that t(x1, . . . , xn) \u223c s(x1, . . . , xn) implies t(f1(x), . . . , fn(x)) \u223c s(f1(x), . . . , fn(x)), for all terms f1, . . . , fn. If r\u0302 = tA \u2212 sA, then r\u0302 \u25e6 (fU1 , . . . , fUn ) = t \u25e6 (fU1 , . . . , fUn ) \u2212 s \u25e6 (fU1 , . . . , fUn ) \u2208 Diff0(A). \u25c0\nWe remark that the choice of the constant 0 \u2208 L is not relevant in this construction: since for every c \u2208 L the map r\u0302 7\u2192 r\u0302 + c is an isomorphism between the (U, (L, 0))-clonoid Diff0(A) and the (U, (L\u2032, c))-clonoid Diffc(A) (where fL\n\u2032(l) = fL(l \u2212 (c, c . . . , c)) + c). Our goal in the next section is to reduce the subpower membership problem to a version of the subpower membership problem for the difference clonoid in which we ask for membership of a tuple l \u2208 Lk in the subalgebra of L given by the image of u1, . . . , un \u2208 Uk under the clonoid. In fact, it will be more convenient for us to ask for a compact representation, that\u2019s why we define the following problem, for a clonoid C from U to L.\nCompRep(C): Input: A list of tuples u1, . . . , un \u2208 Uk. Output: A compact representation of C(u1, . . . , un) = {f(u1, . . . , un) | f \u2208 C} \u2264 Lk\nIn the case of the difference clonoid C = Diff0(A) the image algebra L is affine and contains a constant 0. Thus then this problem is then equivalent to finding generating set of C(u1, . . . , un) as a subgroup of (L, +, 0, \u2212)k of polynomial size. By then running Gaussian elimination (generalized to finite Abelian groups), or simply applying Theorem 2 one can then compute a compact representation of C(u1, . . . , un).\n4 The subpower membership problem of wreath products\nIn this section we discuss our main methodological results. We show that, in some cases the subpower membership problem SMP(L \u2297 U) of a wreath product can be reduced to CompRep(L \u00d7 U) and CompRep(C). We first show how such a reduction can be achieved relatively easily in the case where Clo(L \u2297 U) contains Clo(L \u00d7 U) (i.e. the identity map is a retraction of the clone homomorphism from Observation 6):\n\u25b6 Theorem 10. Let A = L \u2297(0,T ) U be a finite Mal\u2019tsev algebra, and let C = Diff0(A). Further assume that Clo(L \u00d7 U) \u2286 Clo(A). Then CompRep(A) (and hence also SMP(A)) reduces in polynomial time to CompRep(L \u00d7 U) and CompRep(C).\nProof. Let a1, . . . , an \u2208 Ak an instance of CompRep(A); our goal is to find a compact representation of B = SgAk (a1, . . . , an). Let us write li and ui for the projection of ai to Lk and Uk respectively. Let us further define B+ = Sg(L\u00d7U)k (a1, . . . , an). Then\nB = {(tL(l1, . . . , ln) + t\u0302(u1, . . . , un), tU(u1, . . . , un) | t is F -term}, and B+ = {(tL(l1, . . . , ln), tU(u1, . . . , un) | t is F -term}.\nSince Clo(L \u00d7 U) \u2286 Clo(A), we can pick a Mal\u2019tsev term of A that is of the form mA((l1, u1), (l2, u2), (l3, u3)) = (l1 \u2212 l2 + l3, mU(u1, u2, u3)). Moreover, by Lemma 9, every term tA \u2208 Clo(A) can be uniquely written as the sum of tL\u00d7U (which by assumption is also in Clo(A)) and some t\u0302 \u2208 C. Thus, every element of B is equal to the sum of an element of B+ and an expression t\u0302(u1, . . . , un).\nLet C+ be a compact representation of B+, and C\u0302 a compact representation of C(u1, . . . , un). Then, it follows that every tuple in B can be written as\nm(. . . , m(c1, d2, c2), . . . dn, cn) + r\u03021 \u2212 s\u03022 + r\u03022 \u2212 . . . \u2212 s\u0302n + r\u0302n, (3)\nfor ci, di \u2208 C+ and r\u0302i, s\u0302i \u2208 C\u0302. (We are aware that tuples in C+ an C\u0302 have different domains; here we follow the same convention as in Notation 8). Moreover, in formula (3), any pair ci, di (respectively r\u0302i, s\u0302i) witnesses a fork in the i-th coordinate. By our choice of m it is easy to see that formula (3) can be rewritten to\nm(. . . , m(c1 + r\u03021, d2 + s\u03022, c2 + r\u03022), . . . dn + s\u0302n, cn + r\u0302n),\nThus the elements ci + r\u0302i, d+s\u0302i witness forks of B in the i-th coordinate. If we define D = {c + r\u0302 | c \u2208 C, r\u0302 \u2208 C\u0302}, then it follows that Sig(D) = Sig(B). Moreover D \u2282 B, and it is of polynomial size in n and k, as |D| \u2264 |C| \u00b7 |C\u0302|. Thus D can be thinned out in polynomial time to a compact representation of B, which finishes our proof. \u25c0\nWe remark that, by following the proof of Theorem 10, also finding enumerated compact representations in A can be reduced to finding enumerated compact representations in L \u00d7 U and C (if C is given by some finite set of operations that generate it as a clonoid).\nUnfortunately, the conditions of Theorem 10 are not met for general wreath-products, not even if both U and L are both affine (the dihedral group D4 can be shown to be a counterexample). But, if U is supernilpotent, then we are able to prove the following reduction, independent of the conditions of Theorem 10:\n\u25b6 Theorem 11. Let A = L \u2297 U be a finite Mal\u2019tsev algebra, and let C = Diff0(A) for some 0 \u2208 A. Further, assume that U is supernilpotent. Then SMP(A) reduces in polynomial time to CompRep(C).\nProof. Let a1, . . . , an, b \u2208 Ak an instance of SMP(A); our goal is to check whether b \u2208 B = SgAk (a1, . . . , an). Let us write li and ui for the projection of ai to Lk and Uk respectively, and lb and ub for the projections of b to Lk and Uk. Let F be the signature of A and L \u00d7 U, and let B+ = Sg(L\u00d7U)k (a1, . . . , an). Then\nB = {(tL(l1, . . . , ln) + t\u0302(u1, . . . , un), tU(u1, . . . , un) | t is F -term}, and B+ = {(tL(l1, . . . , ln), tU(u1, . . . , un) | t is F -term}.\nRecall the definition of tA \u223c sA from Definition 7. If T is a \u223c-transversal set of {tA \u2208 Clo(A) | tU(u1, . . . , un) = ub}, then clearly b \u2208 B iff \u2203t \u2208 T and d \u2208 C(u1, . . . , un),\nwith b = t(a1, . . . , an) + d. So, intuitively speaking, the goal of this proof is to first compute such a transversal set, by computing an enumerated compact representation of {(l, u) \u2208 B+ | u = ub} and then use it together with a compact representation of C(u1, . . . , un) to check membership of b in B.\nIn practice we need however to consider a relation of higher arity than B+, since term operations of L \u00d7 U are not uniquely determined by their value on a1, . . . , an. So let S be the degree of supernilpotence of U (and hence also L \u00d7 U). If we think about a1, . . . , an as the columns of a matrix of dimension k \u00d7 n, then let a\u03031, . . . , a\u0303n \u2208 Al be its extension by rows that enumerate H = {(a1, . . . , an) \u2208 An | |{i : ai \u0338= 0}| \u2264 S} (hence l \u2264 k + |A|S ( n S ) ).\nIt follows from Theorem 2 that we can compute an enumerated compact representation C\u0303 of Sg(L\u00d7U)l(a\u03031, . . . , a\u0303n) in polynomial time in n and l. So, every element in B\u0303 = Sg(L\u00d7U)l(a\u03031, . . . , a\u0303n) can be written as m(. . . m(c\u03031, d\u03032, c\u03032) . . . d\u0303l, c\u0303l), for (c\u0303i, pc\u0303i), (d\u0303i, pd\u0303i) \u2208 C\u0303, where C\u0303 is of size at most 2l|A|2, and every element of c\u0303 \u2208 C\u0303 is equal to pc\u0303(a\u03031, . . . , a\u0303n) = c\u0303 for the given circuit pc\u0303 of polynomial size.\nBy Theorem 1, in an S-supernilpotent algebra, every term operation is already completely determined by its values on the subset H. It follows, that every n-ary term operation of L\u00d7U can be uniquely described by a circuit m(. . . m(pc\u03031 , pd\u03032 , pc\u03032), . . . pd\u0303l , pc\u0303l) for c\u0303i, d\u0303i \u2208 C\u0303. By definition of \u223c, it follows that also every n-ary term operation of A is \u223c-equivalent to the operation given by the circuit described by a circuit m(. . . m(pc\u03031 , pd\u03032 , pc\u03032), . . . pd\u0303l , pc\u0303l) for c\u0303i, d\u0303i \u2208 C\u0303.\nWe are however only interested in terms t such that tU maps u1, . . . , un to the value ub. By Lemma 3, we can also compute an enumerated compact representation C\u0303 \u2032 of {(\u0303l, u\u0303) \u2208 SgL\u00d7U(a\u03031, . . . , a\u0303n) | u\u0303(i) = ub(i) for all i = 1, . . . , k} in polynomial time. (Although we only prove Lemma 3 for fixing variables to constants, we remark that it can straightforwardly be generalized to fixing the value of the variables to domains L \u00d7 {u}. Alternatively, this can also be achieved by regarding Sg(L\u00d7U)l(a\u03031, . . . , a\u0303n) as a subalgebra of Ul \u00d7 Ll, which however would require us to work with relations on different domains).\nIf C\u0303 \u2032 = \u2205, then we output \u201cFalse\u201d, as then ub /\u2208 SgUk (u1, . . . , un). Otherwise, let C = {pAc\u0303 (a1, . . . , an) | c\u0303 \u2208 C\u0303 \u2032}. Also, let C\u0302 be a compact representation of C(u1, . . . , un). By our proof, every element of {(l, u) \u2208 B | u = ub} is equal to the sum of an element mA(. . . , mA(c1, d2, c2), . . . dn, cn) with ci, di \u2208 C and an element of C(u1, . . . , un). Since m is an affine Malt\u2019sev operation when restricted to {(l, u) \u2208 B | u = ub} this means that b \u2208 B iff lb is in the affine closure of all elements c + r\u0302 with c \u2208 C and r\u0302 \u2208 C\u0302. But this can be checked in polynomial time (by generalized Gaussian elimination, or Theorem 2), which finishes the proof. \u25c0\n5 Clonoids between affine algebras\nWe continue our paper with an analysis of clonoids between affine algebras to prove our main result, Theorem 20.\nFor a prime p, let us write Zp for the cyclic group of order p, i.e. Zp = ({0, 1, . . . , p \u2212 1}, +, 0, \u2212). Let us further define the idempotent reduct Zidp = ({0, 1, . . . , p \u2212 1}, x \u2212 y + z). Using the unary terms ax = x + \u00b7 \u00b7 \u00b7 + x (a-times), for a \u2208 Zp, we can regard Zp as a vector space over the p-element field. More general, using this notation, we will also consider finite Abelian groups (L, +, 0, \u2212) as modules over Z|L|.\nFor short, we are going to denote constant 1-tuples by 1 = (1, 1, . . . , 1) \u2208 Znp . For two vectors a, x \u2208 Znp , we further denote by a \u00b7 x = \u2211n i=1 a(i) \u00b7 x(i) the standard inner product. Then Clo(Zp) = {x 7\u2192 a \u00b7 x | a \u2208 Znp } and Clo(Zidp ) = {x 7\u2192 a \u00b7 x | a \u2208 Znp , a \u00b7 1 = 1}.\nIn this section, we are going to study clonoids between affine algebras U and L, such that |U | = p for some prime p, and p \u2224 |L|. Since every such affine algebra U has x \u2212 y + z as a term operation, it makes sense to study the special case U = Zidp . As we are in particular interested in difference clonoids, we furthermore can assume that L contains a constant operations 0 (see Lemma 9), and hence the operations of the Abelian group (L, +, 0, \u2212). We remark that our analysis is structurally similar to (but not covered by) Fioravanti\u2019s classification of (Zp,Zq)-clonoids [13].\n5.1 (Zidp , L)-clonoids satisfying p \u2224 |L| and f(x, x, . . . , x) = 0 Throughout this subsection, let p be a prime, and L = (L, +, 0, \u2212) an Abelian group with p \u2224 |L|, and C be a (Zidp , L)-clonoids satisfying f(x, x, . . . , x) = 0 for all f \u2208 C and x \u2208 Zp. In other words, for every n \u2208 N, C maps all tuples from the diagonal \u2206n = {(x, x . . . , x) \u2208 Znp } to 0. We are going to prove that C is generated by its binary elements, and therefore by any set of generators B of C(2) \u2264 LZ 2 p . Moreover, from B, we are going to construct canonical generating set of the n-ary functions C(n) \u2264 LZ n p . We are, in particular going to use the following set of cofficient vectors for every n > 2:\nCn = {a \u2208 Znp | \u2203i > 1: a(1) = a(2) = . . . = a(i \u2212 1) = 0, a(i) = 1}.\n\u25b6 Observation 12. Every 2-dimensional subspace V \u2264 Znp containing the diagonal \u2206n has a unique parameterization by the map\nec(x, y) = x(1 \u2212 c) + yc = (x, c(2)x + (1 \u2212 c(2))y, . . . , c(n)x + (1 \u2212 c(n))y),\nfor some c \u2208 Cn.\nProof. To see this, note that V contains 1, and can be therefore parameterized by ed(x, y), for some d /\u2208 \u2206n. So there is an index i with d(1) = . . . = d(i \u2212 1) \u0338= d(i). If d /\u2208 Cn, then we define c = (d(i) \u2212 d(1))\u22121(d \u2212 d(1)1); clearly c \u2208 Cn, and c and 1 still generate V . It is further not hard to see that different elements of Cn generate different planes together with 1, thus we obtain a unique parameterization of V by ec(x, y). \u25c0\n\u25b6 Lemma 13. Let f \u2208 C(2). Then, there is a function fn \u2208 C(n), such that\nfn(x1, x2, . . . , xn) = {\nf(x1, x2) if x2 = x3 = . . . = xn 0 else.\nProof. We prove the lemma by induction on n. For n = 2, we simply set f2 = f . For an induction step n \u2192 n + 1, we first define tn+1(x1, x2, . . . , xn, xn+1) as the sum\u2211\na\u2208Zn\u22121p\nfn(x1, x2 + a(1)(xn+1 \u2212 xn), . . . , xn + a(n \u2212 1)(xn+1 \u2212 xn))\n\u2212 \u2211\na\u2208Zn\u22121p\nfn(x1, x1 + a(1)(xn+1 \u2212 xn), . . . , x1 + a(n \u2212 1)(xn+1 \u2212 xn)).\nNote that, if xn+1 \u0338= xn, then tn+1 evaluates to \u2211 a\u2208Zn\u22121p f(x1, a) \u2212 \u2211\na\u2208Zn\u22121p f(x1, a) = 0. On the other hand, if xn = xn+1, then the second sum is equal to 0, while the first one is equal to pn\u22121fn(x1, x2, . . . , xn). By the induction hypothesis, the function fn+1 = p\u2212(n\u22121)tn+1 satisfies the statement of the lemma (note that p\u2212(n\u22121) exist modulo |L|, since p \u2224 |L|). \u25c0\nWe can prove an analogue statement for all 2-dimensional subspaces of Znp containing \u2206n:\n\u25b6 Lemma 14. Let f \u2208 C(2), and c \u2208 Cn. Then there is a function fc \u2208 C(n), such that fc(x1, x2, . . . , xn) = {\nf(x, y) if (x1, x2, . . . , xn) = ec(x, y) 0 else.\nProof. Let c \u2208 C(n). There is a matrix T \u2208 Zn\u00d7np , such that T \u00b7 1 = 1 and T \u00b7 (1 \u2212 c) = e1. Let fn as in Lemma 2 and fc := fn \u25e6T . Note that by the first condition, all rows of T sum up to 1, hence T can be expressed by terms of Zidp . Then fc(ec(x, y)) = fn(T (x(1 \u2212 c) + yc)) = fn(xe1 + y(1 \u2212 e1)) = f(x, y), and fc(x) = 0 for x /\u2208 ec(Z2p). \u25c0\nWe are now ready to prove the main result of this section:\n\u25b6 Lemma 15. Let C be a (Zidp , L)-clonoid satisfying \u2200f \u2208 C, x \u2208 Zp : f(x, . . . , x) = 0, and let B be a generating set of C(2) \u2264 LZ 2 p . Then (1) C is the (Zidp , L)-clonoid generated by B, and (2) Bn := {fc | f \u2208 B, c \u2208 Cn} is a generating set of C(n) in LZ n p ,\nProof. For any g \u2208 C(n) and c \u2208 C(n), let us define the binary operation gc = f(ec(x, y)) \u2208 C(2). By Lemma 14, gc generates a function gcc \u2208 C(n), that agrees with f(x, y) on all tuples of the form ec(x, y), and that is 0 else. Since every point of Znp \\ \u2206n is in the image of a unique map ec, we get g = \u2211 c\u2208Cn g c c . Every element of the form gc can be clearly written as a linear combination of elements fc, where f \u2208 B. It follows that Bn generates C(n) in LZ n p , and that the clonoid generated by B is C. \u25c0\nWe remark that if L = Zq for a prime q \u0338= p, and B is a basis of the vector space C(2) \u2264 LZ 2 p , then also Bn is a basis. The generating set Bn can be used to decide efficiently the following version of the subpower membership problem for C:\n\u25b6 Lemma 16. Let C be a (Zidp , L)-clonoid satisfying \u2200f \u2208 C, x \u2208 Zp : f(x, . . . , x) = 0. Then we can solve CompRep(C) in polynomial time.\nProof. By Lemma 15, C(n) is the linear closure of Bn. Thus C(u1, . . . , un) is equal to the linear closure of Bn(u1, . . . , un) := {fc(u1, . . . , un) | f \u2208 B, c \u2208 Cn}.\nNote that the i-th entry fc(u1, . . . , un)(i) of such a generating element can only be different from 0 if (u1, . . . , un)(i) lies in the 2-dimensional subspace generated by the diagonal \u2206n and c. Thus, there are at most k many vectors c \u2208 Cn such that fc(u1, . . . , un) \u0338= 0, let c1, . . . , cl be an enumeration of them. Clearly D = {fc(u1, . . . , un) | f \u2208 B, c \u2208 {c1, . . . , cl}} generates C(u1, . . . , un); note that we can compute it in linear time O(kn). From the generating set D we can compute a compact representation of C(u1, . . . , un) in polynomial time (by generalized Gaussian elimination, or Theorem 10). \u25c0\n5.2 General (Zidp , L)-clonoids For an arbitrary (Zidp , L)-clonoid C, let us define the subclonoid C\u2206 = {f \u2208 C : f(x, . . . , x) = 0}. We then show, that every f \u2208 C can be written in a unique way as the sum of an element of C\u2206, and a function that is generated by C(1). For this, we need the following lemma:\n\u25b6 Lemma 17. For any f \u2208 C(n), let us define f \u2032(x) = p(1\u2212n) \u2211\na\u2208Znp a\u00b71=1\nf(a \u00b7 x, a \u00b7 x, . . . , a \u00b7 x).\nThen f \u2212 f \u2032 \u2208 C\u2206, and f \u2032 is generated by C(1).\nProof. By definition, f \u2032 is in the clonoid generated by the unary function f(x, x, . . . , x) \u2208 C(1). Thus, to prove the lemma, it is only left to show that f \u2212 f \u2032 \u2208 C\u2206, or, in other words, that f(x) = f \u2032(x) for x \u2208 \u2206.\nBut this is not hard to see, since f \u2032(x, x, . . . , x) = p(1\u2212n) \u2211\na\u2208Znp a\u00b71=1\nf(x, x, . . . , x) = f(x, x, . . . , x).\n\u25c0\nIt follows in particular from Lemma 17 and Lemma 15 that every (Zidp , L)-clonoid C is generated by any set A \u222a B, such that A generates C(1) in LZp and B generates C (2) \u2206 in L\nZ2p . Note that the clonoid generated by A does not need to be disjoint from C\u2206. We can, however, still prove results analogous to the previous section.\n\u25b6 Lemma 18. Let C be a (Zidp , L)-clonoid, let A be a generating set of C(1) \u2264 LZp and B a generating set of C(2)\u2206 \u2264 L Z2p . For every n, let us define An = { \u2211 a\u2208Znp ,a\u00b71=1 f(a \u00b7 x) | f \u2208 A} and let Bn be defined as in Lemma 15. Then An \u222a Bn is a generating set of C(n) in LZ n p .\nProof. We already know from Lemma 15 that Bn, generates C(n)\u2206 \u2264 L Znp .\nBy Lemma 17, every element f \u2208 C(n) can be uniquely written as the sum f \u2032 and f \u2212 f \u2032. Furthermore f \u2032, by definition, is generated by An, and f \u2212 f \u2032 is in C(n)\u2206 , which finishes our prove. \u25c0\nLemma 18 allows us to straightforwardly generalize Lemma 16 to arbitrary (Zidp , L)clonoids:\n\u25b6 Lemma 19. Let C be a (Zidp , L)-clonoid. Then CompRep(C) \u2208 P.\nProof. Let An and Bn be defined as in Lemma 18. Our goal is to compute a compact representation of C(u1, . . . , un) for some given u1, . . . , un \u2208 Zkp. By Lemma 18, every g \u2208 C decomposes into the sum of g\u2032 and g \u2212 g\u2032, where g\u2032 is generated by An and g \u2212 g\u2032 is generated by Bn. Thus any image g(u1, . . . , un) is in the linear closure of all tuples f(u1, . . . , un), for f \u2208 An and Bn(u1, . . . , un) = {f (u1, . . . , un) | f \u2208 B, \u2208 Cn} in Lk. There are at most |A|-many tuples of the first form. Furthermore, as in the proof of Lemma 16 we can compute a generating set of Bn(u1, . . . , un) in polynomial time. By generalized Gaussian elimination (or Theorem 2), we can obtain a compact representation from these generators in polynomial time. \u25c0\nLemma 19 allows us to finish the proof of our main result:\n\u25b6 Theorem 20. Let A be a finite Mal\u2019tsev algebra, with a central series 0A < \u03c1 < 1A such that |A/\u03c1| = p is a prime, and the blocks of \u03c1 are of size coprime to p. Then SMP(A) \u2208 P.\nProof. By Theorem 5, A is isomorphic to a wreath product L \u2297 U, such that U, L are affine with |U | = p and |L| coprime to p. By Theorem 11, SMP(A) reduces to CompRep(Diff0(A)) in polynomial time. The difference clonoid is a clonoid from U to (L, 0). Since both L and U are affine, and therefore have term operations describing x \u2212 y + z, Diff0(A) is also a clonoid from Zidp to (L, +, 0, \u2212). By Lemma 19, CompRep(Diff0(A)) is solvable in polynomial time, which finishes the proof. \u25c0\n\u25b6 Corollary 21. For every nilpotent Mal\u2019tsev algebra A with |A| = pq for distinct primes p \u0338= q, we have SMP(A) \u2208 P.\nProof. If A is affine, then the result holds by (generalized) Gaussian elimination. So assume that A is 2-nilpotent, but not affine. So A is isomorphic to L \u2297 U, and wlog. |L| = q and |U | = p. Then the result follows directly from Theorem 20. \u25c0\n6 Discussion\nIn Theorem 20 we proved that every Mal\u2019tsev algebra, which can be written as a wreath product L \u2297 U with |U | = p and p \u2224 |L| has a tractable subpower membership problem. But, since the reduction discussed in Theorem 11 extends beyond this case, it is natural to ask, whether we can also extend the tractability also extends to all those cases:\n\u25b6 Question 22. Is SMP(L \u2297 U) \u2208 P for every supernilpotent Mal\u2019tsev algebra U?\nIn particular, if U is affine, Question 22 asks, whether the subpower membership problem of all finite 2-nilpotent Mal\u2019tsev algebras can be solved in polynomial time. By Theorem 11, this reduces to computing compact representations with respect the clonoids between affine algebras. Thus answering the question requires a better understanding of such clonoids.\nVery recent result [27] study such clonoids in the case where U has a distributive congruence lattice, and L is coprime to U. Such clonoids are always generated by functions of bounded arity (as in Lemma 14), thus we expect then similar argument as in Lemma 19 to work in solving CompRep(C). We remark that the fact that every full clonoid between such U and L is finitely generated was already implicitly used in [18] to obtain polynomial time algorithm for checking whether two circuits over a 2-nilpotent algebra are equivalent. However [27] does not cover all clonoids between affine algebras; e.g. for the case U = Zp \u00d7Zp and coprime L nothing is known so far.\nA reason why much emphasis is placed on coprime U and L is, that their wreath products L \u22970,T U are not supernilpotent (for non-trivial operations T ), and therefore not covered by Theorem 2. In fact, finite Mal\u2019tsev algebras in finite language are supernilpotent if and only if they decompose into the direct product of nilpotent algebras of prime power size (see e.g. [2, Lemma 7.6.]). It is further still consistent with our current knowledge that the conditions of Theorem 10 are always met, for coprime L and U. This naturally leads to the question:\n\u25b6 Question 23. Is Clo(L \u00d7 U) \u2286 Clo(L \u2297 U), for all finite nilpotent Mal\u2019tsev algebras L \u2297 U where L and U of coprime size?\nIn fact, in an unpublished proof [20], a positive answer to Question 23 is given in the case that Clo(L \u2297 U) contains a constant operations. A more general version of Question 23 would ask, whether every finite nilpotent Mal\u2019tsev algebra A has a Mal\u2019tsev term m, such that (A, m) is supernilpotent.\nLastly we would like to mention that recently the property of short pp-defitions was suggested as a witnesses for SMP(A) \u2208 coNP. While Mal\u2019tsev algebras that generate residually finite varieties have short pp-definitions [10], it is not know whether this is true in the nilpotent case. Thus we ask:\n\u25b6 Question 24. Does every finite nilpotent Mal\u2019tsev algebras A have short pp-definitions (and hence SMP(A) \u2208 NP \u2229 coNP)?\nStudying Question 24 might especially be a useful approach to discuss the complexity for algebras of high nilpotent degree, if studying the corresponding difference clonoids turns out to be too difficult or technical endeavor.\nReferences 1 Erhard Aichinger and Peter Mayr. Finitely generated equational classes. Journal of Pure and\nApplied Algebra, 220(8):2816\u20132827, 2016. doi:10.1016/j.jpaa.2016.01.001. 2 Erhard Aichinger and Neboj\u0161a Mudrinski. Some applications of higher commutators in Mal\u2019cev\nalgebras. Algebra universalis, 63(4):367\u2013403, 2010. doi:10.1007/s00012-010-0084-1. 3 Libor Barto, Andrei Krokhin, and Ross Willard. Polymorphisms, and how to use them.\nIn Dagstuhl Follow-Ups, volume 7. Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik, 2017. doi:10.4230/DFU.Vol7.15301.1. 4 Clifford Bergman. Universal algebra: Fundamentals and selected topics. CRC Press, 2011. 5 Zarathustra Brady. Notes on CSPs and Polymorphisms. arXiv preprint arXiv:2210.07383v1,\n2022. 6 Bruno Buchberger. Bruno Buchberger\u2019s PhD thesis 1965: An algorithm for finding the basis\nelements of the residue class ring of a zero dimensional polynomial ideal. Journal of symbolic computation, 41(3-4):475\u2013511, 2006. doi:10.1016/j.jsc.2005.09.007. 7 Andrei Bulatov and V\u00edctor Dalmau. A simple algorithm for Mal\u2019tsev constraints. SIAM Journal on Computing, 36(1):16\u201327, 2006. doi:10.1137/050628957. 8 Andrei Bulatov, Marcin Kozik, Peter Mayr, and Markus Steindl. The subpower membership problem for semigroups. International Journal of Algebra and Computation, 26(07):1435\u20131451, 2016. doi:10.1142/S0218196716500612. 9 Andrei Bulatov, Peter Mayr, and \u00c1gnes Szendrei. The subpower membership problem for finite algebras with cube terms. Logical Methods in Computer Science, 15(1), 2019. doi:10.23638/LMCS-15(1:11)2019. 10 Jakub Bul\u00edn and Michael Kompatscher. Short definitions in constraint languages. In Proceedings of the 48th International Symposium on Mathematical Foundations of Computer Science, (MFCS 2023), volume 272 of LIPIcs, pages 28:1\u201328:15. Schloss Dagstuhl - Leibniz-Zentrum f\u00fcr Informatik, 2023. doi:10.4230/LIPIcs.MFCS.2023.28. 11 Stanley Burris and Hanamantagouda Sankappanavar. A course in universal algebra, volume 78. Springer, 1981. 12 Victor Dalmau and Peter Jeavons. Learnability of quantified formulas. Theoretical Computer Science, 306(1-3):485\u2013511, 2003. doi:10.1016/S0304-3975(03)00342-6. 13 Stefano Fioravanti. Closed sets of finitary functions between finite fields of coprime order. Algebra universalis, 81(4):Art. No 52, 2020. doi:10.1007/s00012-020-00683-5. 14 Ralph Freese and Ralph McKenzie. Commutator theory for congruence modular varieties, volume 125. CUP Archive, 1987. 15 Merrick Furst, John Hopcroft, and Eugene Luks. Polynomial-time algorithms for permutation groups. In 21st Annual Symposium on Foundations of Computer Science (sfcs 1980), pages 36\u201341. IEEE, 1980. 16 Christian Herrmann. Affine algebras in congruence modular varieties. Acta Universitatis Szegediensis, 41:119\u201311, 1979. 17 Pawe\u0142 Idziak, Petar Markovi\u0107, Ralph McKenzie, Matthew Valeriote, and Ross Willard. Tractability and learnability arising from algebras with few subpowers. SIAM Journal on Computing, 39(7):3023\u20133037, 2010. 18 Piotr Kawa\u0142ek, Michael Kompatscher, and Jacek Krzaczkowski. Circuit equivalence in 2- nilpotent algebras. arXiv preprint arXiv:1909.12256, 2019. 19 Donald E Knuth. Efficient representation of perm groups. Combinatorica, 11(1):33\u201343, 1991. doi:10.1007/BF01375471. 20 Michael Kompatscher, Peter Mayr, and Patrick Wynne. Personal communication. presented at AAA 102, Szeged, 2022. URL: https://www.math.u-szeged.hu/aaa102/Slides/Mayr, %20Peter2.pdf. 21 Dexter Kozen. Complexity of finitely presented algebras. In Proceedings of the 9th annual ACM Symposium on Theory of Computing (STOC), pages 164\u2013177, 1977. doi:10.1145/ 800105.803406.\n22 Dexter Kozen. Lower bounds for natural proof systems. In 18th Annual Symposium on Foundations of Computer Science (sfcs 1977), pages 254\u2013266, 1977. doi:10.1109/SFCS.1977. 16."
        },
        {
            "heading": "23 Marcin Kozik. A finite set of functions with an EXPTIME-complete composition problem.",
            "text": "Theoretical Computer Science, 407(1-3):330\u2013341, 2008."
        },
        {
            "heading": "24 Ernst W Mayr and Albert R Meyer. The complexity of the word problems for commutative",
            "text": "semigroups and polynomial ideals. Advances in mathematics, 46(3):305\u2013329, 1982. doi: 10.1016/0001-8708(82)90048-2.\n25 Peter Mayr. The subpower membership problem for Mal\u2019cev algebras. International Journal of Algebra and Computation, 22(07):1250075, 2012. doi:10.1142/S0218196712500750.\n26 Peter Mayr. Vaughan\u2013lee\u2019s nilpotent loop of size 12 is finitely based. arXiv preprint arXiv:2206.06136, 2022.\n27 Peter Mayr and Patrick Wynne. Clonoids between modules. arXiv preprint arXiv:2307.00076, 2023."
        },
        {
            "heading": "28 Vladimir Shpilrain and Alexander Ushakov. Thompson\u2019s group and public key cryptography.",
            "text": "In Applied Cryptography and Network Security: Third International Conference, ACNS 2005, New York, NY, USA, June 7-10, 2005. Proceedings 3, pages 151\u2013163. Springer, 2005. doi:10.1007/11496137_11."
        },
        {
            "heading": "29 Vladimir Shpilrain and Gabriel Zapata. Using the subgroup membership search problem in",
            "text": "public key cryptography. Contemporary Mathematics, 418:169, 2006. doi:10.1090/conm/418/ 07955.\n30 Charles C Sims. Computational methods in the study of permutation groups. In Computational problems in abstract algebra, pages 169\u2013183. Elsevier, 1970. doi:10.1016/ B978-0-08-012975-4.50020-5."
        },
        {
            "heading": "31 Joel VanderWerf. Wreath products of algebras: generalizing the Krohn-Rhodes theorem to",
            "text": "arbitrary algebras. Semigroup Forum, 52(1):93\u2013100, 1996. doi:10.1007/BF02574084."
        },
        {
            "heading": "32 Ross Willard. Four unsolved problems in congruence permutable varieties, 2007. Talk at the",
            "text": "Conference on Order, Algebra, and Logics, Nashville. URL: https://www.math.uwaterloo. ca/~rdwillar/documents/Slides/willard_nashville_2007_slides.pdf.\nA Proof of Lemma 3\nIn this appendix we prove the second statement of Lemma 3, i.e. we show that for a given enumerated compact representation R of a subpower R = SgAk (X) of some Mal\u2019tsev algebra, we can obtain an enumerated compact representation R\u2032 of R \u2229 {x \u2208 Ak | x(1) = a1, . . . , x(k) = ak} for a given list of constants a1, . . . , ak. In Algorithm 1 we describe the algorithm Fix-value(R, a) that fixes the first coordinate of R to a; iterating this algorithm m times results in the statement of the Lemma.\nWe remark that Fix-value(R, a) is based on the Fix-values algorithm in [5, Algorithm 5]); although, for simplicity, we only fix the value of one coordinate. Line 7 and 8 corresponds to the call of the subroutine Nonempty in [5, Algorithm 5]), with the difference that we compute all the elements of the set Tj = {(x, y) \u2208 pr1,j R | x = a}, instead of computing a witness for (a, y) \u2208 Tj once at a time.\nWe claim that the running time of Fix-Value(R, a) is O(|A|2 \u00b7 n)). For this note that the exhaustive search in line 7 and 8 will simply recursively apply m to elements from pr1,j(R) until the set is closed under m, and then select all values with x1 = a. Since | pr1,j R| \u2264 A2 this takes at most |A|2 steps. For this reason also the size of the defining circuits Cj (when e.g. stored all together as a circuit with multiple out-gates) is bounded by |R| + |A|2. Since the for-loop of line 6 has at most n iterations, it follows that both the running time of the algorithm and the size of the defining circuits in R\u2032 are bounded by O(|A|2 \u00b7 n).\nIf we then repeatedly call Fix-value to fix the value of the first m-many values of R, this results in an algorithm that runs in time O(|A|2 \u00b7 nm)).\nThus, the only thing that remains to prove is that the algorithm Fix-Value is correct. i.e. it indeed outputs an enumerated R\u2032 with Sig(R\u2032) = Sig(R \u2229 {x \u2208 Ak | x(1) = a}) (if the output is not empty). So assume that (i, b, c) \u2208 Sig(R \u2229 {x \u2208 Ak | x(1) = a}). If i = 1, then clearly (i, b, c) = (1, a, a), which is in Sig(R\u2032). So let us assume wlog. that i > 1. Since R is a compact representation of R, there exist tuples rb, rc \u2208 R (and defining circuits prb and prc), witnessing that (i, b, c) \u2208 Sig(R). Then R\u2032 contains the tuples t and s = m(t, rb, rc), as constructed in line 12 and 13 of Algorithm 1. Since rb and rc agree on the first i \u2212 1 coordinates also t and s do. Moreover t(1) = a, t(i) = b, and s(i) = m(b, b, c) = c, thus t and s witness (i, b, c) \u2208 Sig(R \u2229x(1) = a). It follows that Sig(R\u2032) = Sig(R \u2229{x \u2208 Ak | x(1) = a}), which is what we wanted to prove.\nAlgorithm 1 An algorithm that, for a given enumerated compact representations R of R = SgAk (X) outputs an enumerated compact representation R\u2032 of the relation that fixes x1 = a, (where the defining circuits of R\u2032 are evaluated on X)\n1: procedure Fix-Value(a \u2208 A, R (enum. c.r. of R = SgAk (X)), Mal\u2019tsev term m) 2: if (1, a, a) \u0338\u2208 Sig(R) then return \u2205 3: else 4: Let (t, pt) \u2208 R be such that (t, t) is a witness of (1, a, a) \u2208 Sig(R). 5: R\u2032 = {(t, pt)} 6: for j > 1 do 7: Recursively apply m to pr1,j(R) to compute Tj = {(x, y) \u2208 pr1,j(R) | x = a}, 8: and circuits Cj = {p(x,y) | (x, y) \u2208 Tj} such that pr1,j(p(x,y)(X)) = (x, y). 9: for (j, b, c) \u2208 Sig(R) do\n10: Let (rb, prb), (rc, prc) \u2208 R be witnesses of (j, b, c) \u2208 Sig(R) 11: if (a, b) \u2208 Tj then 12: Let t = p(a,b)(X) 13: s = m(t, rb, rc) and ps = m(p(a,b), prb , prc) 14: R\u2032 = R\u2032 \u222a {(t, p(a,b)), (s, ps)} 15: return R\u2032"
        }
    ],
    "title": "The subpower membership problem of 2-nilpotent algebras",
    "year": 2023
}