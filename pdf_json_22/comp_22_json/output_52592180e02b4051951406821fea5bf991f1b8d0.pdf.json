{
    "abstractText": "In order to achieve large-capacity, fast and secure image transmission, a multi-image compression\u2013encryption algorithm based on two-dimensional compressed sensing (2D CS) and optical encryption is proposed in this paper. Firstly, the paper uses compressed sensing to compress and encrypt multiple images simultaneously, and design a new structured measurement matrix. Subsequently, double random phase encoding based on the multi-parameter fractional quaternion Fourier transform is used to encrypt the multiple images for secondary encryption, which improves the security performance of the images. Moreover, a fractional-order chaotic system with more complex chaotic behavior is constructed for image compression and encryption. Experimental results show that the algorithm has strong robustness and security.",
    "authors": [
        {
            "affiliations": [],
            "name": "Jingjin Wei"
        },
        {
            "affiliations": [],
            "name": "Miao Zhang"
        },
        {
            "affiliations": [],
            "name": "Xiaojun Tong"
        }
    ],
    "id": "SP:f2b65425a458e33f5173c780cda5aa2a7519506e",
    "references": [
        {
            "authors": [
                "L. Ding",
                "Q. Ding"
            ],
            "title": "A Novel Image Encryption Scheme Based on 2D Fractional-order chaotic Map, DWT and 4D Hyper-chaos",
            "venue": "Electronics 2020,",
            "year": 2020
        },
        {
            "authors": [
                "S. Xu",
                "X. Wang",
                "X. Ye"
            ],
            "title": "A new fractional-order chaos system of Hopfield neural network and its application in image encryption",
            "venue": "Chaos Solitons Fractals",
            "year": 2022
        },
        {
            "authors": [
                "H. Hu",
                "Y. Cao",
                "J. Xu",
                "C. Ma",
                "H. Yan"
            ],
            "title": "An Image Compression and Encryption Algorithm Based on the Fractional-Order Simplest Chaotic Circuit",
            "venue": "IEEE Access 2021,",
            "year": 2021
        },
        {
            "authors": [
                "D.L. Donoho"
            ],
            "title": "Compressed sensing",
            "venue": "IEEE Trans. Inf. Theory",
            "year": 2006
        },
        {
            "authors": [
                "E. Belyaev",
                "M. Codreanu",
                "M. Juntti",
                "K. Egiazarian"
            ],
            "title": "Compressive Sensed Video Recovery via Iterative Thresholding with Random Transforms",
            "venue": "IET Image Process",
            "year": 2020
        },
        {
            "authors": [
                "X. Huang",
                "Y. Dong",
                "H. Zhu",
                "G. Ye"
            ],
            "title": "Visually asymmetric image encryption algorithm based on SHA-3 and compressive sensing by embedding encrypted",
            "year": 2022
        },
        {
            "authors": [
                "Z. Gan",
                "J. Bi",
                "W. Ding",
                "X. Chai"
            ],
            "title": "Exploiting 2D compressed sensing and information entropy for secure color image compression and encryption",
            "venue": "Neural Comput. Appl",
            "year": 2021
        },
        {
            "authors": [
                "G. Ye",
                "M. Liu",
                "M. Wu"
            ],
            "title": "Double image encryption algorithm based on compressive sensing and elliptic curve",
            "venue": "Alex. Eng. J. 2021,",
            "year": 2021
        },
        {
            "authors": [
                "P. Refregier",
                "B. Javidi"
            ],
            "title": "Optical image encryption based on input plane and Fourier plane random encoding",
            "venue": "Opt. Lett",
            "year": 1995
        },
        {
            "authors": [
                "X. Sun",
                "Z. Shao",
                "Y. Shang",
                "M. Liang",
                "F. Yang"
            ],
            "title": "Multiple-image encryption based on cascaded gyrator transforms and highdimensional chaotic system",
            "venue": "Multimed. Tools Appl",
            "year": 2021
        },
        {
            "authors": [
                "D. Huo",
                "X. Zhou",
                "L. Zhang",
                "Y. Zhou",
                "H. Li",
                "S. Yi"
            ],
            "title": "Multiple-image encryption scheme via compressive sensing and orthogonal encoding based on double random phase encoding",
            "venue": "J. Mod. Opt",
            "year": 2018
        },
        {
            "authors": [
                "B. Chen",
                "M. Yu",
                "Y. Tian",
                "L. Li",
                "D. Wang",
                "X. Sun"
            ],
            "title": "Multiple-parameter fractional quaternion Fourier transform and its application in colour image encryption",
            "venue": "IET Image Process",
            "year": 2018
        },
        {
            "authors": [
                "H. Zhang",
                "X. Liu",
                "X. Shen",
                "J. Liu"
            ],
            "title": "Chaos Entanglement: A New Approach to Generate Chaos",
            "venue": "Int. J. Bifurc. Chaos",
            "year": 2013
        },
        {
            "authors": [
                "S. Eshaghi",
                "R.K. Ghaziani",
                "A. Ansari"
            ],
            "title": "Hopf bifurcation, chaos control and synchronization of a chaotic fractional-order system with chaos entanglement function",
            "venue": "Math. Comput. Simul",
            "year": 2020
        },
        {
            "authors": [
                "M.-F. Danca",
                "N. Kuznetsov"
            ],
            "title": "Matlab code for Lyapunov exponents of fractional order systems",
            "venue": "Int. J. Bifurc. Chaos 2018,",
            "year": 2018
        },
        {
            "authors": [
                "B. Zhang",
                "D. Xiao",
                "Y. Xiang"
            ],
            "title": "Robust Coding of Encrypted Images via 2D Compressed Sensing",
            "venue": "IEEE Trans. Multimed",
            "year": 2020
        },
        {
            "authors": [
                "W.R. Hamilton"
            ],
            "title": "Elements of quaternions",
            "venue": "Nature 1969,",
            "year": 1969
        },
        {
            "authors": [
                "C. Yu",
                "J. Li",
                "X. Li",
                "X. Ren",
                "B.B. Gupta"
            ],
            "title": "Four-image encryption scheme based on quaternion Fresnel transform, chaos and computer generated hologram",
            "venue": "Multimed. Tools Appl",
            "year": 2018
        },
        {
            "authors": [
                "E.Z. Zefreh"
            ],
            "title": "An image encryption scheme based on a hybrid model of DNA computing, chaotic systems and hash functions",
            "venue": "Multimed. Tools Appl",
            "year": 2020
        },
        {
            "authors": [
                "Z. Hua",
                "B. Xu",
                "F. Jin",
                "H. Huang"
            ],
            "title": "Image Encryption Using Josephus Problem and Filtering Diffusion",
            "venue": "IEEE Access 2019,",
            "year": 2019
        },
        {
            "authors": [
                "X. Jiang",
                "Y. Xiao",
                "Y. Xie",
                "B. Liu",
                "Y. Ye",
                "T. Song",
                "J. Chai",
                "Y. Liu"
            ],
            "title": "Exploiting optical chaos for double images encryption with compressive sensing and double random phase encoding",
            "venue": "Opt. Commun",
            "year": 2021
        },
        {
            "authors": [
                "S.X. Nan",
                "X.F. Feng",
                "Y.F. Wu",
                "H. Zhang"
            ],
            "title": "Remote sensing image compression and encryption based on block compressive sensing and 2D-LCCCM",
            "venue": "Nonlinear Dyn",
            "year": 2022
        },
        {
            "authors": [
                "X. Chai",
                "J. Bi",
                "Z. Gan",
                "X. Liu",
                "Y. Zhang",
                "Y. Chen"
            ],
            "title": "Color image compression and encryption scheme based on compressive sensing and double random encryption strategy",
            "venue": "Signal Process",
            "year": 2020
        },
        {
            "authors": [
                "X. Wang",
                "Y. Su"
            ],
            "title": "Color image encryption based on chaotic compressed sensing and two-dimensional fractional Fourier transform",
            "year": 2020
        },
        {
            "authors": [
                "J. Fu",
                "Z. Gan",
                "X. Chai",
                "Y. Lu"
            ],
            "title": "Cloud-decryption-assisted image compression and encryption based on compressed sensing",
            "venue": "Multimed. Tools Appl",
            "year": 2022
        },
        {
            "authors": [
                "H. Dong",
                "E. Bai",
                "X.Q. Jiang",
                "Y. Wu"
            ],
            "title": "Color Image Compression-Encryption Using Fractional-Order Hyperchaotic System and DNA Coding",
            "venue": "IEEE Access 2020,",
            "year": 2020
        },
        {
            "authors": [
                "Z. Gan",
                "X. Chai",
                "J. Bi",
                "X. Chen"
            ],
            "title": "Content-adaptive image compression and encryption via optimized compressive sensing with double random phase encoding driven by chaos",
            "venue": "Complex Intell. Syst. 2022,",
            "year": 2022
        },
        {
            "authors": [
                "J. Liu",
                "M. Zhang",
                "X. Tong",
                "Z. Wang"
            ],
            "title": "Image compression and encryption algorithm based on 2D compressive sensing and hyperchaotic system",
            "venue": "Multimed. Syst",
            "year": 2021
        },
        {
            "authors": [
                "A. Es",
                "B. Rw",
                "B. Aks"
            ],
            "title": "Securing color image transmission using compression-encryption model with dynamic key generator and efficient symmetric key distribution",
            "venue": "Digit. Commun. Netw. 2020,",
            "year": 2020
        }
    ],
    "sections": [
        {
            "text": "Citation: Wei, J.; Zhang, M.; Tong, X.\nMulti-Image Compression\u2013\nEncryption Algorithm Based on\nCompressed Sensing and Optical\nEncryption. Entropy 2022, 24, 784.\nhttps://doi.org/10.3390/e24060784\nAcademic Editor: Amelia\nCarolina Sparavigna\nReceived: 27 April 2022\nAccepted: 31 May 2022\nPublished: 2 June 2022\nPublisher\u2019s Note: MDPI stays neutral\nwith regard to jurisdictional claims in\npublished maps and institutional affil-\niations.\nCopyright: \u00a9 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed under the terms and\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nKeywords: compressed sensing; fractional-order chaotic system; double random phase encoding; image compression"
        },
        {
            "heading": "1. Introduction",
            "text": "As part of the advances in networking and communication technology, extensive research has been conducted on how to transmit images in real-time and securely. In recent years, chaos has been widely used in data transmission and image encryption due to its inherent characteristics, such as sensitivity to initial conditions and inherent randomness. In chaotic mapping, the fractional-order chaotic system, as a generalization of integer-order chaos, has more complex dynamics than the integer-order chaotic system, and thus has more abundant application value in the field of image encryption. For example, Ding et al. [1] described an image encryption scheme using two chaotic systems, including a fractional-order Henon chaotic mapping and a four-dimensional hyperchaotic system. Xu et al. [2] proposed a fractional-order chaotic system based on the Hopfield neural network as a pseudo-random number generator, and constructed a new image encryption algorithm with the multiple hash index chain. The fractional chaotic system in the above paper is mainly applied to image encryption, but it can also be applied to the two processes of image compression and encryption concurrently. Hu et al. [3] used a fractional-order simplest memristive chaotic system and compressive sensing to compress and encrypt images. However, they did not consider applying the fractional-order chaotic system to the image compression part. While ensuring image security, to save more transmission bandwidth, transmission time and storage space, compressed sensing (CS) has gradually been applied to image compression and image encryption. CS theory [4] means that under the condition of a far smaller than Nyquist sampling rate, discrete signal samples under random sampling can be nonlinearly reconstructed into original signals, but they need to rely on the two preconditions of sparsity and incoherence. Since CS was proposed, many compression and encryption algorithms based on CS have appeared. Belyaev et al. [5] studied an iterative threshold-based compressed sensing video restoration algorithm. Huang et al. [6] embedded the encrypted image into the carrier image after SHA-3 and CS compression\nEntropy 2022, 24, 784. https://doi.org/10.3390/e24060784 https://www.mdpi.com/journal/entropy\nEntropy 2022, 24, 784 2 of 22\nto achieve multi-image visual security. Gan et al. [7] fully combined information entropy and CS for color image compression and encryption. Ye et al. [8] proposed an image compression and encryption algorithm based on the elliptic curve and CS. At present, most of the objects of compression\u2013encryption algorithms are single color images and multiple grayscale images, and how to compress and encrypt multiple color images is also a situation worthy of research. Optical encryption technology has been widely used in the field of multi-encryption image encryption because of its powerful computing capability, multi-dimensional storage and parallel processing capability. The double random phase encoding [9] with a simple implementation process and high robustness is a very classical optical encryption system, but it cannot resist attacks such as selected plaintext attacks and known-plaintext attacks. Therefore, to improve the security of the encryption system, the Fourier transform domain used in double random phase encoding technology has been extended to other transform fields, such as the fractional Fourier transform and Gyrator transform domain. In addition, the combination of the optical encryption system, chaos and the CS system can also enhance the performance of image compression\u2013encryption systems. Sun et al. [10] presented a multi-image encryption algorithm based on multi-dimensional chaos and cascade rotator transformation. Huo et al. [11] adopted CS and orthogonal coding to carry out data sampling and the integration of multiple images, proposing an encryption algorithm combining chaos matrix and double random phase encoding. However, the current multi-color image compression and encryption method combining 2D CS and the optical encryption system has been considered less. Based on the above discussion, to reduce the amount of transmitted data and improve the encryption capacity and security, a multi-image compression\u2013encryption algorithm based on 2D CS and optical encryption technology is proposed, which is suitable for color images and grayscale images. The innovative design of the overall idea of this paper is as follows. The application of quaternion can improve the encryption capability without increasing the complexity of the encryption system, but currently, few algorithms apply it to image compression and encryption. When double random phase encoding technology is applied to image encryption, two parts of data, the real part and the imaginary part, are generated, which means the transmission of the encrypted image data needs to pass twice the data. Similarly, the application of double random phase encoding based on a multiparameter fractional quaternion Fourier transform (MPFrQFT) to encrypted data can also result in an exponential increase in data volume [12]. However, when multiple images are combined with double random phase encoding based on an MPFrQFT transform for image encryption, the amount of data needed to be transmitted is the same as the original image data. Meanwhile, when image compression and multi-image encryption are combined, the amount of data to be transmitted can be greatly reduced, and the secure and efficient compression and encryption effect can be achieved. This paper firstly designed a new fractional-order chaotic map, and the generated chaotic sequences were applied to the whole algorithm to improve its security of this algorithm. Secondly, a new deterministic random measurement matrix was constructed for 2D CS, which reduces the complexity of constructing the measurement matrix and makes the image easy to reconstruct. Thirdly, an improved image encryption algorithm was designed. The two-dimensional Joseph scrambling algorithm can confuse the row and column places of all global pixels simultaneously, while the diffusion algorithm can compress and encrypt in the same process, protecting the image information while reducing the data. Fourthly, double random phase coding based on MPFrQFT is used to encrypt multiple images. The algorithm can compress and encrypt multiple images, which improves the encryption capacity and image security. The rest of this paper is organized as follows. Section 2 introduces some preliminary work. Section 3 gives a description of the proposed multi-image compression and encryption algorithm. Section 4 gives the experimental results and analysis of the algorithm. Finally, Section 5 is the conclusion part.\nEntropy 2022, 24, 784 3 of 22"
        },
        {
            "heading": "2. Preliminaries",
            "text": ""
        },
        {
            "heading": "2.1. Fractional-Order Chaotic System",
            "text": "In the three-dimensional fractional chaotic system, the fractional differential operator is used instead of the standard differential as follows [13,14], dqx dtq = ax + by dqy dtq = \u2212bx + ay + c sin(z) dqz dtq = dz + e sin(x) (1)\nwhere a, b, c, d and e are system parameters, and q is the fractional order. If the nonlinear terms sin(x) and sin(z) in the system (1) are replaced with cos(x) and cos(z), a new fractional-order chaotic system can be obtained. dqx dtq = ax + by dqy dtq = \u2212bx + ay + c cos(z) dqz dtq = dz + e cos(x) (2)\nIn this paper, the fractional-order chaotic system parameters when q = 0.8, a = \u22121, b = 1, c = \u221280, d = \u22121 and e = 18 are selected. Meanwhile, the Lyapunov exponent of the system are 2.3111, \u22120.0037 and \u221210.4974, as shown in Figure 1, and the system exhibits chaotic behavior [15]. Figure 2 shows the chaotic attractors of the fractional-order chaotic system on different phase planes.\nEntropy 2022, 24, x FOR PEER REVIEW 3 of 23 The rest of this paper is organized as follows. Section 2 introduces some preliminary work. Section 3 gives a description of the proposed multi-image compression and encryption algorithm. Section 4 gives the experimental results and analysis of the algorithm. Finally, Section 5 is the conclusion part.\n2. Preliminaries 2.1. Fractional-Order Chaotic System\nIn the three-dimensional fractional chaotic system, the fractional differential operator is used instead of the standard differential as follows [13,14],\nsin( )\nsin( )\nq\nq\nq\nq\nq\nq d x ax by dt d y bx ay c z dt d z dz e x dt  = +   = \u2212 + +   = + \n(1)\nwhere a, b, c, d and e are system parameters, and q is the fractional order. If the nonlinear terms sin(x) and sin(z) in the system (1) are replaced with cos(x) and cos(z), a new fractional-order chaotic sy tem can be obtained.\ncos( )\ncos( )\nq\nq\nq\nq\nq\nq d x ax by dt d y bx ay c z dt d z dz e x dt  = +   = \u2212 + +   = + \n(2)\nIn this paper, the fractional-order chaotic system parameters when q = 0.8, a = \u22121, b = 1, c = \u221280, d = \u22121 and e = 18 are selected. Meanwhile, the Lyapunov exponent of the system are 2.3111, \u22120.0037 and \u221210.4974, as shown in Figure 1, and the syste exhibits chaotic behavior [15]. Figure 2 shows the chaotic attractors of the fra l- rder chaotic system on different phase planes.\nDifferent from integer-order chaotic systems, fractional-order chaotic systems have stronger memory characteristics and complex dynamic characteristics, can more accurately describe actual chaotic systems and are more in line with the actual needs of natural engineering applications. For image compression and encryption, it can generate more complex chaotic sequences and larger key spaces.\nEntropy 2022, 24, 784 4 of 22Entropy 2022, 24, x FOR PEER REVIEW 4 of 23\n(a) (b)\n(c) (d)\nFigure 2. Fractional-order chaotic attractor. (a) x-y plane. (b) x-z plane. (c) y-z plane. (d) x-y-z plane.\nDifferent from integer-order chaotic systems, fractional-order chaotic systems have stronger memory characteristics and complex dynamic characteristics, can more accurately describe actual chaotic systems and are more in line with the actual needs of natural engineering applications. For image compression and encryption, it can generate more complex chaotic sequences and larger key spaces.\n2.2. Compressed Sensing Compressed sensing is a new signal sampling compression theory, which can realize image compression and encryption simultaneously during the sampling period [4,5]. Two-dimensional compressed sensing is to sample and measure the signal from two directions, which can not only further reduce the size of the compressed image, but also make the reconstructed image obtain better reconstruction quality. Assuming that the two-dimensional signal x is a signal of the size N \u00d7 N, it can be sparsely expressed in specific domains such as DCT and DWT as,\nx s= \u03a8 (3)\nwhere \u03a8 is the N \u00d7 N orthogonal transform base matrix, and s is the sparse coefficient vector under \u03a8. By linearly projecting x from two directions onto the measurement matrix \u03a61 and \u03a62 of size M \u00d7 N, the M \u00d7 M measurement value matrix y can be obtained.\n1 2 1 2 T Ty x s s= \u03a6 \u03a6 = \u03a6 \u03a8 \u03a6 = \u0398 (4)\nWhen the original signal x is to be reconstructed from the measured value y, the signal needs to be restored by solving the following convex optimization problem.\nFigure 2. Fractional-order chaotic attractor. (a) x-y plane. (b) x-z plane. (c) y-z plane. (d) x-y-z plane."
        },
        {
            "heading": "2.2. Compressed Sensing",
            "text": "Compressed sensing is a new signal sampling compression theory, which can realize image compression and encryption simultaneously during the sampling period [4,5]. Twodimensional compressed sensing is to sample and measure the signal from two directions, which can not only further reduce th size of the compressed image, but also make the reconstructed image obtain better reconstruction quality. Assuming that the two-dimensional signal x is a signal of the size N \u00d7 N, it can be sparsely expressed in specific domains such as DCT and DWT as,\nx = \u03a8s (3)\nwhere \u03a8 is the N \u00d7 N orthogonal transform base matrix, and s is the sparse coefficient vector under \u03a8. By linearly projecting x from two directions onto the easurement matrix \u03a61 and \u03a62 of size M \u00d7 N, the M \u00d7M measurement valu m trix y can be obtain d.\ny = \u03a61x\u03a6T2 = \u03a61\u03a8s\u03a6 T 2 = \u0398s (4)\nWhen the original signal x is to be reconstructed from the mea ured value y, the signal ne ds to be estored by solving he foll wing convex optimization probl m.\nmin\u2016s\u20161 s.t.y = \u0398s (5)\nThe existing reconstruction algorithms mainly include an orthogonal matching pursuit algorithm, a smooth l0 norm algorithm, a base pursuit algorithm, etc. This paper chooses a 2D projected gradient with an embedding decryption (2DPG-ED) algorithm [16] as the image reconstruction algorithm. Moreover, this paper will use the newly constructed measurement matrix to measure signals from two directions."
        },
        {
            "heading": "2.3. Multi-Parameter Fractional Quaternion Fourier Transform",
            "text": "Quaternion is a super-complex number with one real part and three imaginary parts [17]. In particular, when the quaternion modulus is 1, it is called a unit quater-\nEntropy 2022, 24, 784 5 of 22\nnion. When the real number term is 0, the quaternion is a pure quaternion. The quaternion function f (x,y) of multiple images can be expressed as [18],\nf (x, y) = f1(x, y) + f2(x, y)i + f3(x, y)j + f4(x, y)k (6)\nwhere f 1(x,y), f 2(x,y), f 3(x,y) and f 4(x,y) are represented as four color images in this paper. A two-dimensional multi-parameter fractional quaternion Fourier transform model is defined as [12]:\nU\u03b1,\u03b2,\u00b51,\u00b52M1,M2,\u03b71,\u03b72( f (x, y)) = M1\u22121\n\u2211 u=0 M2\u22121 \u2211 v=0 F\u00b51,\u00b52u,v ( f (x, y))\u03c9 \u03b1,\u00b51 u (\u03b71)\u03c9 \u03b2,\u00b52 v (\u03b72) (7)\nwhere u and v are fractional orders, \u00b51 and \u00b52 are pure quaternions, M1 and M2 are arbitrary integers and \u03b71 and \u03b72 are real number vectors with the dimensions M1 and M2. F\u00b51,\u00b52u,v ( f (x, y)) is a two-dimensional fractional quaternion Fourier transform and \u03c9 \u03b1,\u00b51 u and \u03c9 \u03b2,\u00b52 v are weights. The coefficient is defined as follows:\n\u03c9 \u03b1,\u00b51 u (\u03b7) = 1 M1\nM1\u22121\n\u2211 k=0 exp(\u22122\u03c0\u00b51/M1)[\u03b1(k + \u03b7k M1)\u2212 uk] (8)\n\u03c9 \u03b2,\u00b52 v (\u03b7) = 1 M2 M2\u22121 \u2211 k=0 exp(\u22122\u03c0\u00b52/M2)[\u03b2(k + \u03b7k M2)\u2212 vk] (9)\nThe inverse transform of the multi-parameter fractional quaternion Fourier transform is U\u2212\u03b1,\u2212\u03b2,\u00b51,\u00b52M1,M2,\u03b71,\u03b72 ."
        },
        {
            "heading": "3. Multiple-Image Compression and Encryption Algorithm Based on 2D CS and Optical Encryption",
            "text": ""
        },
        {
            "heading": "3.1. Fractional-Order Chaotic Sequence Generation",
            "text": "This paper calculates the initial values of the fractional-order chaotic system by calculating the SHA/MD5 hash value and external key K of four original images [19]. First, the 256-bit hexadecimal external key K is randomly generated, in 8-bit decimal format, which can be expressed as K = {k1, k2, . . . , k32}. Secondly, by XOR operation, the foreign key K is combined with the hash value H of the four images to obtain K\u2032 = {k\u20321, k \u2032 2, . . . , k \u2032 32}. Then, the initial value can be calculated according to Equation (10). x0 = (k \u2032 1 \u2295 k \u2032 2 \u2295 k \u2032 3 \u2295 k \u2032 4 \u2295 k \u2032 5 \u2295 k \u2032 6)/256 y0 = (k \u2032 7 \u2295 k \u2032 8 \u2295 k \u2032 9 \u2295 k \u2032 10 \u2295 k \u2032 11 \u2295 k \u2032 12)/256\nz0 = (k \u2032 13 \u2295 k \u2032 14 \u2295 k \u2032 15 \u2295 k \u2032 16 \u2295 k \u2032 17 \u2295 k \u2032 18)/256\n(10)\nFinally, the initial value can be input into the new fractional-order chaotic equation to calculate the chaotic sequence."
        },
        {
            "heading": "3.2. Josephus Scrambling",
            "text": "Scrambling is an important step in encrypting images. This paper improves a Josephus scrambling algorithm [20], which makes it better for eliminating the correlation between image pixels. In the algorithm of this paper, the initial parameters are generated by the threedimensional fractional-order chaotic sequence, which reduces the number of parameters that need to be passed, and the generated sequence is related to the number of cycles, which enhances the confusion of the sequence. The scrambling steps are as follows: Step 1: Generate initial parameters. Assume that the size of the original image is M \u00d7 N. Three groups of chaotic sequences are sequentially connected to form S, and the following four parameters are generated through the Formula (11),\nEntropy 2022, 24, 784 6 of 22\n MI = 1 + sum(round(S(1 : M)))mod M NI = 1 + sum(round(S(1 : N)))mod N MIstep = sum(round(S(1 : M)))mod M NIstep = sum(round(S(1 : N)))mod N\n(11)\nwhere MI and NI represent the position of the starting row and column, respectively, and MIstep and NIstep represent the number of steps moved by each row and column, respectively. Step 2: The row sequence, ros, and column sequence, cos, are generated as follows: (1) Set vector x to 1 through M and vector y to 1 through N. (2) Initialize the first values of ros and cos to MI and NI, respectively, and then delete the MI and NI values in vector x and vector y. (3) Starting from the last deleted position, move the MIstep and NIstep steps in the circular vector x and y, and send the next value to the second position of ros and cos. (4) Update the values of MIstep and NIstep and add them to the number of rounds of this cycle, respectively. (5) Repeat the first two steps with rows M times and columns N times so that all values in vectors x and y have been offered to ros and cos. Step 3: In the i-th row of the image, where i belongs to 1 and to M, the pixel points are sequentially replaced with pixel values {(ros(cos(1)) + i, cos(1))}, {(ros(cos(2)) + i, cos(2))}, . . . , {(ros(cos(N)) + i, cos(N))} in the following order. If the value of ros(cos(k)) + i (k = 1\u223cN) exceeds M, the value of ros(cos(k)) + i modulo M is taken as the replacement position instead of ros(cos(k)) + i. Step 4: Repeat the previous step M-1 times. In each round, the NI value is updated with the value of cos(N), and a new cos column sequence is generated again in the way of step 2."
        },
        {
            "heading": "3.3. Measurement Matrix",
            "text": "In order to enhance the randomness of the chaotic sequence, discard the first 1000 values of each chaotic sequence and sample at equal intervals to ensure that the ratio of the values in the measurement matrix from the three sequences is one-third each. Simplify the total sequence to form a diagonal matrix zl, and then construct the total measurement matrix \u03a6 as follows:\n\u03a6 = [\nzl zl zl zl zl \u2212zl zl \u2212zl \u00b7 \u00b7 \u00b7 zl zl zl \u2212zl\n] (12)\nAmong them, the size of the diagonal matrix zl is m/2 \u00d7 m/2. Extract N columns from matrix \u03a6 to form a measurement matrix of size m \u00d7 N, as shown in Algorithm 1.\nAlgorithm 1 Generation of measurement matrix\nInput: chaotic sequence x, y, z compression ratio m/N Output: Measurement matrix Phi 1: X = x(1001:m/2 + 1000); 2: Y = y(1001:m/2 + 1000); 3: Z = z(1001:m/2 + 1000); 4: W = [X Y Z]; 5: j = 1:3:length(W); 6: Phi_t1 = sqrt(2/m)*W(j); 7: for i = 1:m/2 8: if Phi_t1(i) < 0 9: Phi_t2(i) = \u22121; 10: else 11: Phi_t2(i) = 1; 12: end 13: Phi_t3 = diag(Phi_t2);\n14: Phi_t4 = [\nPhi_t3 Phi_t3 Phi_t3 Phi_t3 . . . Phi_t3 Phi_t3 Phi_t3 \u2212Phi_t3 Phi_t3 \u2212Phi_t3 . . . Phi_t3 \u2212Phi_t3\n] ;\n15: Phi = Phi_t4(1:m,1:N);\nEntropy 2022, 24, 784 7 of 22"
        },
        {
            "heading": "3.4. Image Compression and Encryption Algorithm",
            "text": "The process of image encryption and compression is shown in Figure 3. It is mainly composed of two parts: (1) 2D CS is used to encrypt and compress four images. (2) In order to achieve better security performance, double random phase encoding based on MPFrQFT is used to further encrypt the compressed and encrypted image. Among them, the chaotic sequence of the fractional-order chaotic system is used in many places in the whole algorithm.\nEntropy 2022, 24, x FOR PEER REVIEW 7 of 23\nAlgorithm 1 Generation of measurement matrix Input: chaotic sequence x, y, z compression ratio m/N Output: Measurement matrix Phi 1: X = x(1001:m/2 + 1000); 2: Y = y(1001:m/2 + 1000); 3: Z = z(1001:m/2 + 1000); 4: W = [X Y Z]; 5: j = 1:3:length(W); 6: Phi_t1 = sqrt(2/m)*W(j); 7: for i = 1:m/2 8: if Phi_t1(i) < 0 9: Phi_t2(i) = \u22121; 10: else 11: Phi_t2(i) = 1; 12: end 13: Phi_t3 = diag(Phi_t2);\n14: Phi_t4 = \ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \ud835\udc43\u210e\ud835\udc56_\ud835\udc613\ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \u2212\ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \ud835\udc43\u210e\ud835\udc56_\ud835\udc613\ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \u2212\ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \u2026 \ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \ud835\udc43\u210e\ud835\udc56_\ud835\udc613\u2026 \ud835\udc43\u210e\ud835\udc56_\ud835\udc613 \u2212\ud835\udc43\u210e\ud835\udc56_\ud835\udc613 ; 15: Phi = Phi_t4(1: m,1: N);\n3.4. I age o pression and Encryption Algorithm The process of i age encryption and co pression is sho n in Figure 3. It is ainly co ose of t o parts: ( ) 2 S is used to encrypt and compre s four images. (2) In order to achieve better security perfor ance, double rando phase encoding based on\nPFr FT is use to f rt er e cry t t e co ressed an encry te i age. o g t e , the chaotic sequence of the fractional-order chaotic syste is used in any places in the\nhole algorith .\noriginal images P1/P2/P3/P4\nHash value Initial values x0, y0, z0 Fractional order chaotic\nsystem\nExternal key K\nMeasurement matrix\nR/G/B component\nJosephus scrambling LRT\nGray mapping 2D CS\nQuaternion Q_P1/Q_P2/Q_P3MPFrQFTIMPFrQFTQuantificationDiffusion Cipher image C\nMaskMask\nFigure 3. Multi-image compression and encryption flow chart.\n3.4.1. Image Compression and Encryption Based on 2D CS Assuming that the sizes of the four images P1, P2, P3 and P4 are all N \u00d7 N, the compression steps are as follows: Step1: According to Section 3.1, generate the initial values of the fractional-order chaotic equation and the chaotic sequences. Step2: Extract the R, G and B components of the four images, respectively. According to Section 3.2, perform two-dimensional Josephus scrambling and linear random transformation (LRT) on the 12 components to obtain the encrypted image set C1.\nFigure 3. Multi-image compression and encryption flow chart.\n3.4.1. I a e ression and Encryption Based on 2D CS\nss i sizes of the four images P1, P2, P3 and P4 are all \u00d7 N, the compression steps re as follows: Step1: i to Section 3.1, generate the initial values of the fractional-order chaotic equatio and the chaotic sequences. Step2: xtract t e , a c e ts f t e f r i a es, res ecti el . cc r ing to Section 3.2, erfor t o- i ensional Jose h s scra bling an linear ran o transfor-\nation (LRT) on the 12 components to obtain the encrypted image set C1. The process of LRT transformation can be expressed as,\nC(i, j) = {\nC(i, j), S(i, j)mod 2 = 0 P_max\u2212 C(i, j) S(i, j)mod 2 = 1 (13)\nwhere C is the encrypted image, S is the chaotic matrix generated by the fractional-order chaotic equation and P_max is the maximum pixel value of the encrypted image. Step3: Generate the M \u00d7 N measurement matrices \u03a61 and \u03a62 described in Section 3.3. Perform gray mapping on the image set C1 first to reduce the dynamic range of CS sampling and save the sampling bit width [16]. Then, according to formula (4), using the measurement matrices \u03a61 and \u03a62, the images are compressed and measured from two directions to obtain the compressed image set C2.\n3.4.2. Image Encryption with Double Random Phase Encoding Based on MPFrQFT\nAfter completing the 2D CS, the paper further encrypts the image set C2 as follows. Step1: Generate the quaternion Q_P1 according to formula (14) on the four compressed\nand encrypted images that were originally R components in the image set C2. In the same way, the G and B components can also generate quaternions Q_P2 and Q_P3.\nEntropy 2022, 24, 784 8 of 22\n Q_P1 = R1(x, y) + R2(x, y)i + R3(x, y)j + R4(x, y)k Q_P2 = G1(x, y) + G2(x, y)i + G3(x, y)j + G4(x, y)k Q_P3 = B1(x, y) + B2(x, y)i + B3(x, y)j + B4(x, y)k\n(14)\nHere, Rk, Gk and Bk (k = 1,2,3,4) are the R component, G component and B component of the four original images, respectively. Step2: Right-multiply Q_P1, Q_P2 and Q_P3 by the quaternion random phase mask e\u00b512\u03c0a(x,y) to obtain quaternion Q_P4, Q_P5 and Q_P6. Here, \u00b51 is a random unit pure quaternion, and the phase mask a(x,y) is composed of a chaotic sequence generated by a fractional-order chaotic system. Q_P4 = Q_P1\u00d7 e\u00b512\u03c0a(x,y) Q_P5 = Q_P2\u00d7 e\u00b512\u03c0a(x,y) Q_P6 = Q_P3\u00d7 e\u00b512\u03c0a(x,y) (15)\nStep3: Perform MPFrQFT transformation on Q_P4, Q_P5 and Q_P6 to obtain Q_P7, Q_P8 and Q_P9, where \u03b11 and \u03b21 is the conversion level, M1 and M2 is the period, \u03b71 and \u03b72 is the random real vector in the M1 and M2 dimension and its values are independent and uniformly distributed in [0, 1000], \u00b52 is a random unit of the pure quaternion. Step4: Right-multiply Q_P7, Q_P8 and Q_P9 by the quaternion random phase mask e\u00b532\u03c0b(u,v) to obtain quaternion Q_P10, Q_P11 and Q_P12. Where \u00b53 is a random unit pure quaternion, and the phase mask b(u,v) is composed of a chaotic sequence generated by a fractional-order chaotic system. Q_P10 = Q_P7\u00d7 e\u00b532\u03c0b(u,v) Q_P11 = Q_P8\u00d7 e\u00b532\u03c0b(u,v) Q_P12 = Q_P9\u00d7 e\u00b532\u03c0b(u,v) (16)\nStep5: Perform IMPFrQFT transform Q_P10, Q_P11 and Q_P12 to obtain Q_P13, Q_P14 and Q_P15, where \u03b12 and \u03b22 is the conversion level, M3 and M4 is the period, \u03b73 and \u03b74 is the random real vector in the M3 and M4 dimension, and its values are independent and uniformly distributed in [0, 1000], \u00b54 is a random unit of the pure quaternion. Step6: Extract the real part and three imaginary parts of Q_P13, Q_P14 and Q_P15, respectively, and perform the quantization operation. The quantized images are arranged in order to form a 2M \u00d7 2M color image C3. Step7: After performing a diffusion operation on each of the three layers of the color image C3, perform a diffusion operation on all the layers to obtain the final encrypted image C.\nAmong them, the diffusion method of each layer is as follows.\nCi = { (Pi + PL + PL\u22121 + f loor(Si \u00d7 2F))mod F if i = 1 (Pi + Ci\u22121 + f loor(Si \u00d7 2F))mod F if i \u2208 [2, L]\n(17)\nwhere P is the image to be diffused, three chaotic sequences form the sequence Si, L is the total number of pixels in the image and F is the image depth."
        },
        {
            "heading": "3.5. Image Decryption and Reconstruction Algorithm",
            "text": "The decryption process is similar to the encryption process, as shown in Figure 4, which is the reverse operation of the encryption process. It is worth noting that the 2DPGED algorithm is used to reconstruct the image during the decryption process. The specific process is as follows.\nEntropy 2022, 24, 784 9 of 22\nEntropy 2022, 24, x FOR PEER REVIEW 9 of 23 Step6: Extract the real part and three imaginary parts of Q_P13, Q_P14 and Q_P15, respectively, and perform the quantization operation. The quantized images are arranged in order to form a 2M \u00d7 2M color image C3. Step7: After performing a diffusion operation on each of the three layers of the color image C3, perform a diffusion operation on all the layers to obtain the final encrypted image C. Among them, the diffusion method of each layer is as follows. 1 1 ( ( 2 )) mod if 1 ( ( 2 )) mod if [2, L] F i L L i i F i i i P P P floor S F i C P C floor S F i \u2212 \u2212  + + + \u00d7 ==  + + \u00d7 \u2208 (17)\nwhere P is the image to be diffused, three chaotic sequences form the sequence Si, L is the total number of pixels in the image and F is the image depth.\n3.5. Image Decryption and Reconstruction Algorithm The decryption process is similar to the encryption process, as shown in Figure 4, which is the reverse operation of the encryption process. It is worth noting that the 2DPGED algorithm is used to reconstruct the image during the decryption process. The specific process is as follows.\nDecryption images R/G/B component 2DPG-ED Gray mapping\nIMPFrQFTMPFrQFTInverse quantizationDiffusion Cipher image C Quaternion Q_D1/Q_D2/Q_D3\nHash value Initial values x0, y0, z0 Fractional order chaotic\nsystem\nExternal key K\nMeasurement matrix\nMask Mask\nFigure 4. Multi-image decryption and reconstruction flowchart.\n3.5.1. Image Decryption with Double Random Phase Encoding Based on MPFrQFT Step1: According to the external key K and Hash value, generate the initial value of the fractional-order chaotic equation and the chaotic sequences. Step2: Perform an inverse diffusion operation on each layer and all layers of the color image C to obtain the encrypted image C4. Step3: Perform inverse quantization operation on all layers to get color image C5. Step4: Generate the quaternion Q_D1 according to formula (18) on the four compressed and encrypted images that were originally R components in the image set C5. In the same way, the G component and the B component can also generate quaternions Q_D2 and Q_D3.\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 ( , ) ( , ) ( , ) ( , ) _ 2 ( , ) ( , ) ( , ) ( , ) _ 3 ( , ) ( , ) ( , ) ( , _ ) Q D R x y R x y i R x y j R x y k Q D G x y G x y i G x y j G x y k Q D B x y B x y i B x y j B x y k = + + +  = + + +  = + + +\n(18)\nwhere Rk, Gk and Bk (k = 1, 2, 3, 4) are the R component, G component and B component of the four images to be decrypted, respectively.\nFigure 4. Multi-image decryption and reconstruction flowchart.\n3.5.1. I a e ecry tion ith ouble Rando Phase Encoding Based on PFrQFT\nStep1: ccor i to the external key and ash value, generate the initial value of the fractional-order chaotic equation and the chaotic sequences. Step2: rf r a i erse iffusion operation on each layer and all layers of t e c lor i age C to obtain the encrypted image C4.\nStep3: erfor inverse quantization operation on all layers to get color i age C5. Step4: e erate t e ater io _ 1 accor i to for la (18) o t e fo r co -\npressed and encrypted i ages that ere originally R co ponents in the image set C5. In the sa e ay, the G co ponent and the B co ponent can also generate quaternions _ 2 and Q_D3. \nQ_D1 = R1(x, y) + R2(x, y)i + R3(x, y)j + R4(x, y)k Q_D2 = G1(x, y) + G2(x, y)i + G3(x, y)j + G4(x, y)k Q_D3 = B1(x, y) + B2(x, y)i + B3(x, y)j + B4(x, y)k\n(18)\nwhere Rk, Gk and Bk (k = 1, 2, 3, 4) are the R component, G component and B component of the four images to be decrypted, respectively. Step5: Perform MPFrQFT transformation on Q_D1, Q_D2 and Q_D3 to obtain Q_D4, Q_D5 and Q_D6, where the parameters are \u03b12, \u03b22, M3, M4, \u03b73, \u03b74 and \u00b54. Step6: Righ -multiply Q_D4, Q_D5 and Q_D6 by the quaternion random phase mask e\u2212\u00b532\u03c0b(u,v) to obtain quaternion Q_D7, Q_D8 and Q_D9. Q_D7 = Q_D4\u00d7 e\u2212\u00b532\u03c0b(u,v) Q_D8 = Q_D5\u00d7 e\u2212\u00b532\u03c0b(u,v) Q_D9 = Q_D6\u00d7 e\u2212\u00b532\u03c0b(u,v) (19)\nStep7: Perform IMPFrQFT transformation on Q_D7, Q_D8 and Q_D9 to obtain Q_D10, Q_D11 and Q_D12, where the parameters are \u03b11, \u03b21, M1, M2, \u03b71, \u03b72 and \u00b52. Step8: Right-multiply Q_D10, Q_D11 and Q_D12 by the quaternion random phase mask e\u2212\u00b512\u03c0a(x,y) to obtain quaternion Q_D13, Q_D14 and Q_D15. Q_D13 = Q_D10\u00d7 e\u2212\u00b512\u03c0a(x,y) Q_D14 = Q_D11\u00d7 e\u2212\u00b512\u03c0a(x,y) Q_D15 = Q_D12\u00d7 e\u2212\u00b512\u03c0a(x,y) (20)\n3.5.2. 2D CS Image Reconstruction\nStep1: Extract the real part and three imaginary parts in Q_D13, Q_D14 and Q_D15, respectively, and arrange them in order to form a 2M \u00d7 2M color image C6.\nStep2: Generate measurement matrices \u03a61 and \u03a62 again.\nEntropy 2022, 24, 784 10 of 22\nStep3: First, divide the R, G and B layers of color image C6 into 12 layers by the size of the original image, then perform grayscale mapping, and then reconstruct the image according to the 2DPG-ED algorithm. The reconstruction algorithm includes the inverse operation of two-dimensional Josephus scrambling and LRT transformation. Step4: Turn the reconstructed 12 layers back to the original four images according to the original encryption order of the image."
        },
        {
            "heading": "4. Simulation Results and Analysis",
            "text": "In order to verify the feasibility of the proposed compression and encryption algorithm, a series of numerical simulations were carried out on a computer equipped with CPU @ 2.10 GHz, 16G RAM and MATLAB R2019b. The initial parameters of the fractional-order chaotic system are set to x0 = 0.1, y0 = 0.1 and z0 = 0.1. The compression ratio (CR) is 0.5. The parameters of the double random phase encoding part are set as: period M1 = 23, M2 = 29, M3 = 25 and M4 = 27, the vector parameter \u03b7s (s = 1,2,3,4) are Ms-dimensional random arbitrary real vectors and the unit pure quaternion arrays \u00b51, \u00b52, \u00b53 and \u00b54 are \u00b51 = (i + j + k)/3, \u00b52 = i, \u00b53 = j and \u00b54 = k. Set \u03b11 = 3.8287, \u03b12 = 3.2011, \u03b21 = 1.9415 and \u03b22 = 0.5675. Furthermore, the algorithm is also suitable for the multi-image compression and encryption of grayscale images. This paper realizes double images compression and encryption by setting two imaginary parts equal to zero, and the decrypted image is obtained by the corresponding non-zero imaginary part."
        },
        {
            "heading": "4.1. Experimental Results",
            "text": "The test images include 512 \u00d7 512 color images: Lena, Peppers, Lake, Airplane, and 256 \u00d7 256 grayscale images: Lena, Cameraman. To distinguish the images, the specific image is indicated by the combination of the image name and the image size, as shown in Figure 5. The last three of the color images are from the USC-SIPI image library, while Lena and Cameraman are commonly used images. The image encryption and decryption results are shown in Figures 6 and 7. Entropy 2022, 24, x FOR PEER REVIEW 11 of 23\n(a) (b) (c)\n(d) (e) (f)\nFigure 5. Original image. (a) Lena512. (b) Peppers512. (c) Lake512. (d) Airplane512. (e) Lena256. (f) Cameraman256.\nFigure 5. Original image. (a) Lena512. (b) Peppers512. (c) Lake512. (d) Airplane512. (e) Lena256. (f) Cameraman256.\nEntropy 2022, 24, 784 11 of 22\nEntropy 2022, 24, x FOR PEER REVIEW 11 of 23 (a) (b) (c)\n(d) (e) (f)\nFigure 5. Original image. (a) Lena512. (b) Peppers512. (c) Lake512. (d) Airplane512. (e) Lena256. (f) Cameraman256.\n(b) (c)\n(a) (d) (e)\nFigure 6. Color images\u2019 encryption and decryption results. (a) Encrypted image of 4 color images. (b) Decrypted Lena512 image. (c) Decrypted Peppers512 image. (d) Decrypted Lake512 image. (e) Decrypted Airplane512 image.\n(a) (b) (c)\nFigure 7. Grayscale images\u2019 encryption and decryption results. (a) Encrypted image of 2 grayscale images. (b) Decrypted Lena256 image. (c) Decrypted Cameraman256 image.\nFigure 6. Color images\u2019 encryption and decryption results. (a) Encrypted image of 4 color images. (b) Decrypted Lena512 image. (c) Decrypted Peppers512 image. (d) Decrypted Lake512 image. (e) Decrypted Airplane512 image.\nEntropy 2022, 24, x FOR PEER REVIEW 11 of 23 ( ) (b) (c)\n( ) (e) (f)\nFigure 5. Original image. (a) Lena512. (b) Peppers512. (c) Lake512. (d) Airplane512. (e) Lena256. (f) Ca eraman256.\n(b) (c)\n(a) (d) (e)\nFigure 6. Color images\u2019 encryption and decryption results. (a) Encrypted image of 4 color images. (b) Decrypted Lena512 image. (c) Decrypted Peppers512 image. (d) Decrypted Lake512 image. (e) Decrypted Airplane512 image.\n(a) (b) (c)\nFigure 7. Grayscale images\u2019 encryption and decryption r sults. (a) Encrypted image of 2 grayscale images. (b) Decrypted Lena256 image. (c) Decrypted Cameraman256 image.\nFigure 7. rayscale i ages\u2019 encryption and decryption results. (a) Encrypted image of 2 grayscale images. (b) Decrypted Lena256 image. (c) Decrypted Cameraman256 image.\nIt can be seen from Figures 6 and 7 that both color images and grayscale images can be effectively compressed and encrypted by the algorithm in this paper, and the decrypted image is visually very similar to the original image."
        },
        {
            "heading": "4.2. Compression Performance Analysis",
            "text": "In this paper, 2D CS is used to compress and encrypt multiple images simultaneously. The encrypted image is compressed into different sizes according to CR. The larger the CR, the better the reconstruction quality of the decrypted image. Both the peak signalto-noise ratio (PSNR) and average structural similarity (MSSIM) are used to evaluate the compression performance of the algorithm. PSNR is a common indicator for appraising the quality of decrypted images. The calculation method is as follows:\nPSNR = 10 log 2552\n(1/3MN) M \u2211\ni=1\nN \u2211\ni=1 [P(i, j)\u2212 D(i, j)]2\n(21)\nwhere M and N are the sizes of the image, and P(i,j) and D(i,j) are the pixel values at row i and column j in the original image and the decrypted image, respectively. The larger the PSNR, the smaller the image distortion.\nEntropy 2022, 24, 784 12 of 22\nMSSIM is an indicator of similarity, and its distribution range is between 0 and 1. The larger the test value, the stronger the similarity between images. It is defined as:\nSSIM(x, y) = (2\u00b5x\u00b5y + C1)(2\u03c3xy + C2)\n(\u00b52x + \u00b5 2 y + C1)(\u03c32x + \u03c32y + C2)\n(22)\nMSSIM = 1 N\nN\n\u2211 j=1 SSIM(xj, yj) (23)\nwhere C1 = (k1L)2, C2 = (k2L)2, k1 = 0.01, k2 = 0.03 and L = 255. \u00b5x, \u00b5y, \u03c3x, \u03c3y and \u03c3xy represent the mean, variance and covariance of the original image and the decrypted image, respectively. xj and yj represent the two images of the j-th window and N is the total number of windows, where N = 64. Table 1 shows the PSNR and MSSIM of the decryption results of the algorithm in this paper under different CRs.\nFrom Table 1, we can see that both the PSNR and MSSIM of the decrypted image are in a range with better results. As the CR value increases, the value of MSSIM also increases. The higher the similarity between the decrypted image and the original image, the better the image reconstruction effect. The results in Table 1 show that this algorithm can compress and encrypt images in a diversified manner. Table 2 shows the PSNR results of different images under different compression ratios, as well as comparisons with references. From Table 2, we can see that our reconstruction effect is significantly better than the reference [7,21,22].\nEntropy 2022, 24, 784 13 of 22\n4.3. Statistical Analysis 4.3.1. Histogram\nThe histogram reflects the relationship between the frequency of each gray level pixel in the image and the gray level, and it is one of the important criteria for evaluating the security performance of an image encryption scheme. If the histograms of encrypted images are relatively evenly distributed, the encryption effect is good. Figure 8 is the histogram of the respective red, green and blue components of the color images and the histogram of the total encrypted text image of the four images. Figure 9 is the histogram of the two grayscale images and the total cipher text image.\nEntropy 2022, 24, x FOR PEER REVIEW 13 of 23 0.5 34.0923 0.9904 0.25 30.0109 0.9737 From Table 1, we can see that both the PSNR and MSSIM of the decrypted image are in a range with better results. As the CR value increases, the value of MSSIM also increases. The higher the similarity between the decrypted image and the original image, the better the image reconstruction effect. The results in Table 1 show that this algorithm can compress and encrypt images in a diversified manner. Table 2 shows the PSNR results of different images under different compression ratios, as well as comparisons with references. From Table 2, we can see that our reconstruction effect is significantly better than the reference [7,21,22]. Table 2. Compression performance of different algorithms.\nImages CR PSNR Ref. [21] Ref. [22] Ref. [7] Peppers512 0.75 38.4215 31.7121 - <30\n0.5 35.1721 26.4965 - <30 0.25 32.7130 14.0119 - >25\nLena256 0.75 41.0852 - 36.1415 - 0.5 36.7034 - 32.1471 - 0.25 32.2037 - 28.0615 -\n4.3. Statistical Analysis 4.3.1. Histogram\nThe histogram reflects the relationship between the frequency of each gray level pixel in the image and the gray level, and it is one of the important criteria for evaluating the security performance of an image encryption sche e. If the histograms of encrypted images are relatively evenly dis ribu ed, the encryption effect is goo . i ure 8 is the histogram of the resp ctive red, green and blue components of the color i s and the histogram of the total encrypted text image of the four images. Figure 9 is the histogram of the two grayscale images and the total cipher text image.\nEntropy 2022, 24, 784 14 of 22\nof Lake512 B. (j) Histogram of Airplane512 R. (k) Histogram of Airplane512 G. (l) Histogram of Airplane512 B. (m) Histogram of encrypted image R. (n) Histogram of encrypted image G. (o) Histogram of encrypted image B.\nEntropy 2022, 24, x FOR PEER REVIEW 14 of 23 (g) (h) (i) (j) (k) (l)\n(m) (n) (o)\nFigure 8. Histograms of color image and ciphertext. (a) Histogram of Lena512 R. (b) Histogram of\nLena512 G. (c) Histogram of Lena512 B. (d) Histogram of Peppers512 R. (e) Histogram of Peppers512 G. (f) Histogram of Peppers512 B. (g) Histogram of Lake512 R. (h) Histogram of Lake512 G. (i) Histogram of Lake512 B. (j) Histogram of Airplane512 R. (k) Histogram of Airplane512 G. (l) Histogram of Airplane512 B. (m) Histogram of encrypted image R. (n) Histogram of encrypted image G. (o) Histogram of encrypted image B.\n(a) (b) (c)\nFigure 9. Histograms of grayscale image and ciphertext. (a) Histogram of Lena256. (b) Histogram of Cameraman256. (c) Histogram of encrypted image.\nFrom Figures 8 and 9, it can be found that the histograms of the color ciphertext image and the grayscale ciphertext image are very uniform. This means that any statistical information of plaintext cannot be obtained from the histogram of the ciphertext. This shows that the multi-image compression\u2013encryption algorithm can effectively resist statistical analysis attacks.\nFigure 9. Histograms of grayscale image and ciphertext. (a) Histogram of Lena256. (b) Histogram of Cameraman256. (c) Histogram of encrypted image.\ni a 9, it can be found that he histograms of the col r ciphertext image nd the graysc le iphertext image are ve y uniform. This means that any statistic l information of plaintext cannot be btained from the histogram of the ciphertext. This show t at the multi-i age compression\u2013encryption alg rithm can effectively resist statistic l analysis attacks.\n4.3.2. Correlation between Adjacent Pixels\nThe correlation between adjacent pixels can also be used to obtain information about the original image. Strongly correlated pixels exist in the original image, and image encryption can destroy this correlation. The correlation coefficient \u03c1xy is defined as follows:\n\u03c1xy = E((x\u2212 E(x))(y\u2212 E(y)))\u221a\nD(x)D(y) (24)\nwhere E(x) and D(x) are the mean and variance of x, respectively, and the same is true for E(y) and D(y). The value of \u03c1xy is in the range of 0 to 1, and the closer to 1, the stronger the correlation. Table 3 shows the correlation coefficients between the proposed multi-image compression\u2013encryption algorithm and references. Figure 10 shows the relative distribution of adjacent pixels of the \u201cPeppers512\u201d image and its ciphertext image.\nEntropy 2022, 24, 784 15 of 22\nEntropy 2022, 24, x FOR PEER REVIEW 15 of 23"
        },
        {
            "heading": "4.3.2. Correlation between Adjacent Pixels",
            "text": "The correlation between adjacent pixels can also be used to obtain information about the original image. Strongly correlated pixels exist in the original image, and image encryption can destroy this correlation. The correlation coefficient \u03c1xy is defined as follows: (( ( ))( ( ))) ( ) ( )xy E x E x y E y D x D y \u03c1 \u2212 \u2212= (24) where E(x) and D(x) are the mean and variance of x, respectively, and the same is true for E(y) and D(y). The value of \u03c1xy is in the range of 0 to 1, and the closer to 1, the stronger the correlation. Table 3 shows the correlation coefficients between the proposed multi-image compression\u2013encryption algorithm and references. Figure 10 shows the relative distribution of adjacent pixels of the \u201cPeppers512\u201d image and its ciphertext image. Table 3. The adjacent pixel correlation coefficient of original image and ciphertext image. Images Horizonta Vertical Diagonal Lena512 Plain image 0.9881 0.9775 0.9698 Cipher image \u22120.0014 \u22120.0013 \u22120.0030 Ref. [23] 0.0019 0.0184 \u22120.0129 Peppers512 Plain image 0.9822 0.9786 0.9693 Cipher image 0.0017 -0.0008 \u22120.0014 Ref. [24] 0.0004 \u22120.0002 0.0019 Lake512 Plain image 0.9879 0.9774 0.9696 Cipher image \u22120.0018 \u22120.0009 \u22120.0013 Ref. [23] 0.0047 \u22120.0021 \u22120.0093 Airplane512 Plain image 0.9588 0.9586 0.9246 Cipher image \u22120.0016 0.0003 \u22120.0006 Ref. [24] \u22120.0008 \u22120.0042 \u22120.0030\nLena256 Plain image 0.9703 0.9413 0.9152 Cipher image 0.0037 \u22120.0024 0.0038 Ref. [25] \u22120.0018 \u22120.0070 \u22120.0024 Cameraman256 Plain image 0.9595 0.9334 0.9084 Cipher image 0.0082 \u22120.0011 \u22120.0004 Ref. [25] \u22120.0096 0.0082 \u22120.0043\nFigure 10. The relative distribution of the original i age \u201cPeppers512\u201d and the encrypted i age in\nthree directions. (a) Correlation distribution in the horizontal direction of the Peppers512. (b) Cor-\nrelation distribution in the vertical direction of the Peppers512. (c) Correlation distribution in the\ndiagonal direction of the Peppers512. (d) Correlation distribution in the horizontal direction of\nthe ciphertext image. (e) Correlation distribution in the vertical direction of the ciphertext image.\n(f) Correlation distribution in the diagonal direction of the ciphertext image.\nIt can be seen from Table 3 that the correlation coefficients of the ciphertext image of the color image and the grayscale image are close to 0, and are basically better than the values in references [23\u201325], indicating that our encryption method can resist statistics attacks and have higher security. Figure 10 shows the pixel distribution of \u201cPeppers512\u201d in different directions. Compared to the diagonal pixel distribution of the original image, the ciphertext image is uniformly distributed in the entire coordinate space.\n4.3.3. Information Entropy\nInformation entropy is used to evaluate the randomness and unpredictability of the image, which is calculated as follows:\nH(m) = N\n\u2211 i=1\np(mi) log2 1\np(mi) (25)\nwhere p(mi) is the probability of the occurrence of image pixel gray value mi, and N is the total number of mi. Among the values of information entropy, eight is an ideal value. The information entropy values of color images, grayscale images and their encrypted images are shown in Tables 4 and 5.\nEntropy 2022, 24, 784 16 of 22\nObviously, it can be seen from Tables 4 and 5 that the information entropy of the R component, G component and B component of the color ciphertext image exceeds 7.99, which is better than the information entropy of the reference [26]. The information entropy of the grayscale ciphertext image is also around eight. This means that the image encrypted by this algorithm has good randomness. Local Shannon entropy is an index that quantitatively describes the randomness of an image from a local perspective, which can be written as,\n______ Hk,TB(S) =\nk\n\u2211 i=1\nH(Si) k\n(26)\nwhere S1\u223cSk are non-overlapping image blocks, k is the number of selected blocks, TB represents the number of pixels in each selected image block and H(Si) is the information entropy of the selected image block. If the value of local Shannon entropy is in the interval (hl\u2217le f t, h l\u2217 right), the image will pass the local Shannon entropy test. In this paper, k and TB are selected as 30 and 1936. Table 6 shows the local Shannon entropy of the color ciphertext image.\nAccording to Table 6, it can be known that the color ciphertext images have passed the test, and the local Shannon entropy of the total ciphertext image is also within the range of values. This means that the ciphertext image of the algorithm in the paper has good randomness."
        },
        {
            "heading": "4.4. Key Space Analysis",
            "text": "To resist brute force attacks, the key space of a secure image compression\u2013encryption algorithm is considered to be at least 2100. In this algorithm, the key is mainly composed of the following two parts: the 256-bit initial key K and the 256-bit hash value of the original image. Multiple parameters in MPFrQFT can also be used as a key during the transfer process. By simple addition, it can be seen that the key space of the algorithm is at least 2512, which is greater than 2100. Table 7 gives the comparison results of key space with other algorithms.\nAs can be seen in Table 7, the proposed scheme has the largest key space than other encryption schemes. So the algorithm can meet the security requirements of the key space and resist brute force attacks.\nEntropy 2022, 24, 784 17 of 22"
        },
        {
            "heading": "4.5. Key Sensitivity Analysis",
            "text": "Key sensitivity requires that the encryption algorithm can produce completely different encryption results due to the slight change of key. This means that only a unique and correct key can recover the plaintext. In this paper, two keys, Ka and Kb, are randomly selected during verification, but only 1-bit difference is guaranteed between the two keys.\nKa = \u20184ffDc1EB6bFfC9ac5Abe63a7BBe20c6EF6BDdDEcAc09eb8ECC8dDEe4e18eEBaA\u2019\nKb = \u20184ffDc1EB6bFfC9ac5Abe63a7BBe20c6EF6BDdDEcAc09eb8ECC8dDEe4e18eEBaB\u2019\nIn the simulation, the results of encrypted and decrypted four color images using keys Ka and Kb are shown in Figure 11.\nEntropy 2022, 24, x FOR PEER REVIEW 18 of 23\n(a) (b) (c)\n(d) (e) (f) (g)\nFigure 11. Key sensitivity analysis. (a) Image Ca encrypted with Ka. (b) Image Cb encrypted with Kb. (c) Differences between encrypted images. (d) Use Kb to decrypt the Lena512 after ciphertext Ca. (e) Use Kb to decrypt the Peppers512 after ciphertext Ca. (f) Use Kb to decrypt the Lake512 after ciphertext Ca. (g) Use Kb to decrypt the Airplane512 after ciphertext Ca.\nFrom Figure 11a\u2013c, we can see that with the original image encrypted with Ka and Kb, two visually secure encrypted results can be obtained, and the difference between them is larger. Moreover, as shown in Figure 11d\u2013g, using the key that is 1-bit different from the correct key for decryption, none of the four original images can be reconstructed correctly. Therefore, the proposed multi-image compression\u2013encryption algorithm is key sensitive."
        },
        {
            "heading": "4.6. Differential Attack Analysis",
            "text": "The differential attack is an effective and common attack against security. After adding slight changes to the original image, the attacker can obtain usable information by analyzing the differences between the two encrypted images. The pixel change rate (NPCR), uniform average change intensity (UACI) and avalanche effect are three common indicators to evaluate the impact of differential attacks. If the plaintext pixel value changes slightly, the ciphertext pixel value can change significantly after encryption, which shows the algorithm has good randomization characteristics. The calculation methods of NPCR and UACI are as follows:\n( ), ,NPCR 100%i j D i j\nW H = \u00d7 \u00d7 \n(27)\n( ) ( )1 2 , | , , |1UACI 100% 255i j d i j d i j W H \u2212  = \u00d7 \u00d7    (28)\nwhere W and H represent the width and height of the image, respectively, and d1 and d2 are the two ciphertext images before and after the plaintext image changes one-pixel value. If d1(i,j) = d2(i,j), then D(i,j) = 0, otherwise, D(i,j) = 1. The ideal expected values of the NPCR, UACI and avalanche effects are 99.6094%, 33.4635% and 50%, respectively. Table\nFigure 11. ey sensitivity analysis. (a) Image Ca encrypted with Ka. (b) Image Cb encrypted with Kb. (c) Differences between encrypted images. (d) Use Kb to decrypt the Lena512 after ciphertext Ca. (e) Use Kb to decrypt the Peppers512 after ciphertext Ca. (f) Use Kb to decrypt the Lake512 after ciphertext Ca. (g) Use Kb to decrypt the Airplane512 after ciphertext Ca.\nFrom Figure 11a\u2013c, we can see that with the original image encrypted with Ka and Kb, two visually secure encrypted results can be obtained, and the difference between them is larger. Moreover, as shown in Figure 11d\u2013g, using the key that is 1-bit different from the correct key for decryption, none of the four original images can be reconstructed correctly. Therefore, the proposed multi-image co pression\u2013encryption algorithm is key sensitive."
        },
        {
            "heading": "4.6. Differential Attack Analysis",
            "text": "The differential attack is an effective and common attack against security. After adding slight changes to the original image, the att cker can obtain usable information by analyzing the differences b tween the two encrypted images. The pixel ch nge r te (NPCR), uniform verage change ntensity (UACI) and avalanche effect are three common indicators o evaluate the impact of differe tial attacks. If the pl i text pixel value h nges slightly, the ciphertext pixel valu can change significantly after encryption, which shows the algorithm has good randomization characteristics. The calculatio methods of NPCR and UACI are as follows:\nEntropy 2022, 24, 784 18 of 22\nNPCR = \u2211i,j D(i, j)\nW \u00d7 H \u00d7 100% (27)\nUACI = 1\nW \u00d7 H\n[ \u2211i,j |d1(i, j)\u2212 d2(i, j)| 255 ] \u00d7 100% (28)\nwhere W and H represent the width and height of the image, respectively, and d1 and d2 are the two ciphertext images before and after the plaintext image changes one-pixel value. If d1(i,j) = d2(i,j), then D(i,j) = 0, otherwise, D(i,j) = 1. The ideal expected values of the NPCR, UACI and avalanche effects are 99.6094%, 33.4635% and 50%, respectively. Table 8 shows the NPCR, UACI and avalanche effect values, as well as the comparison results with other algorithms.\nThe results in Table 8 show that the values of the NPCR, UACI and avalanche effect of ciphertext images are close to their theoretical values and are better than the algorithms in reference [25]. Therefore, this algorithm has a good performance of resistance to differential attacks."
        },
        {
            "heading": "4.7. Robustness Analysis",
            "text": "4.7.1. Analysis of Noise Attacks\nDuring the transmission process, the ciphertext image will inevitably be affected by noise and interference. To evaluate the impact of noise and interference on the decrypted image, salt and pepper noise (SPN), speckle noise (SN) and Gaussian noise (GN) were added to the encrypted image to measure the ability of the algorithm to resist noise attacks. Table 9 shows the decrypted results after adding different types and degrees of noise to the ciphertext image, as well as the comparison with other algorithms. Figure 12 is a decrypted image of a noise image. Table 9 shows that our algorithm can resist 10\u22125 SPN, 10\u22126 GN and SN. Compared with reference [23], the anti-noise effect of our algorithm has obvious advantages when the noise is greater. Figure 12 shows the effect of decrypting images under higher levels of noise. It can be found that when the noise is 10\u22123 GN and SN, there are obvious spots in the decrypted image, but the original image can still be easily recognized. When the noise is 10\u22123 SPN, the quality of the decrypted image is still good. It shows the algorithm can resist at least 10\u22123 noise attacks, and the ability to resist salt and pepper noise is stronger than that of other types of noise.\nEntropy 2022, 24, 784 19 of 22\nTable 9. PSNR of the decrypted image of the noisy ciphertext image.\nNoise Type Noise Intensity Lena512Ours Lena512 [23] Peppers512 Lake512 Airplane512\nSPN 1 \u00d7 10\u22125 36.2751 32.2248 34.9380 31.5531 38.1682 3 \u00d7 10\u22125 35.9222 31.8791 34.6932 31.3934 37.6614 5 \u00d7 10\u22125 35.4256 29.6256 34.3170 31.1725 36.9469\nSN 1 \u00d7 10\u22126 36.5825 32.6759 35.1716 31.6857 38.6497 3 \u00d7 10\u22126 35.9578 17.2882 34.7033 31.4104 37.6926 5 \u00d7 10\u22126 35.0968 13.5636 34.0699 31.0119 36.4843 GN 1 \u00d7 10\u22126 35.9662 18.0331 34.7121 31.3983 37.7041 3 \u00d7 10\u22126 34.4031 13.1115 33.5063 30.6553 35.4992 5 \u00d7 10\u22126 33.5791 9.2767 32.8993 30.2160 34.4459 Entropy 2022, 24, x FOR PEER REVIEW 20 of 23\nTable 9 shows that our algorithm can resist 10\u22125 SPN, 10\u22126 GN and SN. Compared with reference [23], the anti-noise effect of our algorithm has obvious advantages when the noise is greater. Figure 12 shows the effect of decrypting images under higher levels of noise. It can be found that when the noise is 10\u22123 GN and SN, there are obvious spots in the decrypted image, but the original image can still be easily recognized. When the noise is 10\u22123 SPN, the quality of the decrypted image is still good. It shows the algorithm can resist at least 10\u22123 noise attacks, and the ability to resist salt and pepper noise is stronger than that of other types of noise.\n4.7.2. Analysis of Shear Attack The ciphertext may also be subject to clipping attacks during transmission, so the compression and encryption algorithm needs to have the ability to resist clipping attacks. Figure 13 shows the decrypted image recovery result after the ciphertext image has been subjected to different cutting methods and varying degrees of data loss.\n4.7.2. Analysis of Shear Attack\nThe ciphertext may also be subject to clipping attacks during transmission, so the compression and encryption algorithm needs to have the ability to resist clipping attacks. Figure 13 shows the decrypted image recovery result after the ciphertext image has been subjected to different cutting methods and varying degrees of data loss.\nEntropy 2022, 24, 784 20 of 22Entropy 2022, 24, x FOR PEER REVIEW 21 of 23\n(a) (b) (c) (d)\n(e) (f) (g) (h)\n(i) (j) (k) (l)\n(m) (n) (o) (p)\nFigure 13. Results of shearing attacks of different strengths. (a) 5% data loss. (b) 10% data loss. (c) 20% data loss. (d) 5% data loss. (e) decrypted image of (a). (f) decrypted image of (b). (g) decrypted image of (c). (h) decrypted image of (d). (i) 5% data loss. (j) 10% data loss. (k) 20% data loss. (l) 5% data loss. (m) decrypted image of (i). (n) decrypted image of (j). (o) decrypted image of (k). (p) decrypted image of (l).\nFigure 13 shows that the main information of the original image can still be roughly represented after being subjected to different degrees of shearing attacks. As the amount of data loss increases, the recovery effect is gradually declining. As far as this algorithm is concerned, the cutting position has little effect on the image restoration effect. All in all, our algorithm can resist shearing attacks to a certain degree.\n5. Conclusions This paper proposes a multi-image encryption and compression algorithm based on 2D CS and optical encryption. This paper first uses 2D CS to compress and encrypt multiple images simultaneously, and then uses MPFrQFT-based double random phase encoding to encrypt the images twice, which enhances the encryption effect. Among them, a newly designed structured measurement matrix is used in 2D CS, which can effectively\nFigure 13. Results of shearing attacks of different strengths. (a) 5% data loss. (b) 10% data loss. (c) 20% data loss. (d) 5% data loss. (e) decrypted image of (a). (f) decrypted image of (b). (g) decrypted image of (c). (h) decrypted image of (d). (i) 5% data loss. (j) 10% data loss. (k) 20% data loss. (l) 5% data loss. (m) decrypted image of (i). (n) decrypted image of (j). (o) decrypted image of (k). (p) decrypted image of (l).\nFigure 13 sho s t t t i i f r ation of the original image can still be roughly represented aft subjected to differ nt degrees of shearing attacks. As the amount f data los increases, the recovery effect is gradually declining. As far s this algorithm is concerned, the cutting siti littl effect on the image restoration effect. All in all, our algorithm can resist shearing attacks to a certain degree."
        },
        {
            "heading": "5. Conclusions",
            "text": "This paper proposes a multi-image encryption and compression algorithm based on 2D CS and optical encryption. This paper first uses 2D CS to compress and encrypt multiple images simultaneously, and then uses MPFrQFT-based double random phase encoding\nEntropy 2022, 24, 784 21 of 22\nto encrypt the images twice, which enhances the encryption effect. Among them, a newly designed structured measurement matrix is used in 2D CS, which can effectively reduce the transmission load, and so the encryption of multiple images is realized in MPFrQFT. In addition, the chaotic sequence generated by the fractional chaotic system is used in the sampling process of 2D CS and the double random phase encoding process. This algorithm combines the advantages of compression\u2013encryption and multi-image encryption, which can further reduce the amount of data transmission and key transmission consumption, while increasing the encryption capacity and ensuring the security of the image. Experimental results show that this compression\u2013encryption algorithm has good robustness and compression performance, can resist at least 10\u22123 noise attacks and shear attacks with 20% data loss and can obtain better recovery results under different compression ratios, which is better than the current reference data. In terms of security performance, it has 2512 key space and can resist a statistical analysis attack and differential attack.\nAuthor Contributions: Writing\u2014original draft, J.W., M.Z. and X.T. All authors have read and agreed to the published version of the manuscript.\nFunding: This research was funded by the following projects and foundations: the National Natural Science Foundation of China (grant number 61902091), the Shandong Provincial Natural Science Foundation (ZR2019MF054), the National Key R&D Program of China (2021YFB2012400).\nInformed Consent Statement: Informed consent was obtained from all subjects involved in the study.\nConflicts of Interest: The authors declare no conflict of interest.\nReferences 1. Ding, L.; Ding, Q. A Novel Image Encryption Scheme Based on 2D Fractional-order chaotic Map, DWT and 4D Hyper-chaos. Electronics 2020, 9, 1280. [CrossRef] 2. Xu, S.; Wang, X.; Ye, X. A new fractional-order chaos system of Hopfield neural network and its application in image encryption. Chaos Solitons Fractals 2022, 157, 111889. [CrossRef] 3. Hu, H.; Cao, Y.; Xu, J.; Ma, C.; Yan, H. An Image Compression and Encryption Algorithm Based on the Fractional-Order Simplest Chaotic Circuit. IEEE Access 2021, 9, 22141\u201322155. [CrossRef] 4. Donoho, D.L. Compressed sensing. IEEE Trans. Inf. Theory 2006, 52, 1289\u20131306. [CrossRef] 5. Belyaev, E.; Codreanu, M.; Juntti, M.; Egiazarian, K. Compressive Sensed Video Recovery via Iterative Thresholding with Random Transforms. IET Image Process. 2020, 14, 1187\u20131199. [CrossRef] 6. Huang, X.; Dong, Y.; Zhu, H.; Ye, G. Visually asymmetric image encryption algorithm based on SHA-3 and compressive sensing by embedding encrypted image. Alex. Eng. J. 2022, 61, 7637\u20137647. [CrossRef] 7. Gan, Z.; Bi, J.; Ding, W.; Chai, X. Exploiting 2D compressed sensing and information entropy for secure color image compression and encryption. Neural Comput. Appl. 2021, 33, 12845\u201312867. [CrossRef] 8. Ye, G.; Liu, M.; Wu, M. Double image encryption algorithm based on compressive sensing and elliptic curve. Alex. Eng. J. 2021, 61, 6785\u20136795. [CrossRef] 9. Refregier, P.; Javidi, B. Optical image encryption based on input plane and Fourier plane random encoding. Opt. Lett. 1995, 20, 767\u2013769. [CrossRef] [PubMed] 10. Sun, X.; Shao, Z.; Shang, Y.; Liang, M.; Yang, F. Multiple-image encryption based on cascaded gyrator transforms and highdimensional chaotic system. Multimed. Tools Appl. 2021, 80, 15825\u201315848. [CrossRef] 11. Huo, D.; Zhou, X.; Zhang, L.; Zhou, Y.; Li, H.; Yi, S. Multiple-image encryption scheme via compressive sensing and orthogonal encoding based on double random phase encoding. J. Mod. Opt. 2018, 65, 2093\u20132102. [CrossRef] 12. Chen, B.; Yu, M.; Tian, Y.; Li, L.; Wang, D.; Sun, X. Multiple-parameter fractional quaternion Fourier transform and its application in colour image encryption. IET Image Process. 2018, 12, 2238\u20132249. [CrossRef] 13. Zhang, H.; Liu, X.; Shen, X.; Liu, J. Chaos Entanglement: A New Approach to Generate Chaos. Int. J. Bifurc. Chaos 2013, 23, 30014. [CrossRef] 14. Eshaghi, S.; Ghaziani, R.K.; Ansari, A. Hopf bifurcation, chaos control and synchronization of a chaotic fractional-order system with chaos entanglement function. Math. Comput. Simul. 2020, 172, 321\u2013340. [CrossRef] 15. Danca, M.-F.; Kuznetsov, N. Matlab code for Lyapunov exponents of fractional order systems. Int. J. Bifurc. Chaos 2018, 28, 1850067. [CrossRef] 16. Zhang, B.; Xiao, D.; Xiang, Y. Robust Coding of Encrypted Images via 2D Compressed Sensing. IEEE Trans. Multimed. 2020, 23, 2656\u20132671. [CrossRef] 17. Hamilton, W.R. Elements of quaternions. Nature 1969, 2, 564.\nEntropy 2022, 24, 784 22 of 22\n18. Yu, C.; Li, J.; Li, X.; Ren, X.; Gupta, B.B. Four-image encryption scheme based on quaternion Fresnel transform, chaos and computer generated hologram. Multimed. Tools Appl. 2018, 77, 4585\u20134608. [CrossRef] 19. Zefreh, E.Z. An image encryption scheme based on a hybrid model of DNA computing, chaotic systems and hash functions. Multimed. Tools Appl. 2020, 79, 24993\u201325022. [CrossRef] 20. Hua, Z.; Xu, B.; Jin, F.; Huang, H. Image Encryption Using Josephus Problem and Filtering Diffusion. IEEE Access 2019, 7, 8660\u20138674. [CrossRef] 21. Jiang, X.; Xiao, Y.; Xie, Y.; Liu, B.; Ye, Y.; Song, T.; Chai, J.; Liu, Y. Exploiting optical chaos for double images encryption with compressive sensing and double random phase encoding. Opt. Commun. 2021, 484, 126683. [CrossRef] 22. Nan, S.X.; Feng, X.F.; Wu, Y.F.; Zhang, H. Remote sensing image compression and encryption based on block compressive sensing and 2D-LCCCM. Nonlinear Dyn. 2022, 108, 2705\u20132729. [CrossRef] 23. Chai, X.; Bi, J.; Gan, Z.; Liu, X.; Zhang, Y.; Chen, Y. Color image compression and encryption scheme based on compressive sensing and double random encryption strategy. Signal Process. 2020, 176, 107684. [CrossRef] 24. Wang, X.; Su, Y. Color image encryption based on chaotic compressed sensing and two-dimensional fractional Fourier transform. Sci. Rep. 2020, 10, 18556. [CrossRef] 25. Fu, J.; Gan, Z.; Chai, X.; Lu, Y. Cloud-decryption-assisted image compression and encryption based on compressed sensing. Multimed. Tools Appl. 2022, 81, 17401\u201317436. [CrossRef] 26. Dong, H.; Bai, E.; Jiang, X.Q.; Wu, Y. Color Image Compression-Encryption Using Fractional-Order Hyperchaotic System and DNA Coding. IEEE Access 2020, 8, 163524\u2013163540. [CrossRef] 27. Gan, Z.; Chai, X.; Bi, J.; Chen, X. Content-adaptive image compression and encryption via optimized compressive sensing with double random phase encoding driven by chaos. Complex Intell. Syst. 2022, 8, 2291\u20132309. [CrossRef] 28. Liu, J.; Zhang, M.; Tong, X.; Wang, Z. Image compression and encryption algorithm based on 2D compressive sensing and hyperchaotic system. Multimed. Syst. 2021, 28, 595\u2013610. [CrossRef] 29. Es, A.; Rw, B.; Aks, B. Securing color image transmission using compression-encryption model with dynamic key generator and efficient symmetric key distribution. Digit. Commun. Netw. 2020, 6, 486\u2013503."
        }
    ],
    "title": "Multi-Image Compression\u2013Encryption Algorithm Based on Compressed Sensing and Optical Encryption",
    "year": 2022
}