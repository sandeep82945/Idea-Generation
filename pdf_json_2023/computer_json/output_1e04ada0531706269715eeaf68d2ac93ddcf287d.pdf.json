{
    "abstractText": "Robotic manipulation of deformable linear objects (DLOs) has great potential for applications in diverse fields such as agriculture or industry. However, a major challenge lies in acquiring accurate deformation models that describe the relationship between robot motion and DLO deformations. Such models are difficult to calculate analytically and vary among DLOs. Consequently, manipulating DLOs poses significant challenges, particularly in achieving large deformations that require highly accurate global models. To address these challenges, this paper presents MultiAC6: a new multi ActorCritic framework for robot action space decomposition to control large 3D deformations of DLOs. In our approach, two deep reinforcement learning (DRL) agents orient and position a robot gripper to deform a DLO into the desired shape. Unlike previous DRL-based studies, MultiAC6 is able to solve the sim-to-real gap, achieving large 3D deformations up to 40 cm in real-world settings. Experimental results also show that MultiAC6 has a 66% higher success rate than a singleagent approach. Further experimental studies demonstrate that MultiAC6 generalizes well, without retraining, to DLOs with different lengths or materials. We released the code at this URL. A demonstration video is available at this URL.",
    "authors": [
        {
            "affiliations": [],
            "name": "M\u00e9lodie Daniel"
        },
        {
            "affiliations": [],
            "name": "Aly Magassouba"
        },
        {
            "affiliations": [],
            "name": "Miguel Aranda"
        },
        {
            "affiliations": [],
            "name": "Laurent Lequi\u00e8vre"
        },
        {
            "affiliations": [],
            "name": "Juan Antonio Corrales Ram\u00f3n"
        },
        {
            "affiliations": [],
            "name": "Roberto Iglesias Rodriguez"
        },
        {
            "affiliations": [],
            "name": "Youcef Mezouar"
        }
    ],
    "id": "SP:2952de4e3da39dd35f6861bc200d17bc3ffadfa5",
    "references": [
        {
            "authors": [
                "J. Sanchez",
                "J. Corrales"
            ],
            "title": "Robotic manipulation and sensing of deformable objects in domestic and industrial applications: A survey",
            "venue": "IJRR, vol. 37, no. 7, pp. 688\u2013716, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "J. Zhu",
                "B. Navarro"
            ],
            "title": "Dual-arm robotic manipulation of flexible cables",
            "venue": "IEEE/RSJ IROS, pp. 479\u2013484, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "R. Lagneau",
                "A. Krupa",
                "M. Marchal"
            ],
            "title": "Automatic shape control of deformable wires based on model-free visual servoing",
            "venue": "IEEE RA-L, vol. 5, no. 4, pp. 5252\u20135259, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "P. Mitrano",
                "D. McConachie",
                "D. Berenson"
            ],
            "title": "Learning where to trust unreliable models in an unstructured world for deformable object manipulation",
            "venue": "Science Robotics, vol. 6, no. 54, p. eabd8170, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "T. Botterill",
                "S. Paulin"
            ],
            "title": "A robot system for pruning grape vines",
            "venue": "Journal of Field Robotics, vol. 34, no. 6, pp. 1100\u20131122, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "O. Aghajanzadeh",
                "M. Aranda"
            ],
            "title": "Adaptive Deformation Control for Elastic Linear Objects",
            "venue": "Frontiers in Robotics and AI, vol. 9, pp. 1\u2013 13, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "M. Yu",
                "K. Lv"
            ],
            "title": "Global model learning for large deformation control of elastic deformable linear objects: An efficient and adaptive approach",
            "venue": "IEEE T-RO, vol. 39, no. 1, pp. 417\u2013436, 2023.",
            "year": 2023
        },
        {
            "authors": [
                "J. Zhu",
                "A. Cherubini"
            ],
            "title": "Challenges and outlook in robotic manipulation of deformable objects",
            "venue": "IEEE RAM, vol. 29, no. 3, pp. 67\u201377, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "O. Aghajanzadeh",
                "M. Aranda",
                "G. L\u00f3pez-Nicol\u00e1s",
                "R. Lenain",
                "Y. Mezouar"
            ],
            "title": "An offline geometric model for controlling the shape of elastic linear objects",
            "venue": "IEEE/RSJ IROS, pp. 2175\u20132181, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "N. Lv",
                "J. Liu",
                "Y. Jia"
            ],
            "title": "Dynamic modeling and control of deformable linear objects for single-arm and dual-arm robot manipulations",
            "venue": "IEEE T-RO, vol. 38, no. 4, pp. 2341\u20132353, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "S. Jin",
                "C. Wang",
                "M. Tomizuka"
            ],
            "title": "Robust deformation model approximation for robotic cable manipulation",
            "venue": "IEEE/RSJ IROS, pp. 6586\u20136593, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "D. Navarro-Alarcon",
                "H.M. Yip"
            ],
            "title": "Automatic 3-D manipulation of soft objects by robotic arms with an adaptive deformation model",
            "venue": "IEEE T-RO, vol. 32, no. 2, pp. 429\u2013441, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "M. Shetab-Bushehri",
                "M. Aranda"
            ],
            "title": "Lattice-based shape tracking and servoing of elastic objects",
            "venue": "IEEE T-RO, pp. 1\u201318, 2023.",
            "year": 2023
        },
        {
            "authors": [
                "R. Laezza",
                "Y. Karayiannidis"
            ],
            "title": "Learning shape control of elastoplastic deformable linear objects",
            "venue": "IEEE ICRA, pp. 4438\u20134444, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "M.H. Daniel Zakaria",
                "M. Aranda"
            ],
            "title": "Robotic Control of the Deformation of Soft Linear Objects Using Deep Reinforcement Learning",
            "venue": "IEEE CASE, pp. 1516\u20131522, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "L. Pecyna",
                "S. Dong",
                "S. Luo"
            ],
            "title": "Visual-tactile multimodality for following deformable linear objects using reinforcement learning",
            "venue": "IEEE/RSJ IROS, pp. 3987\u20133994, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "H. Han",
                "G. Paul",
                "T. Matsubara"
            ],
            "title": "Model-based reinforcement learning approach for deformable linear object manipulation",
            "venue": "IEEE CASE, pp. 750\u2013755, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "Y. Wu",
                "W. Yan"
            ],
            "title": "Learning to manipulate deformable objects without demonstrations",
            "venue": "Robotics: Science and Systems, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "H. Wang",
                "K. Wong"
            ],
            "title": "A collaborative multi-agent reinforcement learning framework for dialog action decomposition",
            "venue": "EMNLP, pp. 7882\u20137889, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "D. Seita",
                "P. Florence"
            ],
            "title": "Learning to rearrange deformable cables, fabrics, and bags with goal-conditioned transporter networks",
            "venue": "IEEE ICRA, pp. 4568\u20134575, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "S. Chen",
                "Y. Liu"
            ],
            "title": "Diffsrl: Learning dynamical state representation for deformable object manipulation with differentiable simulation",
            "venue": "IEEE RA-L, vol. 7, no. 4, pp. 9533\u20139540, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "C. Chi",
                "B. Burchfiel"
            ],
            "title": "Iterative residual policy for goalconditioned dynamic manipulation of deformable objects",
            "venue": "Robotics: Science and Systems XVIII, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "W. Zhao",
                "J.P. Queralta",
                "T. Westerlund"
            ],
            "title": "Sim-to-real transfer in deep reinforcement learning for robotics: A survey",
            "venue": "IEEE SSCI, pp. 737\u2013744, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "T. Bretl",
                "Z. McCarthy"
            ],
            "title": "Quasi-static manipulation of a Kirchhoff elastic rod based on a geometric analysis of equilibrium configurations",
            "venue": "IJRR, vol. 33, no. 1, pp. 48\u201368, 2014.",
            "year": 2014
        },
        {
            "authors": [
                "A. Borum",
                "D. Matthews",
                "T. Bretl"
            ],
            "title": "State estimation and tracking of deforming planar elastic rods",
            "venue": "IEEE ICRA, pp. 4127\u20134132, 2014.",
            "year": 2014
        },
        {
            "authors": [
                "R.S. Sutton",
                "A.G. Barto"
            ],
            "title": "Reinforcement learning - an introduction. Adaptive computation and machine learning",
            "year": 1998
        },
        {
            "authors": [
                "T.P. Lillicrap",
                "J.J. Hunt"
            ],
            "title": "Continuous control with deep reinforcement learning",
            "venue": "ICLR, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "R. Jangir",
                "G. Aleny\u00e0",
                "C. Torras"
            ],
            "title": "Dynamic cloth manipulation with deep reinforcement learning",
            "venue": "IEEE ICRA, pp. 4630\u20134636, 2020.",
            "year": 2020
        },
        {
            "authors": [
                "R. Liu",
                "J. Zou"
            ],
            "title": "The effects of memory replay in reinforcement learning",
            "venue": "IEEE Allerton, pp. 478\u2013485, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "O. Nachum",
                "M. Norouzi"
            ],
            "title": "Bridging the gap between value and policy based reinforcement learning",
            "venue": "NeurIPS, pp. 2775\u20132785, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "Y. Li",
                "C. Pan"
            ],
            "title": "Efficient bimanual handover and rearrangement via symmetry-aware actor-critic learning",
            "venue": "IEEE ICRA, pp. 3867\u2013 3874, 2023.",
            "year": 2023
        },
        {
            "authors": [
                "L. Marzari",
                "A. Pore"
            ],
            "title": "Towards hierarchical task decomposition using deep reinforcement learning for pick and place subtasks",
            "venue": "IEEE ICAR, pp. 640\u2013645, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "L. Chen",
                "Z. Jiang"
            ],
            "title": "Deep reinforcement learning based trajectory planning under uncertain constraints",
            "venue": "Frontiers Neurorobotics, vol. 16, p. 883562, 2022.",
            "year": 2022
        },
        {
            "authors": [
                "V. Mnih",
                "A.P. Badia"
            ],
            "title": "Asynchronous methods for deep reinforcement learning",
            "venue": "ICML, vol. 48, pp. 1928\u20131937, 2016.",
            "year": 1928
        },
        {
            "authors": [
                "M.H. Daniel Zakaria",
                "S. Lengagne",
                "J.A.C. Ram\u00f3n",
                "Y. Mezouar"
            ],
            "title": "General framework for the optimization of the human-robot collaboration decision-making process through the ability to change performance metrics",
            "venue": "Frontiers in Robotics and AI, vol. 8, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "E. Coumans",
                "Y. Bai"
            ],
            "title": "Pybullet, a python module for physics simulation for games, robotics and machine learning.",
            "venue": "pybullet.org,",
            "year": 2021
        },
        {
            "authors": [
                "V. Makoviychuk",
                "L. Wawrzyniak"
            ],
            "title": "Isaac Gym: High Performance GPU Based Physics Simulation For Robot Learning",
            "venue": "NeurIPS, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "D.J. Berndt",
                "J. Clifford"
            ],
            "title": "Using dynamic time warping to find patterns in time series",
            "venue": "Knowledge Discovery in Databases: Papers from the 1994 AAAI Workshop. Technical Report WS-94-03, pp. 359\u2013 370, AAAI Press, 1994.",
            "year": 1994
        }
    ],
    "sections": [
        {
            "text": "I. INTRODUCTION\nFollowing the Industry 4.0 paradigm, industrial robots are increasingly being requested to manipulate various objects in real-world settings. In this context, providing robots with the ability to manipulate soft objects has many practical uses. This particularly concerns deformable linear objects (DLOs), which are one-dimensional soft objects such as cables, plants, or beams [1]. Typical applications are related to cable harnessing [2], [3], hose manipulation [4], or plant stem bending for harvesting [5], [6].\nModeling DLOs for robot manipulation remains a challenge. In fact, such objects exhibit nonlinear deformations that are difficult and computationally expensive to accurately model [7]. Therefore, simplified models are generally used\n1Univ. Bordeaux, CNRS, Bordeaux INP, LaBRI, UMR 5800, F-33400 Talence, France. 2CNRS, Clermont Auvergne INP, Institut Pascal, Universite\u0301 Clermont Auvergne, Clermont-Ferrand, France. 3Instituto de Investigacio\u0301n en Ingenier\u0131\u0301a de Arago\u0301n (I3A), Universidad de Zaragoza, Zaragoza, Spain. 4Centro Singular de Investigacio\u0301n en Tecnolox\u0131\u0301as Intelixentes (CiTIUS), Universidade de Santiago de Compostela, Santiago de Compostela, Spain. JACR was funded by the Spanish government through a \u2019Beatriz Galindo\u2019 fellowship (Ref. BG20/00143), by the research project PID2020-119367RB-I00 and by the Galician Government through the programme \u2019Captacio\u0301n e Retencio\u0301n de Talento\u2019. MA was supported via projects PID2021-124137OB-I00 and TED2021-130224B-I00 funded by MCIN/AEI/10.13039/501100011033, by ERDF A way of making Europe and by the European Union NextGenerationEU/PRTR. Corresponding author: Me\u0301lodie Daniel, e-mail: melodie.daniel@u-bordeaux.fr.\n1https://github.com/MelodieDANIEL/MultiAC6 2https://youtu.be/CWyCozJEiQk\n[8], but at the expense of accuracy and flexibility. Indeed, a single deformation model cannot fully capture the length or material of various DLOs.\nDifferent lines of research have tackled DLOs manipulation. Analytical approaches generally consider 2D deformations [2], [6], [9], [10], [11]. Fewer works have addressed the more challenging case of 3D deformations [3], [7], [12], [13]. In general, these methods are limited by the accuracy of the deformation model used. To avoid modeling DLO deformations, another line of research explored deep reinforcement learning (DRL) approaches. Although promising results could be obtained, these approaches are validated mainly in simulation [14], [15], [16]. Indeed, the sim-to-real gap, peculiar to DRL approaches, is still an obstacle to realworld applications [7]. This sim-to-real gap is mainly caused by the approximations of the simulators, such as unrealistic deformations. Despite this limitation, few DRL approaches have been validated in real-world settings, but only for 2D deformations [17], [18].\nIn contrast, this paper addresses the 3D manipulation of DLOs in real-world settings with a single-arm robot. To this end, we propose a novel Multi Actor-Critic (MultiAC6) DRL framework based on the deep deterministic policy gradient (DDPG) algorithm. This framework decomposes the 6 degree of freedom (DOF) action space of the robot gripper to multiple agents, as shown in Figure 1. This paper is an extension of our previous work [15]. In the latter case, we\nar X\niv :2\n31 2.\n04 30\n8v 2\n[ cs\n.R O\n] 8\nD ec\n2 02\n3\nproposed a single agent framework that controls the 3 DOF position of the robot gripper to deform a DLO in simulation. Differently, in this paper, we propose a collaborative multiagent framework with action space decomposition. Recent work in natural language processing [19] demonstrated that decomposing action spaces between agents achieves better results than a single-agent framework. Indeed, such an approach reduces the state-action space size significantly and makes exploration in the agent training phase more efficient.\nThe following key points of MultiAC6 are worth highlighting. First, unlike existing DRL-based approaches [15], MultiAC6 controls the gripper pose (6 DOF) instead of the gripper position (3 DOF). Therefore, the robot can achieve more complex deformations. Second, MultiAC6 overcomes the sim-to-real gap and is experimentally validated. Third, MultiAC6 is robust to DLO variations without retraining or online fine-tuning. The different contributions of this article can be summarized as follows:\n\u2022 We propose a new DRL collaborative multi actor-critic framework with action space decomposition to address 3D manipulation of DLOs in real-world settings. Our approach consists of two agents controlling the gripper position (3 DOF) and orientation (3 DOF). \u2022 We define an optimized reward function based on the maximum error between the current shape of the DLO and its desired shape. This reward performs better than a reward function based on the average error [15]. \u2022 We validate the robustness of MultiAC6 to DLO variations through extensive real-world experiments involving large 3D deformations. These experiments are carried out, using the same MultiAC6 model, for DLOs with varying length, material, and stiffness."
        },
        {
            "heading": "II. RELATED WORK",
            "text": "Non-DRL methods: Several recent works showed 3D shape control of DLOs with dual-arm manipulation [3], [7], [12], [13]. The approach in [13] uses a geometrical model of the object to compute an online Jacobian that guides the control task. In [3], [12], quasi-static adaptive controllers based on computing a Jacobian based on a sensorbased deformation model are proposed. To address large 3D deformations, the authors of [7] combine offline and online learning of a radial basis function network. These studies require an online adaptation for each new DLO used. On the contrary, we achieve generalization to various realworld DLOs without needing online estimations or specific training. Additionally, our setup consists of a single arm, which is more challenging due to the fewer actuated DOFs.\nDRL methods: Another branch of research explored DRL-based methods to avoid modeling DLO deformation. These methods are mainly validated in simulation. For example, in [14], a method based on the DDPG algorithm is introduced to control elastoplastic DLOs. In our previous work in [15], we addressed 3D deformations with a DDPGbased architecture. However, such techniques do not offer a way to transfer the learned policies to real-world settings [7].\nSim-to-real gap: Resolving this sim-to-real gap is still an open problem since there are no accurate and standard simulation environments for deformable objects. Most of the existing approaches develop their own environment using a physics-based simulation engine such as Bullet [20] or Mujoco [21]. These engines generally model DLOs with the mass-spring method or the finite element method (FEM). This is the case for [17] and [18] where different DRL agents are trained in customized Mujoco environments. Given the above limitations, these works are among the very few validated in real-world settings. In [17], a sample-efficient reinforcement learning method named PILCO is proposed to close the sim-to-real gap for 2D deformations. In [18], a Soft-Actor-Critic (SAC) algorithm is presented to control 2D deformations of real objects. These contributions are nonetheless limited to 2D deformations for DLOs with no compression strength (i.e., cables, strings, and ropes) [1].\nInstead, our contribution MultiAC6 aims to close the simto-real gap for 3D manipulation of large-strain DLOs, such as elastic tubes. The MultiAC6 action space decomposition is inspired by the multi-agent dialog policy framework proposed in [19]. Within this framework, each component of the action is carried out by a different agent. In [19], this dialog framework was shown to be 11% more accurate than a hierarchical DRL framework and 66% more accurate than a single agent framework."
        },
        {
            "heading": "III. PROBLEM STATEMENT",
            "text": "Let us consider the 3D manipulation of DLOs using a single-arm robot. In this configuration, we assume that a robot grasps one extremity of a DLO. The second extremity of this DLO is fixed to the ground. The DLO is long (> 60 cm) and is assumed to be elastic. An elastic deformation implies that the DLOs return to their original shape once the deformation force is no longer applied [1]. The goal is then to control the pose of the robot gripper to shape the DLO with a desired deformation. The DLO shape is tracked in real-time by a set of feature points defined by their 3D positions (x, y, z). We assume that the feature points can be tracked accurately in real-time with a vision-based algorithm.\nTherefore, the manipulation task consists in moving the gripper so that the DLO feature points reach target positions representing a desired shape (see Figure 2). To achieve a particular deformation, the robot gripper should follow a specific trajectory. Indeed, knowing the gripper final pose is not sufficient to guarantee the achieved deformation accuracy. There is an ambiguity related to the gripper configuration: a unique gripper pose may correspond to very different DLO deformations. Given this background, this work focuses specifically on achieving large deformations for objects with large strains (plants, tubes, etc.). Our approach can generate a suitable trajectory without needing online fine-tuning based on DLO deformation testing [13], [22]. This can help in avoiding damage to the DLO. We quantify the magnitude of a DLO deformation as the maximum among the distances between every feature point\u2019s initial and target position. Using the results in existing works as a criterion (as done in [7]) we define large deformations as those that exceed 15 cm in real-world settings.\nSimilarly to many DRL frameworks, MultiAC6 is trained in a simulator, for safer interaction and shorter training time [23]. Unfortunately, the transfer of trained policies to realworld settings generally does not work well due to the sim-to-real gap [15]. The sim-to-real gap is caused by the difficulty of synthesizing realistic interactions in simulation (due to under-modeling, wrong/approximated parameters, model discrepancies, etc.). For DLOs, the sim-to-real gap cannot be solved using classical sim-to-real transfer techniques which mainly address perception [23]. Simulated DLOs differ significantly from real DLOs. First, mechanical parameters (Young\u2019s modulus, Poisson coefficient, mass, friction, etc.) are only valid for one instance of a DLO. Second, real DLOs may be elastoplastic [1] and partially maintain deformations. Finally, some simulated deformations do not match the real ones for the same action. This is the case for singular positions of DLOs [24], [25], as illustrated in Figure 2. In such a configuration, DLOs are at equilibrium, but unstable in the sense that any slight gripper motion leads\nto unpredictable deformations. This occurs, for example, when a vertical force is exerted on a straight DLO. Such a singularity is rarely addressed in the literature. The authors of [12] acknowledged this singularity as a limitation of their method: the singularity occurs for objects with very small curvature. In the case of analytical methods, the Jacobian matrix is singular and the model becomes unstable. These singular deformations cannot be replicated in simulation. This discrepancy between real and simulated deformations violates the Markovian observability property [26] of the DRL methods. Consequently, the policies learned in simulation are no longer valid in real-world settings.\nAchieving such large DLO deformations in 3D presents multiple challenges. To address these, we propose a new DRL framework, described in the next sections, based on DDPG."
        },
        {
            "heading": "IV. BACKGROUND ON DDPG",
            "text": "The DDPG algorithm is an off-policy actor-critic method used to deal with continuous action spaces [27]. Considering the continuous state space S and action space A, the DDPG agent aims to learn the optimal policy \u03c0\u2217 : S \u2212\u2192 A. The learning process involves the acquisition of a Q-function and a policy [28]. For this purpose, an actor, also known as the policy network, takes the current state st as input and generates the optimal action at as output. Simultaneously, a critic, called the Q-function network, assesses the optimality of the action chosen at in the state st by assigning Q-values Qt(st,at) to the state-action pair (st, at).\nThe actor and critic network are trained from data stored in a replay buffer. This replay buffer is filled with transitions. A transition T is composed of the action at predicted by the actor, the state st, the next state s\u2032t after applying at, and the reward rt obtained for (st, at). Actor and critic networks are trained when the replay buffer contains enough data \u2265 N to extract a batch of non-sequential transitions (see Table I). These transitions are selected randomly to guarantee that the data are independent and identically distributed.\nUtilizing batches and allowing agents to learn from previous experiences accelerates the learning process while removing unwanted temporal correlations [29]. In fact, the critic network aims to minimize the error between the predicted Q-values Q(s,a) and the Q-values calculated using the Bellman equation [30] QB(s,a) = r + \u03b3 \u00d7 Q\u2032(s\u2032,a\u2032), where \u03b3 is the discount factor. More specifically, the critic network is optimized by minimizing the mean square error (MSE) between QB(s,a) and Q(s,a). Given a batch size N sampled from the replay buffer, the critic loss \u2113c becomes:\n\u2113c =\n\u2211N n=1(QBn(sn,an)\u2212Qn(sn,an))2\nN . (1)\nThe actor network predicts actions that maximize the Qvalues. Therefore, the actor network is optimized by minimizing the negative Q-value. The policy loss \u2113p is calculated by averaging Q(s,a) [27]:\n\u2113p = \u2212Q(s,a) = \u2212 \u2211N n=1 Qn(sn,an)\nN . (2)"
        },
        {
            "heading": "V. METHOD",
            "text": ""
        },
        {
            "heading": "A. Action and State Spaces",
            "text": "In the MultiAC6 framework (see Figure 3), the action space of a robot is divided between two agents. Each agent within MultiAC6 is a DDPG agent. In this setup, the goal is to control the gripper pose P . Let us define P = (X,\u03b8) with X = (x, y, z) the position and \u03b8 = (\u03b8x, \u03b8y, \u03b8z) the orientation of the gripper in the world frame. From this notation, let us define a position agent (Agentp) that actuates the gripper translation velocity X\u0307, and an orientation agent (Agento) that actuates the gripper angular velocity \u03b8\u0307. In this framework, the robot deforms a DLO to minimize the error between the current feature points F and the desired feature points Fd. The division of the action space between two agents is also translated into the way the task is performed. First, Agento orients the gripper and then Agentp positions the gripper so that the desired deformation is achieved.\nIn a timestep t and considering the continuous state space S and action space A, the Agentp action a p t \u2208 Ap is X\u0307t \u2208 R3. The Agentp state s p t consists of the current position Xt and the translation velocity X\u0307t of the gripper, and the current and desired feature points. Hence, spt \u2208 Sp is (X, X\u0307,F,Fd)t \u2208 R6+6m, with m the number of selected feature points.\nFor Agento, its action a o t \u2208 Ao is defined as \u03b8\u0307t \u2208 R3. The state of Agento s o t consists of the current gripper orientation \u03b8t, the desired DLO tip orientation \u03b6 = (\u03b6x, \u03b6y, \u03b6z), and the desired feature points. Hence, sot \u2208 So is (\u03b8, \u03b6,Fd)t \u2208 R6+3m. The Agento state is designed in a similar way as many DRL-based manipulation tasks [31], [32], [33] specifying the desired goals in the state vector."
        },
        {
            "heading": "B. MultiAC6 action space decomposition",
            "text": "1) Principle: The proposed action space decomposition provides a straightforward but still efficient way to bridge the sim-to-real gap for DLO manipulation. For this purpose, a specific decoupled training strategy is proposed as follows.\nIn our settings, Agento is trained to achieve a given desired DLO tip orientation \u03b6. This desired orientation \u03b6 is handcrafted (only for training) and is known to lead to the desired DLO deformation. Therefore, this agent is not trained with the simulator. Indeed, the Agento state (\u03b8, \u03b6,Fd) is independent of the DLO deformation represented by the feature points Ft. With the assumption that the DLO tip is locally rigid, the gripper orientation \u03b8t can be obtained by integrating \u03b8\u0307t. It is worth noting that \u03b6 is defined to avoid singular configurations of the DLO. As a direct benefit, the sim-to-real gap can be avoided for Agento. In parallel, from the desired orientation of the DLO tip, Agentp is trained to control the translation velocity of the gripper to deform the DLO into the desired shape. Given that Agentp always starts from a DLO oriented with \u03b6, the sim-to-real gap related to singular DLO configurations can also be avoided.\nEach of the agents is trained separately to avoid error accumulation. This strategy has been used in [32] for a pick-and-place task where it has been proven to outperform a sequential training strategy. Since MultiAC6 agents are trained separately, issues of non-stationary environments [19] are avoided. Such issues occur when both agents update the environment simultaneously. Agentp and Agento would not be able to correctly map states to actions. Therefore, learning an optimal policy would be more challenging.\nWhen both agents are trained, the manipulation task is solved in several steps. First, Agento orients the DLO tip towards \u03b6. Thereafter, Agentp positions the gripper, so that the feature points Ft reach the target points Fd.\n2) Theoretical reasoning: Although DRL approaches usually only control the position of the gripper, it is more intuitive and natural to also actuate the gripper orientation. A 6 DOF-gripper is less restricted and can subsequently achieve more complex deformations than a 3 DOF-gripper. Furthermore, as mentioned previously, singular configurations can be avoided with a proper orientation of the DLO tip. Unfortunately, using more DOFs leads to the well-known curse of dimensionality inherent in DRL approaches: the action space grows exponentially with the number of controlled DOFs. It becomes more difficult to find an optimal policy to achieve the desired DLO deformations. To mitigate this issue, our proposed action space decomposition framework combines the advantages of a 6 DOF control of the gripper with the benefits of a limited action space. Indeed, by decoupling the gripper control over two agents, each of them only explores a limited action space, allowing them to find useful learning signals to achieve their respective task."
        },
        {
            "heading": "C. Optimization framework",
            "text": "1) Learning parallelization: MultiAC6 uses the learning parallelization technique introduced for the A3C (asynchronous advantage actor-critic) algorithm [34]. The principle is to run multiple agents simultaneously in parallel on different environments. With this approach, more data can be collected for a given time period. For off-policy algorithms such as DDPG, the replay buffer is filled faster. Furthermore, since agent environments and actions are not\ncorrelated, transitions containing more diverse state-action pairs can be collected in the replay buffer. Therefore, learning parallelization decreases training time while yielding better results, as shown in [15].\n2) Reward function: The reward function controls the optimization of the agent action selection policy [35]. For Agentp, the reward function r p 1 t is defined as the maximum error. rp1 t is computed as the negative of the maximum Euclidean distance Dt between the current feature points and the desired feature points:\nrp1 t = \u2212max(Dt(Ft,Fd)). (3)\nFor Agento, the reward function r o t is defined as the rootmean-square error (RMSE) between the current Euler orientation (roll, pitch, yaw angles) of the gripper and the desired DLO tip orientation:\nrot = \u2212RMSE(\u03b8t, \u03b6). (4)"
        },
        {
            "heading": "VI. EXPERIMENTS",
            "text": ""
        },
        {
            "heading": "A. Simulation setup",
            "text": "1) Environment configuration: As mentioned in previous sections, a simulator is required to train the DDPG agents. For this purpose, PyBullet, the Python version of Bullet [36], was used as the simulator physics engine. The simulated environment consisted of a 7-DOF Franka Emika Panda robot and a DLO of dimension 5x5x103 cm3. The DLO deformations were modeled using FEM. A unique DLO model was defined with a 3D tetrahedral mesh comprising 70 nodes, 104 tetrahedrons, 241 links and 136 faces. This DLO was characterized by a Young\u2019s modulus of 2.5 MPa, a Poisson coefficient of 0.3, a mass of 0.2 Kg, a damping ratio of 0.01, and a friction coefficient of 0.5. In the simulator, the current feature points Ft and the desired feature points Fd were defined using the positions of some mesh nodes. Four mesh nodes (m = 4) were selected all along the DLO (cf. Figure 2). This number is enough to characterize the DLO shape and works well in practice [15].\n2) Datasets: Three datasets of deformations were created to evaluate MultiAC6. Each of these datasets was collected in workspaces of different dimensions, as illustrated in Figure 2. The workspaces are defined as follows:\n\u2022 A small 15x40x25 cm3 workspace which is used to collect both the training/seen test dataset. \u2022 A medium 20x50x25 cm3 workspace which is used to collect the unseen test dataset. \u2022 A large 20x65x30 cm3 workspace which is used to collect the large unseen test dataset.\nEach dataset contained 1000 deformations defined by Fd and \u03b6. The unseen datasets were excluded from the training phase to assess how well MultiAC6 could handle unseen samples. It\nis worth noting that the large unseen dataset corresponded to the full robot workspace. Deformations are collected within each workspace by moving the gripper to a random pose."
        },
        {
            "heading": "B. Training configuration",
            "text": "1) DDPG parameters: The DDPG parameters were obtained empirically (see Table I). The actor and critic networks consisted of three fully connected hidden layers of dimension 256 with a rectified linear unit (ReLU) activation function. The actor output at was passed through a Tanh activation function. For exploration purposes, Ornstein-Uhlenbeck noise was added to the action at, as described in [27]. The network gradients were updated with the ADAM optimizer. The learning rate was set to \u03b1A = 0.0001 for the actor and \u03b1C = 0.001 for the critic. A batch size of N = 128 transitions was randomly sampled from a 50000-size replay buffer. Finally, the discount factor was set to a constant value (\u03b3 = 0.99).\n2) Training parameters: Agentp was trained with 32 parallel agents for 100 episodes of 300 steps. In this configuration, a manipulation task was considered successful when the maximum error (as defined in Section V-C.2) was below a threshold \u03b4p set at 5 cm. This threshold is generally sufficient for applications such as manipulating plants. From this, we could define the success rate (SR). Similarly, for Agento, 32 agents were trained in parallel for 60 episodes of 100 steps. The training dataset was used to sample the desired mesh nodes Fd. The angular error threshold \u03b4o was set to 3\u00b0 (or 0.0524 rad). Both Agentp and Agento were trained on supercomputers with 64 GB memory and Intel Xeon E5-2698 v4 2.20 GHz processors at the UCA University Mesocentre. The average training time was two and a half days, mainly due to the slowness of the FEM computation. The training\ntime can be reduced by using more powerful computers or optimized simulators such as Isaac Gym [37]."
        },
        {
            "heading": "C. Simulation results",
            "text": "Several experiments were conducted in simulation to (i) assess the performance of the Agentp reward function, and (ii) evaluate the MultiAC6 framework. All results were obtained for 1000 desired random goals sampled from the seen, unseen, and large unseen datasets. Several evaluation metrics were used, which are SR, average error (AE), and minimum final error (ME).\n1) Reward function evaluation: A first evaluation consisted in assessing the performance of our proposed reward function. For this purpose, the maximum error reward function was compared to a mean error and a dynamic time warping (DTW) reward function [38]. The DTW reward computes the similarity between two point sets (DLO feature points). The mean error reward function was calculated as the negative average Euclidean distance Dt between the current feature points Ft and the desired feature points Fd:\nrp2 t = \u2212Dt(Ft,Fd) = \u2212 \u2211m j=1 Dt(Ftj ,Fdj )\nm . (5)\nThe DTW reward function was used for measuring the similarity between the current feature points Ft and the desired feature points Fd:\nrp3 t = \u2212DTW(Ft,Fd) = \u2212 m\u2211 j=1 Dt(Ftj ,Fdj ). (6)\nTo capture only the effect of the reward functions, only Agentp was evaluated with the initial hand-crafted DLO tip orientation. This framework was denoted MultiAC6\u2217. As shown in Table II, the maximum error reward function performed overall well. With 80 episodes, our proposed reward function always performed the best with large differences in success rates compared to the DTW or the mean error reward. With 100 training episodes, 89% of the deformations were successfully performed under the most challenging condition (large unseen with \u03b4p = 3 cm) for the maximum error reward. In comparison, the mean error reward function had a success rate of 79% while the DTW reward function only achieved 33%. These results with 80 or 100 training episodes support the superiority of our proposed reward. We believe that the maximum error reward performs better because it does not smooth the error as with the mean error reward. Furthermore, this reward is easier to maximize than the DTW error reward. For the following experiments, a maximum error reward was used with 100 training episodes.\n2) MultiAC6 evaluation: The MultiAC6 framework was then compared with different approaches. In particular, MultiAC6 was compared with single-agent frameworks for controlling the 6 DOF (AC6) or 3 DOF (AC3 [15]) of the robot gripper. AC6 is a single-agent framework that directly outputs both translation and angular velocities. AC3 and AC6 were trained for 100 episodes of 300 steps under the same conditions and with the same parameters as MultiAC6. As shown in Table III, AC3 performed poorly even with seen deformations. As initially assumed, controlling 3 DOF is not sufficient to achieve large 3D deformations. Differently, AC6 performed well only with seen deformations. The success rate dropped drastically for unseen datasets (down to 39%). This suggests that AC6 may not be able to perform well in real-world conditions. In contrast, our MultiAC6 framework achieved at least 89% deformations even under the most challenging conditions (see Figure 4). These results, which are consistent with [19], confirm the benefit of using the action space decomposition. Indeed, with MultiAC6, agents explore smaller state-action spaces than single-agent frameworks.\nFurthermore, on average, deformations are achieved with an accuracy between 2 and 3 cm. This accuracy can reach in the best-case scenarios 0.51 cm. These results obtained with datasets involving unseen deformations demonstrate the robustness of the MultiAC6 framework."
        },
        {
            "heading": "D. Experimental results",
            "text": "For real-world experiments, we used a 7-DOF Franka Emika Panda robot to manipulate a long foam bar as illustrated in Figure 4(a). Feature points Ft on the foam bar were defined by markers. These markers were tracked in real-time with a motion capture (MOCAP) system. For all experiments, the threshold \u03b4p was set to 5 cm for Agentp and \u03b4o was 3\u00b0 for Agento.\n1) MultiAC6 real-world evaluation: The experimental results are presented in Table IV. These results were obtained using 30 samples of reachable desired deformations. The success rate of AC3 and AC6 was 7/30 and 9/30, respectively. In contrast, MultiAC6 achieved 29/30 (+66% compared to AC6) deformations with an average error of 3.65 cm. As hypothesized from the simulation results, AC6 was not able to overcome the sim-to-real gap. By analyzing the results, we discovered that AC6 was heavily affected by the elastoplasticity of the foam bar (different from the initial elasticity assumption) as well as singular configurations. On the contrary, MultiAC6 was able to avoid singular configurations thanks to the decoupled training framework of Agentp and Agento (see Section V-B). With the additional benefit of\nthe action space decomposition, MultiAC6 policies are more efficient and thus transferable to real-world settings.\n2) MultiAC6 robustness: To test further the robustness of our approach, MultiAC6 was evaluated on seven foam bars (see Figure 5) with different characteristics. These characteristics involved different lengths, materials, and stiffness, as presented in Table V. We believe that these characteristics are relevant to capture MultiAC6 robustness to significantly different DLOs. The foam bars made of materials M1 to M4 were cubical (section = 5x5 cm2). The foam bar made of M5 was cylindrical (diameter = 6.5 cm). The results in Table V were obtained from 17 samples of reachable desired deformations. The same MultiAC6 model as in Section VID.1 was used without additional training or online finetuning. MultiAC6 achieved 95% of all deformations with very different types of foam bars. This result emphasizes the flexibility of our approach, which is particularly suitable for real-world applications (see Figure 6). We hypothesize that\nMultiAC6 can generalize well to different workspaces and materials, as agents mainly learn the dynamics of any DLO, and not the model of the DLO manipulated in simulation. Furthermore, Table IV results showed that MultiAC6 was able to achieve large deformations (26 cm on average). Some configurations even exceeded 40 cm."
        },
        {
            "heading": "E. Discussion",
            "text": "The simulation and experimental results clearly emphasize the benefits of actuating the 6 DOF of a gripper. These results suggest that controlling the gripper orientation is necessary, but not sufficient, to close the sim-to-real gap. By exploiting the gripper orientation within the MultiAC6 framework, the robot can achieve, with the same model, complex deformations for various DLOs. To do so, the desired orientation of the DLO tip \u03b6 is required to define the state of Agento. This \u03b6 can be obtained empirically without the dynamic model of the DLO. We acknowledge that this may be impractical for real-world deployment. This limitation could be related to many methods that require online fine-tuning [7], [3], [13]. However, during our experiments, we noticed that MultiAC6 could accommodate coarse values of \u03b6 to achieve the desired DLO deformation. Taking advantage of the robustness of MultiAC6, the same orientation \u03b6 can be transferred to different DLOs without affecting real-world performance. Furthermore, these orientations \u03b6 can be defined in advance without accurate measurements (see Figure 7). Therefore, we believe that our approach may be less restrictive than online fine-tuning. Further limitations of MultiAC6 are related to\ndiscrete actuation peculiar to DRL. Discrete actuation can induce jerky motion and delays. Fortunately, these can be mitigated with longer time steps and interpolated velocities."
        },
        {
            "heading": "VII. CONCLUSION",
            "text": "This article introduced MultiAC6, a new multi Actor-Critic framework to control large 3D deformations of DLOs with a single-arm robot. MultiAC6 decomposes the action space of a robot on different agents: one agent controls the gripper position and another controls the gripper orientation. The learning process is then simplified, since both the action and the state spaces are reduced. MultiAC6 was validated through extensive experiments in simulation and in the real world. The results proved that MultiAC6 can perform large deformations of up to 40 cm in a real setup. Furthermore, MultiAC6 is able to handle several types of DLO without retraining or online fine-tuning. We validated the robustness of MultiAC6 in real experiments using various unknown DLOs with an average success rate of 95%. In the future, we wish to develop new DRL frameworks to test MultiAC6 on other soft objects than DLOs and make new comparisons."
        },
        {
            "heading": "ACKNOWLEDGMENT",
            "text": "This work is funded by the EU Horizon 2020 research and innovation programme under grant agreement No 101017284 (Project \u2018ACROBA\u2019) and by the French government through the France 2030 programme IdEx universite\u0301 de Bordeaux / RRI ROBSYS.\nREFERENCES\n[1] J. Sanchez, J. Corrales, et al., \u201cRobotic manipulation and sensing of deformable objects in domestic and industrial applications: A survey,\u201d IJRR, vol. 37, no. 7, pp. 688\u2013716, 2018. [2] J. Zhu, B. Navarro, et al., \u201cDual-arm robotic manipulation of flexible cables,\u201d in IEEE/RSJ IROS, pp. 479\u2013484, 2018. [3] R. Lagneau, A. Krupa, and M. Marchal, \u201cAutomatic shape control of deformable wires based on model-free visual servoing,\u201d IEEE RA-L, vol. 5, no. 4, pp. 5252\u20135259, 2020. [4] P. Mitrano, D. McConachie, and D. Berenson, \u201cLearning where to trust unreliable models in an unstructured world for deformable object manipulation,\u201d Science Robotics, vol. 6, no. 54, p. eabd8170, 2021. [5] T. Botterill, S. Paulin, et al., \u201cA robot system for pruning grape vines,\u201d Journal of Field Robotics, vol. 34, no. 6, pp. 1100\u20131122, 2017. [6] O. Aghajanzadeh, M. Aranda, et al., \u201cAdaptive Deformation Control for Elastic Linear Objects,\u201d Frontiers in Robotics and AI, vol. 9, pp. 1\u2013 13, 2022. [7] M. Yu, K. Lv, et al., \u201cGlobal model learning for large deformation control of elastic deformable linear objects: An efficient and adaptive approach,\u201d IEEE T-RO, vol. 39, no. 1, pp. 417\u2013436, 2023. [8] J. Zhu, A. Cherubini, et al., \u201cChallenges and outlook in robotic manipulation of deformable objects,\u201d IEEE RAM, vol. 29, no. 3, pp. 67\u201377, 2022.\n[9] O. Aghajanzadeh, M. Aranda, G. Lo\u0301pez-Nicola\u0301s, R. Lenain, and Y. Mezouar, \u201cAn offline geometric model for controlling the shape of elastic linear objects,\u201d in IEEE/RSJ IROS, pp. 2175\u20132181, 2022. [10] N. Lv, J. Liu, and Y. Jia, \u201cDynamic modeling and control of deformable linear objects for single-arm and dual-arm robot manipulations,\u201d IEEE T-RO, vol. 38, no. 4, pp. 2341\u20132353, 2022. [11] S. Jin, C. Wang, and M. Tomizuka, \u201cRobust deformation model approximation for robotic cable manipulation,\u201d in IEEE/RSJ IROS, pp. 6586\u20136593, 2019. [12] D. Navarro-Alarcon, H. M. Yip, et al., \u201cAutomatic 3-D manipulation of soft objects by robotic arms with an adaptive deformation model,\u201d IEEE T-RO, vol. 32, no. 2, pp. 429\u2013441, 2016. [13] M. Shetab-Bushehri, M. Aranda, et al., \u201cLattice-based shape tracking and servoing of elastic objects,\u201d IEEE T-RO, pp. 1\u201318, 2023. [14] R. Laezza and Y. Karayiannidis, \u201cLearning shape control of elastoplastic deformable linear objects,\u201d in IEEE ICRA, pp. 4438\u20134444, 2021. [15] M. H. Daniel Zakaria, M. Aranda, et al., \u201cRobotic Control of the Deformation of Soft Linear Objects Using Deep Reinforcement Learning,\u201d in IEEE CASE, pp. 1516\u20131522, 2022. [16] L. Pecyna, S. Dong, and S. Luo, \u201cVisual-tactile multimodality for following deformable linear objects using reinforcement learning,\u201d in IEEE/RSJ IROS, pp. 3987\u20133994, 2022. [17] H. Han, G. Paul, and T. Matsubara, \u201cModel-based reinforcement learning approach for deformable linear object manipulation,\u201d in IEEE CASE, pp. 750\u2013755, 2017. [18] Y. Wu, W. Yan, et al., \u201cLearning to manipulate deformable objects without demonstrations,\u201d in Robotics: Science and Systems, 2020. [19] H. Wang and K. Wong, \u201cA collaborative multi-agent reinforcement learning framework for dialog action decomposition,\u201d in EMNLP, pp. 7882\u20137889, 2021. [20] D. Seita, P. Florence, et al., \u201cLearning to rearrange deformable cables, fabrics, and bags with goal-conditioned transporter networks,\u201d in IEEE ICRA, pp. 4568\u20134575, 2021. [21] S. Chen, Y. Liu, et al., \u201cDiffsrl: Learning dynamical state representation for deformable object manipulation with differentiable simulation,\u201d IEEE RA-L, vol. 7, no. 4, pp. 9533\u20139540, 2022. [22] C. Chi, B. Burchfiel, et al., \u201cIterative residual policy for goalconditioned dynamic manipulation of deformable objects,\u201d in Robotics: Science and Systems XVIII, 2022. [23] W. Zhao, J. P. Queralta, and T. Westerlund, \u201cSim-to-real transfer in deep reinforcement learning for robotics: A survey,\u201d in IEEE SSCI, pp. 737\u2013744, 2020. [24] T. Bretl and Z. McCarthy, \u201cQuasi-static manipulation of a Kirchhoff elastic rod based on a geometric analysis of equilibrium configurations,\u201d IJRR, vol. 33, no. 1, pp. 48\u201368, 2014. [25] A. Borum, D. Matthews, and T. Bretl, \u201cState estimation and tracking of deforming planar elastic rods,\u201d in IEEE ICRA, pp. 4127\u20134132, 2014. [26] R. S. Sutton and A. G. Barto, Reinforcement learning - an introduction. Adaptive computation and machine learning, MIT Press, 1998. [27] T. P. Lillicrap, J. J. Hunt, et al., \u201cContinuous control with deep reinforcement learning,\u201d in ICLR, 2016. [28] R. Jangir, G. Alenya\u0300, and C. Torras, \u201cDynamic cloth manipulation with deep reinforcement learning,\u201d in IEEE ICRA, pp. 4630\u20134636, 2020. [29] R. Liu and J. Zou, \u201cThe effects of memory replay in reinforcement learning,\u201d in IEEE Allerton, pp. 478\u2013485, 2018. [30] O. Nachum, M. Norouzi, et al., \u201cBridging the gap between value and policy based reinforcement learning,\u201d in NeurIPS, pp. 2775\u20132785, 2017. [31] Y. Li, C. Pan, et al., \u201cEfficient bimanual handover and rearrangement via symmetry-aware actor-critic learning,\u201d in IEEE ICRA, pp. 3867\u2013 3874, 2023. [32] L. Marzari, A. Pore, et al., \u201cTowards hierarchical task decomposition using deep reinforcement learning for pick and place subtasks,\u201d in IEEE ICAR, pp. 640\u2013645, 2021. [33] L. Chen, Z. Jiang, et al., \u201cDeep reinforcement learning based trajectory planning under uncertain constraints,\u201d Frontiers Neurorobotics, vol. 16, p. 883562, 2022. [34] V. Mnih, A. P. Badia, et al., \u201cAsynchronous methods for deep reinforcement learning,\u201d in ICML, vol. 48, pp. 1928\u20131937, 2016. [35] M. H. Daniel Zakaria, S. Lengagne, J. A. C. Ramo\u0301n, and Y. Mezouar, \u201cGeneral framework for the optimization of the human-robot collaboration decision-making process through the ability to change performance metrics,\u201d Frontiers in Robotics and AI, vol. 8, 2021.\n[36] E. Coumans and Y. Bai, \u201cPybullet, a python module for physics simulation for games, robotics and machine learning.\u201d http:// pybullet.org, 2016\u20132021. [37] V. Makoviychuk, L. Wawrzyniak, et al., \u201cIsaac Gym: High Performance GPU Based Physics Simulation For Robot Learning,\u201d in NeurIPS, 2021. [38] D. J. Berndt and J. Clifford, \u201cUsing dynamic time warping to find patterns in time series,\u201d in Knowledge Discovery in Databases: Papers from the 1994 AAAI Workshop. Technical Report WS-94-03, pp. 359\u2013 370, AAAI Press, 1994."
        }
    ],
    "title": "Multi Actor-Critic DDPG for Robot Action Space Decomposition: A Framework to Control Large 3D Deformation of Soft Linear Objects",
    "year": 2023
}