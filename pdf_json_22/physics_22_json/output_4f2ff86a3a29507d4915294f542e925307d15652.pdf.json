{
    "abstractText": "Saeed Osat, Fragkiskos Papadopoulos, Andreia Sofia Teixeira, and Filippo Radicchi Max Planck Institute for Dynamics and Self-Organization (MPIDS), 37077 G\u00f6ttingen, Germany Department of Electrical Engineering, Computer Engineering and Informatics, Cyprus University of Technology, 33 Saripolou Street, 3036 Limassol, Cyprus LASIGE, Departamento de Inform\u00e1tica, Faculdade de Ci\u00eancias, Universidade de Lisboa, 1749-016 Lisboa, Portugal Center for Complex Networks and Systems Research, Luddy School of Informatics, Computing, and Engineering, Indiana University, Bloomington, Indiana 47408, USA",
    "authors": [
        {
            "affiliations": [],
            "name": "Saeed Osat"
        },
        {
            "affiliations": [],
            "name": "Fragkiskos Papadopoulos"
        },
        {
            "affiliations": [],
            "name": "Andreia Sofia Teixeira"
        },
        {
            "affiliations": [],
            "name": "Filippo Radicchi"
        }
    ],
    "id": "SP:91a9f346a8d00cfdc7deb9e790064810791497dd",
    "references": [
        {
            "authors": [
                "Amnon Aharony",
                "Dietrich Stauffer"
            ],
            "title": "Introduction to percolation theory",
            "venue": "(Taylor & Francis,",
            "year": 2003
        },
        {
            "authors": [
                "Scott Kirkpatrick"
            ],
            "title": "Percolation and conduction",
            "venue": "Reviews of modern physics 45, 574 (1973).",
            "year": 1973
        },
        {
            "authors": [
                "R\u00e9ka Albert",
                "Albert-L\u00e1szl\u00f3 Barab\u00e1si"
            ],
            "title": "Statistical mechanics of complex networks",
            "venue": "Reviews of modern physics 74, 47 (2002).",
            "year": 2002
        },
        {
            "authors": [
                "Ming Li",
                "Run-Ran Liu",
                "Linyuan L\u00fc",
                "Mao-Bin Hu",
                "Shuqi Xu",
                "Yi-Cheng Zhang"
            ],
            "title": "Percolation on complex networks: Theory and application",
            "venue": "Physics Reports 907, 1\u201368 (2021).",
            "year": 2021
        },
        {
            "authors": [
                "Reuven Cohen",
                "Keren Erez",
                "Daniel Ben-Avraham",
                "Shlomo Havlin"
            ],
            "title": "Breakdown of the internet under intentional attack",
            "venue": "Physical review letters 86, 3682 (2001).",
            "year": 2001
        },
        {
            "authors": [
                "Peter Grassberger"
            ],
            "title": "On the critical behavior of the general epidemic process and dynamical percolation",
            "venue": "Mathematical Biosciences 63, 157\u2013172 (1983).",
            "year": 1983
        },
        {
            "authors": [
                "Romualdo Pastor-Satorras",
                "Claudio Castellano",
                "Piet Van Mieghem",
                "Alessandro Vespignani"
            ],
            "title": "Epidemic processes in complex networks",
            "venue": "Reviews of modern physics 87, 925 (2015).",
            "year": 2015
        },
        {
            "authors": [
                "Reuven Cohen",
                "Shlomo Havlin",
                "Daniel Ben- Avraham"
            ],
            "title": "Efficient immunization strategies for computer networks and populations",
            "venue": "Physical review letters 91, 247901 (2003).",
            "year": 2003
        },
        {
            "authors": [
                "Sergey N Dorogovtsev",
                "Alexander V Goltsev",
                "Jos\u00e9 FF Mendes"
            ],
            "title": "Critical phenomena in complex networks",
            "venue": "Reviews of Modern Physics 80, 1275 (2008).",
            "year": 2008
        },
        {
            "authors": [
                "Reuven Cohen",
                "Keren Erez",
                "Daniel Ben-Avraham",
                "Shlomo Havlin"
            ],
            "title": "Resilience of the internet to random breakdowns",
            "venue": "Physical review letters 85, 4626 (2000).",
            "year": 2000
        },
        {
            "authors": [
                "Mark EJ Newman",
                "Steven H Strogatz",
                "Duncan J Watts"
            ],
            "title": "Random graphs with arbitrary degree distributions and their applications",
            "venue": "Physical review E 64, 026118 (2001).",
            "year": 2001
        },
        {
            "authors": [
                "R\u00e9ka Albert",
                "Hawoong Jeong",
                "Albert-L\u00e1szl\u00f3 Barab\u00e1si"
            ],
            "title": "Error and attack tolerance of complex networks",
            "venue": "Nature 406, 378\u2013382 (2000).",
            "year": 2000
        },
        {
            "authors": [
                "Duncan S. Callaway",
                "M.E.J. Newman",
                "Steven H. Strogatz",
                "Duncan J. Watts"
            ],
            "title": "Network robustness and fragility: Percolation on random graphs",
            "venue": "Phys. Rev. Lett. 85, 5468\u20135471 (2000).",
            "year": 2000
        },
        {
            "authors": [
                "Reuven Cohen",
                "Keren Erez",
                "Daniel ben Avraham",
                "Shlomo Havlin"
            ],
            "title": "Resilience of the internet to random breakdowns",
            "venue": "Phys. Rev. Lett. 85, 4626\u20134628 (2000).",
            "year": 2000
        },
        {
            "authors": [
                "Flaviano Morone",
                "Hern\u00e1n A. Makse"
            ],
            "title": "Influence maximization in complex networks through optimal percolation",
            "venue": "Nature 524, 65\u201368 (2015).",
            "year": 2015
        },
        {
            "authors": [
                "Xiao-Long Ren",
                "Niels Gleinig",
                "Dijana Toli\u0107",
                "Nino Antulov-Fantulin"
            ],
            "title": "Underestimated cost of targeted attacks on complex networks",
            "venue": "Complexity 2018 (2018).",
            "year": 2018
        },
        {
            "authors": [
                "Xiao-Long Ren",
                "Niels Gleinig",
                "Dirk Helbing",
                "Nino Antulov-Fantulin"
            ],
            "title": "Generalized network dismantling",
            "venue": "Proceedings of the National Academy of Sciences 116, 6554\u20136559 (2019), https://www.pnas.org/content/116/14/6554.full.pdf.",
            "year": 2019
        },
        {
            "authors": [
                "Alfredo Braunstein",
                "Luca Dall\u2019Asta",
                "Guilhem Semerjian",
                "Lenka Zdeborov\u00e1"
            ],
            "title": "Network dismantling",
            "venue": "Proceedings of the National Academy of Sciences 113, 12368\u201312373 (2016), https://www.pnas.org/content/113/44/12368.full.pdf.",
            "year": 2016
        },
        {
            "authors": [
                "Rong-Hua Yuan",
                "Fu-Rui Tan",
                "Wen-Zhou Chen",
                "Ming-Yang Zhou"
            ],
            "title": "Fragmenting complex network based on non-backtracking matrix",
            "venue": "Journal of Statistical Mechanics: Theory and Experiment 2021, 033403 (2021).",
            "year": 2021
        },
        {
            "authors": [
                "Sebastian Wandelt",
                "Xiaoqian Sun",
                "Daozhong Feng",
                "Massimiliano Zanin",
                "Shlomo Havlin"
            ],
            "title": "A comparative analysis of approaches to network-dismantling",
            "venue": "Scientific reports 8, 1\u201315 (2018).",
            "year": 2018
        },
        {
            "authors": [
                "Pau Clusella",
                "Peter Grassberger",
                "Francisco J. P\u00e9rez- Reche",
                "Antonio Politi"
            ],
            "title": "Immunization and targeted destruction of networks using explosive percolation",
            "venue": "Phys. Rev. Lett. 117, 208301 (2016).",
            "year": 2016
        },
        {
            "authors": [
                "Lenka Zdeborov\u00e1",
                "Pan Zhang",
                "Hai-Jun Zhou"
            ],
            "title": "Fast and simple decycling and dismantling of networks",
            "venue": "Scientific Reports 6, 37954 (2016).",
            "year": 2016
        },
        {
            "authors": [
                "Liang Tian",
                "Amir Bashan",
                "Da-Ning Shi",
                "Yang-Yu Liu"
            ],
            "title": "Articulation points in complex networks",
            "venue": "Nature communications 8, 1\u20139 (2017).",
            "year": 2017
        },
        {
            "authors": [
                "Changjun Fan",
                "Li Zeng",
                "Yizhou Sun",
                "Yang-Yu Liu"
            ],
            "title": "Finding key players in complex networks through deep reinforcement learning",
            "venue": "Nature Machine Intelligence 2, 317\u2013324 (2020).",
            "year": 2020
        },
        {
            "authors": [
                "Marco Grassia",
                "Manlio De Domenico",
                "Giuseppe Mangioni"
            ],
            "title": "Machine learning dismantling and earlywarning signals of disintegration in complex systems",
            "venue": "Nature communications 12, 5190 (2021).",
            "year": 2021
        },
        {
            "authors": [
                "Sebastian Wandelt",
                "Xing Shi",
                "Xiaoqian Sun",
                "Massimiliano Zanin"
            ],
            "title": "Community detection boosts network dismantling on real-world networks",
            "venue": "IEEE Access 8, 111954\u2013111965 (2020).",
            "year": 2020
        },
        {
            "authors": [
                "M Bellingeri",
                "D Bevacqua",
                "F Scotognella",
                "R Alfieri",
                "D Cassi"
            ],
            "title": "A comparative analysis of link removal strategies in real complex weighted networks",
            "venue": "Scientific reports 10, 1\u201315 (2020).",
            "year": 2020
        },
        {
            "authors": [
                "Andrey Y Lokhov",
                "David Saad"
            ],
            "title": "Optimal deployment of resources for maximizing impact in spreading processes",
            "venue": "Proceedings of the National Academy of Sciences 114, E8138\u2013E8146 (2017).",
            "year": 2017
        },
        {
            "authors": [
                "Rodrigo Aldecoa",
                "Chiara Orsini",
                "Dmitri Krioukov"
            ],
            "title": "Hyperbolic graph generator",
            "venue": "Computer Physics Communications 196, 492\u2013496 (2015).",
            "year": 2015
        },
        {
            "authors": [
                "Andrea Lancichinetti",
                "Santo Fortunato",
                "Filippo Radicchi"
            ],
            "title": "Benchmark graphs for testing community detection algorithms",
            "venue": "Physical Review E 78, 046110 (2008).",
            "year": 2008
        },
        {
            "authors": [
                "G. Gar\u0107\u0131a-P\u00e9rez",
                "A. Allard",
                "M.A. Serrano",
                "M. Bogu\u00f1\u00e1"
            ],
            "title": "Mercator embedding code",
            "venue": "Available: https://github.com/networkgeometry/mercator (2020).",
            "year": 2020
        },
        {
            "authors": [
                "G. Gar\u0107\u0131a-P\u00e9rez",
                "A. Allard",
                "M.A. Serrano",
                "M. Bogu\u00f1\u00e1"
            ],
            "title": "Mercator: uncovering faithful hyperbolic embeddings of complex networks",
            "venue": "New Journal of Physics 21, 10 (2019).",
            "year": 2019
        },
        {
            "authors": [
                "Aditya Grover",
                "Jure Leskovec"
            ],
            "title": "node2vec: Scalable feature learning for networks",
            "venue": "Proceedings of the 22nd ACM SIGKDD international conference on Knowledge discovery and data mining (2016) pp. 855\u2013864.",
            "year": 2016
        },
        {
            "authors": [
                "J\u00e9r\u00f4me Kunegis"
            ],
            "title": "Konect: The koblenz network collection",
            "venue": "Proceedings of the 22nd International Conference on World Wide Web, WWW \u201913 Companion (Association for Computing Machinery, New York, NY, USA, 13 2013) p. 1343\u20131350.",
            "year": 2013
        },
        {
            "authors": [
                "Stuart Lloyd"
            ],
            "title": "Least squares quantization in pcm",
            "venue": "IEEE transactions on information theory 28, 129\u2013137 (1982).",
            "year": 1982
        },
        {
            "authors": [
                "Duncan J Watts",
                "Steven H Strogatz"
            ],
            "title": "Collective dynamics of \u2018small-world\u2019networks",
            "venue": "Nature 393, 440\u2013442 (1998).",
            "year": 1998
        },
        {
            "authors": [
                "Thomas Rolland",
                "Murat Ta\u015fan",
                "Benoit Charloteaux",
                "Samuel J. Pevzner",
                "Quan Zhong",
                "Nidhi Sahni",
                "Song Yi",
                "Irma Lemmens",
                "Celia Fontanillo",
                "Roberto Mosca",
                "Atanas Kamburov",
                "Susan D. Ghiassian",
                "Xinping Yang",
                "Lila Ghamsari",
                "Dawit Balcha",
                "Bridget E. Begg",
                "Pascal Braun",
                "Marc Brehme",
                "Martin P. Broly",
                "Anne-Ruxandra Carvunis",
                "Dan Convery-Zupan",
                "Roser Corominas",
                "Jasmin Coulombe-Huntington",
                "Elizabeth Dann",
                "Matija Dreze",
                "Am\u00e9lie Dricot",
                "Changyu Fan",
                "Eric Franzosa",
                "Fana Gebreab",
                "Bryan J. Gutierrez",
                "Madeleine F. Hardy",
                "Mike Jin",
                "Shuli Kang",
                "Ruth Kiros",
                "Guan Ning Lin",
                "Katja Luck",
                "Andrew MacWilliams",
                "J\u00f6rg Menche",
                "Ryan R. Murray",
                "Alexandre Palagi",
                "Matthew M. Poulin",
                "Xavier Rambout",
                "John Rasla",
                "Patrick Reichert",
                "Viviana Romero",
                "Elien Ruyssinck",
                "Julie M. Sahalie",
                "Annemarie Scholz",
                "Akash A. Shah",
                "Amitabh Sharma",
                "Yun Shen",
                "Kerstin Spirohn",
                "Stanley Tam",
                "Alexander O. Tejeda",
                "Shelly A. Trigg",
                "Jean-Claude Twizere",
                "Kerwin Vega",
                "Jennifer Walsh",
                "Michael E. Cusick",
                "Yu Xia",
                "Albert-L\u00e1szl\u00f3 Barab\u00e1si",
                "Lilia M. Iakoucheva",
                "Patrick Aloy",
                "Javier De Las Rivas",
                "Jan Tavernier",
                "Michael A. Calderwood",
                "David E. Hill",
                "Tong Hao",
                "Frederick P. Roth",
                "Marc Vidal"
            ],
            "title": "A proteome-scale map of the human interactome network",
            "venue": "Cell 159, 1212\u20131226 (2014).",
            "year": 2014
        },
        {
            "authors": [
                "Christian M Schneider",
                "Andr\u00e9 A Moreira",
                "Jos\u00e9 S Andrade",
                "Shlomo Havlin",
                "Hans J Herrmann"
            ],
            "title": "Mitigation of malicious attacks on networks",
            "venue": "Proceedings of the National Academy of Sciences 108, 3838\u20133841 (2011).",
            "year": 2011
        },
        {
            "authors": [
                "Flaviano Morone",
                "Byungjoon Min",
                "Lin Bo",
                "Romain Mari",
                "Hern\u00e1n A Makse"
            ],
            "title": "Collective influence algorithm to find influencers via optimal percolation in massively large social media",
            "venue": "Scientific reports 6, 1\u201311 (2016).",
            "year": 2016
        },
        {
            "authors": [
                "Ki-ichiro Hashimoto"
            ],
            "title": "Zeta functions of finite graphs and representations of p-adic groups",
            "venue": "Automorphic forms and geometry of arithmetic varieties (Elsevier, 1989) pp. 211\u2013280.",
            "year": 1989
        },
        {
            "authors": [
                "Travis Martin",
                "Xiao Zhang",
                "Mark EJ Newman"
            ],
            "title": "Localization and centrality in networks",
            "venue": "Physical review E 90, 052808 (2014).",
            "year": 2014
        },
        {
            "authors": [
                "Raissa M. D\u2019Souza",
                "Jan Nagler"
            ],
            "title": "Anomalous critical and supercritical phenomena in explosive percolation",
            "venue": "Nature Physics 11, 531\u2013538 (2015).",
            "year": 2015
        },
        {
            "authors": [
                "Dmitri Krioukov",
                "Fragkiskos Papadopoulos",
                "Maksim Kitsak",
                "Amin Vahdat",
                "Mari\u00e1n Bogu\u00f1\u00e1"
            ],
            "title": "Hyperbolic geometry of complex networks",
            "venue": "Phys. Rev. E 82, 036106 (2010).",
            "year": 2010
        },
        {
            "authors": [
                "Fragkiskos Papadopoulos",
                "Maksim Kitsak",
                "M. \u00c1ngeles Serrano",
                "Mari\u00e1n Bogu\u00f1\u00e1",
                "Dmitri Krioukov"
            ],
            "title": "Popularity versus similarity in growing networks",
            "venue": "Nature 489, 537\u2013540 (2012).",
            "year": 2012
        },
        {
            "authors": [
                "Alessandro Muscoloni",
                "Josephine Maria Thomas",
                "Sara Ciucci",
                "Ginestra Bianconi",
                "Carlo Vittorio Cannistraci"
            ],
            "title": "Machine learning meets complex networks via coalescent embedding in the hyperbolic space",
            "venue": "Nature Communications 8, 1615 (2017).",
            "year": 2017
        },
        {
            "authors": [
                "Tomas Mikolov",
                "Kai Chen",
                "Greg Corrado",
                "Jeffrey Dean"
            ],
            "title": "Efficient estimation of word representations in vector space",
            "venue": "arXiv preprint arXiv:1301.3781 (2013).",
            "year": 2013
        }
    ],
    "sections": [
        {
            "text": "Embedding-aided network dismantling\nSaeed Osat,1 Fragkiskos Papadopoulos,2 Andreia Sofia Teixeira,3 and Filippo Radicchi4\n1Max Planck Institute for Dynamics and Self-Organization (MPIDS), 37077 Go\u0308ttingen, Germany 2Department of Electrical Engineering, Computer Engineering and Informatics, Cyprus University of Technology, 33 Saripolou Street, 3036 Limassol, Cyprus\n3LASIGE, Departamento de Informa\u0301tica, Faculdade de Cie\u0302ncias, Universidade de Lisboa, 1749-016 Lisboa, Portugal\n4Center for Complex Networks and Systems Research, Luddy School of Informatics, Computing, and Engineering,\nIndiana University, Bloomington, Indiana 47408, USA\nOptimal percolation concerns the identification of the minimum-cost strategy for the destruction of any extensive connected components in a network. Solutions of such a dismantling problem are important for the design of optimal strategies of disease containment based either on immunization or social distancing. Depending on the specific variant of the problem considered, network dismantling is performed via the removal of nodes or edges, and different cost functions are associated to the removal of these microscopic elements. In this paper, we show that network representations in geometric space can be used to solve several variants of the network dismantling problem in a coherent fashion. Once a network is embedded, dismantling is implemented using intuitive geometric strategies. We demonstrate that the approach well suits both Euclidean and hyperbolic network embeddings. Our systematic analysis on synthetic and real networks demonstrates that the performance of embedding-aided techniques is comparable to, if not better than, the one of the best dismantling algorithms currently available on the market.\nI. INTRODUCTION\nPercolation theory aims at describing how the macroscopic connectedness of a network is affected by the removal of some of its microscopic elements [1]. Percolation is among the most studied topics in statistical physics, especially for its relevance in the study of properties of materials, e.g., conductivity and porosity [2]. Since the advent of network science, the number of applications of percolation theory to real-world problems has constantly grown, and the literature on the topic has literally exploded [3, 4].\nIn network science, the primary application of percolation theory is the study of the robustness of networks. The rationale is quite intuitive. Being part of the same connected component is a necessary condition for two nodes to interact, thus large-scale connectedness represents a proxy for overall network function [5]. Percolation allows the quantification of the extent of damage that a network can tolerate before it is no longer able to guarantee such a condition. Percolation theory is useful not only to establish network robustness, but also in other contexts [4]. For example, the long-term behavior of some epidemic processes is well predicted using the percolation framework [6, 7], and strategies for disease containment can be mapped to percolation problems [8].\nPercolation models assume the presence of an underlying network where either nodes (site percolation) or edges (bond percolation) are removed according to some prescribed protocol [9]. Nearest-neighbor non-deleted elements form connected components or clusters. The size of the clusters determines the regime of the network: (i) if only non-extensive clusters are present, then the network is in the non-percolating regime; (ii) if a giant connected\ncomponent (GCC) spans a finite fraction of the network, then the system is in the percolating regime.\nDifferent deletion protocols may be considered, each defining a different percolation model with relevance for a specific problem at hand. In the classical or ordinary model, individual elements are deleted randomly with uniform probability [9\u201311]. Real, heterogeneous networks display great robustness under this deletion protocol, as most of their elements should be removed before large-scale connectedness is lost. In targeted attacks, the protocol prescribes elements to be removed on the basis of network centrality metrics [12\u201314]. In the context of site percolation, the model shows that heterogeneous networks, whose connectedness heavily relies on hubs, can be quickly dismantled by the removal of a small portion of their most central nodes.\nThe spirit of the model for targeted attacks is extremized in the so-called optimal percolation problem which consists in determining the minimum-cost deletion protocol able to bring the network into the non-percolating regime [15]. The problem was originally formulated for site percolation with unit cost of removal, and later generalized to bond percolation [16] and to arbitrary cost functions associated to the removal of microscopic elements [17]. Finding the exact solution to the optimization problem requires testing all possible bipartitions of the microscopic elements of the network in two different sets of structural and non-structural elements. Structural elements are those that, if removed from the network, should fragment the system in non-extensive components. The number of possible bipartitions grows exponentially with the network size, thus the optimization problem is exactly solvable for very small systems only. Good approximate solutions can be achieved via simuar X iv :2 20 8. 01 08\n7v 1\n[ ph\nys ic\ns. so\ncph\n] 1\nA ug\n2 02\n2\n2 lated annealing (SA) optimization [18]. However, the SA algorithm is not scalable. Existing algorithms able to approximate the solution of the problem in an efficient and effective way are based on rather different strategies. Many methods make use of a generic procedure where structural sets are constructed sequentially by adding one element at a time, and those elements are chosen on the basis of some ad-hoc network metric that is updated during the construction of the structural set. Methods of this class are based on collective influence [15, 19], betweenness centrality [20], non-backtracking centrality [18], explosive immunization [21], COREHD [22], and articulation points [23], just to mention a few of them. Another class of recent approaches takes advantage of machine learning methods to perform dismantling [24, 25]. Machines are trained on a huge number of small synthetic networks where the ground-truth solution of the dismantling problem can be obtained via brute-force search; these machines are then used efficiently and effectively to dismantle large-scale real networks. Finally, some methods existing on the market rely on graph embedding. In Refs. [16, 17] for example, nodes are mapped into a one-dimensional space where their coordinates are given by the components of the first non-trivial eigenvector of specifically designed Laplacian operators. In Ref. [26] instead, the map is determined by the community structure of the network, so that nodes are embedded in a space that is not metric. Once the network is embedded in space, then a deletion protocol based on the map is used to construct a solution of the optimal percolation problem.\nMany of the above algorithms focus on the simplest formulation of the problem where dismantling is performed by removing nodes, and the cost of removal is equal to the size of the structural set. Other variants of the problem are considered sporadically. For example, Ref. [16] studies the bond-percolation version of the problem. Other important variants of the problem are those considered by Bellingeri et al. who study optimal site percolation on weighted networks [27], and by Lokhov et al. who focus on optimal strategies of immunization for spreading processes [28].\nIn this paper, we leverage embedding of networks in geometric space to perform efficient network dismantling. We show that the same type of methodology can be used for both Euclidean and hyperbolic embeddings. Furthermore, we demonstrate that the same embedding can be fruitfully used to provide effective solutions to various variants of the optimal percolation problem based on the removal of nodes or edges, and constrained by different cost functions. We systematically apply the proposed methods on a corpus of 50 real-world networks. We find that the performance of embedding-aided dismantling algorithms is comparable to the one of the best methods existing on the market. Further, we apply the methods to synthetic graphs generated according to the H2 model [29] and the Lancichinetti-Fortunato-Radicchi model [30]. Both these models generate networks that\nare embedded in an underlying space; moreover, they are characterized by parameters that allow to tune the strength of the relationship between network structure and imposed embedding. We find that the proposed embedding-aided methods outperform the other dismantling algorithms only when topology and embedding are strongly correlated. Performances of the various methods become comparable when such a relationship is weak."
        },
        {
            "heading": "II. RESULTS",
            "text": ""
        },
        {
            "heading": "A. Geometric approach to network dismantling",
            "text": "The problem we consider in this paper is the identification of the minimum-cost strategy for the destruction of any extensive connected component in unweighted and undirected networks, see Methods section for a formal definition. The destruction is performed by the removal of microscopic elements, either nodes (site percolation) or edges (bond percolation). The optimization problem is constrained by the cost function F (S), which quantifies the cost associated with the removal of the elements of an arbitrary set S. We consider the unit-cost function for both bond and site percolation, and the degree-cost function for the site-percolation problem only.\nExact solutions to the above problem are not feasible due to the exponentially growing number of possible sets that must be considered as possible solutions to the problem. Approximate solutions are obtained via so-called dismantling algorithms. Assuming that there are T total microscopic elements that can be removed from the network, the output of a dismantling algorithm is the sequence of sets S\u03030, S\u03031, . . . , S\u0303T , with S\u0303t\u22121 \u2282 S\u0303t for all t = 1, . . . T . The sequence of sets S\u0303t indicates how to dismantle the network. Clearly, this sequence represents only an approximation of the ground-truth solution of the dismantling problem.\nIn this paper, we introduce a family of dismantling algorithms based on network embedding. The input network is first embedded in geometric space, meaning that each node i of the graph is mapped to a point ~vi in an underlying d-dimensional vector space. The map is used to iteratively create network bipartitions, and the sets S\u0303t are constructed by adding blocks of inter-cluster elements identified at each iteration, see Methods for details.\nThe above geometric recipe has been introduced by Ren et al. and involves the embedding of the graph in one-dimensional space using graph Laplacian operators [16, 17]. Specifically, the sign of the components of the eigenvector associated to the second smallest eigenvalue of Laplacian-like operators are used to create bipartitions. Essentially, the dismantling of the network is approached by solving small-scale minimum-cut problems.\nThe same idea can be generalized to any type of embedding that captures structural similarity among nodes in the graph. Community structure is a way of performing\n3 such a task with a non-metric embedding; community structure has been exploited in the context of network dismantling in Ref. [26]. In this paper, we consider embeddings in vector spaces, either hyperbolic or Euclidean spaces. We employ two popular embedding methods, namely Mercator for hyperbolic embedding [31, 32] and Node2vec for Euclidean embedding [33]. The motivation for going beyond already existing embedding-aided dismantling algorithms is two-fold. First, we believe that the high-dimensionality of the embedding space should allow us to capture additional features compared to the one-dimensional Laplacian embedding. Second, we believe that the geometric nature of the embedding space should allow us to obtain a more nuanced definition of clusters compared to community-structure embeddings.\nIn Fig. 1a, we show an example of the application of the hyperbolic-embedding-aided dismantling algorithm to solve the optimal site-percolation problem with unit cost on the crime network obtained from the projection of the bipartite network of crimes and individuals [34]. A technical description of the algorithm is provided in the Methods section. Here, we just describe it in simple terms to give an intuition of how the method works.\nFirst, we embed the network in hyperbolic space, as shown in Fig. 1b. Then, we split the network in two clusters by slicing the hyperbolic disk in two parts. Each slice of the disk contains the same number of nodes. We note that there are multiple ways to slice the disk, and some of them lead to better solutions to the optimal percolation problem than others. However, we do not observe huge variations in performance depending on how the two slices of the disk are obtained (see Figs. S1 and S2). The actual separation in clusters of the two slices is achieved by removing the smallest number of nodes that lead to such a separation, highlighted in cyan in panel Fig. 1c. Those nodes are added in random order to the structural set to reduce the size of the GCC, see Fig. 1a. We then apply the same operation to each of the resulting clusters, see Figs. 1 d-f. We do not need to re-embed the clusters, rather we can simply re-use the known coordinates of the remaining nodes to cut in half the corresponding slices in the hyperbolic disk, and then remove the minimal number of nodes to split each slice in two disconnected clusters. The entire procedure is iterated over and over, until the network is fully dismantled.\nThe same exact principle can be easily extended to deal with a different embedding. For Euclidean embeddings such as those created by Node2vec for example, the kmeans algorithm [35] with k = 2 is used to determine the bipartitions required by the dismantling protocol, see Methods for details.\nAs described in the Methods section, dismantling the network requires a time that grows slightly more than linearly with the network size. The dismantling recipe, however, assumes that the embedding of the network is given, but such an operation may require a number of computations that grows super-linearly with the network size, thus dominating the actual time complexity of the entire dismantling procedure. This is the case of the hyperbolic-embedding-aided dismantling method where the embedding algorithm requires a time that scales as the square of the network size. Node2vec instead requires a time that grows linearly with the system size, thus the resulting dismantling algorithm scales quasi-linearly with the network size.\nThe above geometric method is easily adapted to any variant of the network dismantling problem. For example, the bond-percolation version is obtained by splitting clusters via link removal instead of node removal. Details of the various algorithms are provided in the Methods section."
        },
        {
            "heading": "B. Performance of geometric dismantling",
            "text": "We compare the performance of our proposed algorithms against those of well-established baselines and top-performing algorithms existing in the market, see Methods for details. A specific example is displayed in Fig. 2. There, various dismantling algorithms are applied to the network representing the topology of the US\npower grid [36]. In the figure, we display how the relative size of the GCC decreases as a function of the cost associated to the removal of microscopic elements from the network. The quicker the decrease is, the better the approximate solution of the specific algorithm at hand is. The area under the percolation curve is named as robustness and is generally used as a metric of performance for dismantling algorithms [38], see Eq. (4). We denote the robustness metric as R. As expected, all algorithms produce approximate solutions that are better than those obtained via random removal (RND). The hyperbolic-embedding-aided dismantling (HYP) outperforms the other algorithms in the three variants of the dismantling problem; the least-performing algorithm is the one based on adaptive degree centrality (HDA).\nAs an additional metric of performance, we also display the cost function of the structural set required to decrease the size of the GCC below the square root of the network size, see Eq. (2). This specific threshold value is just a convention used to determine whether all connected components are not extensive [21]. We refer to this metric as the dismantling cost of the network, and denote it as qc.\nSolutions of the various algorithms can be further improved by a greedy post-processing technique, see Methods for details. The technique was introduced in Ref. [18] for the case of unit-cost site percolation. Here, we generalize it to the various variants of the optimal percolation problem. The technique basically consists in removing from the structural set all unnecessary elements, i.e., those elements that if removed from the set do not lead to the emergence of an extensive GCC. In Fig. 2, we display solutions that have been improved with this technique as single points denoting the value of the dismantling cost that is reached after greedy optimization. All solutions become similar after being greedily optimized, displaying performance that is bounded by RND and simulated annealing (SA) optimization. Please note that the greedy post-processing just minimizes the dismantling cost of the network. The technique is not designed to speedup the actual dismantling, thus it does not necessarily reduce the value of the robustness metric.\nThe curves displayed in Fig. 2 indicate that, before the application of the greedy optimization step, there are variations in performance depending on the specific algorithm and the specific variant of the percolation problem\n5 considered. Variability in performance also depends on the specific type of network considered. In Fig. 3, we repeat the same analysis as in Fig. 2, but on the Proteome network [37]. An apparent change in relative performance among the various methods is visible. For example, the Node2vec-embedding-aided method (N2V) is the least performing method in the site-percolation problem with unit cost (Fig. 3a), while it was among the best in dismantling the US power grid network (Fig. 2a).\nC. Systematic analysis of real-world networks\nWe perform a systematic analysis on a corpus of 50 real-world networks. For each network, we consider the three variants of the optimal percolation problem ( i.e., bond percolation with unit cost, site percolation with unit cost, and site percolation with degree cost), we apply each of the dismantling algorithms considered in this analysis, and measure the performance in terms of the relative dismantling cost qc of Eq. (3) and the robustness metric R of Eq. (4). Detailed results are reported in SM, and summarized in Figs. 4, S3 and S4, and in Table I. Embedding-aided algorithms display performance comparable to the one of the other well-established methods for network dismantling in all variants of the problem. Notably, the methods based on Laplacian Embeddings\n(LE) and N2V excel in all tasks. The solution of each method is refined using the greedy post-processing strategy introduced in Ref. [18]. Whereas the ranking of the various methods based on performance is not much affected by the post-processing technique, the gap in performance between the various methods is narrowed. Essentially, greedy post-processing leads to almost equivalent solutions irrespective of the starting structural set generated by a given method. The only clear exception is RND, which still displays a clear gap with respect to the other methods in spite of the application of the greedy post-processing step. Also, we remark that the greedy post-processing technique always reduces the dismantling cost of the set of structural elements identified by an algorithm. However, such an improvement in the metric is generally accompanied by a loss of performance in terms of robustness, see Fig. S5 for example. The effect is systematic in all variants of the percolation problem, except for site percolation with unit cost."
        },
        {
            "heading": "D. Systematic analysis of synthetic networks",
            "text": "We conclude our analysis by studying the performance of the various dismantling methods on synthetic networks generated according to the hyperbolic H2 model [29] and the Lancichinetti-Fortunato-Radicchi (LFR) model [30]. The use of these models is motivated by their ability to reproduce topological properties that resemble the ones observed in real-world networks, as for example heterogeneous degree distribution, high clustering, and modular structure. Also, these models generate networks that are naturally embedded in some underlying space, either geometric or not, thus allowing us to verify how important this property is for the actual performance of the various dismantling methods.\nSome results are reported in Fig. 5; full results are instead displayed in Figs. S6-S11. For bond percolation with unit cost, the main outcome of our analysis is twofold. First, the performance of all methods decreases as the relationship between network topology and imposed embedding weakens. This fact can be clearly appreciated for the H2 model by monitoring how performance varies with the temperature parameter, and for the LFR model by monitoring how performance changes as a function of the mixing parameter. Second, embedding-aided dismantling methods outperform the other methods. The gap in performance is particularly apparent for networks with homogeneous degree distributions. The above considerations are valid either if performance is measured in terms of dismantling cost or robustness. The gap in performance between centrality-based and embedding-aided methods is not filled even if greedy post-processing is applied to the structural sets.\nFor site percolation with unit or degree cost of removal, we find that centrality-based outperform embeddedaided methods. The gap in performance, however, dis-\nappears once the greedy post-processing technique is applied to the structural sets found by the various methods.\nWe remark that the job of HYP on H2 networks is facilitated by the fact that no embedding is actually learned from the topology, rather ground-truth coordinates of the nodes in the hyperbolic space are used to dismantle the network."
        },
        {
            "heading": "III. CONCLUSIONS",
            "text": "The results of this paper clearly show that embedding a network in geometric space can be used to design simple but effective algorithms to dismantle it. Such geometric dismantling techniques are rather general. They can be adapted to various types of embeddings, and they appear useful in solving different variants of the optimal percolation problem. The proposed techniques are also computationally efficient. Once the network is embedded, dismantling is performed in a time that grows slightly super-linearly with the network size. However, it is important to keep in mind that embedding a network may require a time that grows more than linearly with the system size. For example, embedding a network in the hyperbolic space generally requires a time that grows quadratically with the network size [32]; obtaining a map of the network in Euclidean space with Node2vec requires instead a time that grows linearly with the network size [33]. The performance of embedding-aided dismantling methods is comparable to the one achieved by other methods existing in the market that are based on different heuristics. The general message is that embeddingaided algorithms excel in bond percolation, whereas they are outperformed by centrality-based methods in site percolation. Eventual gaps in performance between the var-\nious dismantling methods are anyway filled by applying the greedy post-processing technique originally proposed in Ref. [18] for site percolation, and here generalized to the other variants of the optimal percolation problem. In essence, optimal performance can be achieved by first applying a sufficiently effective method to dismantle a network, and then reducing the cost of the structural set identified by the algorithm via greedy optimization.\nDue to the similarity in performance between the various algorithms, the use of a computationally efficient method such as Node2vec may be naively preferred over other methods to perform the embedding necessary to geometrically dismantle a network. We stress, however, that computational time is not the only important aspect to consider here. Hyperbolic maps consist of only two coordinates per node, making them particularly suited to provide meaning and intuitive visualizations. The same consideration does not apply to Euclidean embeddings which instead are generally performed for much larger values of the space dimension. Also, popular methods that perform Euclidean embedding often require the calibration of several parameters; this procedure is much less expensive, if not totally absent, in algorithms that embed networks in hyperbolic space."
        },
        {
            "heading": "IV. METHODS",
            "text": ""
        },
        {
            "heading": "A. The optimal percolation problem",
            "text": "We consider an undirected and unweighted network with N nodes. Pairwise interactions among nodes are encoded in the symmetric adjacency matrix A. If an edge exists between nodes i and j, then Aij = 1; Aij = 0 otherwise.\nLarge-scale connectedness of the network is quantified in terms of the fraction of nodes that belong to the giant connected component (GCC) of the network as P\u221e = NGCC N , where NGCC is the number of nodes in the GCC of the network. We indicate with T the set of all microscopic elements, either nodes or edges, of the network; the size of the GCC can be reduced by removing from the network elements belonging to a subset S \u2286 T . We refer to the subset S as the structural subset of the network, and to the elements within the set S as the structural elements of the network. Without loss of generality, we assume that, when all microscopic elements are present, the network is composed of a single connected component. In other words, if the set of structural elements is empty, i.e., S = \u2205, then P\u221e(\u2205) = 1. The removal of microscopic elements from a non-empty set S from the network causes a reduction of the GCC, i.e., P\u221e(S) \u2264 1. Clearly, the removal of all microscopic elements leads to the smallest size of the GCC, i.e., P\u221e(T ) = 0 for site percolation and P\u221e(T ) = 1/N for bond percolation.\nOptimal percolation can be seen as the constrained minimization problem\nS\u2217(C) = arg min S|F (S)=C P\u221e(S) . (1)\nThe constraint is imposed on the value of the cost func-\ntion F (S) of removing elements of the set S from the network. In the original formulation of the problem by Morone and Makse, the cost associated to the set S is identical to the size of the set, i.e., F (S) = |S| [15]. However, an arbitrary cost can be associated to the set in the so-called generalized dismantling problem framed by Ren et al. [17]. To be a meaningful cost function, we only require that F (S) \u2265 0 for all sets S, and F (S\u222a{s}) \u2265 F (S) for every set S and any microscopic network element s. It also natural to assume that F (\u2205) = 0.\nIn this paper, we consider three main formulations of the optimal percolation problem: (i) unit-cost optimal site percolation, (ii) optimal site percolation with degree cost, and (iii) unit-cost optimal bond percolation. In formulations (i) and (ii), network dismantling is performed via the removal of nodes; in (iii), network dismantling is performed via the removal of edges. In the unit-cost version of the problem, the cost function associated to the set S equals its size, i.e., F (S) = |S|. The degree-cost function of variant (ii) is defined as F (S) = \u2211 s\u2208S ks \u2212 \u2211 s,t\u2208S Ast, where ks is the degree of node s, the sums run over all nodes in the set S, and edges shared by nodes within the set S are counted only once.\nAn important aspect in the characterization of the op-\n8 timization problem is the identification of the minimumcost set able to lead to the disappearance of a macroscopic GCC [15]. Such a condition is defined in the problem\nSc = arg min S|P\u221e(S)\u22641/ \u221a N F (S) . (2)\nEssentially, only sets S that are able to reduce P\u221e below the conventional threshold value 1/ \u221a N are considered as potential solutions to the problem [21]."
        },
        {
            "heading": "B. Approximate solutions of the optimal percolation problem",
            "text": "The optimal percolation problem of Eq. (1) is NP hard [15]. For example, in the optimal site percolation with unit cost, the exact solution of the problem requires to test all possible ( N |S| ) sets that can be composed by choosing |S| nodes out of the N total nodes in the network.\nExact solutions of the optimization problem can be obtained only for extremely small networks. However, many algorithms able to approximate solutions to the optimal percolation problem have been proposed. Some of these algorithms are described below. Without loss of generality, we indicate with S\u0303\u2217 an approximate solution to the problem of Eq. (1) obtained by a generic algorithm. Similarly, we use the notation S\u0303c to denote an approximate solution to the problem of Eq. (2).\nMany optimization algorithms construct approximate solutions to the optimal percolation problem sequentially, meaning that the set corresponding to the proposed solution is built by adding one element at time. We indicate with S\u0303t the approximate solution of a generic sequential algorithm when the set is composed of exactly t elements, i.e., |S\u0303t| = t. If there are T total microscopic elements in the network, i.e., |T | = T , the sequential algorithm generates T + 1 total sets, i.e., S\u03030, S\u03031, . . . , S\u0303T , with S\u0303t\u22121 \u2282 S\u0303t for all t = 1, . . . T . By definition, S\u03030 = \u2205 and S\u0303T = T . We clearly have that P\u221e(S\u0303t\u22121) \u2265 P\u221e(S\u0303t) and F (S\u0303t) \u2265 F (S\u0303t\u22121) for all t = 1, . . . , T . Note that at stage t, the GCC of the network is evaluated by removing all elements in the set S\u0303t\u22121, and only nodes that belong to the current GCC are considered as possible candidates to be added to the structural set S\u0303t."
        },
        {
            "heading": "C. Evaluating approximate solutions of the optimal percolation problem",
            "text": "A possible metric to evaluate the performance of an approximate algorithm to solve the problem of Eq. (2) is immediately given by the value of the cost function F (S\u0303c), with S\u0303c the approximate solution provided by the algorithm. Low F (S\u0303c) values indicate a good ability of the algorithm in finding solutions of the optimal percolation model. Specifically, to make the metric comparable\nacross networks and/or variants of the optimal percolation problem, we define the dismantling cost as\nqc = F (S\u0303c) F (T ) . (3)\nHere, F (T ) is the cost associated to the removal of all elements from the graph.\nIf the algorithm under scrutiny works sequentially by adding to the set of its proposed solution one element at time, then the quality of the approximate solution of the algorithm can be also quantified by\nR = 1\nF (T ) T\u2211 t=1 P\u221e(S\u0303t) [ F (S\u0303t)\u2212 F (S\u0303t\u22121) ] . (4)\nR is a generalization of the the so-called robustness metric introduced by Schneider et al. [38]. By definition 0 \u2264 R \u2264 1. Low R values are associated to good performance of the dismantling protocol; large R values indicate instead poor performance of the dismantling algorithm. The sum appearing in the definition of R is nothing more than the area under the curve P\u221e(S\u0303t) vs. t. The area is properly rescaled depending on the cost function associated to the dismantling problem. Specifically, the contribution of the element added at the t-th stage of the sequential algorithm is proportional to its cost, i.e., F (S\u0303t) \u2212 F (S\u0303t\u22121), and to the GCC size obtained from the removal of that set of elements from the network, i.e., P\u221e(S\u0303t). In the standard formulation of the optimal site-percolation problem with unit cost of removal, we recover the original formulation of the metric by Schneider\net al., i.e., R = 1N \u2211N t=1 P\u221e(S\u0303t) [38]. For computational reasons, in our analysis, we approximate R by summing only the first Tc contributions such that P\u221e(S\u0303t) \u2265 1/ \u221a N for t = 0, . . . , Tc. We are basically including only extensive GCCs; this represents a very good approximation for Eq. (4)."
        },
        {
            "heading": "D. Algorithms to approximate solutions to the optimal percolation problem",
            "text": "Many of the algorithms existing in the market are designed to approximate solutions of the optimal sitepercolation problem with unit cost of removal. We consider several of them in our analysis. We apply these algorithms without modifications also in the degree-cost version of site percolation problem. Whenever possible, we generalize these algorithms to deal also with the optimal bond-percolation problem with unit cost of removal. We consider three main classes of algorithms, namely (i) baseline, (ii) centrality-based, and (iii) embedding-aided algorithms.\n9"
        },
        {
            "heading": "Baseline dismantling algorithms",
            "text": "The two algorithms described below represent natural terms of comparisons for generic dismantling algorithms.\nRandom percolation (RND). To generate a baseline solution to the optimal percolation problem, we order the elements of the network randomly. These elements are added sequentially to form the structural sets S\u0303t, for t = 0, . . . , T . RND provides a lower bound of performance in the sense that any dismantling algorithm should work at least as good as RND.\nSimulated annealing (SA). The algorithm was first introduced in Ref. [18] to deal with optimal site percolation with unit cost. We generalize it to the other variants of the optimal percolation problem. SA is used to find solutions of the problem of Eq. (2) only. The set S\u0303c is obtained by first defining a energy-like function, and then applying standard SA optimization to minimize such a function. The energy function is defined as E(S, \u03bd) = \u03bd \u00d7 F (S) + P\u221e(S), i.e., the sum of the cost F (S) associated to the removal of the set S and the size of P\u221e(S) of the GCC that the set induces in the network. The two terms compete one against the other, as the goal of the energy minimization is to select a cheap set S which significantly reduces the size of the GCC. The relative weight of the two terms in the definition of the energy is controlled by the parameter \u03bd, which, depending on the type of dismantling, is chosen in the interval \u03bd \u2208 [0.1, 1.5]. This definition is used for all variants of the percolation problem. SA provides an upper bound of performance in the sense that we expect other dismantling algorithms to provide solutions less optimal than SA."
        },
        {
            "heading": "Centrality-based dismantling algorithms",
            "text": "All dismantling algorithms belonging to this class construct structural sets sequentially, meaning that nodes are ranked according to some specific recipe and added one by one to the structural set. Specifically, if r1, r2, . . . , re, . . . , rT denote the labels of the ranked elements, then S\u0303t = \u22c3t e=1{re}.\nHigh degree (HD). For site percolation, we rank nodes in descending order based on the value of their degree centrality, with eventual ties randomly broken. For bond percolation, we assign to the edge (i, j) a centrality score \u03c3ij = ki kj ki+kj . Edges are ranked on the basis of their \u03c3 scores in descending order, and eventual ties are randomly broken. Adaptive versions of the above algorithms are obtained by recomputing nodes\u2019 degrees only over elements that are not yet part of the structural set. These adaptive versions require a similar computational time as their static counterparts. In our analysis, we use the adaptive version of the algorithm, and refer to it as HDA.\nCollective influence (CI). We use also the adaptive version of the so-called collective influence (CI) centrality [15]. We use the metric only to approximate solutions of the optimal site-percolation problem. The metric extends HDA. For each node i, one first computes the set \u2202B(i, `) of all nodes that are at exactly distance ` from the focal node i; CI is then defined as \u03c3i = (ki \u2212 1) \u2211 j\u2208\u2202B(i,`)(kj \u2212 1). ` is a tunable parameter. For ` = 0, the metric reduces to HDA. For ` = 1, the score reduces to \u03c3i = (ki \u2212 1) \u2211 j Aij(kj \u2212 1). CI can be computed in a time that scales linearly with the network size [39]. In our tests, we set ` = 3 and ` = 4. Results reported in the paper correspond to the best-performing ` value.\nNonbacktracking (NBTC). In bond percolation, we rank edges in descending order on the basis of their nonbacktracking centrality (NBTC) scores. Ties are broken at random. The scores are obtained by finding the principal eigenvector ~v of the nonbacktracking matrix of the graph [40]. The vector contains two components for the edge (i, j), namely vi\u2192j and vj\u2192i; we associate to the edge (i, j) the score \u03c3ij = max{vi\u2192j , vj\u2192i}. For site percolation, the NBTC of node i is computed as \u03c3i = \u2211 j vj\u2192i [41]; nodes are ranked in descending order on the basis of their NBTC, with ties randomly broken. NBTC-based dismantling has been first considered in Ref. [18]. An adaptive version of NBTC may be used too. Our results correspond to the the adaptive version of NBTC.\nCore High Degree (COREHD) and MIN-SUM Decycling. For site percolation, we use the approach proposed in Ref. [22] consisting of two main steps. First, we compute the 2-core of the graph. Then all nodes in the 2-core are ranked on the basis of their degree centrality, and added to the structural set in descending order. The result of the removal of all nodes in the 2-core is a tree. The second step of the recipe is a greedy algorithm able to optimally dismantle such a tree [18]. The idea of dismantling a network by first removing any cycle from it was proposed in Ref. [18]. There, optimal decycling is performed using a MIN-SUM optimization algorithm, consisting in a system of message-passing equations that can be solved in linear time. Details are not included here for sake of brevity. After decycling, the remaining tree is dismantled using the method of Ref. [18]. We use the MIN-SUM algorithm only in the site-percolation variants of the problem. For bond percolation, we still use COREHD with the only difference that we are allowed to remove links rather than nodes. Namely, we consider only the links within the 2-core of the network with inclusive degree of its end nodes. By inclusive we mean only nodes that belong to the 2-core are considered in the computation of the degrees. Then, we assign the score \u03c3ij = max{ki, kj} to the edge (i, j) and add them to the structural set in desceding order. We adaptively remove links with highest score until the 2-core disappears from the network. If the size of the GCC is still bigger than a predefined threshold value, we complement COREHD\n10\nwith HDA to dismantle the GCC below the predefined threshold.\nExplosive Percolation (EP). For bond percolation, we rely on the EP algorithm proposed in Ref. [42], here briefly summarized. At the beginning of the algorithm, all edges of the network are considered not active and each node is part of its own component. Edges are activated one by one. The activation of one edge may lead to the merger of two clusters. At the t-th stage of the algorithm, the score of the edge (i, j) is \u03c3ij = 1/(ci cj), where ci is the size of the cluster which node i belongs to. A maximum of M = 1, 000 edges are selected at random among those still not active; the edge with maximum score (ties are randomly broken) is activated, and the score of all other edges is recomputed. The algorithm is iterated until all edges are active. Solutions to the dismantling problem are obtained by reversing the order of activation of the edges in the EP algorithm. For site percolation, we rely on a very similar algorithm known in the literature as Explosive Immunization (EI) [21]."
        },
        {
            "heading": "Embedding-aided dismantling algorithms",
            "text": "We assume that the network is embedded in some geometric space. In the embedding, every node i is mapped to a point ~vi in the underlying space. The embedding is used to perform iterative bisections of the network.\nFor bond percolation, we use the following procedure. Indicate with Cz and Ez the total number of clusters and the inter-clusters edges identified at stage z of the algorithm, respectively. Tz is the size of the structural set at stage z, i.e., |S\u0303Tz | = Tz. The structural set is initialized to S\u03030 = S\u0303T0 = \u2205. Without loss of generality, we assume that at stage z = 1, the network is composed of one single cluster C1 = 1. At each stage z of the algorithm, we follow these steps:\n1. We identify the largest cluster, say cz, among the Cz available. We use the already available embedding (or we recalculate the embedding, depending on the specific algorithm) of the nodes in this cluster to find a bipartition. The bipartition of the cluster is obtained considering only elements that do not belong to the set S\u0303Tz\u22121 . The operation allows us to find two new clusters, thus Cz+1 = Cz+1 clusters.\n2. We identify all Ez edges connecting the two parts of cluster cz determined at step 1. These are edges that stand in-between the two clusters that will originate from cz but that are not yet part of the structural set, i.e., e \u2208 Ez \u2192 e /\u2208 S\u0303Tz\u22121 .\n3. We add all edges within Ez to the structural set in random order. The structural set at this point is S\u0303Tz with size Tz = \u2211z r=1 |Er|.\n4. We increase z \u2192 z + 1.\nThe algorithm is iterated until all edges are part of the structural set.\nIn site percolation, the procedure is analogous. The main difference is that the two clusters that are formed at each iteration should be disconnected by removing nodes rather than edges. Please note that finding the minimum number of nodes to be removed in order to disconnect the two clusters is an NP-hard problem known in the literature as minimum vertex cover problem. Here, we rely on the approximate algorithm developed by Ren et al. [17].\nLaplacian embedding (LE). This embedding has been considered by Ren et al. in the context of the site percolation problem, and later generalized by some of the same authors to bond percolation [16, 17].\nNodes are embedded in a one-dimensional space, where the position of node i is identified by the ith component of the eigenvector corresponding to the second smallest eigenvalue of the generalized Laplacian operator L = D\u2212B. Here, the ijth component of the matrix B is defined as Bij = Aij(ci+ cj\u22121); ci is the cost of removal of node i, i.e., F ({i}) = ci; D is the diagonal matrix whose ith diagonal element is Dii = \u2211 j Aij . The bipartition of the network is obtained by separating nodes on the basis of the sign of their components in the eigenvector. The eigenvector is recomputed at each stage of the dismantling algorithm. For bond percolation, the same procedure as above is followed with the only caveat that the embedding of nodes is performed using the standard combinatorial Laplacian [16].\nHyperbolic embedding (HYP). Each node i is mapped to a point ~vi = (ri, \u03b8i) in the hyperbolic disk. To perform the embedding, we rely on the so-called Mercator method [32]. Mercator embeds networks with arbitrary degree distributions via the maximization of the likelihood function\nL = \u220f\n1\u2264j<i\u2264N\np(xij) Aij [1\u2212 p(xij)]1\u2212Aij ,\nwhere the product goes over all node pairs ij in the network, while p(xij) is the Fermi-Dirac connection probability given by p(xij) = 1\n1+e(xij\u2212R)/2G . Here, xij =\nri+rj+2 ln (\u2206\u03b8ij/2) is approximately the hyperbolic distance [43] between nodes i and j, \u2206\u03b8ij = \u03c0\u2212|\u03c0\u2212|\u03b8i\u2212\u03b8j || is the angular (similarity) distance, and R \u223c 2 lnN is the radius of the hyperbolic disk where all nodes reside. The radial coordinate ri is related to the observed node degree ki, as ri \u223c R\u22122 ln ki and quantifies node popularity [44]. The value of the temperature parameter G for a given network is also inferred by Mercator. The maximization of the likelihood function leverages the Laplacian Eigenmaps approach of Ref. [45]. Hyperbolic coordinates are estimated on the entire network topology. At each stage of the dismantling algorithm, a bipartition is obtained by cutting in half the slice of the hyperbolic disk of the cluster under consideration.\nNode2vec embedding (N2V). Node2vec [33] is a network embedding algorithm that builds on the\n11\nword2vec algorithm [46] by taking the following analogy: nodes in the network are considered as words; a sequence of nodes explored during a biased random walk is considered as a sentence. Nodes are embedded in the d-dimensional Euclidean space. The embedding is dependent on various hyperparameters. We fix the number of walks per node to 10, the number of iterations to 10, and the parameters that bias the random walk toward a breadth-first or depth-first walk both equal to 1. Results of some tests reported in Fig. S12 indicate that optimal dismantling is achieved for large values of the embedding dimension d, and medium values of the walk length l. We therefore fix d = 2, 048 and l = 32 in our analysis.\nThe bipartition is obtained using a k-means algorithm with k = 2 clusters [35]. Clusters are created on the basis of the Euclidean distance between nodes in the space. We compute the embedding only once, and then use the same map in all stages of the dismantling algorithm.\nAlgorithmic complexity. The complexity of an embedding-aided dismantling algorithm is approximately N log2N on sparse networks. This can be understood by thinking the iterative procedure as equivalent to the generation of a rooted binary tree. The root of the tree is the input network. Intermediate nodes are the clusters obtained during the iterative dismantling algorithm. Leaves are individual nodes. Roots and intermediate nodes have two offsprings corresponding to the split of a cluster in two smaller clusters. The height of such as tree is H = log2N . At each level h of the tree there Ch clusters composed of a number of elements proportional to N/Ch. Finding the bipartition of a cluster and determining the inter-cluster edges require a time that grows proportionally to the cluster size, therefore each level of the tree is processed in a time that grows as N . The above computation of the complexity assumes that embedding and bisecting a cluster of nodes require a time scaling at maximum with its size. This is true for both the Laplacian and Node2vec embeddings. The computational time required to embed a network in hyperbolic space with the Mercator algorithm scales instead as N2. The quadratic scaling dominates the time complexity of the dismantling algorithm based on hyperbolic embedding."
        },
        {
            "heading": "Greedy post-processing technique",
            "text": "Approximate solutions of the various algorithms are further refined with a simple, but effective greedy postprocessing strategy. The general principle is to remove from a potentially spurious structural set all elements that are not necessary to keep the GCC of the network below a certain predetermined value. The strategy is useful to reduce the size of the structural set, and thus obtain a better solution for the problem of Eq. (2). The strategy for site percolation was introduced in Refs. [15, 18]. Here, we extend it to bond percolation with unit\ncost and site percolation with degree cost."
        },
        {
            "heading": "E. Networks",
            "text": ""
        },
        {
            "heading": "Real networks",
            "text": "We consider a corpus of 50 real-world networks. Networks have size ranging from N = 309 to N = 62561. The upper bound on the network size is due to computational reasons, as some of the dismantling algorithms considered in our analysis do not scale well with the system size. Details on the various networks are reported in the SM."
        },
        {
            "heading": "Synthetic networks",
            "text": "H2 model. We create instances of the H2 model [29, 43] with N = 214 nodes, degree exponents \u03b3 \u2208 {2.2, 2.6, 3.5}, average degree \u3008k\u3009 \u2248 6, and values of the temperature parameter G \u2208 {0.1, 0.2, . . . , 0.9}. The parameter \u03b3 controls the heterogeneity of the degree distribution, as P (k) \u223c k\u2212\u03b3 for networks generated according to this model. The temperature parameter G controls the strength of correlation between network topology and imposed embedding, with low values of G favoring connections between pairs of nodes at small hyperbolic distance.\nLancichinetti-Fortunato-Radicchi (LFR) model. We create networks according to the LFR model [30] with N = 214 nodes and degree exponent \u03b3 \u2208 {2.2, 2.6, 3.5}, average degree \u3008k\u3009 = 6, maximum degree kmax = \u221a N . We use values of the mixing parameter \u00b5 \u2208 {0.05, 0.1, . . . , 0.5}. Communities are distributed randomly with size distribution P (s) \u223c s\u22121 with \u221a N and 5 \u00d7 \u221a N chosen as minimum and maximum size of a community, respectively. Also for the LFR model, the parameter \u03b3 controls the heterogeneity of the degree distribution, i.e., P (k) \u223c k\u2212\u03b3 . The mixing parameter \u00b5 controls the strength of correlation between network topology and imposed embedding, as low \u00b5 values favor connections between pairs of nodes belonging to the same pre-imposed communities."
        },
        {
            "heading": "ACKNOWLEDGMENTS",
            "text": "F.P. acknowledges support by the TV-HGGs project (OPPORTUNITY/0916/ERC-CoG/0003), co-funded by the European Regional Development Fund and the Republic of Cyprus through the Research and Innovation Foundation. F.R. acknowledges support by the Air Force Office of Scientific Research (FA9550-21-1-0446) and by the Army Research Office (W911NF-21-1-0194). The funders had no role in study design, data collection and analysis, decision to publish, or any opinions, findings, and conclusions or recommendations expressed in the manuscript.\n12\n[1] Amnon Aharony and Dietrich Stauffer, Introduction to percolation theory (Taylor & Francis, 2003). [2] Scott Kirkpatrick, \u201cPercolation and conduction,\u201d Reviews of modern physics 45, 574 (1973). [3] Re\u0301ka Albert and Albert-La\u0301szlo\u0301 Baraba\u0301si, \u201cStatistical mechanics of complex networks,\u201d Reviews of modern physics 74, 47 (2002). [4] Ming Li, Run-Ran Liu, Linyuan Lu\u0308, Mao-Bin Hu, Shuqi Xu, and Yi-Cheng Zhang, \u201cPercolation on complex networks: Theory and application,\u201d Physics Reports 907, 1\u201368 (2021). [5] Reuven Cohen, Keren Erez, Daniel Ben-Avraham, and Shlomo Havlin, \u201cBreakdown of the internet under intentional attack,\u201d Physical review letters 86, 3682 (2001). [6] Peter Grassberger, \u201cOn the critical behavior of the general epidemic process and dynamical percolation,\u201d Mathematical Biosciences 63, 157\u2013172 (1983). [7] Romualdo Pastor-Satorras, Claudio Castellano, Piet Van Mieghem, and Alessandro Vespignani, \u201cEpidemic processes in complex networks,\u201d Reviews of modern physics 87, 925 (2015). [8] Reuven Cohen, Shlomo Havlin, and Daniel BenAvraham, \u201cEfficient immunization strategies for computer networks and populations,\u201d Physical review letters 91, 247901 (2003). [9] Sergey N Dorogovtsev, Alexander V Goltsev, and Jose\u0301 FF Mendes, \u201cCritical phenomena in complex networks,\u201d Reviews of Modern Physics 80, 1275 (2008). [10] Reuven Cohen, Keren Erez, Daniel Ben-Avraham, and Shlomo Havlin, \u201cResilience of the internet to random breakdowns,\u201d Physical review letters 85, 4626 (2000). [11] Mark EJ Newman, Steven H Strogatz, and Duncan J Watts, \u201cRandom graphs with arbitrary degree distributions and their applications,\u201d Physical review E 64, 026118 (2001). [12] Re\u0301ka Albert, Hawoong Jeong, and Albert-La\u0301szlo\u0301 Baraba\u0301si, \u201cError and attack tolerance of complex networks,\u201d Nature 406, 378\u2013382 (2000). [13] Duncan S. Callaway, M. E. J. Newman, Steven H. Strogatz, and Duncan J. Watts, \u201cNetwork robustness and fragility: Percolation on random graphs,\u201d Phys. Rev. Lett. 85, 5468\u20135471 (2000). [14] Reuven Cohen, Keren Erez, Daniel ben Avraham, and Shlomo Havlin, \u201cResilience of the internet to random breakdowns,\u201d Phys. Rev. Lett. 85, 4626\u20134628 (2000). [15] Flaviano Morone and Herna\u0301n A. Makse, \u201cInfluence maximization in complex networks through optimal percolation,\u201d Nature 524, 65\u201368 (2015). [16] Xiao-Long Ren, Niels Gleinig, Dijana Tolic\u0301, and Nino Antulov-Fantulin, \u201cUnderestimated cost of targeted attacks on complex networks,\u201d Complexity 2018 (2018). [17] Xiao-Long Ren, Niels Gleinig, Dirk Helbing, and Nino Antulov-Fantulin, \u201cGeneralized network dismantling,\u201d Proceedings of the National Academy of Sciences 116, 6554\u20136559 (2019), https://www.pnas.org/content/116/14/6554.full.pdf. [18] Alfredo Braunstein, Luca Dall\u2019Asta, Guilhem Semerjian, and Lenka Zdeborova\u0301, \u201cNetwork dismantling,\u201d Proceedings of the National Academy of Sciences 113, 12368\u201312373 (2016), https://www.pnas.org/content/113/44/12368.full.pdf.\n[19] Rong-Hua Yuan, Fu-Rui Tan, Wen-Zhou Chen, and Ming-Yang Zhou, \u201cFragmenting complex network based on non-backtracking matrix,\u201d Journal of Statistical Mechanics: Theory and Experiment 2021, 033403 (2021). [20] Sebastian Wandelt, Xiaoqian Sun, Daozhong Feng, Massimiliano Zanin, and Shlomo Havlin, \u201cA comparative analysis of approaches to network-dismantling,\u201d Scientific reports 8, 1\u201315 (2018). [21] Pau Clusella, Peter Grassberger, Francisco J. Pe\u0301rezReche, and Antonio Politi, \u201cImmunization and targeted destruction of networks using explosive percolation,\u201d Phys. Rev. Lett. 117, 208301 (2016). [22] Lenka Zdeborova\u0301, Pan Zhang, and Hai-Jun Zhou, \u201cFast and simple decycling and dismantling of networks,\u201d Scientific Reports 6, 37954 (2016). [23] Liang Tian, Amir Bashan, Da-Ning Shi, and Yang-Yu Liu, \u201cArticulation points in complex networks,\u201d Nature communications 8, 1\u20139 (2017). [24] Changjun Fan, Li Zeng, Yizhou Sun, and Yang-Yu Liu, \u201cFinding key players in complex networks through deep reinforcement learning,\u201d Nature Machine Intelligence 2, 317\u2013324 (2020). [25] Marco Grassia, Manlio De Domenico, and Giuseppe Mangioni, \u201cMachine learning dismantling and earlywarning signals of disintegration in complex systems,\u201d Nature communications 12, 5190 (2021). [26] Sebastian Wandelt, Xing Shi, Xiaoqian Sun, and Massimiliano Zanin, \u201cCommunity detection boosts network dismantling on real-world networks,\u201d IEEE Access 8, 111954\u2013111965 (2020). [27] M Bellingeri, D Bevacqua, F Scotognella, R Alfieri, and D Cassi, \u201cA comparative analysis of link removal strategies in real complex weighted networks,\u201d Scientific reports 10, 1\u201315 (2020). [28] Andrey Y Lokhov and David Saad, \u201cOptimal deployment of resources for maximizing impact in spreading processes,\u201d Proceedings of the National Academy of Sciences 114, E8138\u2013E8146 (2017). [29] Rodrigo Aldecoa, Chiara Orsini, and Dmitri Krioukov, \u201cHyperbolic graph generator,\u201d Computer Physics Communications 196, 492\u2013496 (2015). [30] Andrea Lancichinetti, Santo Fortunato, and Filippo Radicchi, \u201cBenchmark graphs for testing community detection algorithms,\u201d Physical Review E 78, 046110 (2008). [31] G. Garc\u0301\u0131a-Pe\u0301rez, A. Allard, M. A. Serrano, and M. Bogun\u0303a\u0301, \u201cMercator embedding code,\u201d Available: https://github.com/networkgeometry/mercator (2020). [32] G. Garc\u0301\u0131a-Pe\u0301rez, A. Allard, M. A. Serrano, and M. Bogun\u0303a\u0301, \u201cMercator: uncovering faithful hyperbolic embeddings of complex networks,\u201d New Journal of Physics 21, 10 (2019). [33] Aditya Grover and Jure Leskovec, \u201cnode2vec: Scalable feature learning for networks,\u201d in Proceedings of the 22nd ACM SIGKDD international conference on Knowledge discovery and data mining (2016) pp. 855\u2013864. [34] Je\u0301ro\u0302me Kunegis, \u201cKonect: The koblenz network collection,\u201d in Proceedings of the 22nd International Conference on World Wide Web, WWW \u201913 Companion (Association for Computing Machinery, New York, NY, USA,\n13\n2013) p. 1343\u20131350. [35] Stuart Lloyd, \u201cLeast squares quantization in pcm,\u201d IEEE\ntransactions on information theory 28, 129\u2013137 (1982). [36] Duncan J Watts and Steven H Strogatz, \u201cCollective dy-\nnamics of \u2018small-world\u2019networks,\u201d Nature 393, 440\u2013442 (1998). [37] Thomas Rolland, Murat Tas\u0327an, Benoit Charloteaux, Samuel J. Pevzner, Quan Zhong, Nidhi Sahni, Song Yi, Irma Lemmens, Celia Fontanillo, Roberto Mosca, Atanas Kamburov, Susan D. Ghiassian, Xinping Yang, Lila Ghamsari, Dawit Balcha, Bridget E. Begg, Pascal Braun, Marc Brehme, Martin P. Broly, Anne-Ruxandra Carvunis, Dan Convery-Zupan, Roser Corominas, Jasmin Coulombe-Huntington, Elizabeth Dann, Matija Dreze, Ame\u0301lie Dricot, Changyu Fan, Eric Franzosa, Fana Gebreab, Bryan J. Gutierrez, Madeleine F. Hardy, Mike Jin, Shuli Kang, Ruth Kiros, Guan Ning Lin, Katja Luck, Andrew MacWilliams, Jo\u0308rg Menche, Ryan R. Murray, Alexandre Palagi, Matthew M. Poulin, Xavier Rambout, John Rasla, Patrick Reichert, Viviana Romero, Elien Ruyssinck, Julie M. Sahalie, Annemarie Scholz, Akash A. Shah, Amitabh Sharma, Yun Shen, Kerstin Spirohn, Stanley Tam, Alexander O. Tejeda, Shelly A. Trigg, Jean-Claude Twizere, Kerwin Vega, Jennifer Walsh, Michael E. Cusick, Yu Xia, Albert-La\u0301szlo\u0301 Baraba\u0301si, Lilia M. Iakoucheva, Patrick Aloy, Javier De Las Rivas, Jan Tavernier, Michael A. Calderwood, David E. Hill, Tong Hao, Frederick P. Roth, and Marc Vidal, \u201cA proteome-scale map of the human interactome network,\u201d Cell 159, 1212\u20131226 (2014). [38] Christian M Schneider, Andre\u0301 A Moreira, Jose\u0301 S Andrade, Shlomo Havlin, and Hans J Herrmann, \u201cMitigation of malicious attacks on networks,\u201d Proceedings of the\nNational Academy of Sciences 108, 3838\u20133841 (2011). [39] Flaviano Morone, Byungjoon Min, Lin Bo, Romain Mari,\nand Herna\u0301n A Makse, \u201cCollective influence algorithm to find influencers via optimal percolation in massively large social media,\u201d Scientific reports 6, 1\u201311 (2016). [40] Ki-ichiro Hashimoto, \u201cZeta functions of finite graphs and representations of p-adic groups,\u201d in Automorphic forms and geometry of arithmetic varieties (Elsevier, 1989) pp. 211\u2013280. [41] Travis Martin, Xiao Zhang, and Mark EJ Newman, \u201cLocalization and centrality in networks,\u201d Physical review E 90, 052808 (2014). [42] Raissa M. D\u2019Souza and Jan Nagler, \u201cAnomalous critical and supercritical phenomena in explosive percolation,\u201d Nature Physics 11, 531\u2013538 (2015). [43] Dmitri Krioukov, Fragkiskos Papadopoulos, Maksim Kitsak, Amin Vahdat, and Maria\u0301n Bogun\u0303a\u0301, \u201cHyperbolic geometry of complex networks,\u201d Phys. Rev. E 82, 036106 (2010).\n[44] Fragkiskos Papadopoulos, Maksim Kitsak, M. A\u0301ngeles Serrano, Maria\u0301n Bogun\u0303a\u0301, and Dmitri Krioukov, \u201cPopularity versus similarity in growing networks,\u201d Nature 489, 537\u2013540 (2012). [45] Alessandro Muscoloni, Josephine Maria Thomas, Sara Ciucci, Ginestra Bianconi, and Carlo Vittorio Cannistraci, \u201cMachine learning meets complex networks via coalescent embedding in the hyperbolic space,\u201d Nature Communications 8, 1615 (2017). [46] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean, \u201cEfficient estimation of word representations in vector space,\u201d arXiv preprint arXiv:1301.3781 (2013)."
        }
    ],
    "title": "Embedding-aided network dismantling",
    "year": 2022
}