{
    "abstractText": "Correlation power analysis (CPA) is a classical method in side-channel attacks. Based on the power consumption model, the correlation between the power consumption of cryptographic devices and the assumed intermediate value is analyzed to recover the key. Theoretically, only a few power traces are required to recover the key when the noise hypothesis is known. However, in the high-frequency and high-noise environment, the completion of CPA requires more power traces, and the computational complexity also increases. Therefore, this paper proposes a fault probability correlation analysis method based on secondary filtering (2F-FPCA), which selects the fault probability traces according to the Hamming Weight of the intermediate value and reduces the number of sampling points by selecting points of interest. This method does not need to access ciphertext and is little affected by noise. Moreover, it can recover the key with fewer fault probability traces and lower computational complexity, improving the attack efficiency of CPA. In this paper, 2F-FPCAs are carried out based on the AES128 algorithm of the Micro Controller Unit (MCU). The key can be recovered successfully using 10 fault probability traces, and the computational complexity is reduced by 10 times. INDEX TERMS Correlation power analysis, side-channel attacks, fault injection attacks, AES",
    "authors": [
        {
            "affiliations": [],
            "name": "Tong Wu"
        },
        {
            "affiliations": [],
            "name": "Dawei Zhou"
        },
        {
            "affiliations": [],
            "name": "Lei Du"
        },
        {
            "affiliations": [],
            "name": "Shiwei Wang"
        }
    ],
    "id": "SP:0e8114f6984b4938fcaae4ba1901de134b3ee8d9",
    "references": [
        {
            "authors": [
                "M. Devi",
                "A. Majumder"
            ],
            "title": "Side-channel attack in Internet of Things: A survey",
            "venue": "Applications of Internet of Things: Proceedings of ICCCIOT 2020, 2021, pp. 213\u2013222.",
            "year": 2020
        },
        {
            "authors": [
                "Y. Kulah",
                "B. Dincer",
                "C. Yilmaz",
                "E. Savas"
            ],
            "title": "SpyDetector: An approach for detecting side-channel attacks at runtime",
            "venue": "Int J Inf Secur, vol. 18, pp. 393\u2013422, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "D. Poggi",
                "P. Maurine",
                "T. Ordas",
                "A. Sarafianos"
            ],
            "title": "Protecting secure ics against side-channel attacks by identifying and quantifying potential EM and leakage hotspots at simulation stage",
            "venue": "Constructive Side-Channel Analysis and Secure Design: 12th International Workshop, COSADE 2021, Lugano, Switzerland, October 25\u201327, 2021, Proceedings 12, 2021, pp. 129\u2013147.",
            "year": 2021
        },
        {
            "authors": [
                "I. Kabin",
                "Z. Dyka",
                "D. Klann",
                "P. Langendoerfer"
            ],
            "title": "EC P-256: Successful Simple Power Analysis",
            "venue": "arXiv preprint arXiv:2106.12321, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "F. Schellenberg",
                "D.R.E. Gnad",
                "A. Moradi",
                "M.B. Tahoori"
            ],
            "title": "An inside job: Remote power analysis attacks on FPGAs",
            "venue": "IEEE Des Test, vol. 38, no. 3, pp. 58\u201366, 2021.",
            "year": 2021
        },
        {
            "authors": [
                "F. Schuhmacher"
            ],
            "title": "Canonical DPA Attack on HMAC-SHA1/SHA2",
            "venue": "Constructive Side-Channel Analysis and Secure Design: 13th International Workshop, COSADE 2022, Leuven, Belgium, April 11-12, 2022, Proceedings, 2022, pp. 193\u2013211.",
            "year": 2022
        },
        {
            "authors": [
                "E. Brier",
                "C. Clavier",
                "F. Olivier"
            ],
            "title": "Correlation power analysis with a leakage model",
            "venue": "Cryptographic Hardware and Embedded Systems-CHES 2004: 6th International Workshop Cambridge, MA, USA, August 11-13, 2004. Proceedings 6, 2004, pp. 16\u201329. doi: 10.1007/978-3-540-28632-5_2.",
            "year": 2004
        },
        {
            "authors": [
                "A. Heuser",
                "O. Rioul",
                "S. Guilley"
            ],
            "title": "Good is not good enough: Deriving optimal distinguishers from communication theory",
            "venue": "Cryptographic Hardware and Embedded Systems\u2013CHES 2014: 16th International Workshop, Busan, South Korea, September 23-26, 2014. Proceedings 16, 2014, pp. 55\u201374.",
            "year": 2014
        },
        {
            "authors": [
                "L. David",
                "A. Wool"
            ],
            "title": "A bounded-space near-optimal key enumeration algorithm for multi-subkey side-channel attacks",
            "venue": "Topics in Cryptology\u2013CT-RSA 2017 The Cryptographers\u2019 Track at the RSA Conference 2017, San Francisco, CA, USA, February 14\u201317, 2017, Proceedings, 2017, pp. 311\u2013327.",
            "year": 2017
        },
        {
            "authors": [
                "R. Poussier",
                "F.-X. Standaert",
                "V. Grosso"
            ],
            "title": "Simple key enumeration (and rank estimation) using histograms: An integrated approach",
            "venue": "Cryptographic Hardware and Embedded Systems\u2013CHES 2016: 18th International Conference, Santa Barbara, CA, USA, August 17-19, 2016, Proceedings 18, 2016, pp. 61\u201381.",
            "year": 2016
        },
        {
            "authors": [
                "D.P. Martin",
                "J.F. O\u2019connell",
                "E. Oswald",
                "M. Stam"
            ],
            "title": "Counting keys in parallel after a side channel attack",
            "venue": "Advances in Cryptology\u2013 ASIACRYPT 2015: 21st International Conference on the Theory and Application of Cryptology and Information Security, Auckland, New Zealand, November 29\u2013December 3, 2015, Proceedings, Part II 21, 2015, pp. 313\u2013337.",
            "year": 2015
        },
        {
            "authors": [
                "T.-H. Le",
                "J. Cl\u00e9di\u00e8re",
                "C. Canovas",
                "B. Robisson",
                "C. Servi\u00e8re",
                "J.-L. Lacoume"
            ],
            "title": "A proposition for correlation power analysis enhancement",
            "venue": "Cryptographic Hardware and Embedded Systems-CHES 2006: 8th International Workshop, Yokohama, Japan, October 10-13, 2006. Proceedings 8, 2006, pp. 174\u2013186.",
            "year": 2006
        },
        {
            "authors": [
                "Y. Kim",
                "T. Sugawara",
                "N. Homma",
                "T. Aoki",
                "A. Satoh"
            ],
            "title": "Biasing power traces to improve correlation power analysis attacks",
            "venue": "First international workshop on constructive side-channel analysis and secure design (cosade 2010), 2010, pp. 77\u201380.",
            "year": 2010
        },
        {
            "authors": [
                "M. Ouladj",
                "P. Guillot",
                "F. Mokrane"
            ],
            "title": "Chosen message strategy to improve the correlation power analysis",
            "venue": "IET Inf Secur, vol. 13, no. 4, pp. 304\u2013310, 2019.",
            "year": 2019
        },
        {
            "authors": [
                "Q.L. Meunier"
            ],
            "title": "FastCPA: Efficient correlation power analysis computation with a large number of traces",
            "venue": "Proceedings of the Sixth Workshop on Cryptography and Security in Computing Systems, 2019, pp. 7\u201312.",
            "year": 2019
        },
        {
            "authors": [
                "T. Wu",
                "D. Zhou",
                "L. Du",
                "S. Wang"
            ],
            "title": "Fault Template Attack Based on Fault Probability",
            "venue": "IEEE Access, 2023.",
            "year": 2023
        },
        {
            "authors": [
                "Y. Ding"
            ],
            "title": "A multiple sieve approach based on artificial intelligent techniques and correlation power analysis",
            "venue": "ACM Transactions on Multimedia Computing, Communications, and Applications (TOMM), vol. 17, no. 2s, pp. 1\u201321, 2021.",
            "year": 2021
        }
    ],
    "sections": [
        {
            "text": "VOLUME XX, 2023 1\nis analyzed to recover the key. Theoretically, only a few power traces are required to recover the key when the noise hypothesis is known. However, in the high-frequency and high-noise environment, the completion of CPA requires more power traces, and the computational complexity also increases. Therefore, this paper proposes a fault probability correlation analysis method based on secondary filtering (2F-FPCA), which selects the fault probability traces according to the Hamming Weight of the intermediate value and reduces the number of sampling points by selecting points of interest. This method does not need to access ciphertext and is little affected by noise. Moreover, it can recover the key with fewer fault probability traces and lower computational complexity, improving the attack efficiency of CPA. In this paper, 2F-FPCAs are carried out based on the AES128 algorithm of the Micro Controller Unit (MCU). The key can be recovered successfully using 10 fault probability traces, and the computational complexity is reduced by 104 times.\nINDEX TERMS Correlation power analysis, side-channel attacks, fault injection attacks, AES\nI. Introduction Side-channel attacks play an essential role in evaluating the performance of cryptographic devices. There are many classic side-channel methods, such as attacking power consumption [1], running time [2], and electromagnetic leakage [3]. Power analysis is a representative type of side-channel attack, including Simple Power Analysis (SPA) [4], Correlation Power Analysis [5], and Differential Power Analysis (DPA) [6]. Brier et al. [7] first proposed CPA, which uses the power model to calculate the correlation coefficient between the power sample and the hypothetical intermediate value to identify the correct key. Annelie et al. [8] show that CPA is almost optimal when the leakage model is known under the assumption of affine transformation and Gaussian noise.\nIn practical applications, in high-frequency and high-noise environments, CPA often needs more power traces to recover the key, which means more computing time and computation. In addition, when the candidate key space is too large to traverse the search, CPA is often used to recover some bytes of the key. However, under the local leakage model, the correlation coefficient of CPA is significantly reduced, and the demand for the number of power traces is greater. In order to reduce\nthe number of power traces required for attacks, key exhaustion [9], [10] and ranking evaluation [11] algorithms are proposed to estimate the ranking of correct keys. However, the problems of computational complexity and excessive memory requirements still need to be solved.\nRecently, research on the computational efficiency of CPA has received widespread attention. An enhancement technique of CPA is proposed in [12], which classifies traces by Hamming distance and combines DPA, multi-bit DPA, and CPA. Yongdae et al. [13] proposed a preprocessing technique to select a subset with higher correlation factors from the power trace set and then conduct CPA. In [14], the plaintext is selected in both non-adaptive and adaptive ways, and the original optimization of the standard CPA is carried out, which reduces the number of power traces needed to recover the key. All the above methods improve the computational efficiency of CPA, but these papers do not analyze the computational complexity.\nA method is proposed in [15] to index the vector template with plaintext values and then associate it with the power vector model. Compared with the original CPA calculation, the calculation speed of this method is 200 times faster, and it is\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/\n2\nespecially effective when there are many traces. [16] proposed to find points of interest (POI) to reduce the computing time of CPA. The above methods improve the computing speed of CPA and time but need many power traces as data support.\nIn order to solve the problems that CPA is greatly affected by noise, significant data demand, and high computational complexity, this paper applies CPA to fault attacks and proposes a fault probability correlation analysis attack method based on secondary filtering (2F-FPCA). This method uses the data dependence of the fault probability of cryptographic equipment under the fault injection attack and establishes the fault probability trace in the operation process. The traces are classified and filtered according to the Hamming Weight of the intermediate value, which reduces the number of fault probability traces needed to calculate the assumed inter-mediate value. At the same time, the number of samples and iterations are significantly reduced by finding POIs on the fault probability trace. 2F-FPCA does not need to access ciphertext and is little affected by noise. It can recover the key with less fault probability trace and lower computational complexity, improving the efficiency of CPA.\nThe paper is organized as follows. Section II starts with an overview of CPA and the experimental platform. In Section III, we propose a fault correlation analysis attack method based on fault probability (FPFCA), carry out experiments, and analyze the attack results. In Section IV, we improve the FPFCA to 2F-FPCA and evaluate the attack results. Finally, Section V concludes this paper."
        },
        {
            "heading": "II. Preliminaries and Practical Implementation",
            "text": ""
        },
        {
            "heading": "A. Correlation Power Analysis",
            "text": "CPA mainly uses the correlation between the actual power consumption and the power consumption model. CPA has a general attack strategy, which is divided into 5 steps [17]: \u2022Step 1: Select an intermediate value of the executed algorithm. First, select the power consumption model and establish the leakage function. The intermediate value must be a function that depends on the small part of the key and known nonconstant data value, which is usually the plaintext or the ciphertext. The most widely used power consumption model is the Hamming Distance (HD) between two corresponding values in the same register or Hamming Weight (HW) of a specific value. \u2022Step 2: Measure the power consumption. Measure the power consumption of cryptographic devices when encrypting or decrypting different data blocks. \u2022Step 3: Calculate hypothetical intermediate values. For each key hypothetical, the corresponding hypothetical intermediate value is calculated. \u2022Step 4: Map the intermediate values to the power consumption value. \u2022Step 5: Compare the hypothetical power consumption values with the power traces. The index corresponding to the\nmaximum correlation coefficient reveals the correct key index and time. The correlation is calculated as follows.\nPearson correlation coefficient is denoted as c. Suppose the attacker gets M power traces, each with N sampling points. The power consumption value corresponding to the ith sampling point on the mth trace is denoted as tm,i (1\u2264m\u2264M, 1\u2264i \u2264N). Based on the power consumption model, the power consumption hypothesis value corresponds to the mth trace under the key assumption k is denoted as hm,k (1\u2264m\u2264M, 1\u2264k\u2264K). Under the key assumption k, the correlation coefficient of the ith sampling point is calculated as follows:\n( )( )\n( ) ( ) , , 1 , 2 2\n, , 1 1\nM\nm k k m i i m\nk i M M\nm k k m i i m m\nh h t t\nc\nh h t t\n=\n= =\n\u2212 \u2212 =\n\u2212 \u2212\n\n  (1)\nwhere kh and it are the average of the power consumption model and the actual power consumption at the ith sampling point respectively."
        },
        {
            "heading": "B. Experiment Layout",
            "text": "The experimental platform mainly includes an attack target, fault injection controller, oscilloscope monitoring module, and data acquisition and processing module[18], as shown in Fig. 1.\nWe conduct a large number of fault injection attacks and establish fault probability traces[18] which are used in subsequent analyses."
        },
        {
            "heading": "III. Fault Correlation Analysis based on Fault Probability",
            "text": ""
        },
        {
            "heading": "A. Scheme Design",
            "text": "For the Advanced Encryption Standard algorithm (AES), attackers usually choose the sampling points near the S-box transformation operation as attack points, showing strong correlations between the actual power consumption and the power consumption model.\nTaking the AES-128 algorithm as an example to implement FPFCA, as shown in Fig. 2. We conduct mass fault injection attacks on the output of the first S-box in the first round of encryption and establish the fault probability traces. If the first\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/\n3\nbyte of the key is recovered, the attack is successful. The recovery of other bytes of the key is similar; attack the output of other S-boxes in the first round of encryption.\nFPFCA attacks take advantage of the data dependency of cryptographic device faults. Many fault probability traces are used to analyze the fault probability at specific points, which is regarded as a function of the data being processed.\nIn all subsequent discussions, it is assumed that the pro-\ncessed data are subject to a uniform distribution.\nThe steps of FPFCA are as follows: \u2022Step 1: Select an intermediate value of the executed algorithm. The intermediate value must be a function f(d, k), where d represents non-constant data, and k represents a small part of the key. We choose the plaintext as d and the first byte of the key as k. \u2022Step 2: Establish the fault probability traces. We calculate the fault probability of cryptographic devices when encrypting or decrypting M different data blocks. These plaintexts are recorded as vectors 1 2 ( , , , ) M\nm m m \u2032= \u22efm , where mi represents a value corresponding to the ith encryption or decryption operation. Many fault injection attacks are carried out on each mi, and the corresponding fault probability trace is established as\n,1 ,2 , ( , , , ) i i i i N p p p\u2032 = \u22efp , where N represents the length of the\nfault probability trace. The attacker establishes a fault probability trace for each of the M data. These fault probability traces are denoted as a matrix PM\u00d7N.\n\u2022Step 3: Calculate the hypothetical intermediate value. For each possible key k, the corresponding hypothetical intermediate value is calculated, denoted as 1 2 ( , , , ) K\nk k k= \u22efk , where K represents the number of all possible values of k. Given the data m and the key hypothesis k, the hypothetical intermediate value can be calculated for all M encryptions and all K key assumptions: ( ), ,i j i jv f m k= (1\u2264i\u2264M, 1\u2264j\u2264K). It is obtained that the matrix VM\u00d7K. The jth column of V contains all the intermediate values calculated by the key hypothesis kj. In fact, the cryptographic device uses only one element in k, which is denoted as kc. Our target is to find the kc, that is, to determine which column of V the device is dealing with during the M encryption or decryption.\n\u2022Step 4: Map the intermediate value to the fault probability. The hypothetical intermediate value V is mapped to the hypothetical fault probability matrix H by the HW model. \u2022Step 5: Compare the hypothetical fault probability value and the fault probability trace. Each column hi of matrix H and each column pj of matrix P are compared. The attacker compares the hypothetical fault probability value corresponding to each key hypothesis with the fault probability trace recorded at each location. The result of the comparison is a matrix CK\u00d7 P, where each element ci,j contains the comparison of the columns hi and pj. The higher the value of ci, j, the higher the matching degree of the columns hi and pj.\nThe jth sampling point on the mth fault probability trace is denoted as pm,j (1\u2264m\u2264M, 1\u2264j\u2264N). Based on the FPHW model[18], the hypothetical value of fault probability corresponding to the mth trace under the key assumption i is denoted as hm,i: , ( (plaintext ))m i mh HW Sbox i= \u2295 (2) where HW represents the HW of the S-box output.\nUnder the key assumption i, the correlation coefficient of\nthe jth sampling point is denoted as ci,j :\n( )( ) ( ) ( ) , , 1 , 22\n, , 1 1\nM\nm i i m j j\nm\ni j M M\nm i i m j j m m\nh h p p\nc\nh h p p\n=\n= =\n\u2212 \u2212 =\n\u2212 \u2212\n\n  (3)\nwhere ih and j p represents the average values of the FPHW model and the actual fault probability at the ith sampling point, respectively.\nBy finding the maximum value of matrix C, the attacker can determine the correct key index kc and time index tc. The index of the maximum value is the result of the CPA attack."
        },
        {
            "heading": "B. Attack Result",
            "text": "We set the initial key to 0x04, conduct many fault injection attacks on 1000 random plaintexts, and establish fault probability traces. In the FPHW model [18], there is a negative correlation between the fault probability and HW, so the closer the correlation coefficient in the attack result is to -1, the stronger the correlation is.\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/\n4\nWe randomly select 6 plaintexts to attack and get 6 fault probability traces. The correlation coefficient results of sampling points on the traces calculated by Eq.(3) are shown in Fig. 3. When the candidate keys are 4,67,127, the correlation coefficient is the minimum value of -0.98. For that the candidate key is not unique, the key fails to recover.\nNext, we randomly select 8 plaintexts to attack, and get 8 fault probability traces. The correlation coefficient results of sampling points on the traces and the correlation coefficient results calculated by Eq.(3) are shown in Fig. 4. When the candidate key is 0x04, the correlation coefficient is the minimum value of -1, and the key is recovered successfully.\nUnder this method, the relationship between the success rate of key recovery and the number of fault probability traces is shown in Fig. 5. It can be seen that when the number of fault probability traces is 13 or more, the attacker has a 100% chance of recovering the key."
        },
        {
            "heading": "C. Analysis",
            "text": "In the attack process, we establish the fault probability trace based on the FPHW model and align multiple data groups by introducing trigger signals. Therefore, there is no need for realignment and noise reduction, significantly reducing the difficulty of data processing.\nThe computational complexity of the FPFCA algorithm is\ndenoted as \u03bb:\n16 256 M N\u03bb = \u00d7 \u00d7 \u00d7 (4).\nFIGURE 5. The relationship between the success rate and the number of fault probability traces.\nAccording to the results of attack experiments, the computational complexity of the FPFCA algorithm is 1.06 \u00d7 107 by substituting M = 200 and N =13.\nCompared with the existing CPA methods, the computational complexity of FPFCA has been significantly reduced, but the number of iterations is still significant. Therefore, we consider improving the calculation efficiency by lowering the values of M and N.\nThe calculation complexity is too high, which is mainly caused by a large amount of data redundancy in the selection of sampling points (M) and random plaintext (N) on the fault probability trace:\nFirst, there are too many sampling points in the fault probability trace. The subkey only affects the fault probability in a few moments, so not all sampling points are essential in calculating correlation. Combined with the data dependence of fault probability, we need to locate the output of the S-box more accurately and reduce the search range of sampling points by selecting the sampling points with the prominent peak of fault probability trace as POIs.\nSecond, there is much redundancy in selecting random plaintexts. All the sampling points in the fault probability\n2 4 6 8 10 12 14 16 18 20\nFault Probability Trace Number\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\nS u\ncc es\ns R\nat e\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/\n5\ntraces are required to calculate the hypothetical intermediate value. Hence, the number of iterations in the calculation is enormous.\nThe HW of single-byte data obeys the binomial distribution. Tab. I shows the probability distribution of HW for uniformly distributed 8-bit data. The data with HW of 0 and 8 have the slightest probability of occurrence, and those with HW of 4 have the highest probability of occurrence. Therefore, there must be much repetition in the randomly selected plaintexts.\nThe experiments show that the difference in fault probability corresponding to the S-box output with the same HW is almost the same, as shown in Tab. II.\nIf we select the plaintexts whose S-box outputs are of the same HW, column vectors of the hypothetical intermediate value mapped by the HW model are the same, and the corresponding fault probability traces are almost the same. In this case, it is impossible to recover the key. Therefore, we consider selecting plaintexts whose S-box outputs are of different\nHW, which can reduce the computational redundancy significantly."
        },
        {
            "heading": "IV. Fault Correlation Analysis based on Secondary",
            "text": "Filtering"
        },
        {
            "heading": "A. Scheme Design",
            "text": "Based on the above considerations, we use fewer fault probability traces and more accurate POIs to reduce the number of iterations. We improve the FPFCA scheme and propose a fault correlation analysis attack based on secondary filtering (2FFPCA). This method classifies and selects plaintexts based on HW and selects POIs more accurately, which dramatically reduces the calculation amount. The specific steps are shown in Fig. 6.\nThe steps of 2F-FPCA are as follows: \u2022Step 1: Select the output value of the first S-box in the first round of encryption in the AES-128 algorithm as the intermediate value. \u2022Step 2: Select plaintexts randomly and inject many voltage glitches in the encryption process to establish the fault probability traces.\nFor each possible key ki (1\u2264i\u2264K), perform steps 3-5:. \u2022 Step 3: Calculate the hypothetical intermediate value. Given 1 2( , , , )Mm m m \u2032= \u22efm , calculate the corresponding hypothetical intermediate value ( ), ,i j i jv f m k= (1\u2264i\u2264M, 1 \u2264j\u2264K).\n\u2022Step 4: Map the intermediate value to the fault probability. The hypothetical intermediate value vi=(v1,i,v2,i,\u2026,vM,i) is mapped to the hypothetical fault probability hi=(h1,i,h2,i,\u2026,hM,i) by the FPHW model. Remove the same value in hi and get hi'=(h1,i',h2,i',\u2026,hT,i'). \u2022Step 5: Compare the hypothetical fault probability value and the fault probability trace. Select the set of fault probability traces Pi'=(p1',p2',\u2026,pT') corresponding to hi', where pi'=(pi,1',pi,2',\u2026,pi,R') is the fault probability trace after POI selection. Compare hi'and every column of Pi'and get ci'=(ci,1',ci,2',\u2026,ci,R'), which maximum value is denoted as ci'. The maximum is denoted as c' = max{ c1', c2',\u2026, cK'} for all the ci',. The key ki' corresponding to c' is the correct key.\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/\n6\nFIGURE 6. Attack flow of 2F-FPCA."
        },
        {
            "heading": "B. Attack Process",
            "text": "According to the above scheme, we attack the implementation of the AES-128 algorithm based on MCU. The attack process is described in detail with the initial key of 0x03.\n1)POI Selection To reduce the computational complexity, we select the POIs in the fault probability trace to find the sampling points with the strongest correlation with the attack point to carry out subsequent attacks. From the above model verification results, we can see that the fault probability traces have a high degree of discrimination, so we first classify the attack traces based on the HW of the output data. Then, the summary of the difference method (SOD) is used to select the POIs.\nFor the fault probability traces ( )Trac 0, ,9i i = \u22ef with HW ( 0,1, ,8)i i = \u22ef , calculate\n( ) 1 2\n1 2 1\n7 8\n0 1\nTrac Trac i i\ni i i SOD = = +\n= \u2212  (5).\nThe SOD values of each sampling point are shown in Fig. 7. The higher the SOD value, the more significant the correlation between the sampling point and HW, so we selected 2900, 2904, 2908, 2912, and 2916ns as POIs."
        },
        {
            "heading": "2) Random Plaintexts Selection",
            "text": "We still choose the output of the first S-box in the first round of encryption as the intermediate value and inject many voltage glitches near the attack point. Find its maximum ci' for each possible key hypothesis value ki (1\u2264i\u2264K). Take k4 = 0x03 as an example to illustrate the attack process. The hypothetical fault probability is h4 = (5,5,5,4,3,5,3,3), and thus h4' = (5,4,3). The set of fault probability traces after filtering is\n3\n0.4533 0.5689 0.6389 0.5733 0.3844\n0.4567 0.5689 0.6411 0.5744 0.3856\n0.4611 0.5711 0.6500 0.5756 0.4033    \u2032 =       p .\n3) Attack Result\nCalculate that c3' = (-0.9973, -0.8660, -0.09443, -0.9997, - 0.8930), c3' = -0.9997.\nFor all the ki(1\u2264i\u2264256), the corresponding ci' calculated by Eq.(3) is shown in Fig. 8. As can be seen that the correlation coefficient of key 0x03 is closest to -1, 0x03 is supposed to be the correct key. Thus, key recovery is successful."
        },
        {
            "heading": "C. Analysis",
            "text": "Under the 2F-FPCA method, the relationship between the success rate of key recovery and the number of fault probability traces is shown in Fig. 9. The number of attack traces required for the proposed 2F-FPCA is less than that needed for FPFCA. When the number of fault probability traces is 10 or more, the attacker has a 100% chance of recovering the correct key.\nWe select 10 plaintexts randomly for key recovery. Under each key assumption, only 4.45 traces are needed by selecting plaintexts to complete the key recovery on average. By substituting M = 4.45 and N = 5 into Eq.(4), the algorithm's computational complexity is calculated as 9.11 \u00d7 104.\nIn recent years, some CPAs and improvement methods for\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/\n7\nthe AES-128 algorithm have been continuously proposed, such as CPA with biased power traces [13], CPA based on CPA with multiple filtering [19], and block CPA based on artificial intelligence [20].\nNext, as shown in Tab. V, we compare the above CPA attack methods with the FPFCA and 2F-FPCA attack methods proposed in this paper. We propose two criteria for performance evaluation: the number of traces required to recover the full key and computational complexity.\nAs described in Tab. V, the number of traces and sampling points required for the attack directly affects the computational complexity, consistent with Eq.(4). Therefore, the attacker must select the appropriate number of traces and sampling points to achieve high execution efficiency while considering the accuracy of key recovery."
        },
        {
            "heading": "V. Conclusion",
            "text": "This paper proposes a fault correlation analysis method based on secondary filtering. Based on the AES-128 algorithm of the MCU, we conducted experiments and achieved key recovery using 10 fault probability traces.\nCompared with the existing CPA methods, 2F-FPCA has\nthe following advantages:\n1) It is less affected by noise. We choose the FPHW model, which does not need to collect ciphertext and only pays attention to the response of the attack.\n2) The correct key is of apparent characteristics. The correlation coefficient between the actual fault probability corresponding to the correct key and the hypothetical fault probability value based on the FPHW model is as high as -1.\n3) The computational complexity is low. We select plaintexts with different HW of S-box output and POIs to reduce the number of traces and sampling points. Therefore, the computational complexity is significantly reduced, improving the attack efficiency.\nDue to the difference in cryptographic algorithms and selection methods, the selection results of POIs are different. Next, we will use Deep Learning to realize the automatic selection of POIs. At the same time, we consider expanding the\nrange of cryptographic algorithms targeted by attacks. Testing new and masked cryptographic algorithms is the critical research content for the next step."
        }
    ],
    "title": "Fault Probability Correlation Analysis Based on Secondary Filtering",
    "year": 2023
}