{
    "abstractText": "We study shared sequencing for different chains from an economic angle. We introduce a minimal non-trivial model that captures cross-domain arbitrageurs\u2019 behavior and compare the performance of shared sequencing to that of separate sequencing. While shared sequencing dominates separate sequencing trivially in the sense that it makes it more likely that cross-chain arbitrage opportunities are realized, the investment and revenue comparison is more subtle: In the simple latency competition induced by First Come First Serve ordering, shared sequencing creates more wasteful latency competition compared to separate sequencing. For bidding-based sequencing, the most surprising insight is that the revenue of shared sequencing is not always higher than that of separate sequencing and depends on the transaction ordering rule applied and the arbitrage value potentially realized.",
    "authors": [
        {
            "affiliations": [],
            "name": "Akaki Mamageishvili"
        }
    ],
    "id": "SP:a8c56282e1e83ef9b0db106dab3a326d0902373b",
    "references": [
        {
            "authors": [
                "Philip Daian",
                "Steven Goldfeder",
                "Tyler Kell",
                "Yunqi Li",
                "Xueyuan Zhao",
                "Iddo Bentov",
                "Lorenz Breidenbach",
                "Ari Juels"
            ],
            "title": "Flash Boys 2.0: Frontrunning in Decentralized Exchanges, Miner Extractable Value, and Consensus Instability",
            "venue": "IEEE Symposium on Security and Privacy,",
            "year": 2020
        },
        {
            "authors": [
                "Harry A. Kalodner",
                "Steven Goldfeder",
                "Xiaoqi Chen",
                "S. Matthew Weinberg",
                "Edward W. Felten"
            ],
            "title": "Arbitrum: Scalable, private smart contracts",
            "venue": "editors, 27th USENIX Security Symposium, USENIX Security 2018,",
            "year": 2018
        },
        {
            "authors": [
                "Akaki Mamageishvili",
                "Mahimna Kelkar",
                "Jan Christoph Schlegel",
                "Edward W. Felten"
            ],
            "title": "Buying time: Latency racing vs. bidding in fair transaction",
            "venue": "ordering. CoRR,",
            "year": 2023
        },
        {
            "authors": [
                "Conor McMenamin"
            ],
            "title": "SoK: Cross-Domain MEV",
            "venue": "arXiv preprint arXiv:2308.04159,",
            "year": 2023
        },
        {
            "authors": [
                "Alexandre Obadia",
                "Alejo Salles",
                "Lakshman Sankar",
                "Tarun Chitra",
                "Vaibhav Chellani",
                "Philip Daian"
            ],
            "title": "Unity is strength: A formalization of crossdomain maximal extractable value",
            "venue": "arXiv preprint arXiv:2112.01472,",
            "year": 2021
        },
        {
            "authors": [
                "Johan Hagelskjar Sjursen",
                "Weizhi Meng",
                "Wei-Yang Chiu"
            ],
            "title": "A closer look at cross-domain maximal extractable value for blockchain decentralisation",
            "venue": "IEEE International Conference on Blockchain and Cryptocurrency (ICBC),",
            "year": 2023
        }
    ],
    "sections": [
        {
            "text": "ar X\niv :2\n31 0.\n02 39\n0v 1\n[ cs\n.G T\n] 3\nWe study shared sequencing for different chains from an economic angle. We introduce a minimal non-trivial model that captures cross-domain arbitrageurs\u2019 behavior and compare the performance of shared sequencing to that of separate sequencing. While shared sequencing dominates separate sequencing trivially in the sense that it makes it more likely that cross-chain arbitrage opportunities are realized, the investment and revenue comparison is more subtle: In the simple latency competition induced by First Come First Serve ordering, shared sequencing creates more wasteful latency competition compared to separate sequencing. For bidding-based sequencing, the most surprising insight is that the revenue of shared sequencing is not always higher than that of separate sequencing and depends on the transaction ordering rule applied and the arbitrage value potentially realized."
        },
        {
            "heading": "1 Introduction",
            "text": "Cryptocurrency trading is one of the biggest use cases of blockchains that support smart contracts. Decentralized exchanges (DEXes) that run on different chains handle daily exchange volumes of billions of dollars equivalent. A lot of (potential) trading volume in DEXes is generated through arbitrage trading between different exchanges on the same chain, as well as between exchanges on different chains or between DEXes and centralized exchanges. While arbitrage opportunities on the same chain can be exploited through the atomic execution of bundles of transactions, cross-domain arbitrage is generally riskier (harder) to capture. We propose a game theoretic model that captures the different nature of same-domain versus cross-domain arbitrage on blockchains. One of our main motivation for the model is recent proposals around shared sequencing for rollups.\nRollup chains are layer-two chains built on top of Ethereum for the purpose of scaling the Ethereum main chain. They are offering lower fees and faster execution of transactions. Because of these properties, DEXes built on them already attract significant trading volume. Rollups have a designated operator,\ncalled a sequencer, which receives transactions from users and schedules these transactions for execution. Shared sequencing schemes propose to jointly process transactions for several rollups, with the ultimate aim of improving user experience. For example, with a shared sequencer the users will be able to schedule their transaction bundles atomically even if they include transactions on different rollup chains: either all transactions will be scheduled and executed or none. A secondary aim of shared sequencing is improved economics through lower operating and maintenance costs and through collecting more of the increased arbitrage value captured by traders. More specifically, users send bundles of transactions to the shared sequencer. The sequencer distributes them to corresponding chains for execution. This gives flexibility to cross-domain arbitrageurs to get their transactions scheduled on different chains simultaneously. A proposed platform for shared sequencing is for example Espresso Systems, [7]. One fundamental economic question that we address in this paper is whether shared-sequencing services really lead to improved value capture as advertised by their proponents.\nAs, in any trading activity, it is important how sequencers order transactions. Similarly to traditional finance exchanges, rollup sequencers usually use a first come first serve (FCFS) policy, see, e.g., [2]. This often generates latency competition, where parties invest into latency reduction to be competitive in arbitrage trading.1 FCFS competition may even affect the sequencer\u2019s operation. For example, Arbitrum\u2019s sequencer distributes its feed to other nodes in a fair (random) order, that is exploited by parties creating many nodes. Recently, there have been proposals to extract some fraction of MEV for rollups, see [3]. In this approach, transaction senders bid per resource unit (in the case of chains using Ethereum\u2019s EVM, per-gas) that the transaction consumes. Our game-theoretic model allows us to study FCFS-based transaction ordering, as well as bidding-based ordering. We are interested, in particular, in the latency investment resp. bidding expenditure by traders in the shared sequencers versus the multiple sequencer case and derive these quantities in equilibrium.\nWe consider two versions of our model: the baseline version assumes that traders\u2019 expenditure on executing a transaction is irreversible and independent of whether they succeed in capturing the arbitrage. This is for example the case if traders compete in latency investment with an FCFS policy. In other cases, it might be reasonable to assume instead that traders can partially recoup their cost if their arbitrage trade fails. More precisely, if bidding for inclusion is done per resource unit of the chain (per gas), the user may save a significant fraction of their cost by adding conditional statements to the transaction that check whether the price moved away from the target and not executing the transaction if it does. This approach may save a significant portion of gas usage in case of losing the race. However, it does (slightly) increase the overall cost by adding one conditional statement, which is added independently of the outcome. If the race is lost sufficiently often, which is the case in our model\n1While the latency focus of competition is special to rollups, the phenomenon of transaction-ordering induced competition in blockchains is much broader and often described under the umbrella term of MEV [1].\nwith few symmetric players, such a strategy is dominant and will be applied. Therefore, we also consider a version of our model where the loser of the race for the arbitrage trade only pays a fraction of the bid."
        },
        {
            "heading": "1.1 Related Literature",
            "text": "Cross-domain extraction in the context of blockchains was first discussed in [5]. The authors argue that to extract value, arbitrageurs should execute trades on different chains sequentially and bridge assets between them. While a useful abstraction for the formalism, in a competitive setting trades should be executed in parallel, and assets may be bridged between the chains after all trades are executed. [6] conduct an empirical analysis on cross-domain MEV. We base our modeling on this assumption of competing for the fastest execution of trades on all involved chains. A more recent survey article in the field of cross-chain MEV is [4], which describes different approaches and implementation details."
        },
        {
            "heading": "2 Model and Results",
            "text": "There are two traders, indexed by i \u2208 {1, 2}, who compete to execute an arbitrage trade.2 The trade, if successful, has a value of v > 0 to both of the traders. There are two chains. Successful execution of the trade requires to have two transactions included in the sequencer(s) earlier than the other trader. We consider two situations:\n\u2022 In the first, both transactions are processed by the same sequencer, modeling the scenario where the same sequencer serves both chains and DEXes on them. In this case, the trader can send the transaction in a single message that arrives at the sequencer with the same timestamp.\n\u2022 In the second, the two transactions need to be sent to two independent sequencers, serving the two different chains and therefore, DEXes on them.\nThe competition is modeled as follows: each trader i can invest into a signal si at a cost of C(si), where C is a strictly increasing and strictly convex function, and receives a random term \u01ebi. Trader i gets their transaction included earlier than j if and only if\nsi + \u01ebi > sj + \u01ebj.\nThe interpretation of si and \u01ebi can be different, depending on the choice of the cost function C(si). We have in particular the following scenarios in mind:\n1. The sequencer applies an FCFS transaction ordering policy. The signal si represents an investment into latency reduction that leads to a timestamp t(si + \u01ebi), where t is a strictly decreasing function. Here \u01ebi represents random fluctuations in the timestamps around the average.\n2We comment on the case of more than two traders and of more than two sequencers in the discussion section.\n2. The sequencer uses a combination of bidding and timestamp-based ordering such as the TimeBoost proposal in [3], where si is the monetary bid, \u01ebi is the timestamp (assuming that the latency technology is fixed).\n3. The sequencer runs a competitive block-building market similar to the one on Ethereum. The term si represents expenditure on fees, tips, and direct or indirect payments to intermediaries (searchers, builders, etc.) and the random term \u01ebi represents frictions and other uncertain factors in the market.\nSince our model is additive in the random terms, it suffices to specify a distribution for the difference in signals. Define the random variable \u2206ij = \u01ebi \u2212 \u01ebj . Then, the probability of winning the single sequencer competition for i is F\u2206(si \u2212 sj), where F\u2206 is the distribution of \u2206ij . We assume that F\u2206 is symmetric around 0 and uni-modal with F\u2206(0) = 1/2. That is, players are symmetric conditional on making equal investments in the signal. Therefore, the probability of winning the single sequencer competition for player j is:\nF\u2206(sj \u2212 si).\nFor the two sequencer case, if the delta in the first sequencer \u22061ij and the delta in the second sequencer \u22062ij are independent and identically distributed, and each bidder produces the same signal si for both sequencers, we have accordingly that the probability of winning the two sequencer competition for i is:\nF\u22062(si \u2212 sj) = F 2\u2206(si \u2212 sj),\nwhere F\u22062 is the distribution of the maximum of \u2206 1 ij and \u2206 2 ij .\nSymmetric Pure Strategy Equilibria\nSince our model is symmetric for the two traders (F\u2206 is symmetric, and the value v is the same for both), we are interested in symmetric pure strategy Nash equilibria, which means that the two traders choose equal average signals si = sj which are mutual best responses to the other player\u2019s strategy. For the one sequencer case, a trader\u2019s best response solves\nmax si\u22650\nF\u2206(si \u2212 sj)v \u2212 C(si).\nAssuming that the optimal signal is characterized by the first order condition and that the equilibrium is symmetric, we have candidates for equilibrium signals s\u2217 characterized by:\nC\u2032(s\u2217) = f\u2206(0)v.\nThe equation is obtained by deriving the expected payoff function with respect to the signal si, setting si = sj , and equating it to zero. Then, the equilibrium signal is\ns\u2217 = s\u2217i = s \u2217 j = (C \u2032)\u22121(f\u2206(0)v). (1)\nSimilarly for the two sequencer case, we have the optimization problem\nmax si\u22650\nF 2\u2206(si \u2212 sj)v \u2212 2C(si). (2)\nAssuming that the optimal signal is characterized by the first order condition and that the equilibrium is symmetric, we have candidates for equilibrium signals s\u2217 characterized by:\nC\u2032(s\u2217) = f\u2206(0)F\u2206(0)v = f\u2206(0)v/2. (3)\nThen, the equilibrium signal is\ns\u2217 = (C\u2032)\u22121(f(0)v/2). (4)\nIn the following subsections, we consider different specifications of C based on different sequencer designs."
        },
        {
            "heading": "2.1 Latency Competition",
            "text": "First, we consider a scenario where the platform uses an FCFS policy to order transactions. This is a standard choice in traditional financial exchanges as well as in most rollup sequencers. FCFS policies often lead to latency competition. That is, players invest in latency improvement. The interpretation of our model in this case is as follows: the signal can be interpreted as an average latency that can be improved by investment. The random noise gives fluctuation around the average.\nA straightforward parametric specification of the cost function is to assume constant cost elasticity (which can be estimated from data), C(s) = s\u03b2, where \u03b2 > 1 is the cost elasticity. The timestamp ti is a decreasing function (lower timestamps win the competition) of investment and the random term, ti(si+\u01ebi). For example we can choose t(si+ \u01ebi) =\n1 si+\u01ebi so that i wins if ti < tj \u21d4 si+ \u01ebi > sj + \u01ebj .\nProposition 1. For the single sequencer case with a high enough value of the trade, v \u2265 2 (\n\u03b2 2f(0)\n)\u03b2\n, there exists a unique pure strategy Nash equilibrium where\nboth players invest (\nf(0)v\n\u03b2\n)\u03b2/(\u03b2\u22121)\ninto latency reduction. For low value of the trade, v < 2 (\n\u03b2 2f(0)\n)\u03b2\n, both players\nin equilibrium do not invest in latency reduction.\nProof. Using the previously derived Equation 1 for the optimal signaling strategy, we obtain:\ns =\n(\nf(0)v\n\u03b2\n)1/(\u03b2\u22121)\n.\nThis induces an investment cost of:\nC(s) =\n(\nf(0)v\n\u03b2\n)\u03b2/(\u03b2\u22121) ,\nwhich is smaller than the expected value from the arb v/2 if and only if\nv 2 \u2265\n(\nf(0)v\n\u03b2\n)\u03b2/(\u03b2\u22121)\n\u21d4 v \u2265 2 ( \u03b2\n2f(0)\n)\u03b2\n.\nBy the same kind of proof for the case of two sequencers, we obtain:\nProposition 2. For the two sequencer case with a high enough value of the trade, v \u2265 8 (\n\u03b2 4f(0)\n)\u03b2\n, there exists a unique pure strategy Nash equilibrium where\nboth players invest\n2\n(\nf(0)v\n2\u03b2\n)\u03b2/(\u03b2\u22121)\ninto latency reduction. For low value of the trade, v < 8 (\n\u03b2 4f(0)\n)\u03b2\n, both players\nin equilibrium do not invest in latency reduction.\nFrom the protocol perspective, investment in latency can be seen as a waste, as it is not captured by the protocol e.g. to fund protocol development and/or other users\u2019 subsidies.\nA straightforward calculation shows that this waste with a shared sequencer is always larger than with two separate sequencers as long as the value of trade is large enough so that investing into latency happens in the two sequencer case.\nProposition 3. For a high enough value of trade v (so that traders invest in latency at all), the waste with a shared sequencer is always higher than the waste with two separate sequencers.\nProof. From the previous two propositions, the cost is higher under the shared sequencer if and only if 1 \u2265 2\u2212 1\u03b2\u22121 , which holds for any \u03b2 > 1.\nOne particularly natural case is that \u2206 is normally distributed with mean 0 and standard deviation \u03c3, in which case f(0) = 1\u221a\n2\u03c0\u03c3 .\nExample 1. For the normally distributed case, the investment into latency in the one sequencer case is\n(\nv\u221a 2\u03c0\u03b2\u03c3\n)\u03b2/(\u03b2\u22121) ,\nand for the two sequencer case is\n2\n(\nv\n2 \u221a 2\u03c0\u03b2\u03c3\n)\u03b2/(\u03b2\u22121) .\nThus, investment is increasing in the value v, decreasing in the standard deviation of noise \u03c3, and decreasing in cost elasticity \u03b2."
        },
        {
            "heading": "2.1.1 Constant Cost Elasticity for Bidding",
            "text": "The previously analyzed cost function can be given a different interpretation as the cost of bidding in a bidding-based transaction ordering scheme. This could for example be a block-based system where bidders bid for positions in the block, but random factors in the block building market perturb the ranking. Alternatively, it could be a hybrid bidding scheme, similar to TimeBoost (which we analyze in the next section) in which time advantage is bought. In the latter case, we would need to impose an upper bound on bidding needed for the liveness of the protocol. In the case of bidding instead of latency investment, expenditure by traders is captured by the protocol so that the comparison flips (revenue instead of waste) and a shared sequencer is preferable.\nProposition 4. For constant cost elasticity and high enough value of trade v (so that traders invest in latency at all), the bidding revenue with a shared sequencer is always at least as high as the bidding revenue with two separate sequencers.\nThe previous result assumed that there is no upper bound on the signal that bidders can produce. A natural variant is a cap s\u0304 on s. For low values of U we have an opposite result, in particular, the following holds:\nProposition 5. For s\u0304 < (\nvf(0) 2\u03b2\n)1/(1\u2212\u03b2) , the revenue with a shared sequencer\nis lower than the total revenue with separate sequencers.\nProof. In the case of a low enough value of s\u0304, the only pure Nash equilibrium of the single sequencer game is for both players to bid s\u0304 in which case the revenue per bidder is s\u0304\u03b2 . In the case of shared sequencers, the revenue per bidder is the minimum of 2( f(0)v2\u03b2 ) \u03b2/(\u03b2\u22121) and 2s\u0304\u03b2 which is larger than s\u0304\u03b2 if s\u0304 is small enough."
        },
        {
            "heading": "2.2 TimeBoost",
            "text": "In this section, we consider the TimeBoost proposal, [3]. In the proposal, transactions are ordered by a combination of time stamps and bids. More precisely, transactions are ordered by a score:\ns\u2212 t,\nwhere t is the timestamp of the arrival of a bid at the sequencer and 0 \u2264 s < g is the \u201dtime boost\u201d which is a function of a bid submitted together with\nthe transaction. Here the parameter g > 0 bounds the maximal time boost to guarantee the finality of the ordering policy. Following the formula of the original TimeBoost proposal [3], we get the following fee for producing a boost of s:\nC(si) = csi\ng \u2212 si ,\nwhere c > 0 is a parameter representing an approximate normalized marginal cost. Given the cost function for the TimeBoost proposal, the marginal cost is\nC\u2032(si) = cg\n(g \u2212 si)2 ,\nso that our equilibrium condition becomes:\ncg\n(g \u2212 s\u2217)2 = f(0)v \u21d2 s \u2217 = g \u2212\n\u221a cg\n\u221a f(0)v ,\nwhich for the normal distribution becomes\ns\u2217 = g \u2212 \u221a\u221a\n2\u03c0cg\u03c3\u221a v .\nTo guarantee the existence of a pure strategy symmetric Nash equilibrium, we need to make sure that the candidate for the optimal signal through the FOC is positive, and gives positive profit (otherwise the best response to s\u2217 would be 0 instead of s\u2217). This gives the following conditions:\nProposition 6. For the single sequencer case with parameters f(0), c, g, v such that\n1 + cv + v 4c \u2265 gf(0)\nthere exists a pure strategy Nash equilibrium where both players produce a signal of\ns\u2217 =\n\n\n\ng \u2212 \u221a\ncg vf(0) , if v > c gf(0)\n0, if v \u2264 cgf(0) with cost\nmax{ \u221a cgf(0)v \u2212 c, 0}.\nProof. From Equation 1 with C\u2032(s) = cg(g\u2212s)2 we obtain the expression for the optimal signal s\u2217. Substituting the optimal signal in the cost function C(s) = cs g\u2212s gives the expression for the cost. The parameter restriction comes from the requirement that in equilibrium profit v/2\u2212C(s\u2217) needs to be non-negative.\nBy the same logic for the case two sequencers\nProposition 7. For the two sequencer case with parameters f(0), c, g, v such that\n1 + cv + v 4c \u2265 gf(0) 2\nthere exists a pure strategy Nash equilibrium where both players produce a signal\ns\u2217 =\n\n\n\ng \u2212 \u221a\n2cg vf(0) , if v > 2c gf(0)\n0, if v \u2264 2cgf(0)\nin each of the two sequencers with cost\nmax{ \u221a 2cgf(0)v \u2212 2c, 0}.\nExample 2. For the normally distributed case, the revenue in the one sequencer case is\n\u221a\ncgv\u221a 2\u03c0\u03c3 \u2212 c,\nand for the two sequencer case is\n\u221a\n2cgv\u221a 2\u03c0\u03c3 \u2212 2c.\nThus, investment is increasing in the value v, increasing in the standard deviation of noise \u03c3, increasing in the time boost parameter. The effect of an increase in the parameter c > 0 is increasing for small c and decreasing for large c.\nIt is interesting to compare the expenditure on signaling in both cases. We can interpret the fraction cg as an approximation to the marginal cost of bidding. The following proposition then states that the expenditure is larger in the two sequencer case, if the marginal cost of bidding is low, the variance in noise is small or the valuation is large. In these cases, the two sequencer case produces more revenue. Otherwise, the shared sequencer produces more revenue.\nProposition 8. For the time boost policy with normally distributed \u2206, the bidding revenue for two separate sequencers is larger than the revenue under a shared sequencer if and only\n0.068447 v \u03c3 \u2265 c g ,\ni.e. if the marginal cost of bidding is small, the value of the trade is high or the variance in timestamps is low.\nProof. We have\n\u221a\n2 cgv\u221a 2\u03c0\u03c3 \u2212 2c \u2265 \u221a cgv\u221a 2\u03c0\u03c3 \u2212 c \u21d4 0.414214 \u221a cgv\u221a 2\u03c0\u03c3 \u2265 c \u21d4 0.068447 v \u03c3 \u2265 c g .\nThe previous analysis took the parameter c as given. Next, we consider the revenue when choosing the parameter in an optimal way. The assumption\nis that the sequencer sets these parameters ex-ante assuming v is distributed according to a CDF G on the non-negative reals.3\nProposition 9. Under time boost, assuming 4 \u2265 gf(0), the ex-ante revenue for a shared sequencer is the same as the revenue from two separate sequencers if the parameter c > 0 is optimally chosen.\nProof. The parameter restriction 4 \u2265 gf(0) guarantees that a pure strategy Nash equilibrium exists for any c > 0 in both cases. Let G be the distribution of values v. For the shared sequencer case the revenue optimisation problem is the following:\nmax c>0\n\u222b \u221e\nc gf(0)\n( \u221a cgf(0)v \u2212 c)dG(v).\nFor the two sequencer case, the optimisation problem is:\nmax c>0\n\u222b \u221e\n2c gf(0)\n( \u221a 2cgf(0)v \u2212 2c)dG(v).\nNow note that with the substitution c\u0303 := 2c the second problem becomes equivalent to the first problem and therefore has the same objective value"
        },
        {
            "heading": "3 Extensions",
            "text": "In this section, we consider extensions to the base model presented in the paper so far."
        },
        {
            "heading": "3.1 More than 2 Players and Chains",
            "text": "The results can be straightforwardly extended to the case of multiple chains, as long as the distributions of deltas are independent between chains. In that case the probability of winning for player i is given by Fn\u2206(si \u2212 sj) and an analogous argument as previously the first order condition\nC\u2032(s\u2217) = f\u2206(0)F n\u22121 \u2206 (0)v = f\u2206(0)v/2 n\u22121.\nwhich leads to the equilibrium signal\ns\u2217 = (C\u2032)\u22121(f(0)v/2n\u22121). (5)\nNote that the signal is exponentially decreasing in n. The generalization to more than two players is more complicated, as now the probability of winning does not only depend on the difference of two signaling strategies, but rather on all marginal distributions of signals. However, qualitatively we expect similar results as in the two player case.\n3The same analysis can be conducted for the optimal choice of g. However, choosing g differently has other implications beyond revenue as it influences the time until the finality of a transaction."
        },
        {
            "heading": "3.2 Smaller cost in case of losing",
            "text": "We have assumed that in case the trader does not win, he still incurs the full cost of bidding. It is natural to consider the extension where in case of losing, the player pays only an \u03b1 fraction of the total bid. Then, the optimization problem with one sequencer becomes:\nmax si\u22650\nF\u2206(si \u2212 sj)(v \u2212 C(si)) + (1\u2212 F\u2206(si \u2212 sj))(\u2212\u03b1C(si)). (6)\nThe first summand corresponds to the expected gains of winning the race, and the second summand corresponds to the expected losses of losing the race. The first order condition on (6) with respect to s gives:\nf\u2206(si \u2212 sj)v \u2212 (1 \u2212 \u03b1)(f\u2206(si \u2212 sj)C(si) + F\u2206(si \u2212 sj)C\u2032(si))\u2212 \u03b1C\u2032(si) = 0.\nPlugging in si = sj and F\u2206(0) = 1 2 gives an equation from which we can\nsolve for si:\nf\u2206(0)v \u2212 (1 \u2212 \u03b1)(f\u2206(0)C(si) + 1/2C\u2032(si))\u2212 \u03b1C\u2032(si) = 0. (7) Note that the case \u03b1 = 1 corresponds to the equilibrium condition (1). For the constant cost elasticity previously analyzed in Section 2.1, C(s) = s\u03b2, we can show that the equilibrium solution is decreasing in \u03b1 provided that the cost elasticity is large enough. In particular, the signal with positive \u03b1 is always higher than the solution from (1):\nProposition 10. The equilibrium signal s is decreasing in \u03b1 for \u03b2 \u2265 2.\nProof. Without loss of generality, assume that f\u2206(0) = 1 and v = 1, a normalization. After plugging in the values for f\u2206(0), v and simplification, the equation (7) becomes\nT (\u03b1, si) := 1\u2212 (1 \u2212 \u03b1)(s\u03b2i + 1/2\u03b2s \u03b2\u22121 i )\u2212 \u03b1\u03b2s \u03b2\u22121 i = 0. (8)\nBy the implicit function theorem, we get:\n\u2202T/\u2202si \u2202T/\u2202\u03b1\n= \u2212(1\u2212 \u03b1)\u03b2s\u03b2\u22121i \u2212 1/2(1\u2212 \u03b1)\u03b2(\u03b2 \u2212 1)s \u03b2\u22122 i \u2212 \u03b1\u03b2(\u03b2 \u2212 1)s \u03b2\u22122 i\ns\u03b2i + 1/2\u03b2s \u03b2\u22121 i \u2212 \u03b2s \u03b2\u22121 i\n.\nThe nominator of the right-hand side of the above expression is always negative. The denominator: s\u03b2i \u2212 12\u03b2s \u03b2\u22121 i is negative for \u03b2 large enough, since si \u2264 \u03b2/2 holds for any \u03b2 \u2265 2. The reason is that if the value is v = 1, the investment in the equilibrium can not be more than 1. That is, si that solves (8) equation is decreasing in \u03b1 parameter.\nSimilarly to the shared sequencer case, we can show that the equilibrium solution for the two separate sequencers is decreasing in \u03b1 if the cost elasticity is large enough. The optimization problem in case of 2 sequencers is:\nmax si\u22650\nF 2\u2206(si \u2212 sj)(v \u2212 2C(si))\u2212 2F\u2206(si \u2212 sj)(1 \u2212 F\u2206(si \u2212 sj))(1 + \u03b1)C(si)\u2212\n(1 \u2212 F\u2206(si \u2212 sj))22\u03b1C(si).\nThe first term corresponds to the expected gains of winning both races and therefore, obtaining an arbitrage value. The second term corresponds to the expected losses of winning one race and losing the other. In this case, full cost in the first race and fractional cost in the second race are incurred. The third term corresponds to the expected losses of losing both races. In this case, fractional costs in both races are incurred. The first order condition is:\n2F\u2206(si \u2212 sJ )f\u2206(si \u2212 sJ)(v \u2212 2C(si)) + F 2\u2206(si \u2212 sj)(\u22122C\u2032(si))\u2212 (2f\u2206(si \u2212 sj)\u2212 4F\u2206(si \u2212 sj)f\u2206(si \u2212 sj))(1 + \u03b1)C(si)\u2212 2(F\u2206(si \u2212 sj)\u2212 F 2\u2206(si \u2212 sj))(1 + \u03b1)C\u2032(si)\u2212 2(1\u2212 F\u2206(si \u2212 sj))(\u2212f\u2206(si \u2212 sj))2\u03b1C(si)\u2212 (1\u2212 F\u2206(si \u2212 sj))22\u03b1C\u2032(si) = 0,\nwhich after plugging in si = sj and F (0) = 1 2 becomes\nf\u2206(0)(v \u2212 2C(si))\u2212 (1 + \u03b1)C\u2032(si) + 2\u03b1f\u2206(0)C(si) = 0. (9)\nNote that the case \u03b1 = 1 corresponds to the equilibrium condition (3). A similar calculation as before establishes the monotonicity of the equilibrium signal. Comparing the equilibrium cost between shared and separate sequencing in this extended model is less tractable than in the baseline model. However, we can obtain numerical comparison results by solving equations (7) and (9), for given C, F and \u03b1.\nOther Cost Functions, Noise Models and Empirical Work\nWe currently explore other extensions of the model as well. A common design proposal for transaction ordering is frequent ordering auction design where transactions are processed in batches according to bids attached to the transactions. Randomness comes into play because whether or not a transaction makes it into the batch is determined by time stamps. Towards the end of a batch, this introduces randomness about which transactions make it into the current or the next batch. An ordering auction formulation would require a different cost function specification, as well as a non-additive noise model. Another extension of our model that we currently explore is to calibrate the parameters of our model according to real-world data. This gives a precise sense of the magnitude of the effects studied."
        }
    ],
    "title": "Shared Sequencing and Latency Competition as a Noisy Contest",
    "year": 2023
}