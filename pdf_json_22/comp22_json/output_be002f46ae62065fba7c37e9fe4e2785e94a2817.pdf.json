{
    "abstractText": "Multi-party computation (MPC) is promising for designing privacy-preserving machine learning algorithms at edge networks. An emerging approach is coded-MPC (CMPC), which advocates the use of coded computation to improve the performance of MPC in terms of the required number of workers involved in computations. The current approach for designing CMPC algorithms is to merely combine efficient coded computation constructions with MPC. Instead, we propose a new construction; Adaptive Gap Entangled polynomial (AGE) codes, where the degrees of polynomials used in computations are optimized for MPC. We show that MPC with AGE codes (AGE-CMPC) performs better than existing CMPC algorithms in terms of the required number of workers as well as storage, communication and computation load.",
    "authors": [
        {
            "affiliations": [],
            "name": "Elahe Vedadi"
        },
        {
            "affiliations": [],
            "name": "Yasaman Keshtkarjahromi"
        },
        {
            "affiliations": [],
            "name": "Hulya Seferoglu"
        }
    ],
    "id": "SP:bad959ca516afbcaf1b9afe10567ba3a0b945b86",
    "references": [],
    "sections": [
        {
            "text": "Adaptive Gap Entangled Polynomial Coding for Multi-Party Computation at the Edge\nElahe Vedadi University of Illinois at Chicago\nevedad2@uic.edu\nYasaman Keshtkarjahromi Seagate Technology\nyasaman.keshtkarjahromi@seagate.com\nHulya Seferoglu University of Illinois at Chicago\nhulya@uic.edu\nAbstract\u2014Multi-party computation (MPC) is promising for designing privacy-preserving machine learning algorithms at edge networks. An emerging approach is coded-MPC (CMPC), which advocates the use of coded computation to improve the performance of MPC in terms of the required number of workers involved in computations. The current approach for designing CMPC algorithms is to merely combine efficient coded computation constructions with MPC. Instead, we propose a new construction; Adaptive Gap Entangled polynomial (AGE) codes, where the degrees of polynomials used in computations are optimized for MPC. We show that MPC with AGE codes (AGE-CMPC) performs better than existing CMPC algorithms in terms of the required number of workers as well as storage, communication and computation load.\nI. INTRODUCTION\nMASSIVE amount of data is generated at edge networks.For example, the data generated by IoT devices are expected to reach 73.1 ZB by 2025, growing from 18.3 ZB in 2019 [1]. This vast data is expected to be processed in real-time in many time sensitive edge applications, which is extremely challenging if not impossible with existing centralized cloud due to limited bandwidth between an edge network and centralized cloud [2]\u2013[4].\nWe consider a distributed computing system at the edge, where data is generated and collected by end devices, Fig. 1. Computationally intensive aspects are distributively processed by edge servers and a central server collects the outcome of the processed data. In this context, it is crucial to design efficient computation mechanisms at edge servers by taking into account the limited resources, including the number of edge serves, computing power, storage, and communication cost, while preserving privacy of data at end devices.\nMulti-party computation (MPC) is a privacy-preserving distributed computing framework [5]. In MPC, several parties (end devices in Fig. 1) have private data and the goal is to compute a function of data collectively with the participation of all parties, while preserving privacy, i.e., each party only knows its own information. MPC can be categorized into cryptographic solutions [6], [7] and information-theoretic solutions [8]. In this paper, our focus is on the information-theoretic MPC solution; BGW [8] using Shamir\u2019s secret-sharing scheme [9] thanks to its lower computational complexity and quantum safe nature [10]. Despite its potential, BGW does not take into account the limited resources at the edge.\nAn emerging approach is coded-MPC (CMPC), which advocates the use of coded computation [11], [12] to improve the performance of BGW in terms of the required number of workers (edge servers in Fig. 1) involved in computationally intensive computations. For example, there may be two end devices in Fig. 1 possessing private matrices A and B. The goal is to calculate Y = ATB with the help of edge servers, while preserving privacy. This multiplication is a computationally intensive task when the sizes of A and B are large.\nThe common approach for designing CMPC algorithms is to merely combine efficient coded computation constructions with MPC. This approach fails short of being efficient as it does not take into account the interaction between coded computation and MPC [13]. Indeed, CMPC mechanisms based on Shamir\u2019s secret shares create a polynomial for each matrix for matrix multiplication with two parts; coded and secret terms [14]\u2013[16]. The multiplication of matrices, i.e., the multiplication of these polynomials create cross terms of coded and secret terms, some of which are not used in the decoding process, so named garbage terms [13].\nThe garbage terms are crucial for the performance of CMPC. In fact, even if a construction is optimized for coded computation, it may not perform well in CMPC. It was shown in [13] that PolyDot coded MPC is better than entangled polynomial coded MPC (Entangled-CMPC) [14] in terms of the required number of workers for a range of colluding workers. This result is surprising as it is known that entangled\nar X\niv :2\n20 3.\n06 75\n9v 2\n[ cs\n.D C\n] 1\n5 M\nar 2\n02 2\npolynomial codes always outperform PolyDot codes in terms of the number of required workers for coded computation [17]. Motivated by this observation, we propose a new construction in this paper; Adaptive Gap Entangled (AGE) codes, where the degrees of polynomials used in computations are optimized for MPC. We show through analysis and simulations that MPC with AGE codes performs better than existing CMPC algorithms including PolyDot-CMPC [13], Entangled-CMPC [14], SSMM [15], and GCSA-NA [16] in terms of the required number of workers as well as storage, communication and computation load."
        },
        {
            "heading": "II. RELATED WORK",
            "text": "Coded computation advocates higher reliability and smaller delay in distributed computation by introducing redundancy in the offloaded sub-tasks to the workers [18]. Significant effort is being put on constructing codes for fast and distributed matrixvector multiplication [18], [19], matrix-matrix multiplication [17], [20]\u2013[22], dot product and convolution of two vectors [23], [24], gradient descent [25]\u2013[27], distributed optimization [28], Fourier transform [29], and linear transformations [30]. As compared to this line of works, we consider privacypreserving computation at edge networks.\nPrivacy is studied in coded computation. In [31]\u2013[33], the problem of matrix-matrix multiplication is considered for the case that a master possesses the input data and would like to perform multiplication on the data with the help of parallel workers, while the data is kept confidential from the workers. In [34] and [35], privacy is addressed for the same system model of master-worker setup, but for matrix-vector multiplication. As compared to this line of work, we focus on the MPC system setup, where there are multiple sources each having private input data, and the goal is that a master learns the result of computation of matrix multiplication on the input data with the help of parallel workers. The input data should be kept confidential from workers and the master according to the information-theoretic security.\nThere is a line of work investigating CMPC. Lagrange Coded Computing (LCC) is designed [36] in a coded computation setup for security and privacy. This work is extended for MPC setup [37]. The problem of limited memory at each party in MPC setup is addressed in [38] by leveraging polynomial coded computation. This work is generalized using entangled polynomial codes for block-wise matrix multiplication [14]. Secure multi-party batch matrix multiplication is considered in [15], [16], which modify the MPC system setup by employing the idea of noise alignment to reduce the communication load among workers. As compared to this line of work, we design AGE-CMPC by taking into account the interaction of coded computation and MPC for the limited edge resources."
        },
        {
            "heading": "III. SYSTEM MODEL",
            "text": "Notations. Set of polynomial degrees: The set of powers of the terms in a given polynomial f(x) = \u2211n i=0 aix\ni with non-zero coefficients is denoted by P(f(x)), i.e., P(f(x)) = {i \u2208 Z : 0 \u2264 i \u2264 n, ai 6= 0}.\nSet definitions and operations: We use the following standard notations for arbitrary sets A and B, where the elements of A, B are integers, i.e., a, b \u2208 Z; (i) A + B = {a+ b : a \u2208 A, b \u2208 B}, and (ii) A+ b = {a+ b : a \u2208 A}. The cardinality of A is shown by |A|. The set of integers between a and b is represented by \u2126ba, i.e., \u2126 b a = {a, . . . , b}. Furthermore, k|m means that m is divisible by k, i.e., mod {m, k} = 0. Matrix splitting: If a matrix A is divided into s row-wise and t column-wise partitions, it is represented as\nA =  A0,0 . . . A0,t\u22121... . . . ... As\u22121,0 . . . As\u22121,t\u22121  , (1) where for A \u2208 Fm\u00d7m, Aj,i \u2208 F m s \u00d7 m t for j \u2208 \u2126s\u221210 and i \u2208 \u2126t\u221210 . Setup. We consider a system setup with E end devices, N edge servers (workers), and a central server (master) as shown in Fig. 1. Each source e \u2208 E , where E = |E|, has private data Xe \u2208 F\u00b5\u00d7\u03bd , where F is a finite field. Each source is connected to all workers, and offloads its data to workers for privacy-preserving computation. Each worker Wn, n \u2208 N (|N | = N ) is connected to other workers as well as the master. The sources, workers, and the master are all edge devices with limited available resources.\nApplication. The goal is to calculate a function of per source data; Y = \u03b3(X1, . . . , XE), while the privacy of data X1, . . . , XE is preserved. While function \u03b3(.) could be any polynomial function in MPC setup, we focus on matrix multiplication as (i) we would like to present our ideas in a simple way, and (ii) matrix multiplication forms an essential building block of many signal processing and machine learning algorithms (gradient descent, classification, etc.) [11]. In particular, we consider Y = \u03b3(A,B) = ATB, where X1 = A, X2 = B, A \u2208 Fm\u00d7m, B \u2208 Fm\u00d7m. We note that we use square matrices from two sources for easy exposition, and it is straightforward to extend our results for more general matrices and larger number of sources.\nAttack Model. We assume a semi-honest system model, where the sources, the workers, and the master follow the defined protocols, but they are curious about the private data. We assume that z among N workers can collude to maximize the information that they can access. We design our AGECMPC mechanism against z colluding workers to provide privacy-preserving computation.\nPrivacy Requirements. We define the privacy requirements from the perspective of the sources, workers, and the master.\nSource perspective: Source devices should not learn anything about the private data of any other sources. This requirement is satisfied in our system as there is no communication among the source devices. Also, the workers and the master do not send any information to sources.\nWorker perspective: Each worker should not learn anything about the private data X1, . . . , XE from the perspective of information-theoretic security. In particular, workers should not learn anything when they communi-\ncate with each other as well as when they receive data from the sources, i.e., H\u0303(X1, . . . , XE | \u22c3 n\u2208Nc ({Gn\u2032(\u03b1n), n\u2032 \u2208 {1, . . . , N}}, \u222a e\u2208E\nFe(\u03b1n))) = H\u0303(X1, X2, ..., XE), where H\u0303 denotes the Shannon entropy, \u03b1n is a priori parameter associated by worker Wn, e.g., we set \u03b1n = n, Gn\u2032(\u03b1n) is the data each worker Wn receives from another worker Wn\u2032 , Fe(\u03b1n) is the data received by each worker Wn from source e for n \u2208 Nc, and Nc is any subset of N satisfying |Nc| \u2264 z.\nMaster perspective: The master node should not learn anything more than the final result Y , i.e., H\u0303(\u03c71, . . . , \u03c7E |Y, \u22c3 n\u2208N I(\u03b1n)) = H\u0303(\u03c71, . . . , \u03c7E |Y ), where I(\u03b1n) is the data that the master receives from Wn."
        },
        {
            "heading": "IV. ADAPTIVE GAP ENTANGLED POLYNOMIAL CODING",
            "text": "In this section, we introduce Adaptive Gap Entangled polynomial (AGE) codes and present our CMPC design with AGE codes; AGE-CMPC.\nA. AGE Codes\nWe consider the generalized formulation [17] for coded computation of matrices A and B, where A and B are represented with the following polynomials.\nCA(x) = t\u22121\u2211 i=0 s\u22121\u2211 j=0 Ai,jx j\u03b1+i\u03b2 ,\nCB(x) = s\u22121\u2211 k=0 t\u22121\u2211 l=0 Bk,lx (s\u22121\u2212k)\u03b1+\u03b8l (2)\nwhere \u03b1, \u03b2, \u03b8 \u2208 N, Ai,j \u2208 AT and Bk,l \u2208 B. In this setup, instead of multiplying Y = ATB, we can multiply CA(x) and CB(x), which can be decomposed to support distributed computing. Several codes that have been designed for coded computation can be considered as the special case of (2) by considering different values of (\u03b1, \u03b2, \u03b8). For example, PolyDot codes [22] correspond to (\u03b1, \u03b2, \u03b8) = (t, 1, t(2s \u2212 1)), while Generalized PolyDot codes [39] and Entangled polynomial codes [17] follow (\u03b1, \u03b2, \u03b8) = (1, s, ts), where t is the number of column-wise partitions and s is the number of row-wise partitions of matrices A and B.\nWe design our AGE codes by considering (\u03b1, \u03b2, \u03b8) = (1, s, ts+\u03bb), where \u03bb is a parameter in the range of 0 \u2264 \u03bb \u2264 z, which we optimize to achieve the minimum required number of workers for MPC. We note that Entangled polynomial codes [17] also follows (2) for \u03b1 = 1 and \u03b2 = s, but as they are designed for coded computation, \u03b8 is optimized to achieve the minimum recovery threshold, so \u03b8 is set to \u03b8 = ts. Instead, we set \u03b8 = ts+\u03bb and optimize \u03bb. Next, we prove the decodability of our AGE codes.\nTheorem 1: AGE code guarantees the decodability of Y = ATB from the polynomial CY (x) = CA(x)CB(x).\nProof: The proof is provided in Appendix A.\nB. AGE-CMPC\nPhase 1 - Sources Share Data with Workers. In the first phase, sources split their matrices A and B into s \u2265 1 rowwise and t \u2265 1 column-wise partitions1 as in (1), where s|m and t|m are satisfied. Assuming Ai,j \u2208 AT and Bk,l \u2208 B, where i, l \u2208 \u2126t\u221210 , j, k \u2208 \u2126 s\u22121 0 , the sources create polynomials FA(x) and FB(x), which comprise coded and secret terms; i.e., Fi\u2032(x) = Ci\u2032(x) + Si\u2032(x), i\u2032 \u2208 {A,B}, where Ci\u2032(x)\u2019s are the coded terms defined by AGE codes and Si\u2032(x)\u2019s are the secret terms which are defined by our AGE-CMPC design, which we explain next.\nLet P(CA(x)) and P(CB(x)) be the set of all powers in the polynomials CA(x) and CB(x), with non-zero coefficients.\nP(CA(x)) ={j + si : i \u2208 \u2126t\u221210 , j \u2208 \u2126 s\u22121 0 }\n={0, . . . , ts\u2212 1}, (3)\nP(CB(x)) ={(s\u2212 1\u2212 k) + l(ts+ \u03bb) : k \u2208 \u2126s\u221210 , l \u2208 \u2126 t\u22121 0 },\n(4)\nwhere, s, t \u2208 N and \u03bb \u2208 \u2126z0. SA(x) and SB(x) are defined such that P(CA(x)SB(x)), P(SA(x)CB(x)), and P(SA(x)SB(x)) do not have common terms with the important powers of P(CA(x)CB(x)), which are equal to (s\u2212 1) + si + (ts + \u03bb)l for i, l \u2208 \u2126t\u221210 . The reason is that {(s\u2212 1\u2212 k + j)\u03b1+ i\u03b2 + \u03b8l : i, l \u2208 \u2126t\u221210 , j, k \u2208 \u2126 s\u22121 0 s, t \u2208 N} is the set of powers of polynomial CA(x)CB(x). The components of the desired product Y = ATB are equal to Yi,l = \u2211s\u22121 j=0 AijBjl, for i, l \u2208 \u2126 t\u22121 0 , that are the summation of the coefficients of the terms with j = k \u2208 \u2126s\u221210 . Therefore {(s \u2212 1)\u03b1 + i\u03b2 + \u03b8l : i, l \u2208 \u2126t\u221210 , s, t \u2208 N} is the set of important powers of CA(x)CB(x), and for successful recovery of Y , these components should not have any overlap with the other components, i.e., garbage terms. In other words, the following conditions should be satisfied:\nC1: (s\u2212 1) + si+ (ts+ \u03bb)l 6\u2208 P(SB(x)) + P(CA(x)), C2: (s\u2212 1) + si+ (ts+ \u03bb)l 6\u2208 P(SA(x)) + P(CB(x)), C3: (s\u2212 1) + si+ (ts+ \u03bb)l 6\u2208 P(SA(x)) + P(SB(x)). (5)\nOur strategy for determining P(SA(x)) and P(SB(x)) is as follows. First, we set the elements of P(SB(x)) as z consecutive elements starting from the maximum important power plus one, i.e., s\u22121+s(t\u22121)+(ts+\u03bb)(t\u22121) plus one; P(SB(x)) = {ts+(ts+\u03bb)(t\u22121), . . . , ts+(ts+\u03bb)(t\u22121)+z\u2212 1} or equivalently: P(SB(x)) = {ts+\u03b8(t\u22121)+r, r \u2208 \u2126z\u221210 }. We note that the elements of P(CA(x)) and P(SA(x)) are powers of polynomials, so they are non-negative. Therefore, by starting the elements of P(SB(x)) from the maximum important power plus one, C1 and C3 are satisfied. Then, we find all elements of the subset of P(SA(x)), starting from the minimum possible element, that satisfies C2 in (5). Using this\n1We note that in AGE-CMPC, we exclude the case of no partitioning, i.e., s = t = 1; This case is considered in BGW, where coding is not required, and thus is excluded from our Coded MPC setup.\nrule, we can determine SA(x) and SB(x) as\nSA(x) = { SA1(x) z > \u03bb, and t 6= 1 SA2(x) z = \u03bb, or t = 1\n(6)\nwhere SA1(x) = \u2211\u03bb\u22121 w=0 \u2211q\u22121 l=0 A\u0304(w+\u03b8l)x\nts+\u03b8l+w +\u2211z\u22121\u2212q\u03bb u=0 A\u0304(u+\u03bb+\u03b8(q\u22121))x ts+\u03b8q+u, SA2(x) = \u2211z\u22121 u=0 A\u0304ux ts+u, and A\u0304(w+\u03b8l), A\u0304(u+\u03bb+\u03b8(q\u22121)), and A\u0304u are chosen independently and uniformly at random in Fmt \u00d7ms .\nSB(x) = z\u22121\u2211 r=0 B\u0304rx ts+\u03b8(t\u22121)+r, (7)\nwhere B\u0304r is chosen independently and uniformly at random in Fms \u00d7mt .\nTheorem 2: The polynomials SA(x) and SB(x) defined in (6) and (7) satisfy the conditions in (5). Proof: The proof is provided in Appendix B.\nIn phase 1, source 1 shares FA(\u03b1n) and source 2 shares FB(\u03b1n) with each worker Wn. Due to using z random terms in constructing FA(x) and FB(x), no information about A and B is revealed to any workers.\nPhase 2 - Workers Compute and Communicate. The second phase consists of workers processing data received from the sources and sharing the results with each other. In this phase, each worker Wn calculates H(\u03b1n) = FA(\u03b1n)FB(\u03b1n), where H(x) is defined as:\nH(x) = deg(FA(x))+deg(FB(x))\u2211 n=0 Hnx n = FA(x)FB(x), (8)\nwhere Hu = \u2211s\u22121 j=0 Ai,jBj,l are the coefficients that are required for calculating ATB, i.e., u = si + (s\u2212 1) + \u03b8l for i, l \u2208 \u2126t\u221210 . Each worker Wn has the knowledge of one point from H(x) through calculation of H(\u03b1n) = FA(\u03b1n)FB(\u03b1n). By applying Lagrange interpolation on (8), there exist r(i,l)n \u2019s such that\nHu = s\u22121\u2211 j=0 AijBjl = N\u2211 n=1 r(i,l)n H(\u03b1n). (9)\nThus, each worker Wn multiplies r (i,l) n \u2019s with H(\u03b1n) and shares them with the other workers, securely. In particular, for each worker Wn, there are t2 coefficients of r (i,l) n . Therefore, each worker Wn creates a polynomial Gn(x) with the first t2 terms allocated to multiplication of r(i,l)n with H(\u03b1n) and the last z terms allocated to random coefficients to keep H(\u03b1n) confidential from z colluding workers:\nGn(x) = t\u22121\u2211 i=0 t\u22121\u2211 l=0 r(i,l)n H(\u03b1n)x i+tl + z\u22121\u2211 w=0 R(n)w x t2+w, (10)\nwhere R(n)w , w \u2208 \u2126z\u221210 are chosen independently and uniformly at random from Fmt \u00d7mt . Each worker Wn sends Gn(\u03b1n\u2032) to all other workers Wn\u2032 . After all the data exchanges, each worker Wn\u2032 has the knowledge of Gn(\u03b1n\u2032), which sums them up and sends it to the master in the last\nphase. The following equation represents the polynomial that is equal to the summation of Gn(x):\nI(x) = N\u2211 n=1 Gn(x), (11)\nwhich can be equivalently written as:\nI(x) = t\u22121\u2211 i=0 t\u22121\u2211 l=0 N\u2211 n=1 r(i,l)n H(\u03b1n)x i+tl + z\u22121\u2211 w=0 N\u2211 n=1 R(n)w x t2+w\n= t\u22121\u2211 i=0 t\u22121\u2211 l=0 s\u22121\u2211 j=0 AijBjlx i+tl + z\u22121\u2211 w=0 N\u2211 n=1 R(n)w x t2+w. (12)\nPhase 3 - Master Node Reconstructs Y = ATB. As seen in (12), the coefficients for the first t2 terms of I(x) represent the components of the matrix Y = ATB. On the other hand, the degree of I(x) is t2 + z \u2212 1, therefore, the master can reconstruct I(x) and extract Y = ATB after receiving I(\u03b1n) from t2 + z workers.\nTheorem 3: The total number of workers required to compute Y = ATB using AGE-CMPC, when there exist z colluding workers and each worker can work on at most 1st fraction of data from each source due to the computation or storage constraints, is expressed as\nNAGE-CMPC =\n{ min \u03bb \u0393(\u03bb) t 6= 1\n2s+ 2z \u2212 1 t = 1 (13)\nwhere \u0393(\u03bb) is defined as\n\u0393(\u03bb) =  \u03a51(\u03bb), z > ts\u2212 s, \u03bb = 0 \u03a52(\u03bb), z \u2264 ts\u2212 s, \u03bb = 0 \u03a53(\u03bb), \u03bb = z \u03a54(\u03bb), z > ts, 0 < \u03bb < z \u03a55(\u03bb), z \u2264 ts, 0 < \u03bb < z, ts < \u03bb+ s\u2212 1 \u03a56(\u03bb), \u03bb+ s\u2212 1 < z \u2264 ts, 0 < \u03bb < z, q\u03bb \u2265 s \u03a57(\u03bb), \u03bb+ s\u2212 1 < z \u2264 ts, 0 < \u03bb < z, q\u03bb < s \u03a58(\u03bb), z \u2264 \u03bb+ s\u2212 1 \u2264 ts, 0 < \u03bb < z, q\u03bb \u2265 s \u03a59(\u03bb), z \u2264 \u03bb+ s\u2212 1 \u2264 ts, 0 < \u03bb < z, q\u03bb < s,\n(14)\nand \u03a51(0) = 2st2+2z\u22121, \u03a52(0) = st2+3st\u22122s+t(z\u22121)+1, \u03a53(z) = 2ts + (ts + z)(t \u2212 1) + 2z \u2212 1, \u03a54(\u03bb) = (q + 2)ts + \u03b8(t \u2212 1) + 2z \u2212 1, \u03a55(\u03bb) = 3ts + \u03b8(t \u2212 1) + 2z \u2212 1, \u03a56(\u03bb) = 2ts + \u03b8(t \u2212 1) + (q + 2)z \u2212 q \u2212 1, \u03a57(\u03bb) = \u03b8(t + 1) + q(z \u2212 1)\u2212 2\u03bb+ z + ts+ min{0, z + s(1\u2212 t)\u2212 \u03bbq\u2212 1}, \u03a58(\u03bb) = 2ts+\u03b8(t\u22121)+3z+(\u03bb+s\u22121)q\u2212\u03bb\u2212s\u22121, \u03a59(\u03bb) = \u03b8(t+1)+q(s\u22121)\u22123\u03bb+3z\u22121+min{0, ts\u2212z+1+\u03bbq\u2212s}, s \u2265 1, t \u2265 2, s|m, t|m are satisfied, q = min{b z\u22121\u03bb c, t \u2212 1} and \u03b8 = ts+ \u03bb. Proof: The proof is provided in Appendix C.\nExample 1: This example shows the operation of AGECMPC in a scenario when s = t = z = 2. In particular, there are two sources (Source A and Source B) that have matrices A and B. The sources partition the matrices to st = 4\nsub-matrices; i.e., s = 2 row-wise and t = 2 column-wise partitions. These sub-matrices will be multiplied with the help of a number of workers, where z = 2 workers are adversaries.\nFirst, we solve the optimization problem in (13) to determine \u03bb that optimizes the required number of workers NAGE-CMPC. The solution of (13) becomes NAGE-CMPC = 17 and \u03bb\u2217 = 2 when s = t = z = 2. This means that 17 workers are required by AGE-CMPC to guarantee privacy. We note that the required number of workers by Entangled-CMPC [14] is NEntangled-CMPC = 19. As seen, AGE-CMPC reduces the required number of workers as compared to Entangled-CMPC.\nNow that \u03bb is fixed to \u03bb = \u03bb\u2217 = 2, we follow the phases in Section IV-B. The sources determine the coded terms CA(x) and CB(x) by the AGE codes described in Section IV-A when \u03bb = 2. We obtain CA(x) = A00 +A01x+A10x2 +A11x3 and CB(x) = B00x + B10 + B01x 7 + B11x 6. Then, the degrees of the secret terms are determined as SA(x) and SB(x) that satisfy the conditions in (5). We obtain SA(x) = A\u03040x4+A\u03041x5 and SB(x) = B\u03040x10 + B\u03041x11. Thus, Source A constructs FA(x) = A00 +A01x+A10x 2 +A11x 3 + A\u03040x 4 + A\u03041x 5, and Source B constructs FB(x) = B00x+B10+B01x7+B11x6+ B\u03040x 10 + B\u03041x 11. Sources A and B send FA(\u03b1n) and FB(\u03b1n) to each worker Wn, for some distinct \u03b11, . . . , \u03b1N . In the second phase, each worker Wn calculates H(\u03b1n) = FA(\u03b1n)FB(\u03b1n). Then, all NAGE-CMPC = 17 workers collaborate to apply Lagrange interpolation on the polynomial H(x) = \u221116 n=0Hnx\nn = FA(x)FB(x) (through calculation of H(\u03b1n)) to determine r (i,l) n , i, l = {0, 1}, n = {1, ..., 17}, such that:\nH1 = A00B00 +A01B10, H3 = A10B00 +A11B10,\nH7 = A00B01 +A01B11, H9 = A10B01 +A11B11.\nNext, each worker Wn multiplies r (i,j) n , i, j \u2208 {0, 1} with H(\u03b1n) and creates the polynomial Gn(x) as\nGn(x) =r (0,0) n H(\u03b1n) + r (1,0) n H(\u03b1n)x+ r (0,1) n H(\u03b1n)x 2\n+ r(1,1)n H(\u03b1n)x 3 +R (n) 0 x 4 +R (n) 1 x 5.\nThen, each worker Wn sends Gn(\u03b1n\u2032) to Wn\u2032 . After all data exchanges, each worker Wn\u2032 has the knowledge of Gn(\u03b1n\u2032), and sends \u221117 n=1Gn(\u03b1n\u2032) to the master.\nIn the last phase, the master reconstructs I(x) once it receives I(\u03b1n) = \u221117 n\u2032=1Gn\u2032(\u03b1n) from t 2 + z = 6 workers.\nI(x) =(A00B00 +A01B10) + (A10B00 +A11B10)x+\n(A00B01 +A01B11)x 2 + (A10B01 +A11B11)x 3+ 17\u2211 n=1 R (n) 0 x 4 + 17\u2211 n=1 R (n) 1 x 5\nAfter reconstructing I(x) and determining all coefficients, Y is calculated as\nY = ATB = [ A00B00 +A01B10 A00B01 +A01B11 A10B00 +A11B10 A10B01 +A11B11 ] ,\nin a privacy-preserving manner.\nC. AGE-CMPC in Perspective\nIn this section we compare AGE-CMPC with EntangledCMPC [14], SSMM [15], GCSA-NA [16] (considering batch size as one), and PolyDot-CMPC [13] in terms of the number of required workers. For this purpose, let us define \u03bb\u2217 as the optimum solution of the optimization problem in (13).\nLemma 4: NAGE-CMPC is less than the number of workers required by Entangled-CMPC [14], NEntangled-CMPC, when 0 < \u03bb\u2217 \u2264 z. For the case of \u03bb\u2217 = 0, NAGE-CMPC = NEntangled-CMPC.\nProof: The proof is provided in Appendix D.A. Lemma 5: NAGE-CMPC is less than the number of workers required by SSMM [15], NSSMM, when 0 \u2264 \u03bb\u2217 < z. For the case of \u03bb\u2217 = z, NAGE-CMPC = NSSMM.\nProof: The proof is provided in Appendix D.B. Lemma 6: NAGE-CMPC is less than the number of workers required by GCSA-NA (for one matrix multiplication) [16], NGCSA-NA, when 0 < \u03bb\u2217 \u2264 z. For the case of \u03bb\u2217 = 0, NAGE-CMPC \u2264 NGCSA-NA.\nProof: The proof is provided in Appendix D.C. Lemma 7: NAGE-CMPC is always less than or equal to the\nnumber of workers required by PolyDot-CMPC [13]. Proof: The proof is provided in Appendix D.D."
        },
        {
            "heading": "V. COMPUTATION, STORAGE, COMMUNICATION AND PRIVACY ANALYSIS",
            "text": "In this section, we provide a theoretical analysis for the computation, storage, and communication overhead of AGECMPC, and discuss its privacy guarantee.\nA. Computation Overhead\nWe define the computation overhead as the total number of scalar multiplications performed by each worker. We neglect additions as the computation complexity of addition is negligible compared to multiplication.\nCorollary 8: The total computation overhead per worker to compute Y = ATB using AGE-CMPC is equal expressed as\n\u03beAGE-CMPC = m3\nst2 +m2 +NAGE-CMPC(t\n2 + z \u2212 1)m 2\nt2 , (15)\nwhere m is the number of rows/columns of matrices A and B, s and t are the number of row-wise and column-wise partitions, respectively, and z is the number of colluding workers. Proof: First, each worker computes H(\u03b1n) = FA(\u03b1n)FB(\u03b1n). In AGE-CMPC, FA(\u03b1n) \u2208 F m t \u00d7 m s and FB(\u03b1n) \u2208 F m s \u00d7 m t , so m 3\nst2 scalar multiplications are computed. After computing H(\u03b1n), each worker Wn needs to compute polynomial Gn(x) for N different points; \u03b1n\u2032 , n\u2032 = 1, . . . , N following (10). For this purpose, worker Wn first multiplies ri,jn for i, j \u2208 {0, . . . , t \u2212 1} with H(\u03b1n) \u2208 F m t \u00d7 m t . This requires t2m 2\nt2 = m 2 scalar multiplications. Then, ri,jn H(\u03b1n)\nis multiplied with \u03b1i+tjn\u2032 for all N workers. This requires N(t2 \u2212 1)m 2\nt2 scalar multiplications. To calculate the second part of Gn(x), n = 1, . . . , N , Wn multiplies \u03b1t 2+w n\u2032 with random matrices R(n)w \u2208 F m t \u00d7 m t , for w = {0, . . . , z \u2212 1}. This requires Nzm 2\nt2 scalar multiplications. In total,\neach worker Wn computes m2 + N(t2 + z \u2212 1)m 2\nt2\nscalar multiplications to obtain Gn(\u03b1n\u2032)\u2019s. By adding the number of scalar multiplications required for computing H(\u03b1n), the computation overhead of AGE-CMPC becomes m3 st2 +m 2 +N(t2 + z \u2212 1)m 2 t2 . This concludes the proof.\nB. Storage Overhead\nWe define the storage overhead as the total number of scalar parameters that should be stored in all phases of coded MPC at each worker.2 These parameters include the received parameters from the other workers as well as those that are computed and stored to be used in the next computations.\nCorollary 9: The total storage overhead per worker to compute Y = ATB using AGE-CMPC is expressed as\n\u03c3AGE-CMPC = (2NAGE-CMPC + z + 1) m2\nt2 +\n2m2\nst + t2, (16)\nwhere m is the number of rows/columns of matrices A and B, s and t are the number of row-wise and column-wise partitions, respectively, and z is the number of colluding workers. Proof: Storage overhead consists of the following components. In the first phase, each worker Wn receives FA(\u03b1n) and FB(\u03b1n) each with the size of mt \u00d7 m s from the sources. This requires storing SC1 = 2m 2\nst scalar parameters. In the second phase, each worker Wn stores H(\u03b1n) with the\nsize of m 2\nt2 computed by multiplying FA(\u03b1n) with FB(\u03b1n). This requires storing SC2 = m 2\nt2 scalar parameters. Next, each worker Wn creates the polynomial Gn(x) to calculate different points of it. This requires to store the coefficients for each term of this polynomial. For this purpose, in AGE-CMPC, according to (10), the random variables ri,jn , 0 \u2264 i, j \u2264 t\u2212 1 with the total number of t2 scalar parameters are stored. In addition, the random matrices R(n)w \u2208 F m t \u00d7 m t for w \u2208 {0, . . . , z \u2212 1} are stored. In total, this requires storing SC3 = t 2 + zm 2\nt2 scalar parameters. After creating Gn(x), worker Wn needs to compute it at points \u03b1\u2032n, n \u2032 \u2208 N \\ n to send them to the other workers as well as at point \u03b1n required for calculating I(\u03b1n). Also, worker Wn receives Gn\u2032(\u03b1n) from the other workers, which will be stored in its storage. In AGE-CMPC, Gn\u2032(\u03b1n) \u2208 Fmt \u00d7mt , so in total, this requires storing SC4 = (2N \u2212 1)m 2\nt2\nscalar parameters. Finally, worker Wn needs to compute and store I(\u03b1n). In AGE-CMPC, I(\u03b1n) \u2208 F m t \u00d7 m t , so this requires storing SC5 = m2\nt2 scalar parameters. We can derive (16) by adding the storage components; i.e.,\u2211N i=1 SCi. This concludes the proof.\nC. Communication Overhead\nWe define the communication overhead as the total number of scalar parameters that are exchanged among all workers in phase 2. Note that there are other data transmissions; from\n2We note that it is possible to delete some of the data after each phase once they are not needed for future steps, but we do not consider deleting data for easy exposition.\nsources to workers in phase 1, and from workers to the master in phase 3. We do not include these communications in the communication overhead calculation as they are negligible as compared to the data exchange among workers in phase 2.\nCorollary 10: Communication overhead to compute Y = ATB, using AGE-CMPC is expressed as\n\u03b6AGE-CMPC = NAGE-CMPC(NAGE-CMPC \u2212 1) m2\nt2 , (17)\nwhere m is the number of rows/columns of matrices A and B, and s and t are the number of row-wise and column-wise partitions, respectively. Proof: In phase 2 of AGE-CMPC, each worker Wn, n \u2208 N sends Gn(\u03b1n\u2032) to worker Wn\u2032 , n\u2032 \u2208 N \\ n. In AGE-CMPC, Gn(\u03b1n\u2032) \u2208 F m t \u00d7 m t . Therefore, the communication overhead among workers for AGE-CMPC is equal to N(N\u22121)m 2\nt2 . This concludes the proof.\nD. Privacy Analysis\nAGE-CMPC satisfies the privacy requirements stated in Section III. The proof directly follows from the proof of Theorem 3 in [38]."
        },
        {
            "heading": "VI. PERFORMANCE EVALUATION",
            "text": "We evaluate the performance of our algorithm, and compare with the baselines, (i) PolyDot-CMPC [13], (ii) EntangledCMPC [14], (iii) SSMM [15], and (iv) GCSA-NA [16]. The system model parameters are considered as follows: the size of each matrix A and B is m\u00d7m = 36000\u00d736000, the number of colluding workers is z = 42, the number of partitions of matrices A and B is st = 36.\nFig. 2 shows the required number of workers needed to compute the multiplication of Y = ATB versus s/t, the number of row partitions over the number of column partitions. As seen, the required number of workers of AGE-CMPC is less than or equal to the other baselines, which confirms our Lemmas 4, 5, 6, and 7. Moreover, by decreasing the number of column partitions t, the required number of workers of AGE-CMPC gets closer to the baselines, and for t \u2264 3, it is equal to Entangled-CMPC. The reason is that the parameter \u03b8 = ts+ \u03bb in the power of CB(x) in (2) is the coefficient of l \u2208 \u2126t\u221210 , which is related to the number of column partitions,\nt, and it affects the number of gaps among powers of CB(x) when we have column partitions. Thus, decreasing t results in decreasing the effect of \u03b8 in the number of gaps among powers of polynomial CA(x)CB(x), i.e., the garbage terms, hence the required number of workers. Finally, we can see through this figure that the required number of workers of all methods have direct relationship with the number of column partitions t.\nFig. 3(a) shows the storage cost per worker, where the size of each stored scalar is 1 Byte, versus s/t. AGE-CMPC reduces the storage load per worker as compared to baselines. The reason is that there is a direct relationship between the required number of workers and storage load per worker in CMPC setup when we fix s and t. As we described in phase 2, each worker n needs to compute polynomial Gn(\u03b1n\u2032) and send it to workers n\u2032 for n\u2032 \u2208 {0, . . . , N} \\ {n}, also it needs to receive Gn\u2032(\u03b1n) from worker n\u2032. Therefore, the smaller required number of workers of AGE-CMPC results in the smaller storage load per worker as compared to PolyDotCMPC and Entangled-CMPC. On the other hand, for a fixed st = 36, if we change s and t from s = 1, t = 36 to s = 36, t = 1, one can see the existing trade-off between the storage and the required number of workers by comparing Fig. 2 with Fig. 3(a). The reason is that the required number of workers has a direct relation with the number of column partitions t, while the storage load per worker has an inverse relation with t. Therefore, based on the resource limitations of the system, one can choose an appropriate s and t to exploit this trade-off.\nFig. 3(b) shows the computation cost per worker versus s/t. Similar to the discussion in Fig. 3(a), for the fixed amounts of s and t, required number of workers has a direct relation with computation load per worker, i.e., larger amounts of workers results in larger computation load per worker. Therefore, computation load per worker of AGE-CMPC is less than or equal to the other methods. However, as seen in Fig. 3(b), computation load per worker does not have a monotonic behavior by decreasing t. In other words, for fixed st = 36, if we decrease t from 36 to 9, computation load per worker will decrease, and if we decrease t from 9 to 1, computation load per worker will increase. The reason is that computation load per worker has a direct relationship with both storage load per worker and the required number of workers.\nFig. 3(c) shows the communication overhead versus s/t. The communication overhead consists of; (i) from sources to workers in phase 1, (ii) among workers in phase 2, and (iii) from workers to the master in phase 3. We consider the communication cost among workers as it is the dominating communication cost in this system. We assume that each scalar that is transmitted among workers is 1 Byte. Similar to our discussions for storage and computation loads, for the fixed s and t, the required number of workers has a direct relationship with the communication load among workers, i.e., larger number of workers results in larger communication load among workers. Therefore, the communication load among\nworkers of AGE-CMPC is less than or equal to the other methods."
        },
        {
            "heading": "VII. CONCLUSION",
            "text": "We have investigated coded privacy-preserving computation using Shamir\u2019s secret sharing. We have designed a novel coded computation method; AGE codes that is customized for coded privacy-preserving computations. We also designed a coded privacy-preserving computation mechanism; AGE coded MPC (AGE-CMPC) by employing AGE codes. We designed our algorithm such that it takes advantage of the \u201cgarbage terms\u201d. Also, we have analyzed AGE-CMPC in terms of the required number of workers as well as its computation, storage, and communication overhead, and shown that AGECMPC provides significant improvement."
        },
        {
            "heading": "APPENDIX A: PROOF OF THEOREM 1",
            "text": "For AGE codes with {\u03b1, \u03b2, \u03b8} = {1, s, ts + \u03bb}, (2) is reduced to:\nCA(x) = t\u22121\u2211 i=0 s\u22121\u2211 j=0 Ai,jx j+is,\nCB(x) = s\u22121\u2211 k=0 t\u22121\u2211 l=0 Bk,lx (s\u22121\u2212k)+(ts+\u03bb)l, (18)\nTo prove the decodability of AGE codes, we need to prove that the polynomial CY (x) = CA(x)CB(x) =\nt\u22121\u2211 i=0 s\u22121\u2211 j=0 s\u22121\u2211 k=0 t\u22121\u2211 l=0 Ai,jBk,lx j+is+(s\u22121\u2212k)+(ts+\u03bb)l consists of t\ndistinct terms with coefficients Yi,l = s\u22121\u2211 j=0 Ai,jBj,l, 0 \u2264 i, l \u2264 t \u2212 1. For this purpose, we define two sets of (i) P1 = {s\u22121+is+(ts+\u03bb)l, 0 \u2264 i, l \u2264 t\u22121}, representing the potential set of powers of the terms in CY (x) with coefficients Yi,l (resulting from j = k), and (ii) P2 = {j + is+ (s\u2212 1\u2212 k) + (ts + \u03bb)l, 0 \u2264 i, l \u2264 t \u2212 1, 0 \u2264 k, j \u2264 s \u2212 1, j 6= k}, the set of powers of the remaining terms in CY (x). Then, we prove that (i) P1 consists of t2 distinct elements, and (ii) P1 and P2 do not have any overlap.\n(i) Proving that P1 consists of t2 distinct elements: From the definition of P1, it is equal to:\nP1 = t\u22121\u22c3 l=0 t\u22121\u22c3 i=0 {s\u2212 1 + is+ (ts+ \u03bb)l}. (19)\nFor a given l, each subset of t\u22121\u22c3 i=0\n{s\u22121+is+(ts+\u03bb)l} consists of t distinct elements. In addition, for two different values of l = l1 and l = l2 (l1 6= l2), there is no overlap between t\u22121\u22c3 i=0 {s\u2212 1 + is+ (ts+\u03bb)l1} and t\u22121\u22c3 i=0 {s\u2212 1 + is+ (ts+\u03bb)l2}. The reason is that for 0 \u2264 l1 < l2 \u2264 t\u221213, the largest element\nof t\u22121\u22c3 i=0 {s\u2212 1 + is+ (ts+\u03bb)l1}, i.e., ts\u2212 1 + (ts+\u03bb)l1 is less\nthan the smallest element of t\u22121\u22c3 i=0 {s\u2212 1 + is+ (ts+\u03bb)l2}, i.e., s\u2212 1 + (ts+ \u03bb)l2:\n0 < s+ \u03bb\u21d2ts\u2212 1 < s\u2212 1 + ts+ \u03bb \u21d2ts\u2212 1 + (ts+ \u03bb)l1 < s\u2212 1 + (ts+ \u03bb)(l1 + 1) \u21d2ts\u2212 1 + (ts+ \u03bb)l1 < s\u2212 1 + (ts+ \u03bb)l2. (20)\nTherefore, P1 consists of t2 distinct elements. (ii) Proving that P1 and P2 have no overlap: From the definition of P1 and P2, we have:\nP1 = t\u22121\u22c3 l1=0 t\u22121\u22c3 i1=0 P1(l1, i1)\n= t\u22121\u22c3 l1=0 t\u22121\u22c3 i1=0 {s\u2212 1 + i1s+ (ts+ \u03bb)l1} (21)\nand\nP2 = t\u22121\u22c3 l2=0 t\u22121\u22c3 i2=0 P2(l2, i2)\n= t\u22121\u22c3 l2=0 t\u22121\u22c3 i2=0 s\u22121\u22c3 j\u2032=\u2212(s\u22121)\nj\u2032 6=0\n{j\u2032 + i2s+ s\u2212 1 + (ts+ \u03bb)l2}.\n(22)\nTo prove P1\u2229P2 = \u2205, we consider the following five cases; (a)\n3Note that the assumption of l1 < l2 does not result in loss of generality.\nl1 = l2, i1 = i2, (b) l1 = l2, i1 < i2, (c) l1 = l2, i1 > i2, (d) l1 > l2, (e) l1 < l2. We prove that P1(i1, l1)\u2229P2(i2, l2) = \u2205 holds for each case.\n(a) l1 = l2, i1 = i2: For this case, P1(l1, i1) consists of the only element of s\u22121+i1s+(ts+\u03bb)l1 which is not a member of P2(l2, i2) as j\u2032 6= 0. Therefore, P1(i1, l1)\u2229P2(i2, l2) = \u2205 for this case.\n(b) l1 = l2, i1 < i2: For this case, the smallest element of P2(l2, i2) is always greater than P1(l1, i1) = s \u2212 1 + i1s + (ts+ \u03bb)l1, as shown below:\ns\u2212 1 + i1s+ (ts+\u03bb)l1 < (i1 + 1)s+ (ts+ \u03bb)l1 \u2264 i2s+ (ts+ \u03bb)l2 = \u2212(s\u2212 1) + i2s+ (s\u2212 1) + (ts+ \u03bb)l2\n(23)\nTherefore, P1(i1, l1) \u2229P2(i2, l2) = \u2205 holds for this case. (c) l1 = l2, i1 > i2: For this case, the largest element of P2(l2, i2) is always less than P1(l1, i1) = s\u2212 1 + i1s+ (ts+ \u03bb)l1, as shown below:\ns\u2212 1 + i1s+ (ts+ \u03bb)l1 > s\u2212 2 + i1s+ (ts+ \u03bb)l1 \u2265 s\u2212 2 + (i2 + 1)s+ (ts+ \u03bb)l2 = 2s\u2212 2 + i2s+ (ts+ \u03bb)l2 (24)\nTherefore, P1(i1, l1) \u2229P2(i2, l2) = \u2205 holds for this case. (d) l1 > l2: For this case, the smallest element of P1(l1, i1), i.e., P1(l1, 0) is always greater than the largest element of P2(l2, i2) i.e., P2(l2, t\u2212 1), j\u2032 = s\u2212 1, as shown below:\ns\u2212 1 + (ts+ \u03bb)l1 \u2265 s\u2212 1 + (ts+ \u03bb)(l2 + 1) = s\u2212 1 + ts+ \u03bb+ (ts+ \u03bb)l2 > s\u2212 1 + (ts+ \u03bb)l2 (25)\nTherefore, P1(i1, l1) \u2229P2(i2, l2) = \u2205 holds for this case. (e) l1 < l2: For this case, the largest element of P1(l1, i1), i.e., P1(l1, t\u2212 1) is always less than the smallest element of P2(l2, i2) i.e., P2(l2, 0), j\u2032 = \u2212(s\u2212 1), as shown below:\n(t\u2212 1)s+ (ts+ \u03bb)l1 < (t\u2212 1)s+ (ts+ \u03bb)(l2 \u2212 1) = (t\u2212 1)s\u2212 ts\u2212 \u03bb+ (ts+ \u03bb)l2 = \u2212s\u2212 \u03bb+ (ts+ \u03bb)l2 < (ts+ \u03bb)l2 (26)\nTherefore, P1(i1, l1) \u2229P2(i2, l2) = \u2205 holds for this case. This completes the proof of Theorem 1."
        },
        {
            "heading": "APPENDIX B: PROOF OF THEOREM 2",
            "text": "We first show that P(SB(x)) = {ts + (ts + \u03bb)(t \u2212 1), . . . , ts+ (ts+\u03bb)(t\u2212 1) + z\u2212 1} in (7) satisfies C1 in (5). Then, we fix P(SB(x)) in C3 of (5), and find P(SA(x)) that satisfies C2 and C3. Next, we explain these steps in details.\nShowing that P(SB(x)) = {ts+ (ts+ \u03bb)(t\u2212 1), . . . , ts+ (ts+ \u03bb)(t\u2212 1) + z\u2212 1} in (7) satisfies C1 in (5). The largest element of the left side of C1 is equal to (s\u2212 1) + (t\u2212 1)s+ (ts + \u03bb)(t \u2212 1) = ts + (ts + \u03bb)(t \u2212 1) \u2212 1 and the smallest element of the right side of C1 is equal to the smallest element\nof P(SB(x)), i.e., ts+(ts+\u03bb)(t\u22121) plus the smallest element of P(CA(x)), i.e., 0. As ts+ (ts+ \u03bb)(t\u2212 1)\u2212 1 is less than ts+ (ts+ \u03bb)(t\u2212 1), C1 is satisfied.\nFixing P(SB(x)) in C3 of (5), and find P(SA(x)) that satisfies C2 and C3. C3 is satisfied for any choice of P(SA(x)) with non-negative elements. The reason is that the largest element of the left side of C3 is less than the smallest element of P(SB(x)). Next, we find P(SA(x)) with the smallest elements that satisfies C2, so (5) is equal to\n(s\u2212 1) + si+ (ts+ \u03bb)l 6\u2208 P(SA(x)) + {(s\u2212 1\u2212 k) + l\u2032(ts+ \u03bb)}, (27)\nwhere 0 \u2264 k \u2264 s \u2212 1, 0 \u2264 i, l, l\u2032 \u2264 t \u2212 1, 0 \u2264 \u03bb \u2264 z. The above equation is equivalent to:\n\u03b2\u2032 + \u03b8l\u2032\u2032 6\u2208 P(SA(x)), (28)\nfor l\u2032\u2032 = (l \u2212 l\u2032), \u03b8 = ts + \u03bb and \u03b2\u2032 = si + k. The range of variable \u03b2\u2032 is {si + k, 0 \u2264 i \u2264 t \u2212 1, 0 \u2264 k \u2264 s \u2212 1} = t\u22121\u22c3 i=0 {si, . . . , si+ s\u2212 1} = {0, . . . , ts\u2212 1}. Therefore, we have\nP(SA(x)) 6\u2208 t\u22121\u22c3\nl=\u2212(t\u22121)\n{\u03b8l, . . . , \u03b8l + ts\u2212 1}, (29)\nUsing the complement of the above intervals and the fact that the elements of P(SA(x)) is non-negative, we have\nP(SA(x)) \u2208 t\u22122\u22c3 l=0 {ts+ \u03b8l, . . . , (l + 1)\u03b8 \u2212 1}\n\u222a {ts+ \u03b8(t\u2212 1), . . . ,+\u221e}, t > 1 (30)\nP(SA(x)) \u2208{s, . . . ,+\u221e}, t = 1 (31)\nNote that the required number of powers with non-zero coefficients for the secret term SA(x) is z, i.e.,\n|P(SA(x))| = z. (32)\nSince our goal is to make the degree of polynomial FA(x) as small as possible, we choose the z smallest powers from the sets in (30) to form P(SA(x)). Note that in (30), there are t\u2212 1 finite sets and one infinite set, where each finite set contains \u03bb = \u03b8 \u2212 ts elements. Therefore, based on the value of z, we use the first interval and as many remaining intervals as required for z > \u03bb, and the first interval only for z = \u03bb (Note that 0 \u2264 \u03bb \u2264 z).\nLemma 11: If z > \u03bb and t 6= 1, the set of all powers of polynomial SA(x) with non-zero coefficients is defined as\nP(SA(x)) = ( q\u22121\u22c3 l=0 {ts+ \u03b8l, . . . , (l + 1)\u03b8 \u2212 1} )\n\u222a {ts+ q\u03b8, . . . , ts+ q\u03b8 + z \u2212 1\u2212 q(\u03b8 \u2212 ts)} (33)\n={ts+ \u03b8l + w, l \u2208 \u2126q\u221210 , w \u2208 \u2126 \u03bb\u22121 0 }\n\u222a {ts+ \u03b8q + u, u \u2208 \u2126z\u22121\u2212q\u03bb0 }. (34)\nProof: For the case of z > \u03bb, the number of elements in the first interval of (30), which is equal to \u03bb, is not sufficient for selecting z powers. Therefore, more than one interval is used. We show the number of selected intervals with q + 1, where q \u2265 1 is defined as q = min{b z\u22121\u03bb c, t \u2212 1}. With this definition, the first q intervals of (30) are selected in full. In other words, in total, we select q\u03bb elements to form the first q intervals in (33). The remaining z \u2212 q\u03bb elements are selected from the (q + 1)st interval of (30) to form the last interval of (33). We can derive (34) from (33) by replacing \u03b8 with its equivalent value, ts+ \u03bb.\nLemma 12: If z = \u03bb and t 6= 1, the set of all powers of polynomial SA(x) with non-zero coefficients is defined as the following:\nP(SA(x)) = {ts, . . . , ts+ z \u2212 1}, = {ts+ u, u \u2208 \u2126z\u221210 }. (35)\nProof: In this scenario since z = \u03bb, the first interval of (30) is sufficient to select all z elements of P(SA(x)). Therefore, z elements are selected from the first interval of (30), as shown in (35).\nLemma 13: If t = 1 , the set of all powers of polynomial SA(x) with non-zero coefficients is defined as the following:\nP(SA(x)) = {s, . . . , s+ z \u2212 1}, = {s+ u, u \u2208 \u2126z\u221210 }. (36)\nProof: In this scenario, z smallest elements are selected from (31) as shown in (36).\nThis completes the proof of Theorem (2)."
        },
        {
            "heading": "APPENDIX C: PROOF OF THEOREM 3",
            "text": "To prove this theorem, we first consider the case that t = 1. Then, we consider that case thats t 6= 1.\nLemma 14: NAGE-CMPC = 2s+ 2z \u2212 1 when t = 1. s Proof: FA(x) and FB(x) are expressed as in the following for t = 1 using (3), (4), (6) and (7).\nFA(x) = s\u22121\u2211 j=0 Ajx j + z\u22121\u2211 u=0 A\u0304ux s+u, (37)\nFB(x) = s\u22121\u2211 k=0 Bkx s\u22121\u2212k + z\u22121\u2211 r=0 B\u0304rx s+r. (38)\nFA(x) and FB(x) are equal to the secret shares of EntangledCMPC [14], for t = 1. Thus, in this case, AGE-CMPC and Entangled-CMPC are equivalent, so we have NAGE-CMPC = NEntangled-CMPC = 2s+ 2z \u2212 1 [14]. This completes the proof.\nNow, we consider t 6= 1. The required number of workers is equal to the number of terms in H(x) = FA(x)FB(x) with non-zero coefficients. The set of all powers of polynomial H(x) with non-zero coefficients, shown by P(H(x)), is expressed as\nP(H(x)) = D1 \u222aD2 \u222aD3 \u222aD4, (39)\nwhere\nD1 = P(CA(x)) + P(CB(x)) (40)\nD2 = P(CA(x)) + P(SB(x)) (41)\nD3 = P(SA(x)) + P(CB(x)) (42)\nD4 = P(SA(x)) + P(SB(x)) (43)\nUsing (3) and (4), D1 is calculated as:\nD1 =P(CA(x)) + P(CB(x))\n={j + si : 0 \u2264 i \u2264 t\u2212 1, 0 \u2264 j \u2264 s\u2212 1, } + {s\u2212 1\u2212 k + \u03b8l : 0 \u2264 l \u2264 t\u2212 1, 0 \u2264 k \u2264 s\u2212 1}\n={j + si+ s\u2212 1\u2212 k + \u03b8l : 0 \u2264 i, l \u2264 t\u2212 1, 0 \u2264 j, k \u2264 s\u2212 1, }\n= t\u22121\u22c3 i=0 {is, . . . , (i+ 2)s\u2212 2}+ {\u03b8l : 0 \u2264 l \u2264 t\u2212 1} ={0, . . . , ts+ s\u2212 2}+ {\u03b8l : 0 \u2264 l \u2264 t\u2212 1} (44)\n= t\u22121\u22c3 l=0 {\u03b8l, . . . , ts+ s\u2212 2 + \u03b8l}, (45)\nwhere (44) comes from the fact that the largest element of each ith subset of t\u22121\u22c3 i=0 {is, . . . , (i + 2)s \u2212 2} plus one, i.e., (i+2)s\u22122+1 is greater than or equal to the smallest element of the (i + 1)st subset, i.e., (i + 1)s as s \u2265 1. Using (3) and (7), D2 is calculated as:\nD2 =P(CA(x)) + P(SB(x))\n={j + si : 0 \u2264 i \u2264 t\u2212 1, 0 \u2264 j \u2264 s\u2212 1, } + {ts+ \u03b8(t\u2212 1) + r : 0 \u2264 r \u2264 z \u2212 1}\n={j + si+ ts+ \u03b8(t\u2212 1) + r : 0 \u2264 i \u2264 t\u2212 1, 0 \u2264 j \u2264 s\u2212 1, 0 \u2264 r \u2264 z \u2212 1}\n= t\u22121\u22c3 i=0 {is, . . . , (i+ 1)s+ z \u2212 2}+ ts+ \u03b8(t\u2212 1) ={ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}, (46)\nwhere the last equality comes from the fact that there is no gap between the subsets of t\u22121\u22c3 i=0 {is, . . . , (i+1)s+z\u22122}. The reason is that the largest element of the ith subset, i.e., (i+1)s+z\u22122 plus one is larger than or equal to the smallest element of the (i+ 1)st subset, i.e., (i+ 1)s as z \u2265 1.\nIn the following, we consider different regions for the values of z and \u03bb and calculate |P(H(x))| through calculation of D3 and D4. In addition, we use the following lemma, whichhelps us to calculate P(H(x)) without requiring to consider all of the terms of D3 in some cases.\nLemma 15: The following inequality holds.\n|P(H(x))| \u2264deg(SA(x)) + deg(SB(x)) + 1 = max{D4}+ 1 (47)\nProof: |P(H(x))|, which is equal to the number of terms in H(x) with non-zero coefficients, is less than or equal to the number of all terms, which is equal to deg(H(x)) + 1. Thus,\n|P(H(x))| \u2264deg(H(x)) + 1 = deg((CA(x) + SA(x))(CB(x) + SB(x))) + 1\n= max{deg(CA(x)),deg(SA(x))} + max{deg(SB(x)),deg(CB(x))}+ 1. (48)\nFrom (3), deg(CA(x)) = ts \u2212 1. On the other hand, from (6), deg(SA(x)) \u2265 ts. Therefore, max{deg(CA(x)),deg(SA(x))} = deg(SA(x)). Moreover, From (4), deg(CB(x)) = s \u2212 1 + \u03b8(t \u2212 1), and from (7), deg(SB(x)) \u2265 ts + \u03b8(t \u2212 1). Therefore, max{deg(CB(x)),deg(SB(x))} = deg(SB(x)), which results in the first inequality of (47).\nOn the other hand, from (43), max{D4} = max{P(SA(x))} + max{P(SB(x))} = deg(SA(x)) + deg(SB(x)).\nThis completes the proof.\nLemma 16: For z > ts\u2212 s, t 6= 1 and \u03bb = 0, we have\n|P(H(x))| = \u03a51(0) = 2st2 + 2z \u2212 1 (49)\nProof: By replacing \u03bb with 0 in AGE-CMPC formulations, the scheme is equivalent to Entangled-CMPC in [14]. Therefor, the proof of this lemma can be derived directly from the proof of Theorem 1 in [14].\nLemma 17: For z \u2264 ts\u2212 s, t 6= 1 and \u03bb = 0, we have\n|P(H(x))| = \u03a52(0) = st2 + 3st\u2212 2s+ t(z \u2212 1) + 1 (50)\nProof: For this case, AGE-CMPC is equivalent to EntangledCMPC. Therefore, the proof of this lemma can be derived directly from the proof of Theorem 1 in [14].\nLemma 18: For \u03bb = z, t 6= 1, we have\n|P(H(x))| = \u03a53(z) = 2ts+ \u03b8(t\u2212 1) + 2z \u2212 1 = (ts+ z)(1 + t)\u2212 1 (51)\nProof: To prove this lemma, we first calculate D3 from (4) and (6):\nD3 =P(SA(x)) + P(CB(x))\n={ts+ u : 0 \u2264 u \u2264 z \u2212 1} +{s\u2212 1\u2212 k + \u03b8l : 0 \u2264 l \u2264 t\u2212 1, 0 \u2264 k \u2264 s\u2212 1, } ={ts, . . . , ts+ z + s\u2212 2}+ {\u03b8l : 0 \u2264 l \u2264 t\u2212 1}\n= t\u22121\u22c3 l=0 {\u03b8l + ts, . . . , \u03b8l + ts+ z + s\u2212 2}. (52)\nFrom (45) and (52), we can calculate D13 = D1 \u222aD3 as:\nD13 =D1 \u222aD3\n= t\u22121\u22c3 l=0 {\u03b8l, . . . , ts+ s\u2212 2 + \u03b8l}\n\u222a t\u22121\u22c3 l=0 {\u03b8l + ts, . . . , \u03b8l + ts+ z + s\u2212 2}\n= t\u22121\u22c3 l=0 {\u03b8l, . . . , \u03b8l + ts+ z + s\u2212 2} (53) ={0, . . . , \u03b8(t\u2212 1) + ts+ z + s\u2212 2}, (54)\nwhere (53) comes from the fact that \u03b8l < \u03b8l + ts \u2264 ts+ s\u2212 2 + \u03b8l < \u03b8l + ts + z + s \u2212 2 and (54) comes from the fact that there is no gap between each two consecutive subsets of\u22c3t\u22121 l=0{\u03b8l, . . . , \u03b8l+ ts+ z+ s\u22122} as \u03b8l+ ts+ z+ s\u22122 + 1 = \u03b8l+\u03b8+s\u22121 \u2265 \u03b8(l+1). Next, we calculate D123 = D13\u222aD2 from (54) and (46)\nD123 =D1 \u222aD3 \u222aD2 ={0, . . . , \u03b8(t\u2212 1) + ts+ z + s\u2212 2} \u222a {ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}\n={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}, (55)\nwhere the last equality comes from the fact that 0 < ts+\u03b8(t\u2212 1) \u2264 \u03b8(t\u2212 1) + ts+ z+ s\u2212 2 < 2ts+ \u03b8(t\u2212 1) + z\u2212 2. Next, we first calculate D4, and then its union with D123. From (6) and (7), we have\nD4 =P(SA(x)) + P(SB(x))\n={ts, . . . , ts+ z \u2212 1} +{ts+ \u03b8(t\u2212 1), . . . , ts+ \u03b8(t\u2212 1) + z \u2212 1} ={2ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + 2z \u2212 2}. (56)\nFrom (39), (55) and (56), we have\nP(H(x)) =D123 \u222aD4 {0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}\u222a {2ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , 2ts+ \u03b8(t\u2212 1) + 2z \u2212 2}. (57)\nTherefore, |P(H(x))| = 2ts + \u03b8(t \u2212 1) + 2z \u2212 2 + 1. This completes the proof.\nFor the remaining regions of the values of z and \u03bb, where \u03bb < z, we use the following lemma to calculate P(H(x)).\nLemma 19: For \u03bb < z, we have\nD1 \u222aD2 \u222aD3 = D\u0302123\u2032 \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 , (58)\nwhere D\u0302123\u2032 = {0, . . . , 2ts + \u03b8(t \u2212 1) + z \u2212 2}, D\u0303\u20323 =\u22c3t+q\u22122 l\u2032=t\u22121{ts + \u03b8l\u2032, . . . , \u03b8(l\u2032 + 1) + s \u2212 2} and D\u0303\u2032\u20323 = {ts + (q + t\u2212 1)\u03b8, . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2}.\nProof: To prove this lemma, we first calculate and decom-\npose D\u03023 using (6) and (4):\nD3 =P(SA(x)) + P(CB(x))\n=({ts+ \u03b8l + w, 0 \u2264 l \u2264 q \u2212 1, 0 \u2264 w \u2264 \u03bb\u2212 1}\u222a {ts+ \u03b8q + u, 0 \u2264 u \u2264 z \u2212 1\u2212 q\u03bb})\n+{s\u2212 1\u2212 k + l(ts+ \u03bb), 0 \u2264 k \u2264 s\u2212 1, 0 \u2264 l \u2264 t\u2212 1} ={ts+ \u03b8l\u2032 + w\u2032, 0 \u2264 l\u2032 \u2264 t+ q \u2212 2,\n0 \u2264 w\u2032 \u2264 \u03bb+ s\u2212 2} \u222a {ts+ \u03b8l\u2032\u2032 + u\u2032, q \u2264 l\u2032\u2032 \u2264 t+ q \u2212 1,\n0 \u2264 u\u2032 \u2264 s+ z \u2212 q\u03bb\u2212 2} ={ts+ \u03b8l\u2032 + w\u2032, 0 \u2264 l\u2032 \u2264 t+ q \u2212 2,\n0 \u2264 w\u2032 \u2264 \u03bb+ s\u2212 2} \u222a {ts+ \u03b8l\u2032\u2032 + u\u2032, q \u2264 l\u2032\u2032 \u2264 t+ q \u2212 2, 0 \u2264 u\u2032 \u2264 s+ z \u2212 q\u03bb\u2212 2} \u222a {ts+ \u03b8l\u2032\u2032 + u\u2032, l\u2032\u2032 = t+ q \u2212 1,\n0 \u2264 u\u2032 \u2264 s+ z \u2212 q\u03bb\u2212 2} ={ts+ \u03b8l\u2032 + w\u2032, 0 \u2264 l\u2032 \u2264 t+ q \u2212 2,\n0 \u2264 w\u2032 \u2264 \u03bb+ s\u2212 2} (59) \u222a {ts+ \u03b8(t+ q \u2212 1) + u\u2032, 0 \u2264 u\u2032 \u2264 s+ z \u2212 q\u03bb\u2212 2}\n={ts+ \u03b8l\u2032 + w\u2032, 0 \u2264 l\u2032 \u2264 t\u2212 2, 0 \u2264 w\u2032 \u2264 \u03bb+ s\u2212 2}\n\u222a {ts+ \u03b8l\u2032 + w\u2032, t\u2212 1 \u2264 l\u2032 \u2264 t+ q \u2212 2, 0 \u2264 w\u2032 \u2264 \u03bb+ s\u2212 2}\n\u222a {ts+ \u03b8(t+ q \u2212 1) + u\u2032, 0 \u2264 u\u2032 \u2264 s+ z \u2212 q\u03bb\u2212 2} =D\u0302\u20323 \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 , (60)\nwhere\nD\u0302\u20323 = t\u22122\u22c3 l\u2032=0 {ts+ \u03b8l\u2032, . . . , ts+ \u03b8l\u2032 + \u03bb+ s\u2212 2}, (61)\nD\u0303\u20323 = t+q\u22122\u22c3 l\u2032=t\u22121 {ts+ \u03b8l\u2032, . . . , ts+ \u03b8l\u2032 + \u03bb+ s\u2212 2}, (62)\nD\u0303\u2032\u20323 = {ts+ \u03b8(t+ q \u2212 1), . . . , ts+ \u03b8(t+ q \u2212 1) + s+ z \u2212 q\u03bb\u2212 2} =\n{ts+ \u03b8(t+ q \u2212 1), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2}, (63)\nand (59) comes from the fact that\nz > \u03bb\u21d2 z \u2212 1 \u2265 \u03bb\n\u21d2 q = min{bz \u2212 1 \u03bb c, t\u2212 1} = bz \u2212 1 \u03bb c\n& q + 1 > z \u2212 1 \u03bb\n\u21d2 \u03bb+ s\u2212 2 > s+ z \u2212 q\u03bb\u2212 3 \u21d2 \u03bb+ s\u2212 2 \u2265 s+ z \u2212 q\u03bb\u2212 2\n\u21d2 {ts+ \u03b8l\u2032\u2032 + u\u2032, q \u2264 l\u2032\u2032 \u2264 t+ q \u2212 2, 0 \u2264 u\u2032 \u2264 s+ z \u2212 q\u03bb\u2212 2} \u2282 {ts+ \u03b8l\u2032 + w\u2032, 0 \u2264 l\u2032 \u2264 t+ q \u2212 2, 0 \u2264 w\u2032 \u2264 \u03bb+ s\u2212 2}\n. (64)\nNext, we calculate D\u0302123\u2032 = D1 \u222a D\u0302\u20323 \u222aD2 using (45), (61), and (46):\nD\u0302123\u2032 =D1 \u222a D\u0302\u20323 \u222aD2\n= t\u22121\u22c3 l=0 {\u03b8l, . . . , ts+ s\u2212 2 + \u03b8l}\u222a\nt\u22122\u22c3 l\u2032=0 {ts+ \u03b8l\u2032, . . . , ts+ \u03b8l\u2032 + \u03bb+ s\u2212 2}\u222a {ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}\n= t\u22122\u22c3 l=0 {\u03b8l, . . . , ts+ s\u2212 2 + \u03b8l}\u222a\n{\u03b8(t\u2212 1), . . . , ts+ s\u2212 2 + \u03b8(t\u2212 1)}\u222a t\u22122\u22c3 l\u2032=0 {ts+ \u03b8l\u2032, . . . , ts+ \u03b8l\u2032 + \u03bb+ s\u2212 2}\u222a {ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}\n= t\u22122\u22c3 l=0 {\u03b8l, . . . , ts+ s\u2212 2 + \u03b8l + \u03bb}\u222a\n{\u03b8(t\u2212 1), . . . , ts+ s\u2212 2 + \u03b8(t\u2212 1)}\u222a {ts+ \u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} (65)\n= t\u22122\u22c3 l=0 {\u03b8l, . . . , ts+ s\u2212 2 + \u03b8l + \u03bb}\u222a\n{\u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} ={0, . . . , ts+ s\u2212 2 + \u03b8(t\u2212 2) + \u03bb}\u222a {\u03b8(t\u2212 1), . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} (66)\n={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}, (67)\nwhere (65) comes from the fact that s < ts+z. Thus, ts+s\u2212 2 +\u03b8(t\u22121) < 2ts+\u03b8(t\u22121) + z\u22122. We obtain (66) from the fact that ts+ s\u2212 2 + \u03b8l+\u03bb+ 1 = s\u2212 1 + \u03b8(l+ 1) \u2265 \u03b8(l+ 1) and the last equality comes from the fact that:\n\u21d2 0 \u2264 s\u2212 1 < 2ts+ z \u2212 2 \u21d2 \u03b8(t\u2212 1) \u2264 s\u2212 1 + \u03b8(t\u2212 1) < 2ts+ z \u2212 2 + \u03b8(t\u2212 1)\n\u21d2 \u03b8(t\u2212 1) \u2264 ts+ s\u2212 1 + \u03b8(t\u2212 2) + \u03bb < 2ts+ \u03b8(t\u2212 1) + z \u2212 2. (68)\nWe can derive (58) from (60), (62), (63), and (67). This completes the proof.\nFrom (6) and (7), D4 for z > \u03bb is calculated as\nD4 =P(SA(x)) + P(SB(x))\n= q\u22121\u22c3 l=0 {2ts+ \u03b8(l + t\u2212 1), . . . ,\n2ts+ \u03b8(l + t\u2212 1) + z \u2212 1 + \u03bb\u2212 1} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . ,\n2ts+ \u03b8(q + t\u2212 1) + 2z \u2212 2\u2212 q(\u03b8 \u2212 ts)}\n= q\u22121\u22c3 l=0 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2}\n\u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}, (69)\nwhere for z > ts. The above equation is a continuous set as there exist no gaps between each of its two consecutive subsets. The reason is that, for z > ts, the greatest element of each subset plus one, i.e., ts+ \u03b8(l+ t) + z\u2212 1, is greater than or equal to the smallest element of it\u2019s consecutive subset, i.e., 2ts+ \u03b8(l + t) for l = {0, . . . , q \u2212 1}. This is shown as\nz > ts\u21d2 ts+ z \u2212 1 \u2265 2ts \u21d2 ts+ z \u2212 1 + \u03b8(l + t) \u2265 2ts+ \u03b8(l + t). (70)\nTherefore, for z > max{ts, \u03bb}, D4 is equal to:\nD4 ={2ts+ \u03b8(t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}. (71)\nLemma 20: For z > ts, t 6= 1 and 0 < \u03bb < z:\n|P(H(x))| = \u03a54(\u03bb) = (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 1 (72)\nProof: To prove this lemma, we calculate P(H(x)) = D1 \u222a D2 \u222aD3 \u222aD4 using (58) and (71):\nP(H(x)) = D1 \u222aD2 \u222aD3 \u222aD4 =D\u0302123\u2032 \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 \u222aD4 ={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 ={0, . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 (73)\nFrom the above equation, |P(H(x))| \u2265 (q + 2)ts + \u03b8(t \u2212 1) + 2z \u2212 1. On the other hand, from (47), |P(H(x))| \u2264 max{D4}+ 1 = (q+ 2)ts+ \u03b8(t\u2212 1) + 2z\u2212 2 + 1. Therefore, |P(H(x))| = (q + 2)ts + \u03b8(t \u2212 1) + 2z \u2212 1. This completes the proof.\nLemma 21: For z \u2264 ts < \u03bb+ s\u2212 1, t 6= 1 and 0 < \u03bb < z, we have\n|P(H(x))| = \u03a55(\u03bb) = 3ts+ \u03b8(t\u2212 1) + 2z \u2212 1 (74)\nProof: For the conditions of this lemma, i.e., ts\u2212s+2 \u2264 \u03bb \u2264 z \u2212 1 and z \u2212 1 \u2264 ts\u2212 1, the range of variation of z\u22121\u03bb and\nthus the value of q is calculated as follows:\n1 \u2264 z \u2212 1 \u03bb \u2264 ts\u2212 1 ts\u2212 s+ 2 \u21d21 \u2264 z \u2212 1 \u03bb \u2264 ts\u2212 1 ts\u2212 s+ 2 < 2 (75) \u21d2q = bz \u2212 1 \u03bb c = 1, (76)\nwhere (75) comes from the fact that s(t \u2212 2) \u2265 0 and thus s(t \u2212 2) + 5 > 0. By replacing q = 1 in (58) and (69), we calculate P(H(x)) = D1 \u222aD2 \u222aD3 \u222aD4 as\nP(H(x)) =D1 \u222aD2 \u222aD3 \u222aD4 =D\u0302123\u2032 \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 \u222aD4 ={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} \u222a {ts+ \u03b8(t\u2212 1), . . . , \u03b8t+ s\u2212 2} \u222a {ts+ t\u03b8, . . . , 2ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , ts+ \u03b8t+ z \u2212 2} \u222a {2ts+ \u03b8t, . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} \u222a {ts+ t\u03b8, . . . , 2ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , ts+ \u03b8t+ z \u2212 2} \u222a {2ts+ \u03b8t, . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2} (77)\n={0, . . . , 2ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , ts+ \u03b8t+ z \u2212 2} \u222a {2ts+ \u03b8t, . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2} (78)\n={0, . . . , ts+ \u03b8t+ z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2} (79) ={0, . . . , ts+ \u03b8(t\u2212 1) + \u03b8 + z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , 2ts+ \u03b8(t\u2212 1) + \u03bb+ z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2} (80)\nwhere (77) comes from\n\u03bb < z\n\u21d2s(1\u2212 t) < 0 < z \u2212 \u03bb \u21d2s\u2212 2 < ts\u2212 \u03bbz + z \u2212 2 \u21d2\u03b8t+ s\u2212 2 < 2ts+ \u03b8(t\u2212 1) + z \u2212 2 \u21d2{ts+ \u03b8(t\u2212 1), . . . , \u03b8t+ s\u2212 2} \u2282 {0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}, (81)\nand (78) comes from\n\u03bb < z\n\u21d2\u03bb \u2264 z \u2212 1 \u21d2ts+ t\u03b8 \u2264 2ts+ \u03b8(t\u2212 1) + z \u2212 2 + 1, (82)\nand (79) comes from\nts\u2212 s+ 1 < \u03bb \u21d2s(t\u2212 1) + 1 < \u03bb \u21d2s(2\u2212 1) + 1 \u2264 s(t\u2212 1) + 1 < \u03bb \u21d2s < \u03bb \u21d22ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2 < ts+ \u03b8t+ z \u2212 2, (83)\nand (80) comes from the fact that \u03bb + z \u2212 2 \u2265 0 (because \u03bb \u2265 1 and z \u2265 1) and \u03bb < z (and thus \u03bb < z + ts and 2ts+ \u03b8(t\u2212 1) + \u03bb+ z \u2212 2 < 3ts+ \u03b8(t\u2212 1) + 2z \u2212 2). From (80), |P(H(x))| = 3ts + \u03b8(t \u2212 1) + 2z \u2212 1. This completes the proof.\nIn order to calculate P(H(x)) = D\u0302123\u2032 \u222aD\u0303\u20323\u222aD\u0303\u2032\u20323 \u222aD4 for the remaining regions of the values of z and \u03bb, i.e., z > \u03bb > 0, we first calculate D\u0302123\u2032 \u222aD4 using (67) and (69) as follows\nP(H(x)) = D1 \u222aD2 \u222aD3 \u222aD4 =D\u0302123\u2032 \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 \u222aD4 ={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2}\n\u222a q\u22121\u22c3 l=0 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323\n={0, . . . , 2ts+ \u03b8(t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(t\u2212 1), . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a D\u0303\u20323 \u222a D\u0303\u2032\u20323 (84)\n=(D\u0302123\u20324 \u222a D\u0303\u20323) \u222a (D\u0302123\u20324 \u222a D\u0303\u2032\u20323) for 0 < \u03bb < z, (85)\nwhere (84) comes from the fact that \u03bb > 0 and thus ts+ \u03b8t+ z \u2212 2 > 2ts+ \u03b8(t\u2212 1) + z \u2212 2 and D\u0302123\u20324 is equal to\nD\u0302123\u20324 = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}. (86)\nNext, we calculate D\u0302123\u20324\u222aD\u0303\u20323 and D\u0302123\u20324\u222aD\u0303\u2032\u20323 for different regions of values of z and \u03bb.\nLemma 22:\nD\u0302123\u20324 \u222a D\u0303\u20323 = { D123\u20324(a), z > \u03bb+ s\u2212 1 D123\u20324(b), z \u2264 \u03bb+ s\u2212 1,\n(87)\nD123\u20324(a) = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}, (88)\nD123\u20324(b) = {0, . . . , \u03b8(t+ 1) + s\u2212 2}\n\u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(t+ q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(89)\nProof: From (86) and (58), we have:\nD\u0302123\u20324 \u222a D\u0303\u20323 = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a t+q\u22122\u22c3 l\u2032=t\u22121 {ts+ \u03b8l\u2032, . . . , \u03b8(l\u2032 + 1) + s\u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {ts+ \u03b8(t\u2212 1), . . . , \u03b8t+ s\u2212 2} \u222a t+q\u22122\u22c3 l\u2032=t {ts+ \u03b8l\u2032, . . . , \u03b8(l\u2032 + 1) + s\u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2}\n\u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a t+q\u22122\u22c3 l\u2032=t {ts+ \u03b8l\u2032, . . . , \u03b8(l\u2032 + 1) + s\u2212 2} (90)\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2}\n\u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a t+q\u22122\u22c3 l\u2032=t {ts+ \u03b8l\u2032, . . . , \u03b8(l\u2032 + 1) + s\u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {ts+ \u03b8t, . . . , \u03b8(t+ 1) + s\u2212 2} \u222a t+q\u22123\u22c3 l\u2032=t {ts+ \u03b8(l\u2032 + 1), . . . , \u03b8(l\u2032 + 2) + s\u2212 2} (91)\nwhere (90) comes from the fact that s < ts + z and thus \u03b8t + s \u2212 2 < ts + \u03b8t + z \u2212 2; this results in {ts + \u03b8(t \u2212 1), . . . , \u03b8t+ s\u2212 2} \u2282 {0, . . . , ts+ \u03b8t+ z \u2212 2}.\nNow, we consider the two cases; Case 1: z > \u03bb + s \u2212 1, and Case 2: z \u2264 \u03bb+ s\u2212 1, and simplify (91) for each case.\nCase 1: z > \u03bb + s \u2212 1. For this case, \u22c3t+q\u22123 l\u2032=t {ts +\n\u03b8(l\u2032 + 1), . . . , \u03b8(l\u2032 + 2) + s\u2212 2} is a subset of \u22c3t+q\u22122 l=t {2ts+ \u03b8l, . . . , ts+\u03b8(l+1)+z\u22122}. This is formulated in the following and demonstrated in Fig. 4 and 5.\n0 < \u03bb\n\u21d2ts < \u03b8 \u21d22ts+ \u03b8l < ts+ \u03b8(l + 1), (92)\nand\n\u03bb+ s\u2212 1 < z \u21d2\u03bb+ s \u2264 z \u21d2\u03b8 + s\u2212 2 \u2264 ts+ z \u2212 2 \u21d2\u03b8(l + 2) + s\u2212 2 \u2264 ts+ \u03b8(l + 1) + z \u2212 2. (93)\nOn the other hand, {ts+\u03b8t, . . . , \u03b8(t+1)+s\u22122} is a subset of {0, . . . , ts+ \u03b8t+ z\u2212 2}. This is expressed in the following and demonstrated in Fig. 4 and 5.\n\u03bb+ s\u2212 1 < z \u21d2s+ \u03bb \u2264 z \u21d2ts+ z \u2264 \u03b8 + s \u21d2\u03b8(t+ 1) + s\u2212 2 \u2264 ts+ \u03b8t+ z \u2212 2, (94)\nTherefore, for the case of z > \u03bb+ s\u2212 1, (91) is simplified as\nD\u0302123\u20324 \u222a D\u0303\u20323 = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} (95)\nCase 2: z \u2264 \u03bb + s \u2212 1. For this case, the union of {ts + \u03b8t, . . . , \u03b8(t + 1) + s \u2212 2} and {0, . . . , ts + \u03b8t + z \u2212 2} is equal to {0, . . . , \u03b8(t+ 1) + s\u2212 2}. This can be derived from (94) and demonstrated in Fig. 6 and 7. On the other hand,\nthe union of \u22c3t+q\u22123 l\u2032=t {ts + \u03b8(l\u2032 + 1), . . . , \u03b8(l\u2032 + 2) + s \u2212 2}\nand \u22c3t+q\u22122 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} is equal to\u22c3t+q\u22123\nl=t {2ts + \u03b8l, . . . , \u03b8(l + 2) + s \u2212 2} \u222a {2ts + \u03b8(t + q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2}. This can be derived from (92) and (93) and demonstrated in Fig. 6 and 7. Therefore, for the case of z \u2264 \u03bb+ s\u2212 1, (91) is simplified as\nD\u0302123\u20324 \u222a D\u0303\u20323 = {0, . . . , \u03b8(t+ 1) + s\u2212 2}\n\u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(t+ q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(96)\nThis completes the proof.\nLemma 23: The following equalities hold.\nD\u0302123\u20324 \u222a D\u0303\u2032\u20323 = { D123\u2032\u20324(a), q\u03bb \u2265 s D123\u2032\u20324(b), q\u03bb < s,\n(97)\nD123\u2032\u20324(a) = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , ts+ \u03b8(q + t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2},\n(98)\nD123\u2032\u20324(b) = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(99)\nProof: From (86) and (58), we have\nD\u0302123\u20324 \u222a D\u0303\u2032\u20323 = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22121\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {ts+ (q + t\u2212 1)\u03b8, . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , ts+ \u03b8(q + t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {ts+ (q + t\u2212 1)\u03b8, . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2}\n(100)\nTo simplify the above equation, we consider the two cases;\nCase 1: q\u03bb \u2265 s, and Case 2: q\u03bb < s.\nCase 1: q\u03bb \u2265 s. For this case, {ts+ (q + t\u2212 1)\u03b8, . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} is a subset of {2ts+ \u03b8(q + t\u2212 2), . . . , ts+\u03b8(q+t\u22121)+z\u22122}. This is shown mathematically in the following and demonstrated in Fig. 4 and 6:\nq\u03bb \u2265 s \u21d2\u03b8q + z \u2212 2 \u2265 qts+ s+ z \u2212 2 \u21d2ts+ \u03b8(q + t\u2212 1) + z \u2212 2 \u2265\n(q + 1)ts+ (t+ 1)\u03b8 + s+ z \u2212 2, (101)\nand\nts < ts+ \u03bb\n\u21d22ts+ \u03b8(q + t\u2212 2) < ts+ (q + t\u2212 1)\u03b8. (102)\nTherefore, for the case of q\u03bb \u2265 s, (100) is simplified as:\nD\u0302123\u20324 \u222a D\u0303\u2032\u20323 = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , ts+ \u03b8(q + t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(103)\nCase 2: q\u03bb < s. For this case, the union of {ts+ (q + t\u2212 1)\u03b8, . . . , (q+1)ts+(t\u22121)\u03b8+s+z\u22122} and {2ts+\u03b8(q+ t\u2212 2), . . . , ts+ \u03b8(q+ t\u2212 1) + z\u2212 2} is equal to {2ts+ \u03b8(q+ t\u2212 2), . . . , (q+ 1)ts+ (t\u2212 1)\u03b8+ s+ z\u2212 2}. This can be derived mathematically from (101) and (102) and demonstrated in Fig. 5 and 7. Therefore, for the case of q\u03bb < s, (100) is simplified as\nD\u0302123\u20324 \u222a D\u0303\u2032\u20323 = {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(104)\nThis completes the proof.\nLemma 24: For \u03bb + s\u2212 1 < z \u2264 ts, 0 < \u03bb < z, t 6= 1 and q\u03bb \u2265 s, we have\n|P(H(x))| = \u03a56(\u03bb) = 2ts+\u03b8(t\u22121)+(q+2)z\u2212q\u22121 (105)\nProof: From (85) and Lemmas 22 and 23, we have\nP(H(x)) = (D\u0302123\u20324 \u222a D\u0303\u20323) \u222a (D\u0302123\u20324 \u222a D\u0303\u2032\u20323) ={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n\u222a {0, . . . , ts+ \u03b8t+ z \u2212 2} \u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , ts+ \u03b8(q + t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , ts+ \u03b8(q + t\u2212 1) + z \u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} (106)\nNext, we show that the subsets shown in (106) do not have overlap.\nz \u2264 ts \u21d2z \u2212 2 < ts \u21d2ts+ \u03b8t+ z \u2212 2 < 2ts+ \u03b8t\n& ts+ \u03b8(l + 1) + z \u2212 2 < 2ts+ \u03b8(l + 1). (107)\nTherefore, by calculating the size of each subset, we can calculate the number of elements of P(H(x)). The size of {0, . . . , ts + \u03b8t + z \u2212 2} is equal to ts + \u03b8t + z \u2212 1. The size of \u22c3t+q\u22122 l=t {2ts + \u03b8l, . . . , ts + \u03b8(l + 1) + z \u2212 2} is equal to (q \u2212 1)(\u03bb + z \u2212 1). The size of {2ts + \u03b8(q + t \u2212 1), . . . , (q+2)ts+\u03b8(t\u22121)+2z\u22122} is equal to \u2212\u03bbq+2z\u22121. Therefore, P(H(x)) is equal to the sum of all these sizes, i.e., P(H(x)) = ts+\u03b8t+z\u22121+(q\u22121)(\u03bb+z\u22121)\u2212\u03bbq+2z\u22121 = 2ts+ \u03b8(t\u22121) + (q+ 2)z\u2212 q\u22121. This completes the proof.\nLemma 25: For \u03bb + s\u2212 1 < z \u2264 ts, 0 < \u03bb < z, t 6= 1 and q\u03bb < s, we have\n|P(H(x))| = \u03a57(\u03bb) =\u03b8(t+ 1) + q(z \u2212 1)\u2212 2\u03bb+ z + ts + min{0, z + s(1\u2212 t)\u2212 \u03bbq \u2212 1}\n(108)\nProof: From (85) and Lemmas 22 and 23, we have\nP(H(x)) = (D\u0302123\u20324 \u222a D\u0303\u20323) \u222a (D\u0302123\u20324 \u222a D\u0303\u2032\u20323) ={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2}\n\u222a{2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a{2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} ={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22122\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2}\n\u222a{2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n={0, . . . , ts+ \u03b8t+ z \u2212 2}\n\u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2}\n\u222a{2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(109)\nNext, we show that the subsets shown in (109), do not have overlap except for the last two subsets of {2ts + \u03b8(q + t \u2212 2), . . . , (q + 1)ts + (t \u2212 1)\u03b8 + s + z \u2212 2} and {2ts + \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\nz \u2264 ts \u21d2z \u2212 2 < ts \u21d2ts+ \u03b8(l + 1) + z \u2212 2 < 2ts+ \u03b8(l + 1) (110)\nTherefore, by calculating the size of each subset, we can calculate the number of elements of P(H(x)). The size of {0, . . . , ts+ \u03b8t+ z \u2212 2} is equal to ts+ \u03b8t+ z \u2212 1. The size of \u22c3t+q\u22123 l=t {2ts + \u03b8l, . . . , ts + \u03b8(l + 1) + z \u2212 2} is equal to (q\u22122)(\u03bb+z\u22121). The size of {2ts+\u03b8(q+t\u22122), . . . , (q+1)ts+ (t\u22121)\u03b8+s+z\u22122}\u222a{2ts+\u03b8(q+t\u22121), . . . , (q+2)ts+\u03b8(t\u22121)+ 2z\u22122} is equal to min{\u03bb(1\u22122q)+3z+s\u22122, \u03b8\u2212\u03bbq+2z\u22121}. Therefore, |P(H(x))| is equal to the sum of all these sizes, i.e., |P(H(x))| = \u03b8(t+1)+q(z\u22121)\u22122\u03bb+z+ts+min{0, z+ s(1\u2212 t)\u2212 \u03bbq \u2212 1}. This completes the proof.\nLemma 26: For z \u2264 \u03bb + s\u2212 1 \u2264 ts, 0 < \u03bb < z, t 6= 1 and q\u03bb \u2265 s, we have\n|P(H(x))| = \u03a58(\u03bb) = 2ts+\u03b8(t\u22121)+3z+(\u03bb+s\u22121)q\u2212\u03bb\u2212s\u22121 (111)\nProof: From (85) and Lemmas 22 and 23, we have\nP(H(x)) = (D\u0302123\u20324 \u222a D\u0303\u20323) \u222a (D\u0302123\u20324 \u222a D\u0303\u2032\u20323) = {0, . . . , \u03b8(t+ 1) + s\u2212 2}\n\u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(t+ q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {0, . . . , ts+ \u03b8t+ z \u2212 2} \u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , ts+ \u03b8(q + t\u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n= {0, . . . , \u03b8(t+ 1) + s\u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(t+ q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} = {0, . . . , \u03b8(t+ 1) + s\u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(t+ q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(112)\nNext, we show that the subsets shown in (112) do not have overlap\n\u03bb+ s\u2212 1 \u2264 ts \u21d2\u03bb+ s\u2212 2 < ts \u21d2\u03b8(l + 1) + s\u2212 2 < 2ts+ \u03b8l (113)\nand\nz \u2264 ts \u21d2z \u2212 2 < ts \u21d2ts+ \u03b8(t+ q \u2212 1) + z \u2212 2 < 2ts+ \u03b8(q + t\u2212 1) (114)\nTherefore, by calculating the size of each subset, we can calculate the number of elements of P(H(x)). The size of {0, . . . , \u03b8(t + 1) + s \u2212 2} is equal to \u03b8(t + 1) + s \u2212 1. The size of \u22c3t+q\u22123 l=t {2ts + \u03b8l, . . . , \u03b8(l + 2) + s \u2212 2} is equal to (q\u2212 2)(2\u03bb+ s\u2212 1). The size of {2ts+ \u03b8(t+ q\u2212 2), . . . , ts+ \u03b8(t + q \u2212 1) + z \u2212 2} is equal to z + \u03bb \u2212 1. The size of {2ts+\u03b8(q+ t\u22121), . . . , (q+2)ts+\u03b8(t\u22121)+2z\u22122} is equal to 2z \u2212 q\u03bb\u2212 1. Therefore, |P(H(x))| is equal to the sum of all these sizes, i.e., |P(H(x))| = 2ts+ \u03b8(t\u2212 1) + 3z + (\u03bb+ s\u2212 1)q \u2212 \u03bb\u2212 s\u2212 1. This completes the proof.\nLemma 27: For z \u2264 \u03bb + s\u2212 1 \u2264 ts, 0 < \u03bb < z, t 6= 1 and q\u03bb < s:\n|P(H(x))| = \u03a59(\u03bb) =\u03b8(t+ 1) + q(s\u2212 1)\u2212 3\u03bb+ 3z \u2212 1 + min{0, ts\u2212 z + 1 + \u03bbq \u2212 s}\n(115)\nProof: From (85) and Lemmas 22 and 23, we have\nP(H(x)) = (D\u0302123\u20324 \u222a D\u0303\u20323) \u222a (D\u0302123\u20324 \u222a D\u0303\u2032\u20323)\n= {0, . . . , \u03b8(t+ 1) + s\u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(t+ q \u2212 2), . . . , ts+ \u03b8(t+ q \u2212 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a {0, . . . , ts+ \u03b8t+ z \u2212 2} \u222a q\u22122\u22c3 l=1 {2ts+ \u03b8(l + t\u2212 1), . . . , ts+ \u03b8(l + t) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} (116)\n\u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} = {0, . . . , \u03b8(t+ 1) + s\u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2}\n\u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , ts+ \u03b8(l + 1) + z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2}\n= {0, . . . , \u03b8(t+ 1) + s\u2212 2} \u222a t+q\u22123\u22c3 l=t {2ts+ \u03b8l, . . . , \u03b8(l + 2) + s\u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 2), . . . , (q + 1)ts+ (t\u2212 1)\u03b8 + s+ z \u2212 2} \u222a {2ts+ \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n(117)\nNext, we show that the subsets shown in (117), do not have overlap except for the last two subsets of {2ts + \u03b8(q + t \u2212 2), . . . , (q + 1)ts + (t \u2212 1)\u03b8 + s + z \u2212 2} and {2ts + \u03b8(q + t\u2212 1), . . . , (q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 2}\n\u03bb+ s\u2212 1 \u2264 ts \u21d2\u03bb+ s\u2212 2 < ts \u21d2\u03b8(l + 1) + s\u2212 2 < 2ts+ \u03b8l (118)\nTherefore, by calculating the size of each subset, we can calculate the number of elements of P(H(x)). The size of {0, . . . , \u03b8(t+ 1) + s\u22122} is equal to \u03b8(t+ 1) + s\u22121. The size of \u22c3t+q\u22123 l=t {2ts+\u03b8l, . . . , \u03b8(l+2)+s\u22122} is equal to (q\u22122)(2\u03bb+ s\u22121). The size of {2ts+\u03b8(q+t\u22122), . . . , (q+1)ts+(t\u22121)\u03b8+ s+z\u22122}\u222a{2ts+\u03b8(q+t\u22121), . . . , (q+2)ts+\u03b8(t\u22121)+2z\u22122} is equal to min{\u03bb(1 \u2212 2q) + 3z + s \u2212 2, \u03b8 \u2212 \u03bbq + 2z \u2212 1}. Therefore, |P(H(x))| is equal to the sum of all these sizes, i.e., |P(H(x))| = \u03b8(t+1)+q(s\u22121)\u22123\u03bb+3z\u22121+min{0, ts\u2212 z + 1 + \u03bbq \u2212 s}. This completes the proof.\nFrom Lemmas 14, 16, 17, 18, 20, 21, 24, 25, 26 and 27, Theorem 3 is proved."
        },
        {
            "heading": "APPENDIX D: PROOF OF LEMMAS 4, 5, 6, AND 7",
            "text": ""
        },
        {
            "heading": "A. Proof of Lemma 4 (AGE-CMPC Versus Entangled-CMPC)",
            "text": "NAGE-CMPC = 2s + 2z \u2212 1 when t = 1 using (13). On the other hand, NEntangled-CMPC = 2s + 2z \u2212 1 from [14]. Thus, NAGE-CMPC = NEntangled-CMPC when t = 1. NAGE-CMPC is expressed as in the following when t 6= 1 using (13) and (14).\nNAGE-CMPC = min \u03bb \u0393\n\u2264\u0393 for \u03bb = 0\n= { 2st2 + 2z \u2212 1, z > ts\u2212 s, st2 + 3st\u2212 2s+ t(z \u2212 1) + 1, z \u2264 ts\u2212 s,\n=NEntangled-CMPC, (119)\nwhere the last equality comes from [14]. From the above discussion, we conclude that NAGE-CMPC < NEntangled-CMPC when 0 < \u03bb\u2217 \u2264 z. For the case of \u03bb\u2217 = 0, NAGE-CMPC = NEntangled-CMPC. This completes the proof of Lemma 4.\nB. Proof of Lemma 5 (AGE-CMPC Versus SSMM)\nNAGE-CMPC = 2s + 2z \u2212 1 when t = 1 using (13). On the other hand, NSSMM = 2s + 2z \u2212 1 from [15]. Thus, NAGE-CMPC = NSSMM when t = 1. Next, we consider the case of t 6= 1 and compare NAGE-CMPC with NSSMM.\nNAGE-CMPC is expressed as the following when t 6= 1 using (13) and (14).\nNAGE-CMPC = min \u03bb \u0393\n\u2264\u0393 for \u03bb = z =2ts+ (ts+ z)(t\u2212 1) + 2z \u2212 1 =(t+ 1)(ts+ z)\u2212 1 =NSSMM, (120)\nwhere the last equality comes from Theorem 1 in [15]. From the above discussion, we conclude that NAGE-CMPC < NSSMM when 0 \u2264 \u03bb\u2217 < z. For the case of \u03bb\u2217 = z, NAGE-CMPC = NSSMM. This completes the proof of Lemma 5.\nC. Proof of Lemma 6 (AGE-CMPC Versus GCSA-NA) NAGE-CMPC = 2s + 2z \u2212 1 when t = 1 using (13). On the other hand, NGCSA-NA = 2s + 2z \u2212 1 from [16]. Thus, NAGE-CMPC = NGCSA-NA when t = 1. Next, we consider the case of t 6= 1 and compare NAGE-CMPC with NGCSA-NA. NAGE-CMPC is expressed as the following when t 6= 1 using (13) and (14).\nNAGE-CMPC = min \u03bb \u0393\n\u2264\u0393 for \u03bb = 0\n= { 2st2 + 2z \u2212 1, z > ts\u2212 s, st2 + 3st\u2212 2s+ t(z \u2212 1) + 1, z \u2264 ts\u2212 s,{\n= 2st2 + 2z \u2212 1, z > ts\u2212 s, \u2264 2st2 + 2z \u2212 1, z \u2264 ts\u2212 s,\n(121){ = NGCSA-NA, z > ts\u2212 s \u2264 NGCSA-NA, z \u2264 ts\u2212 s , (122)\nwhere (121) comes from the condition of z \u2264 ts \u2212 s as described in the following:\nst2+3st\u2212 2s+ t(z \u2212 1) + 1 = st2 + 3st\u2212 2s+ tz \u2212 t\u2212 2z + 2z + 1 = st2 + 3st\u2212 2s+ (t\u2212 2)(z)\u2212 t+ 2z + 1 \u2264 st2 + 3st\u2212 2s+ (t\u2212 2)(ts\u2212 s)\u2212 t+ 2z + 1 = 2st2 + 2z \u2212 1\u2212 t+ 2 \u2264 2st2 + 2z \u2212 1 (123)\nand (122) comes from Theorem 1 in [16]. From the above discussion, we conclude that NAGE-CMPC < NGCSA-NA when 0 < \u03bb\u2217 \u2264 z. For the case of \u03bb\u2217 = 0, NAGE-CMPC \u2264 NGCSA-NA. This completes the proof of Lemma 6.\nD. Proof of Lemma 7 (AGE-CMPC Versus PolyDot-CMPC) To prove this lemma, we consider different regions for the value of z, and prove that in all of the regions, the inequality of NAGE-CMPC \u2264 NPolyDot-CMPC is valid.\n(i) z > ts, t 6= 1: For this region, We consider the two cases of (a) s 6= 1 and (b) s = 1.\n(a) s 6= 1: From (13) and (14), we have\nNAGE-CMPC = min \u03bb \u0393\n\u2264\u0393 for 0 < \u03bb = ts\u2212 t < z =(q + 2)ts+ \u03b8(t\u2212 1) + 2z \u2212 1 for \u03bb = ts\u2212 t =(min{b z \u2212 1 2ts\u2212 t\u2212 ts c, t\u2212 1}+ 2)ts+ (2ts\u2212 t)(t\u2212 1) + 2z \u2212 1 =NPolyDot-CMPC, (124)\nwhere the last equality comes from [13]. (b) s = 1: From (13) and (14), we have\nNAGE-CMPC = min \u03bb \u0393\n\u2264\u0393 for \u03bb = 0 =2t2 + 2z \u2212 1 =NPolyDot-CMPC, (125)\nwhere the last equality comes from NPolyDot-CMPC defined in [13] for s = 1 and z > ts.\n(ii) t\u22121t\u22122 (ts\u2212 t) < z \u2264 ts, t 6= 1: This condition exists only if the constraint of t\u22121t\u22122 (ts\u2212t) < ts is satisfied. This constraint is satisfied when\ns+ 1 < t. (126)\nNext, we show that, for 0 < \u03bb = ts\u2212 t < z, \u0393 is equal to one of \u03a5i(\u03bb)\u2019s where i = 6, 7, 8, 9. Then, we show that each \u03a5i(\u03bb), i = 6, 7, 8, 9 for \u03bb = ts\u2212 t is less than NPolyDot-CMPC. For this purpose, we first assert that the conditions for this case, i.e., \u03bb = ts \u2212 t < t\u22121t\u22122 (ts \u2212 t) < z \u2264 ts, t 6= 1, do not satisfy the conditions for \u03a5i(\u03bb), i = 1, 2, 3, 4, 5.The reason is that 0 < t(s \u2212 1) = \u03bb does not satisfy the condition for \u03a5i(\u03bb), i = 1, 2, 3. On the other hand, z \u2264 ts does not satisfy the condition for \u03a54(\u03bb). In addition, from (126), s \u2212 1 < t\nand thus ts\u2212 s+ 1 > ts\u2212 t = \u03bb, which does not satisfy the condition for \u03a55(\u03bb).\nWe consider the following cases; q = 0 and q = 1.\n(a) q = 0: For this case, based on the definition of q, we should have either (1) z\u22121\u03bb = z\u22121 ts\u2212t < 1, which is not possible as this contradicts the condition of (ii) that requires ts\u2212 t < t\u22121 t\u22122 ts \u2212 t < z, so ts \u2212 t \u2264 z \u2212 1, or (2) t = 1, which is not possible as (126) results in s < 0, which is not a valid inequality.\n(b) q = 1: From (14), this falls under the condition of \u03a56(\u03bb) and \u03a58(\u03bb) as q\u03bb = \u03bb = s(t\u2212 1) \u2265 s. For this case, either the condition of \u03bb+s\u22121 < z (condition of \u03a56(\u03bb)) or z \u2264 \u03bb+s\u22121 (condition of \u03a58(\u03bb)) is satisfied. Both \u03a56(\u03bb) and \u03a58(\u03bb) are less than NPolyDot-CMPC as shown below.\nFor s 6= 1, we have\n\u03a56(\u03bb) = 2ts+ \u03b8(t\u2212 1) + (q + 2)z \u2212 q \u2212 1 = 2ts+ (ts+ ts\u2212 t)(t\u2212 1) + 3z \u2212 2 < 2ts+ (2ts\u2212 t)(t\u2212 1) + 3z \u2212 1 = NPolyDot-CMPC, (127)\nwhere the last equality comes from NPolyDot-CMPC defined in [13] for ts \u2212 t < z \u2264 ts, s 6= 1. Next, we consider the case s = 1.\nFor s = 1, from (126), we have t > 2 and from the condition\nof (ii), we have z \u2264 t. Therefore, we have\n\u03a56(\u03bb) = 2ts+ \u03b8(t\u2212 1) + (q + 2)z \u2212 q \u2212 1 = 2t+ (2t\u2212 t)(t\u2212 1) + 3z \u2212 2 = t2 + t+ 3z \u2212 2 < t2 + t+ 2z + z \u2212 1 < t2 + t+ tz + t\u2212 1 (128) = t2 + 2t+ tz \u2212 1 = NPolyDot-CMPC, (129)\nwhere (128) comes from t > 2 and z \u2264 t. The last equality comes from NPolyDot-CMPC defined in [13] for s = 1, z \u2264 t.\nFrom (127) and (129), we conclude \u03a56(\u03bb) < NPolyDot-CMPC. For s 6= 1, we have\n\u03a58(\u03bb) = 2ts+ \u03b8(t\u2212 1) + 3z + (\u03bb+ s\u2212 1)q \u2212 \u03bb\u2212 s\u2212 1 = 2ts+ (2ts\u2212 t)(t\u2212 1) + 3z + \u03bb+ s\u2212 1\u2212 \u03bb\u2212 s\u2212 1 = 2ts+ (2ts\u2212 t)(t\u2212 1) + 3z \u2212 2 < 2ts+ (2ts\u2212 t)(t\u2212 1) + 3z \u2212 1 = NPolyDot-CMPC, (130)\nwhere the last equality comes from NPolyDot-CMPC defined in [13] for ts\u2212 t < z \u2264 ts, s 6= 1. Next, we consider the case of s = 1.\nFor s = 1, from (126), we have t > 2 and from the condition of (ii), we have z \u2264 t. Therefore, similar to (128), we have\n\u03a58(\u03bb) = 2ts+ \u03b8(t\u2212 1) + 3z + (\u03bb+ s\u2212 1)q \u2212 \u03bb\u2212 s\u2212 1 = 2t+ (2t\u2212 t)(t\u2212 1) + 3z + \u03bb+ 1\u2212 1\u2212 \u03bb\u2212 1\u2212 1 = t2 + t+ 3z \u2212 2 < t2 + 2t+ tz \u2212 1 = NPolyDot-CMPC, (131)\nwhere the last inequality comes from t > 2 and z \u2264 t and the last equality comes from NPolyDot-CMPC defined in [13] for s = 1, z \u2264 t.\nFrom (130) and (131), we conclude \u03a58(\u03bb) < NPolyDot-CMPC. From the above discussion, \u0393 for \u03bb = ts \u2212 t is less than\nNPolyDot-CMPC for the condition of (ii). Therefore, we have:\nNAGE-CMPC = min \u03bb \u0393\n\u2264\u0393 for 0 < \u03bb = ts\u2212 t < z <NPolyDot-CMPC, (132)\n(iii) z \u2264 t\u22121t\u22122 (ts\u2212 t), s, t 6= 1 4: It is proved in [13] that for the condition of (iii), NSSMM \u2264 NPolyDot-CMPC. On the other hand, from Lemma (5), NAGE-CMPC \u2264 NSSMM. Therefore, for this region, NAGE-CMPC \u2264 NPolyDot-CMPC.\n(iv) t = 1: For this region, from (13), we have:\nNAGE-CMPC = 2s+ 2z \u2212 1 = NPolyDot-CMPC, (133)\n4Note that for this case, we have s 6= 1 as z \u2264 t\u22121 t\u22122 t(s\u2212 1).\nwhere the last equality comes from NPolyDot-CMPC defined in [13] for t = 1.\nFrom (i), (ii), (iii), and (iv), the number of workers required by AGE-CMPC method is always less than or equal to the number of workers required by PolyDot-CMPC [13]. This completes the proof of Lemma 7."
        }
    ],
    "title": "Adaptive Gap Entangled Polynomial Coding for Multi-Party Computation at the Edge",
    "year": 2022
}