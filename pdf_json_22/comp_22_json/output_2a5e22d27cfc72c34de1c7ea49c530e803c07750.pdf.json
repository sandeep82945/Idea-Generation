{
    "abstractText": "Uniform interpolants were largely studied in non-classical propositional logics since the nineties, and their connection to model completeness was pointed out in the literature. A successive parallel research line inside the automated reasoning community investigated uniform quantifier-free interpolants (sometimes referred to as \u201ccovers\u201d) in first-order theories. In this paper, we investigate cover transfer to theory combinations in the disjoint signatures case.We prove that, for convex theories, cover algorithms can be transferred to theory combinations under the same hypothesis needed to transfer quantifier-free interpolation (i.e., the equality interpolating property, aka strong amalgamation property). The key feature of our algorithm relies on the extensive usage of the Beth definability property for primitive fragments to convert implicitly defined variables into their explicitly defining terms. In the non-convex case, we show by a counterexample that covers may not exist in the combined theories, even in case combined quantifier-free interpolants do exist. However, we exhibit a cover transfer algorithm operating also in the non-convex case for special kinds of theory combinations; these combinations (called \u2018tame combinations\u2019) concern multi-sorted theories arising in many model-checking applications (in particular, the ones oriented to verification of data-aware processes).",
    "authors": [
        {
            "affiliations": [],
            "name": "Diego Calvanese"
        },
        {
            "affiliations": [],
            "name": "Silvio Ghilardi"
        },
        {
            "affiliations": [],
            "name": "Alessandro Gianola"
        },
        {
            "affiliations": [],
            "name": "\u00b7Marco Montali"
        },
        {
            "affiliations": [],
            "name": "Andrey Rivkin"
        }
    ],
    "id": "SP:358dc9a1dec5a907d3eb242eb6e41bd8afad8774",
    "references": [
        {
            "authors": [
                "M. B\u00edlkov\u00e1"
            ],
            "title": "Uniform interpolation and propositional quantifiers in modal logics",
            "venue": "Stud. Logica. 85(1), 1\u201331",
            "year": 2007
        },
        {
            "authors": [
                "R. Bruttomesso",
                "S. Ghilardi",
                "S. Ranise"
            ],
            "title": "Quantifier-free interpolation in combinations of equality interpolating theories",
            "venue": "ACM Trans. Comput. Log. 15(1), 5:1-5:34",
            "year": 2014
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Quantifier elimination for database driven verification",
            "venue": "Technical Report arXiv:1806.09686",
            "year": 2018
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Formal modeling and SMT-based parameterized verification of data-aware BPMN",
            "venue": "Proc. of BPM 2019, LNCS 11675, 157\u2013175",
            "year": 2019
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Frommodel completeness to verification of data aware processes",
            "venue": "Description Logic, TheoryCombination, andAll That, LNCS11560, 212\u2013239",
            "year": 2019
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Model completeness, covers and superposition",
            "venue": "Proc. of CADE 2019. LNCS (LNAI) 11716, 142\u2013160",
            "year": 2019
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Verification of data-aware processes: Challenges and opportunities for automated reasoning",
            "venue": "Proc. ARCADE 2019 311, 53\u201358",
            "year": 2019
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Combined covers and Beth definability",
            "venue": "Proc. of IJCAR 2020, LNCS (LNAI), vol. 12166, pp. 181\u2013200. Springer",
            "year": 2020
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "SMT-based verification of data-aware processes: A model-theoretic approach",
            "venue": "Math. Struct. Comput. Sci. 30(3), 271\u2013313",
            "year": 2020
        },
        {
            "authors": [
                "D. Calvanese",
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Model completeness, uniform interpolants and superposition calculus",
            "venue": "J. Autom. Reason. 65(7), 941\u2013969",
            "year": 2021
        },
        {
            "authors": [
                "C.C. Chang",
                "J.H. Keisler"
            ],
            "title": "Model Theory, 3rd edn",
            "venue": "North-Holland Publishing Co., Amsterdam",
            "year": 1990
        },
        {
            "authors": [
                "D.C. Cooper"
            ],
            "title": "Theorem proving in arithmetic without multiplication",
            "venue": "Machine Intelligence, vol. 7, pp. 91\u2013100. Edinburgh University Press",
            "year": 1972
        },
        {
            "authors": [
                "G. D\u2019Agostino",
                "M. Hollenberg"
            ],
            "title": "Logical questions concerning the mu-calculus: Interpolation",
            "venue": "Lyndon and Los-Tarski. J. Symb. Log. 65(1), 310\u2013332",
            "year": 2000
        },
        {
            "authors": [
                "M. de Leoni",
                "P. Felli",
                "M. Montali"
            ],
            "title": "Strategy Synthesis for Data-Aware Dynamic Systems with Multiple Actors",
            "venue": "Proc. of KR 2020, pp. 315\u2013325",
            "year": 2020
        },
        {
            "authors": [
                "P. Felli",
                "M. de Leoni",
                "M. Montali"
            ],
            "title": "Soundness verification of decision-aware process models with variable-to-variable conditions",
            "venue": "Proc. of ACSD 2019, pp. 82\u201391. IEEE",
            "year": 2019
        },
        {
            "authors": [
                "S. Ghilardi"
            ],
            "title": "An algebraic theory of normal forms",
            "venue": "Ann. Pure Appl. Logic 71(3), 189\u2013245",
            "year": 1995
        },
        {
            "authors": [
                "S. Ghilardi"
            ],
            "title": "Model theoretic methods in combined constraint satisfiability",
            "venue": "J. Autom. Reason. 33(3\u20134), 221\u2013249",
            "year": 2004
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola"
            ],
            "title": "Interpolation, amalgamation and combination (the non-disjoint signatures case)",
            "venue": "Proc. of FroCoS 2017, LNCS (LNAI), vol. 10483, pp. 316\u2013332. Springer",
            "year": 2017
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola"
            ],
            "title": "Modularity results for interpolation, amalgamation and superamalgamation",
            "venue": "Ann. Pure Appl. Logic 169(8), 731\u2013754",
            "year": 2018
        },
        {
            "authors": [
                "S. Ghilardi",
                "S. Ranise"
            ],
            "title": "Backward reachability of array-based systems by SMT solving: Termination and invariant synthesis",
            "venue": "Log. Methods Comput. Sci. 6(4), 1\u20138",
            "year": 2010
        },
        {
            "authors": [
                "S. Ghilardi",
                "S. Ranise"
            ],
            "title": "MCMT: A model checker modulo theories",
            "venue": "Proc. of IJCAR 2010, LNCS (LNAI), vol. 6173, pp. 22\u201329. Springer",
            "year": 2010
        },
        {
            "authors": [
                "S. Ghilardi",
                "M.W. Zawadowski"
            ],
            "title": "A sheaf representation and duality for finitely presenting heyting algebras",
            "venue": "J. Symb. Log. 60(3), 911\u2013939",
            "year": 1995
        },
        {
            "authors": [
                "S. Ghilardi",
                "M.W. Zawadowski"
            ],
            "title": "Undefinability of propositional quantifiers in themodal system S4",
            "venue": "Stud. Log. 55(2), 259\u2013271",
            "year": 1995
        },
        {
            "authors": [
                "S. Ghilardi",
                "M.W. Zawadowski"
            ],
            "title": "Model completions, r-Heyting categories",
            "venue": "Ann. Pure Appl. Logic 88(1), 27\u201346",
            "year": 1997
        },
        {
            "authors": [
                "S. Ghilardi",
                "M. Zawadowski"
            ],
            "title": "Sheaves, games, and model completions, Trends in Logic-Studia Logica Library, vol",
            "venue": "14. Kluwer Academic Publishers, Dordrecht",
            "year": 2002
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola",
                "D. Kapur"
            ],
            "title": "Compactly representing uniform interpolants for EUF using (conditional) DAGS",
            "venue": "Technical Report arXiv:2002.09784",
            "year": 2020
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola",
                "D. Kapur"
            ],
            "title": "Computing uniform interpolants for EUF via (conditional) DAGbased compact representations",
            "venue": "Proc. of CILC 2020, vol. 2710, pp. 67\u201381. CEUR Workshop Proceedings",
            "year": 2020
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Petri nets with parameterised data - modelling and verification",
            "venue": "Proc. of BPM 2020, LNCS, vol. 12168, pp. 55\u201374. Springer",
            "year": 2020
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola",
                "M. Montali",
                "A. Rivkin"
            ],
            "title": "Petri net-based object-centric processes with read-only data",
            "venue": "Inf. Syst. 107",
            "year": 2022
        },
        {
            "authors": [
                "S. Ghilardi",
                "A. Gianola",
                "D. Kapur"
            ],
            "title": "Uniform interpolants in EUF: Algorithms using DAG\u2013 representations",
            "venue": "Log. Methods Comput. Sci. 18(2)",
            "year": 2022
        },
        {
            "authors": [
                "A. Gianola"
            ],
            "title": "SMT-based Safety Verification of Data-Aware Processes: Foundations and Applications",
            "venue": "Ph.D. thesis, Free University of Bozen-Bolzano, Bolzano, Italy",
            "year": 2022
        },
        {
            "authors": [
                "S. Gulwani",
                "M. Musuvathi"
            ],
            "title": "Cover algorithms and their combination",
            "venue": "Proc. of ESOP 2008, Held as Part of ETAPS 2008, LNCS, vol. 4960, pp. 193\u2013207. Springer",
            "year": 2008
        },
        {
            "authors": [
                "D. Kapur"
            ],
            "title": "Nonlinear polynomials, interpolants and invariant generation for system analysis",
            "venue": "Proc. of SC-Square 2017, co-located with ISSAC 2017, vol. 1974. CEUR Workshop Proceedings",
            "year": 2017
        },
        {
            "authors": [
                "T. Kowalski",
                "G. Metcalfe"
            ],
            "title": "Uniform interpolation and coherence",
            "venue": "Ann. Pure Appl. Log. 170(7), 825\u2013841",
            "year": 2019
        },
        {
            "authors": [
                "L.L. Maksimova"
            ],
            "title": "Interpolation theorems in modal logics and amalgamable varieties of topological Boolean algebras",
            "venue": "Algebra i Logika 18(5), 556\u2013586",
            "year": 1979
        },
        {
            "authors": [
                "L.L. Maksimova"
            ],
            "title": "Interpolation theorems in modal logics",
            "venue": "Sufficient conditions. Algebra i Logika 19(2), 194\u2013213",
            "year": 1980
        },
        {
            "authors": [
                "G. Metcalfe",
                "L. Reggio"
            ],
            "title": "Model completions for universal classes of algebras: necessary and sufficient conditions",
            "venue": "Technical Report arXiv:2102.01426v2",
            "year": 2021
        },
        {
            "authors": [
                "G. Nelson",
                "D.C. Oppen"
            ],
            "title": "Simplification by cooperating decision procedures",
            "venue": "ACMTrans. Program. Lang. Syst. 1(2), 245\u2013257",
            "year": 1979
        },
        {
            "authors": [
                "D. Peuter",
                "V. Sofronie-Stokkermans"
            ],
            "title": "On invariant synthesis for parametric systems",
            "venue": "Proc. of CADE 2019, LNCS, vol. 11716, pp. 385\u2013405. Springer",
            "year": 2019
        },
        {
            "authors": [
                "A.M. Pitts"
            ],
            "title": "On an interpretation of second order quantification in first order intuitionistic propositional logic",
            "venue": "J. Symb. Log. 57(1), 33\u201352",
            "year": 1992
        },
        {
            "authors": [
                "K. Segerberg"
            ],
            "title": "AnEssay inClassicalModal Logic,Filosofiska Studier, vol",
            "venue": "13. UppsalaUniversitet",
            "year": 1971
        },
        {
            "authors": [
                "V. Shavrukov"
            ],
            "title": "Subalgebras of diagonalizable algebras of theories containing arithmetic",
            "venue": "Dissertationes Mathematicae CCCXXIII",
            "year": 1993
        },
        {
            "authors": [
                "V. Sofronie-Stokkermans"
            ],
            "title": "On interpolation and symbol elimination in theory extensions",
            "venue": "Log. Methods Comput. Sci. 14(3), 24",
            "year": 2018
        },
        {
            "authors": [
                "C. Tinelli",
                "M.T. Harandi"
            ],
            "title": "A new correctness proof of the Nelson-Oppen combination procedure",
            "venue": "Proc. of FroCoS 1996, pp. 103\u2013119",
            "year": 1996
        },
        {
            "authors": [
                "S.J. van Gool",
                "G. Metcalfe",
                "C. Tsinakis"
            ],
            "title": "Uniform interpolation and compact congruences",
            "venue": "Ann. Pure Appl. Logic 168(10), 1927\u20131948",
            "year": 2017
        },
        {
            "authors": [
                "A. Visser"
            ],
            "title": "Uniform interpolation and layered bisimulation",
            "venue": "P. H\u00e1jek (ed.) G\u00f6del 96: Logical foundations on mathematics, computer science and physics \u2013 Kurt G\u00f6del\u2019s legacy. Springer Verlag",
            "year": 1996
        },
        {
            "authors": [
                "G. Yorsh",
                "M. Musuvathi"
            ],
            "title": "A combination method for generating interpolants",
            "venue": "Proc. of CADE 2005, LNCS, vol. 3632, pp. 353\u2013368. Springer",
            "year": 2005
        }
    ],
    "sections": [
        {
            "text": "Keywords Uniform interpolation \u00b7 Covers \u00b7 Theory combination \u00b7 Beth definability\nB Alessandro Gianola gianola@inf.unibz.it\nDiego Calvanese calvanese@inf.unibz.it\nSilvio Ghilardi silvio.ghilardi@unimi.it\nMarco Montali montali@inf.unibz.it\nAndrey Rivkin rivkin@inf.unibz.it\n1 Faculty of Computer Science, Free University of Bozen-Bolzano (Italy), Bolzano, Italy\n2 Dipartimento di Matematica, Universit\u00e0 degli Studi di Milano (Italy), Milan, Italy"
        },
        {
            "heading": "1 Introduction",
            "text": "This paper is devoted to combination results concerninguniform interpolants. In this introduction, we summarize the two main (quite independant indeed) research lines that investigated uniform interpolants in the last three decades. We first recall what uniform interpolants are; we fix a logic or a theory T and a suitable fragment (propositional, first-order quantifier-free, etc.) of its language L . Given an L-formula \u03c6(x, y) (here x, y are the variables occurring in \u03c6), a uniform interpolant of \u03c6 (w.r.t. y) is an L-formula \u03c6\u2032(x)where only the x occur, and that satisfies the following two properties: (i) \u03c6(x, y) T \u03c6\u2032(x); (ii) for any further L-formula \u03c8(x, z) such that \u03c6(x, y) T \u03c8(x, z), we have \u03c6\u2032(x) T \u03c8(x, z). Whenever uniform interpolants exist, one can compute an interpolant for an entailment like \u03c6(x, y) T \u03c8(x, z) in a way that is independent of \u03c8 .\nUniform interpolants were originally studied in the context of non-classical logics, starting from the pioneeringwork by Pitts [40]. Uniform interpolants have in such non-classical logics context a \u2018local\u2019 and a \u2019global\u2019 version, depending on how the entailment T is interpreted: in the local version it is interpreted as \u2018provability of implication\u2019, whereas in the global version is interpreted as \u2018provability under assumption\u2019 (the two versions coincide for intuitionistic logic, but not for modal logics). The local version of uniform interpolation allows an (albeit not faithful) interpretation of the second order propositional calculus into plain propositional calculus, whereas the global version can be used in the axiomatization of model completions for the corresponding classes of algebras (see below).Uniform interpolants can be sematically connected to some appropriate notion of bisimulation at the level of Kripke models [13].\nThe existence of uniform interpolants is an exceptional phenomenon, which is however not so infrequent, as witnessed by a large literature in non-classical logics (a non-exhaustive list includes [1, 16, 22, 23, 25, 34, 37, 42, 45, 46]). The main results from the above papers are that uniform interpolants exist for intuitionistic logic and for some modal systems (like the G\u00f6del-L\u00f6b system and the S4.Grz system); they do not exist for instance in S4 and K4, whereas for the basic modal system K they exist for the local version but not for the global version (the opposite situation is also well-possible, already in the locally finite case, as a consequence of Maksimova\u2019s results on amalgamation and super-amalgamation [35, 36]). The connection between (global) uniform interpolants andmodel completions (for equational theories axiomatizing the varieties corresponding to propositional logics) was first stated in [24] and further developed in [25, 34, 37, 45].\nIn the last decade, also the automated reasoning community developed an increasing interest in uniform interpolants, with particular focus on quantifier-free fragments of firstorder theories. This is witnessed by various talks and drafts by D. Kapur presented in many conferences and workshops (FloC 2010, ISCAS 2013-14, SCS 2017 [33]), as well as by the paper [32] by Gulwani and Musuvathi in ESOP 2008. In this last paper uniform interpolants were renamed as covers, a terminology we shall frequently adopt in this paper too. In these contributions, examples of cover computations were supplied and also some algorithms were sketched. The first formal proof about existence of covers in EUF was however published by the present authors only in [6]; such a proof was equipped with powerful semantic tools (the Cover-by-Extensions Lemma 1 below) coming from the connection to model-completeness, as well as with an algorithm relying on a constrained variant of the Superposition Calculus (two simpler algorithms are studied in [27], the related completeness proofs are available in [26, 30]). The usefulness of covers in model checking was already stressed in [32] and further motivated by our recent line of research on the verification of data-aware processes [4, 5, 7, 9]. Notably, it is also operationally mirrored in the MCMT [21] implementation\nsince version 2.8. Covers (via quantifier elimination in model completions and hierarchical reasoning) play an important role in symbol elimination problems in theory extensions, as witnesssed in the comprehensive paper [43] and in related papers [39] studying invariant synthesis in model checking applications.\nAn important question suggested by the applications is the cover transfer problem for combined theories: for instance, when modeling and verifying data-aware processes, it is natural to consider the combination of different theories, such as the theories accounting for the read-write and read-only data storage of the process aswell as those for the elements stored therein [5\u20137, 10]. Formally, the cover transfer problem can be stated as follows: by supposing that covers exist in theories T1, T2, under which conditions do they exist also in the combined theory T1 \u222aT2? In this paper we show that the answer is affirmative in the disjoint signatures convex case, using the same hypothesis (that is, the equality interpolating condition) under which quantifier-free interpolation transfers. Thus, for convex theories we essentially obtain a necessary and sufficient condition, in the precise sense captured by Theorem 6 below. We also prove that if convexity does not hold (as it happens, e.g., for integer difference logic IDL or for linear integer arithmetics LIA), the non-convex equality interpolating property [2] may not be sufficient to ensure the cover transfer property. As a witness for this, we show that EUF combinedwith integer difference logic or with linear integer arithmetics constitutes a counterexample.\nThe main tool employed in our combination result is the Beth definability theorem for primitive formulae (this theorem has been shown to be equivalent to the equality interpolating condition in [2]). In order to design a combined cover algorithm, we exploit the equivalence between implicit and explicit definability that is supplied by the Beth theorem. Implicit definability is reformulated, via covers for input theories, at the quantifier-free level. Thus, the combined cover algorithm guesses the implicitly definable variables, then eliminates them via explicit definability, and finally uses the component-wise input cover algorithms to eliminate the remaining (non implicitly definable) variables. The identification and the elimination of the implicitly defined variables via explicitly defining terms is an essential step towards the correctness of the combined cover algorithm: when computing a cover of a formula \u03c6(x, y) (w.r.t. y), the variables x are (non-eliminable) parameters, and those variables among the y that are implicitly definable need to be discovered and treated in the same way as the parameters x . Only after this preliminary step (Lemma 6 below), the input cover algorithms can be suitably exploited (Proposition 2 below).\nThe combination result we obtain is quite strong, as it is a typical \u2018black box\u2019 combination result: it applies not only to theories used in verification (like the combination of real arithmetics with EUF), but also in other contexts. For instance, since the theory B of Boolean algebras satisfies our hypotheses (being model completable and strongly amalgamable [19]), we get that uniform interpolants exist in the combination of B with EUF . The latter is the equational theory algebraizing the basic non-normal classical modal logic system E from [41] (extended to n-ary modalities). Notice that this result must be contrasted with the case of many systems of Boolean algebras with operators where existence of uniform interpolation fails [34] (recall that operators on a Boolean algebra are not just arbitrary functions, but are required to be monotonic and also to preserve either joins or meets in each coordinate).\nAs a last important comment on related work, it is worth mentioning that Gulwani and Musuvathi in [32] also have a combined cover algorithm for some convex, signature disjoint theories. Their algorithm looks quite different from ours; apart from the fact that a full correctness and completeness proof for such an algorithm has never been published, we underline that our algorithm is rooted on different hypotheses. In fact, we only need the equality interpolating condition and we show that this hypothesis is not only sufficient, but\nalso necessary for cover transfer in convex theories; consequently, our result is formally stronger. The equality interpolating condition was known to the authors of [32] (but not even mentioned in their paper [32]): in fact, it was introduced by one of them some years before [47]. The equality interpolating condition was then extended to the non convex case in [2], where it was also semantically characterized via the strong amalgamation property.\nThe paper is organized as follows: after some preliminaries in Section 2, the crucial Covers-by-Extensions Lemma and the relationship between covers and model completions from [6] are recalled in Sect. 3. In Sect. 4, we present some preliminary results from the literature on interpolation, amalgamation, strong amalgamation and Beth definability that are instrumental to our machinery. After some useful facts about convex theories in Sect. 5, we introduce the combined cover algorithms for the convex case and we prove its correctness in Sect. 6; we also present a detailed example of application of the combined algorithm in case of the combination of EUF with linear real arithmetic, and we show that the equality interpolating condition is, in a natural sense, necessary for combining covers. In Sect. 7 we exhibit a counterexample to the existence of combined covers in the non-convex case. Finally, in Sect. 8 we prove that for the \u2018tame\u2019 multi-sorted theory combinations used in our applications to data-aware processes verification, covers existence transfers to the combined theory under only the stable infiniteness requirement for the shared sorts. Section 9 is devoted to the conclusions and discussion of future work. The current paper is the extended version of [8]; in addition to supplying full self-contained proofs of the results of [8], it contains the entirely new Sect. 8 dedicated to the positive results for the non-convex tame case."
        },
        {
            "heading": "2 Preliminaries",
            "text": "We adopt the usual first-order syntactic notions of signature, term, atom, (ground) formula, and so on; our signatures are always finite or countable and include equality. To avoid considering limit cases, we assume that signatures always contain at least an individual constant. We compactly represent a tuple \u3008x1, . . . , xn\u3009 of variables as x ; by abuse of notation, we sometimes use \u3008x1, . . . , xn\u3009 to denote also sets of variables (not just tuples). The notation t(x), \u03c6(x) means that the term t , the formula \u03c6 has free variables included in the tuple x . This tuple is assumed to be formed by distinct variables, thus we underline that when we write e.g. \u03c6(x, y), we mean that the tuples x, y are made of distinct variables that are also disjoint from each other.\nA formula is said to be universal (resp., existential) if it has the form \u2200x(\u03c6(x)) (resp., \u2203x(\u03c6(x))), where \u03c6 is quantifier-free. Formulae with no free variables are called sentences. On the semantic side, we use the standard notion of \u03a3-structureM and of truth of a formula in a\u03a3-structure under a free variables assignment. The support ofM is denoted as |M|. The interpretation of a (function, predicate) symbol \u03c3 in M is denoted \u03c3M.\nA\u03a3-theory T is a set of\u03a3-sentences; amodel of T is a\u03a3-structureMwhere all sentences in T are true. We use the standard notation T | \u03c6 to say that \u03c6 is true in all models of T for every assignment to the variables occurring free in \u03c6. We say that \u03c6 is T -satisfiable iff there is a model M of T and an assignment to the variables occurring free in \u03c6 making \u03c6 true in M.\nWe now focus on the constraint satisfiability problem and quantifier elimination for a theory T . A \u03a3-formula \u03c6 is a \u03a3-constraint (or just a constraint) iff it is a conjunction of literals. The constraint satisfiability problem for T is the following: we are given a constraint \u03c6(x) and we are asked whether there exist a model M of T and an assignment I to the\nfree variables x such that M, I | \u03c6(x). A theory T has quantifier elimination iff for every formula \u03c6(x) in the signature of T there is a quantifier-free formula \u03c6\u2032(x) such that T | \u03c6(x) \u2194 \u03c6\u2032(x). Since we are in a computational logic context, when we speak of quantifier elimination, we assume that it is effective, namely that it comes with an algorithm for computing \u03c6\u2032 out of \u03c6. It is well-known that quantifier elimination holds in case we can eliminate quantifiers from primitive formulae, i.e., formulae of the kind \u2203y \u03c6(x, y), with \u03c6 a constraint.\nWe recall also some further basic notions. Let \u03a3 be a first-order signature. The signature obtained from \u03a3 by adding to it a set a of new constants (i.e., 0-ary function symbols) is denoted by \u03a3a . Analogously, given a \u03a3-structureM, the signature \u03a3 can be expanded to a new signature \u03a3 |M| := \u03a3 \u222a {a\u0304 | a \u2208 |M|} by adding a constant a\u0304 (the name for a) for each element a in the support ofM, with the convention that two distinct elements are denoted by different \u201cname\u201d constants.M can be expanded to a\u03a3 |M|-structureM := (M, a)a\u2208|M| just interpreting the additional constants over the corresponding elements. Fromnowon,when the meaning is clear from the context, we will freely use the notationM andM interchangeably: in particular, given a \u03a3-structure M and a \u03a3-formula \u03c6(x) with free variables that are all in x , we will write, by abuse of notation, M | \u03c6(a) instead of M | \u03c6(a\u0304).\nWe say that a theory T is stably infinite iff every T -satisfiable constraint is satisfiable in an infinite model of T . Moreover, a theory T is convex iff for every constraint \u03b4, if T \u03b4 \u2192 \u2228ni=1 xi = yi then T \u03b4 \u2192 xi = yi holds for some i \u2208 {1, . . . , n}. Strictly speaking, convexity says that if, for a set of literals \u03c6 and for a non empty disjunction of variables \u2228n i=1 xi = yi , we have T | \u03c6 \u2192 \u2228n i=1 xi = yi , then we have also T | \u03c6 \u2192 xi = yi for some i = 1, . . . , n. If, instead of variables, we have terms, the same property nevertheless applies: if we have T | \u03c6 \u2192 \u2228ni=1 ti = ui , then for fresh variables xi , yi we get T | \u03c6 \u2227 \u2227ni=1(xi = ti \u2227 yi = ui ) \u2192 \u2228n i=1 xi = yi , which implies, by applying the definition of convexity, the same property for terms. A \u03a3-homomorphism (or, simply, a homomorphism) between two \u03a3-structures M and N is a map \u03bc : |M| \u2212\u2192 |N | among the support sets |M| of M and |N | of N satisfying the condition (M | \u03d5 \u21d2 N | \u03d5) for all \u03a3 |M|-atoms \u03d5 (M is regarded as a \u03a3 |M|structure, by interpreting each additional constant a \u2208 |M| into itself andN is regarded as a \u03a3 |M|-structure by interpreting each additional constant a \u2208 |M| into \u03bc(a)). In case the last condition holds for all \u03a3 |M|-literals, the homomorphism \u03bc is said to be an embedding and if it holds for all first order formulae, the embedding \u03bc is said to be elementary.\nIf \u03bc : M \u2212\u2192 N is an embedding which is just the identity inclusion |M| \u2286 |N |, we say thatM is a substructure ofN or thatN is an extension ofM. Universal theories can be characterized as those theories T having the property that ifN | T andM is a substructure of N , then M | T (see [11]). If M is a structure and X \u2286 |M|, then there is the smallest substructure ofM including X in its support; this is called the substructure generated by X . If X is the set of elements of a finite tuple a, then the substructure generated by X has in its support precisely the b \u2208 |M| such that M | b = t(a) for some term t .\nLet M be a \u03a3-structure. The diagram of M, written \u0394\u03a3(M) (or just \u0394(M)), is the set of ground \u03a3 |M|-literals that are true in M. An easy but important result, called Robinson Diagram Lemma [11], says that, given any \u03a3-structure N , the embeddings \u03bc : M \u2212\u2192 N are in bijective correspondencewith expansions ofN to\u03a3 |M|-structureswhich aremodels of \u0394\u03a3(M). The expansions and the embeddings are related in the obvious way: a\u0304 is interpreted as \u03bc(a)."
        },
        {
            "heading": "3 Uniform Interpolants",
            "text": "We report the notion of a cover taken from [32] and also the basic results proved in [6, 10]. Fix a theory T and an existential formula \u2203e \u03c6(e, y); call a residue of \u2203e \u03c6(e, y) any quantifier-free formula belonging to the set of quantifier-free formulae\nRes(\u2203e \u03c6) = {\u03b8(y, z) | T | \u03c6(e, y) \u2192 \u03b8(y, z)} = {\u03b8(y, z) | T | \u2203e \u03c6(e, y) \u2192 \u03b8(y, z)} (the above two sets are trivially equal, by applying the \u2203-left introduction rule). A quantifierfree formula \u03c8(y) is said to be a T -cover (or, simply, a cover) of \u2203e \u03c6(e, y) iff \u03c8(y) \u2208 Res(\u2203e \u03c6) and \u03c8(y) implies (modulo T ) all the other formulae in Res(\u2203e \u03c6). The following \u201ccover-by-extensions\u201d Lemma [6] (to be widely used throughout the paper) supplies a semantic counterpart to the notion of a cover:\nLemma 1 [Cover-by-Extensions] A formula \u03c8(y) is a T -cover of \u2203e \u03c6(e, y) iff it satisfies the following two conditions:\n(i) T | \u2200y (\u2203e \u03c6(e, y) \u2192 \u03c8(y)); (ii) for every model M of T , for every tuple of elements a from the support of M such that\nM | \u03c8(a) it is possible to find another modelN of T such thatM embeds intoN and N | \u2203e \u03c6(e, a).\nProof See [6]. We underline that, since our language is at most countable, we can assume that the models M, N from (ii) above are at most countable too, by a L\u00f6wenheim-Skolem argument. We say that a theory T has uniform quantifier-free interpolation iff every existential formula \u2203e \u03c6(e, y) (equivalently, every primitive formula \u2203e \u03c6(e, y)) has a T -cover. Notice that a cover is also called (quantifier-free) uniform interpolant for the following reason. Indeed, it is clear that if T has uniform quantifier-free interpolation, then it has ordinary quantifier-free interpolation [2], in the sense that if we have T | \u03c6(e, y) \u2192 \u03c6\u2032(y, z) (for quantifier-free formulae \u03c6, \u03c6\u2032), then there is a quantifier-free formula \u03b8(y) such that T | \u03c6(e, y) \u2192 \u03b8(y) and T | \u03b8(y) \u2192 \u03c6\u2032(y, z). In fact, if T has uniform quantifier-free interpolation, then the interpolant \u03b8 is independent on\u03c6\u2032 (the same \u03b8(y) can be used as interpolant for all entailments T | \u03c6(e, y) \u2192 \u03c6\u2032(y, z), varying \u03c6\u2032). Hence, it is straightforward to see that the definition of cover is equivalent to the one of uniform interpolant given in the introduction.\nWe say that a universal theory T has a model completion iff there is a stronger theory T \u2217 \u2287 T (still within the same signature \u03a3 of T ) such that: (i) every \u03a3-constraint that is satisfiable in a model of T is satisfiable in a model of T \u2217; (ii) T \u2217 eliminates quantifiers.\nOther equivalent definitions are possible [11]: for instance, (i) is equivalent to the fact that T and T \u2217 prove the same universal formulae or again to the fact that every model of T can be embedded into a model of T \u2217. We recall that the model completion, if it exists, is unique and that its existence implies the quantifier-free interpolation property for T [11] (the latter can be seen directly or via the correspondence between quantifier-free interpolation and amalgamability, see [2]).\nA close relationship between model completion and uniform interpolation emerged in the area of propositional logic (see the book [25]) and can be formulated roughly as follows. It is well-known that most propositional calculi, via Lindenbaum constructions, can be algebraized: the algebraic analogue of classical logic are Boolean algebras, the algebraic analogue of intuitionistic logic are Heyting algebras, the algebraic analogue of modal calculi are suitable varieties of modal algebras, etc. Under suitable hypotheses, it turns out that a propositional logic has uniform interpolation (for the global consequence relation) iff the equational theory axiomatizing the corresponding variety of algebras has amodel completion [25]. In the context of first order theories, we prove an even more direct connection:\nTheorem 1 Suppose that T is a universal theory. Then T has a model completion T \u2217 iff T has uniform quantifier-free interpolation. If this happens, T \u2217 is axiomatized by the infinitely many sentences\n\u2200y (\u03c8(y) \u2192 \u2203e \u03c6(e, y)), (1) where \u2203e \u03c6(e, y) is a primitive formula and \u03c8 is a cover of it. Proof The proof is rather standard, via Lemma 1, by iterating a chain construction, see [3, 9, 10]."
        },
        {
            "heading": "4 Equality Interpolating Condition and Beth Definability",
            "text": "We report here some definitions and results we need concerning combined quantifier-free interpolation. Most definitions and results come from [2], but are simplified here\nbecause we restrict them to the case of universal convex theories. We recall that a theory T is stably infinite iff every T -satisfiable constraint is satisfiable\nin an infinite model of T . The following lemma comes from a compactness argument:\nLemma 2 If T is stably infinite, then every finite or countablemodelM of T can be embedded in a model N of T such that |N | \\ |M| is countable. Proof Consider T \u222a \u0394(M) \u222a {ci = a | a \u2208 |M|}i \u222a {ci = c j }i = j , where {ci }i is a countable set of fresh constants: by the Diagram Lemma and the downward L\u00f6wenheimSkolem theorem [11], it is sufficient to show that this set is consistent\n(in fact if this set is consistent, there will be a superstructure N of M in which the countably many constants ci will be interpreted on elements which are different from each others and also different from the elements from the support of M).\nSuppose the above set is not consistent; then by compactness T \u222a \u03940 \u222a \u03941 \u222a \u03942 is not satisfiable, for a finite subset \u03940 of \u0394(M), a finite subset \u03941 of {ci = a | a \u2208 |M|}i and a finite subset \u03942 of \u222a{ci = c j }i = j . However, this is a contradiction because by stable infiniteness \u03940 (being satisfiable in M) is satisfiable in an infinite model of T .\nWe also recall that theory T is convex iff for every constraint \u03b4, if T \u03b4 \u2192 \u2228ni=1 xi = yi then T \u03b4 \u2192 xi = yi holds for some i \u2208 {1, . . . , n}.\nA convex theory T is \u2018almost\u2019 stably infinite in the sense that it can be shown that every constraint which is T -satisfiable in a T -model whose support has at least two elements is satisfiable also in an infinite T -model. The one-element model can be used to build counterexamples, though: e.g., the theory of Boolean algebras is convex (like any other universal\nHorn theory) but the constraint x = 0 \u2227 x = 1 is only satisfiable in the degenerate oneelement Boolean algebra. Since we take into account these limit cases, we do not assume that convexity implies stable infiniteness.\nDefinition 1 A convex universal theory T is equality interpolating iff for everypair y1, y2 of variables and for everypair of constraints \u03b41(x, z1, y1), \u03b42(x, z2, y2) such that\nT \u03b41(x, z1, y1) \u2227 \u03b42(x, z2, y2) \u2192 y1 = y2 (2) there exists a term t(x) such that\nT \u03b41(x, z1, y1) \u2227 \u03b42(x, z2, y2) \u2192 y1 = t(x) \u2227 y2 = t(x). (3) Quantifier-free interpolation and combined quantifier-free interpolation can be semanti-\ncally characterized, as we are going to show.\nDefinition 2 A universal theory T has the amalgamation property iff whenever we are given models M1 and M2 of T and\ntheir common substructureM0, there exists a furthermodelM of T endowedwith embeddings \u03bc1 : M1 \u2212\u2192 M and \u03bc2 : M2 \u2212\u2192 M whose restrictions to |M0| coincide.\nA universal theory T has the strong amalgamation property if the above embeddings \u03bc1, \u03bc2 and the above model M can be chosen so as to satisfy the following additional condition: if for some m1,m2 we have \u03bc1(m1) = \u03bc2(m2), then there exists an element a in |M0| such that m1 = a = m2. Theorem 2 [2] The following two conditions are equivalent for a convex universal theory T :\n(i) T is equality interpolating and has quantifier-free interpolation; (ii) T has the strong amalgamation property.\nProof For the sake of completeness, we report the proof of the implication (i) \u21d2 (ii) (this is the only fact used in the paper). Suppose that T is equality interpolating and has quantifierfree interpolation; we prove that it is strongly amalgamable. If the latter property fails, by RobinsonDiagramLemma, there existmodelsM1,M2 of T togetherwith a shared submodel A such that the set of sentences\n\u0394\u03a3(M1) \u222a \u0394\u03a3(M2) \u222a {m1 = m2 | m1 \u2208 |M1| \\ |A|, m2 \u2208 |M2| \\ |A|} is not T -consistent. By compactness, the sentence\n\u03b41(a,m1) \u2227 \u03b42(a,m2) \u2192 \u2228\nn1\u2208m1,n2\u2208m2 n1 = n2\nis T -valid, for some tuples a \u2286 |A|, m1 \u2286 (|M1| \\ |A|), m2 \u2286 (|M2| \\ |A|) and for some ground formulae \u03b41(a,m1), \u03b42(a,m2) true in M1,M2, respectively.\nIf the disjunction is empty, we get T | \u03b41(a,m1) \u2192 \u00ac\u03b42(a,m2) and then we get a contradiction by the quantifier-free interpolation property (the argument is the same as below). Otherwise, by convexity, there are n1 \u2208 m1, n2 \u2208 m2 such that\n\u03b41(a,m1) \u2227 \u03b42(a,m2) \u2192 n1 = n2\nis T -valid. By the equality interpolating property, there is a term t(a) such that\n\u03b41(a,m1) \u2227 \u03b42(a,m2) \u2192 n1 = t(a) is T -valid. By the quantifier-free interpolation property, there is a quantifier-free formula \u03b8(a) such that\n\u03b41(a,m1) \u2227 n1 = t(a) \u2192 \u03b8(a) and\n\u03b8(a) \u2192 \u00ac\u03b42(a,m2) are both T -valid. Since n1 \u2208 |M1| \\ |A|, we have that n1 = t(a) is true inM1. But then we have a contradiction because \u03b8(a) is true inM1,A and inM2 as well (truth of quantifier-free formulae moves back and forth via substructures).\nWe underline that Theorem 2 extends also to the non convex case provided the notion of an equality interpolating theory is suitably adjusted [2].\nNext two results (supplied without proof) will be used only in Sect. 6.1 to show that, in some sense, the sufficient conditions of our main combination Theorem 5 are also necessary.\nTheorem 3 [2, 47] Let T1 and T2 be two universal, convex, stably infinite theories over disjoint signatures \u03a31 and \u03a32. If both T1 and T2 are equality interpolating and have quantifier-free interpolation property, then so does T1 \u222a T2.\nThe previous theorem essentially states that the equality interpolating property is a sufficient condition for the transfer of quantifier-free interpolation to theory combinations. There is a converse of the previous result, in the sense that it is possible to show that the equality interpolating property is, to some extent, necessary in order to guarantee the transfer of quantifier-free interpolation for minimal combinations with signatures adding only uninterpreted symbols. For this purpose, for a signature \u03a3 , we call EUF(\u03a3) the pure equality theory over the signature \u03a3 (this theory is equality interpolating and has the quantifier-free interpolation property).\nTheorem 4 [2] Let T be a stably infinite, universal, convex theory admitting quantifier-free interpolation and let \u03a3 be a signature disjoint from the signature of T containing at least a unary predicate symbol. Then, T \u222aEUF(\u03a3) has quantifier-free interpolation iff T is equality interpolating.\nIn [2] the above definitions and results are extended to the non-convex case and a long list of universal quantifier-free interpolating and equality interpolating theories is given. The list includes EUF(\u03a3), recursive data theories, as well as linear arithmetics. For linear arithmetics (and fragments of its), it is essential to make a very careful choice of the signature, see again [2] (especially Subsection 4.1) for details. All the above theories admit a model completion (which coincides with the theory itself in case the theory admits quantifier elimination).\nThe equality interpolating property in a theory T can be equivalently characterized using Beth definability as follows. Consider a primitive formula \u2203z\u03c6(x, z, y) (here \u03c6 is a conjunction of literals); we say that \u2203z \u03c6(x, z, y) implicitly defines y in T iff the formula\n\u2200y \u2200y\u2032 (\u2203z\u03c6(x, z, y) \u2227 \u2203z\u03c6(x, z, y\u2032) \u2192 y = y\u2032) (4) is T -valid. We say that \u2203z\u03c6(x, z, y) explicitly defines y in T iff there is a term t(x) such that the formula\n\u2200y (\u2203z\u03c6(x, z, y) \u2192 y = t(x)) (5)\nis T -valid. For future use, we notice that, by trivial logical manipulations, the formulae (4) and (5) are logically equivalent to\n\u2200y\u2200z\u2200y\u2032\u2200z\u2032(\u03c6(x, z, y) \u2227 \u03c6(x, z\u2032, y\u2032) \u2192 y = y\u2032) . (6) and to\n\u2200y\u2200z(\u03c6(x, z, y) \u2192 y = t(x)) (7) respectively (we shall use such equivalences without explicit mention).\nWe say that a theory T has the Beth definability property for primitive formulae iff whenever a primitive formula \u2203z \u03c6(x, z, y) implicitly defines the variable y then it also explicitly defines it.\nProposition 1 [2] A convex equality interpolating theory T has the Beth definability property for primitive formulae.\nProof Suppose that T is equality interpolating and that\nT \u03c6(x, z, y) \u2227 \u03c6(x, z\u2032, y\u2032) \u2192 y = y\u2032 ; then there is a term t(x) such that\nT \u03c6(x, z, y) \u2227 \u03c6(x, z\u2032, y\u2032) \u2192 y = t(x) \u2227 y\u2032 = t(x) . Replacing z\u2032, y\u2032 by z, y via a substitution, we get precisely (7).\nWe remark that the above Proposition can be inverted (see [2])."
        },
        {
            "heading": "5 Convex Theories",
            "text": "Wenow collect some useful facts concerning convex theories.We fix for this section a convex, stably infinite, equality interpolating universal theory T admitting a model completion T \u2217. We let \u03a3 be the signature of T . We fix also a \u03a3-constraint \u03c6(x, y), where we assume that y = y1, . . . , yn (recall that the tuple x is disjoint from the tuple y according to our conventions from Sect. 2).\nFor i = 1, . . . , n, we let the formula ImplDefT\u03c6,yi (x) be the quantifier-free formula equivalent in T \u2217 to the formula\n\u2200y \u2200y\u2032(\u03c6(x, y) \u2227 \u03c6(x, y\u2032) \u2192 yi = y\u2032i ) (8) where the y\u2032 are renamed copies of the y. Notice that the variables occurring free in \u03c6 are x, y, whereas only the x occur free in ImplDefT\u03c6,yi (x) (the variable yi is among the y and does not occur free in ImplDefT\u03c6,yi (x)): these facts coming from our notational conventions are crucial and should be kept in mind when reading this and next section. We need a first semantic technical lemma.\nLemma 3 Suppose that we are given a modelM of T and elements a from the support ofM such that M | ImplDefT\u03c6,yi (a) for all i = 1, . . . , n. Then there exists an extension N ofM such that\nfor some b \u2208 |N | \\ |M| we have N | \u03c6(a, b).\nProof Since T has a model completion, it has uniform quantifier-free interpolants by Theorem 1, hence it has also (ordinary) quantifier-free interpolants. By Theorem 2 it is strongly amalgamable because it is equality interpolating. In conclusion, we are allowed to use strong amalgamation in our proof. By strong amalgamability, we can freely assume thatM is generated, as a \u03a3-structure, by the a: in fact, if we prove the statement for the substructure generated by the a, then strong amalgamability will provide the model we want.\nBy using the Robinson Diagram Lemma, what we need is to prove the consistency of T \u222a \u0394(M) with the set of ground sentences\n{\u03c6(a, b)} \u222a {bi = t(a)}t,bi where t(x) varies over \u03a3(x)-terms, the b = b1, . . . , bn are fresh constants and i vary over 1, . . . , n. By convexity,1 this set is inconsistent iff there exist a term t(x) and i = 1, . . . , n such that\nT \u222a \u0394(M) \u03c6(a, y) \u2192 yi = t(a). This however implies that T \u222a \u0394(M) has the formula\n\u2200y \u2200y\u2032(\u03c6(a, y) \u2227 \u03c6(a, y\u2032) \u2192 yi = y\u2032i ) as a logical consequence. If we now embed M into a model N of T \u2217, we have that N | ImplDefT\u03c6,yi (a), which is in contrast to M | ImplDefT\u03c6,yi (a) (because M is a substructure of N and ImplDefT\u03c6,yi (a) is quantifier-free).\nThe following lemma supplies terms which will be used as ingredients in our combined covers algorithm:\nLemma 4 Let Li1(x)\u2228\u00b7 \u00b7 \u00b7\u2228Liki (x)be thedisjunctive normal form (DNF)ofImplDefT\u03c6,yi (x). Then, for every j = 1, . . . , ki , there is a \u03a3(x)-term ti j (x) such that\nT Li j (x) \u2227 \u03c6(x, y) \u2192 yi = ti j . (9) As a consequence, a formula of the kind ImplDefT\u03c6,yi (x) \u2227 \u2203y (\u03c6(x, y) \u2227 \u03c8) is equivalent (modulo T ) to the formula\nki\u2228 j=1 \u2203y (yi = ti j \u2227 Li j (x) \u2227 \u03c6(x, y) \u2227 \u03c8). (10)\nProof We have that ( \u2228\nj Li j ) \u2194 ImplDefT\u03c6,yi (x) is a tautology, hence from the definition of ImplDefT\u03c6,yi (x), we have that T \u2217 Li j (x) \u2192 \u2200y \u2200y\u2032(\u03c6(x, y) \u2227 \u03c6(x, y\u2032) \u2192 yi = y\u2032i ); however this formula is trivially equivalent to a universal formula (Li j does not depend on y, y\u2032), hence since T and T \u2217 prove the same universal formulae, we get\nT Li j (x) \u2227 \u03c6(x, y) \u2227 \u03c6(x, y\u2032) \u2192 yi = y\u2032i . UsingBeth definability property (Proposition 1),we get (9), as required, for some terms ti j (x). Finally, the second claim of the lemma follows from (9) by trivial logical manipulations. 1 As already noticed in Sect. 2, convexity implies that if, for a set of literals \u03c6 and for a non empty disjunction of terms\n\u2228n i=1 ti = ui , we have T | \u03c6 \u2192 \u2228n i=1 ti = ui , then we have also T | \u03c6 \u2192 ti = ui for some\ni = 1, . . . , n.\nIn all our concrete examples, the theory T has a decidable quantifier-free fragment (namely it is decidable whether a quantifier-free formula is a logical consequence of T or not), thus the terms ti j mentioned in Lemma 4 can be computed just by enumerating all possible\u03a3(x)terms: the computation terminates, because the above proof shows that the appropriate terms always exist. However, this is terribly inefficient and, from a practical point of view, one needs to have at disposal dedicated algorithms to find the required equality interpolating terms. For some common theories (EUF , Lisp-structures, linear real arithmetic), such algorithms are designed in [47]; in [2] [Lemma 4.3 and Theorem 4.4], the algorithms for computing equality interpolating terms are connected to quantifier elimination algorithms in the case of universal theories admitting quantifier elimination.\nThe following lemma will be useful in the next section:\nLemma 5 Let T have a model completion T \u2217 and let the constraint \u03c6(x, y) be of the kind \u03b1(x) \u2227 \u03c6\u2032(x, y), where y = y1, . . . , yn. Then for every i = 1, . . . , n, the formula ImplDefT\u03c6,yi (x) is T -equivalent to \u03b1(x) \u2192 ImplDefT\u03c6\u2032,yi (x). Proof According to (8), the formula ImplDefT\u03c6,yi (x) is obtained by eliminating quantifiers in T \u2217 from\n\u2200y \u2200y\u2032(\u03b1(x) \u2227 \u03c6\u2032(x, y) \u2227 \u03b1(x) \u2227 \u03c6\u2032(x, y\u2032) \u2192 yi = y\u2032i ) (11) The latter is equivalent, modulo logical manipulations, to\n\u03b1(x) \u2192 \u2200y \u2200y\u2032(\u03c6\u2032(x, y) \u2227 \u03c6\u2032(x, y\u2032) \u2192 yi = y\u2032i ) (12) whence the claim (eliminating quantifiers in T \u2217 from (11) and (12) gives quantifiers-free T \u2217- equivalent formulae, hence also T -equivalent formulae because T and T \u2217 prove the same quantifier-free formulae)."
        },
        {
            "heading": "6 The Convex Combined Cover Algorithm",
            "text": "Let us now fix two theories T1, T2 over disjoint signatures \u03a31,\u03a32. We assume that both of them satisfy the assumptions from the previous section, meaning that they are convex, stably infinite, equality interpolating, universal and admit model completions T \u22171 , T \u22172 respectively. We will prove in this section (Theorem 5) that T1 \u222a T2 admits a model completion too. We achieve this by supplying a combined algorithm, called ConvexCombCover, for computing T1\u222aT2-covers: in order to construct the T1\u222aT2-cover, this combined algorithm exploits the cover algorithms of the component theories Ti (i = 1, 2).\nWe need to compute a cover for \u2203e \u03c6(x, e), where \u03c6 is a conjunction of \u03a31 \u222a \u03a32-literals. By applying rewriting purification steps like\n\u03c6 \u21d2 \u2203d (d = t \u2227 \u03c6(d/t)) (where d is a fresh variable and t is a pure term, i.e. it is either a \u03a31- or a \u03a32-term), we can assume that our formula \u03c6 is of the kind \u03c61 \u2227 \u03c62, where \u03c61 is a \u03a31-formula and \u03c62 is a \u03a32-formula. Thus we need to compute a cover for a formula of the kind\n\u2203e (\u03c61(x, e) \u2227 \u03c62(x, e)), (13) where \u03c6i is a conjunction of \u03a3i -literals (i = 1, 2). By guessing a partition of the e and by replacing each variable e in e with the representative element of its equivalence class, we also assume that both \u03c61 and \u03c62 contain the literals ei = e j (for i = j) as a conjunct.\nRemark 1 It is not clear whether this preliminary guessing step can be avoided. In fact, Nelson-Oppen [38] combined satisfiability for convex theories does not need it; however, combining covers algorithms is a more complicated problem than combining mere satisfiability algorithms and for technical reasons related to the correctness and completeness proofs below, we were forced to introduce guessing at this step.\nTo manipulate formulae, our algorithm employs acyclic explicit definitions as follows. When we write ExplDef(z, x) (where z, x are tuples of distinct variables), we mean any formula of the kind (let z := z1 . . . , zm)\nm\u2227 i=1 zi = ti (z1, . . . , zi\u22121, x)\nwhere the term ti is pure (i.e. it is a \u03a3i -term) and only the variables z1, . . . , zi\u22121, x can occur in it. We notice that an existential formula like \u2203z (ExplDef(z, x) \u2227 \u03c8(z, x)) can be equivalently converted into a quantifier-free formula: indeed, since the \u2019explicit definitions\u2019 zi = ti are in fact arranged acyclically, the existentially quantified variables z can be recursively eliminated by substituting them with terms containing eventually only the parameters x .\nA working formula is a formula of the kind\n\u2203z (ExplDef(z, x) \u2227 \u2203e (\u03c81(x, z, e) \u2227 \u03c82(x, z, e))) , (14) where\u03c81 is a conjunction of\u03a31-literals and\u03c82 is a conjunction of\u03a32-literals. The variables x are called parameters, the variables z are called defined variables and the variables e (truly) existential variables. The parameters do not change during the execution of the algorithm. We assume that \u03c81, \u03c82 in a working formula (14) always contain the literals ei = e j (for distinct ei , e j from e) as a conjunct.\nIn our starting formula (13), there are no defined variables. However, if via some syntactic check it happens that some of the existential variables can be recognized as defined, then it is useful to display them as such (this observation may avoid redundant cases - leading to inconsistent disjuncts - in the computations below).\nA working formula like (14) is said to be terminal iff for every existential variable ei \u2208 e we have that\nT1 \u03c81 \u2192 \u00acImplDefT1\u03c81,ei (x, z) and T2 \u03c82 \u2192 \u00acImplDefT2\u03c82,ei (x, z) . (15) Roughly speaking, we can say that in a terminal working formula, all variables which are not parameters are either explicitly definable or recognized as not implicitly definable by both theories; of course, a working formula with no existential variables is terminal.\nLemma 6 Every working formula is equivalent (modulo T1 \u222aT2) to a disjunction of terminal working formulae.\nProof To compute the required terminal working formulae, it is sufficient to apply the following non-deterministic procedure (the output is the disjunction of all possible outcomes). The non-deterministic procedure applies one of the following alternatives.\n(1) Update \u03c81 by adding to it a disjunct from the DNF of \u2227\nei\u2208e \u00acImplDefT1\u03c81,ei (x, z) and \u03c82 by adding to it a disjunct from the DNF of \u2227 ei\u2208e \u00acImplDefT2\u03c82,ei (x, z);\n(2.i) Select ei \u2208 e and h \u2208 {1, 2}; then update \u03c8h by adding to it a disjunct Li j from the DNF of ImplDefTh\u03c8h ,ei (x, z); the equality ei = ti j (where ti j is the term mentioned in Lemma 4)2 is added to ExplDef(z, x); the variable ei becomes in this way part of the defined variables.\nNotice that in alternative (2.i), the index i in the label (2.i) refers to the variable ei chosen from e.\nIf alternative (1) is chosen, the procedure stops, otherwise it is recursively applied again and again: we have one truly existential variable less after applying alternative (2.i), so the procedure terminates, since eventually either no truly existential variable remains or alternative (1) is applied. The correctness of the procedure is due to the fact that the following formula is trivially a tautology:\n(\u2227 ei\u2208e \u00acImplDefT1\u03c81,ei (x, z) \u2227 \u2227 ei\u2208e \u00acImplDefT2\u03c82,ei (x, z) ) \u2228\n\u2228 \u2228ei\u2208e ImplDefT1\u03c81,ei (x, z) \u2228 \u2228 ei\u2208e ImplDef T2 \u03c82,ei (x, z)\nThe first disjunct is used in alternative (1), the other disjuncts in alternative (2.i). At the end of the procedure, we get a terminal working formula. Indeed, if no truly existential variable remains, then the working formula is trivially terminal. It remains to prove that the working formula obtained after applying alternative (1) is indeed terminal. Let \u03c8 \u2032k (for k = 1, 2) be the formula obtained from \u03c8k after applying alternative (1). We have that \u03c8 \u2032k is \u03b1(x, z) \u2227 \u03c8k(x, z, e), where \u03b1 is a disjunct of the DNF of \u2227ei\u2208e \u00acImplDefTk\u03c8k ,ei (x, z). We need to show that Tk \u03c8 \u2032k \u2192 \u00acImplDefTk\u03c8 \u2032k ,e j (x, z) for every j . Fix such a j ; according to Lemma 5, we must show that\nTk \u03b1(x, z) \u2227 \u03c8k(x, z, e) \u2192 \u00ac(\u03b1(x, z) \u2192 ImplDefTk\u03c8k ,e j (x, z))\nwhich is indeed the case because \u03b1(x, z) logically implies \u00acImplDefTk \u03c8 \u2032k ,e j (x, z), since \u03b1(x, z) is a disjunct of the DNF of \u2227\nei\u2208e \u00acImplDefTk\u03c8k ,ei (x, z). Thus we are left to the problem of computing a cover of a terminal working formula; this\nproblem is solved in the following proposition:\nProposition 2 A cover of a terminal working formula (14) can be obtained just by unravelling the explicit definitions of the variables z from the formula\n\u2203z (ExplDef(z, x) \u2227 \u03b81(x, z) \u2227 \u03b82(x, z)) (16) where \u03b81(x, z) is the T1-cover of \u2203e\u03c81(x, z, e) and \u03b82(x, z) is the T2-cover of \u2203e\u03c82(x, z, e). Proof In order to show that Formula (16) is the T1 \u222a T2-cover of a terminal working formula (14), we apply Lemma1. The first condition of that lemma is easily fulfilled. Concerning the second condition, we prove\nthat, for every T1 \u222aT2-modelM, for every tuple a, c from |M| such thatM | \u03b81(a, c)\u2227 \u03b82(a, c) there is an extension N of M such that N is still a model of T1 \u222a T2 and N | \u2203e(\u03c81(a, c, e) \u2227 \u03c82(a, c, e)).\nBy a L\u00f6wenheim\u2013Skolem argument, since our languages are countable, we can suppose that M is at most countable and actually that it is countable by stable infiniteness of our\n2 Lemma 4 is used taking as y the tuple e, as x the tuple x, z, as \u03c6(x, y) the formula \u03c8h(x, z, e) and as \u03c8 the formula \u03c83\u2212h .\ntheories, see Lemma 2 (the fact that T1 \u222a T2 is stably infinite in case both T1, T2 are such, comes from the proof of Nelson-Oppen combination result, see [17, 38, 44]).\nAccording to the conditions (15) and the definition of a cover (notice that the formulae \u00acImplDefTh\u03c8h ,ei (x, z) do not contain the e and are quantifier-free) we have that\nT1 \u03b81 \u2192 \u00acImplDefT1\u03c81,ei (x, z) and T2 \u03b82 \u2192 \u00acImplDefT2\u03c82,ei (x, z) (for every ei \u2208 e). Thus, since M | ImplDefT1\u03c81,ei (a, c) and M | ImplDefT2\u03c82,ei (a, c) hold for every ei \u2208 e, we can apply Lemma 3 and conclude that there exist a T1-model N1 and a T2-modelN2 such thatN1 | \u03c81(a, c, b1) andN2 | \u03c82(a, c, b2) for tuples b1 \u2208 |N1| and b2 \u2208 |N2|, both disjoint from |M|. By a L\u00f6wenheim-Skolem argument, we can suppose that N1,N2 are countable and by Lemma 2 even that they are both countable extensions of M.\nThe tuples b1 and b2 have equal length because the \u03c81, \u03c82 from our working formulae entail ei = e j , where ei , e j are different existential variables. Thus there is a bijection \u03b9 : |N1| \u2192 |N2| fixing all elements in M and mapping component-wise the b1 onto the b2. But this means that, exactly as it happens in the proof of the completeness of the NelsonOppen combination procedure, the \u03a32-structure on N2 can be moved back via \u03b9\u22121 to |N1| in such a way that the \u03a32-substructure from M is fixed and in such a way that the tuple b2 is mapped to the tuple b1. In this way,N1 becomes a \u03a31 \u222a \u03a32-structure which is a model of T1 \u222a T2 and which is such that N1 | \u03c81(a, c, b1) \u2227 \u03c82(a, c, b1), as required.\nFrom Lemma 6, Proposition 2 and Theorem 1, we immediately get\nTheorem 5 Let T1, T2 be convex, stably infinite, equality interpolating, universal theories over disjoint signatures admitting a model completion. Then T1 \u222a T2 admits a model completion too. Covers in T1 \u222a T2 can be effectively computed as shown above.\nWe recall fromTheorem 3 that the equality interpolating property transfers to combination of theories too, when it holds in the component theories.\nWe now summarize the steps of the combined cover algorithm ConvexCombCover that takes as input the primitive formula \u2203e \u03c6(x, e), where \u03c6 is a conjunction of \u03a31 \u222a\u03a32-literals: 1: Apply rewriting purification steps, like \u03c6 \u21d2 \u2203d (d = t \u2227 \u03c6(d/t)) (where d is a fresh\nvariable and t is a pure term), until \u03c6 = \u03c61 \u2227 \u03c62, where \u03c6i is a \u03a3i -formula (i = 1, 2). 2: Guess a partition of the e and replace each ek with the representative element of its\nequivalence class. 3: Apply the non-deterministic procedure of Lemma 6 to \u03c6 so as to get a disjunction of\nterminal working formulae TWj , where each disjunct TWj is \u2203z (ExplDefj(z, x) \u2227 \u2203e (\u03c8 j,1(x, z, e) \u2227 \u03c8 j,2(x, z, e))) 4: For every disjunct TWj , compute the T1-cover of \u2203e\u03c8 j,1(x, z, e), say \u03b8 j,1(x, z), and the T2-cover of \u2203e\u03c8 j,2(x, z, e), say \u03b8 j,2(x, z). 5: Return as output the disjunction \u2228\nj \u2203z (ExplDefj(z, x) \u2227 \u03b8 j,1(x, z) \u2227 \u03b8 j,2(x, z)). Notice that the input cover algorithms in the above combined cover computation algorithm are used not only in the final step described in Proposition 2, but also every time we need to compute a formula ImplDefTh\u03c8h ,ei (x, z): according to its definition, this formula is obtained by eliminating quantifiers in T \u2217i from (8) (this is done via a cover computation, reading \u2200 as\u00ac\u2203\u00ac). In practice, implicit definability is not very frequent, so that in many concrete cases ImplDefTh\u03c8h ,ei (x, z) is trivially equivalent to\u22a5 (in such cases, Step (2.i) above can obviously be disregarded)."
        },
        {
            "heading": "6.1 The Necessity of the Equality Interpolating Condition",
            "text": "The following result shows that equality interpolating is a necessary condition for a transfer result, in the sense that it is already required for minimal combinations with signatures adding uninterpreted symbols:\nTheorem 6 Let T be a convex, stably infinite, universal theory admitting a model completion and let\u03a3 be a signature disjoint from the signature of T containing at least a unary predicate symbol. Then T \u222a EUF(\u03a3) admits a model completion iff T is equality interpolating. Proof The necessity can be shown by using the following argument. By Theorem 1, T \u222a EUF(\u03a3) has uniform quantifier-free interpolation, hence also ordinary quantifier-free interpolation. We can now apply Theorem 4 and get that T must be equality interpolating. Conversely, the sufficiency comes from Theorem 5 together with the fact that\nEUF(\u03a3) is trivially universal, convex, stably infinite, has a model completion [6] and is equality interpolating [2, 47]."
        },
        {
            "heading": "6.2 An Example of Combined Covers for the Convex Case",
            "text": "We now analyze an example in detail. Our results apply for instance to the case where T1 is EUF(\u03a3) and T2 is linear real arithmetic. By \u2018linear real arithmetic\u2019 we mean the set of sentences which are true in the reals under the natural interpretation of the symbols, in the language containing +,\u2212, 0, 1,<,= and also infinitely many unary division operations by positive integer coefficients. This theory can be axiomatized as the theory of totally ordered abelian groups with the divisibility axiom n \u00b7 (x/n) = x and with 0 = 1 (last axiom excludes degeneracy); this axiomatization is universal and ensures quantifier elimination (hence also the equality interpolating property, see [2] [Theorem4.4]). This theory is also convex: actually convexity comes from the geometric fact that if a convex set is included in a finite nonempty union of hyperplanes, then it is contained in one of them.\nWe recall that covers are computed in linear real arithmetic by quantifier elimination, whereas for EUF(\u03a3) one can apply the superposition-based algorithm from [6]. Let us show that the cover of3\n\u2203e1 \u00b7 \u00b7 \u00b7 \u2203e4\n\u239b\n\u239c \u239d e1 = f (x1) \u2227 e2 = f (x2) \u2227 \u2227 f (e3) = e3 \u2227 f (e4) = x1 \u2227 \u2227 x1 + e1 \u2264 e3 \u2227 e3 \u2264 x2 + e2 \u2227 e4 = x2 + e3\n\u239e\n\u239f \u23a0 (17)\nis the following formula\n[x2 = 0 \u2227 f (x1) = x1 \u2227 x1 \u2264 0 \u2227 x1 \u2264 f (0)] \u2228 \u2228 [x1 + f (x1) < x2 + f (x2) \u2227 x2 = 0] \u2228 \u2228 [ x2 = 0 \u2227 x1 + f (x1) = x2 + f (x2) \u2227 f (2x2 + f (x2)) = x1 \u2227\n\u2227 f (x1 + f (x1)) = x1 + f (x1) ] (18)\nFormula (17) is already purified. Notice also that the variables e1, e2 are in fact already explicitly defined (only e3, e4 are truly existential variables).\n3 When running examples, we often apply some simplifications which are not needed to run our algorithms, but which might be useful to clean up the final result (when we apply such simplifications, we nevertheless explicitly notify the reader).\nWe first make the partition guessing. There is no need to involve defined variables into the partition guessing, hence we need to consider only two partitions; they are described by the following formulae:\nP1(e3, e4) \u2261 e3 = e4 P2(e3, e4) \u2261 e3 = e4\nWe first analyze the case of P1. The formulae \u03c81 and \u03c82 to which we need to apply exhaustively Step (1) and Step (2.i) of our algorithm are:\n\u03c81 \u2261 f (e3) = e3 \u2227 f (e4) = x1 \u2227 e3 = e4 \u03c82 \u2261 x1 + e1 \u2264 e3 \u2227 e3 \u2264 x2 + e2 \u2227 e4 = x2 + e3 \u2227 e3 = e4\nWe first compute the implicit definability formulae for the truly existential variables with respect to both T1 and T2.\n\u2013 We first consider ImplDefT1\u03c81,e3(x, z). Here we show that the cover of the negation of\nformula (8) is equivalent to (so that ImplDefT1\u03c81,e3(x, z) is equivalent to \u22a5). We must quantify over truly existential variables and their duplications, thus we need to compute the cover of\nf (e\u20323) = e\u20323 \u2227 f (e3) = e3 \u2227 f (e\u20324) = x1 \u2227 f (e4) = x1 \u2227 e3 = e4 \u2227 e\u20323 = e\u20324 \u2227 e\u20323 = e3 This is a saturated set according to the superposition based procedure of [6], hence the result is , as claimed. \u2013 The formulaImplDefT1\u03c81,e4(x, z) is also equivalent to\u22a5, by the same argument as above. \u2013 To compute ImplDefT2\u03c82,e3(x, z) we use Fourier-Motzkin quantifier elimination. We\nneed to eliminate the variables e3, e\u20323, e4, e\u20324 (intended as existentially quantified variables) from\nx1 + e1 \u2264 e\u20323 \u2264 x2 + e2 \u2227 x1 + e1 \u2264 e3 \u2264 x2 + e2 \u2227 e\u20324 = x2 + e\u20323\u2227 \u2227 e4 = x2 + e3 \u2227 e3 = e4 \u2227 e\u20323 = e\u20324 \u2227 e\u20323 = e3 .\nThis gives x1 + e1 = x2 + e2 \u2227 x2 = 0, so that ImplDefT2\u03c82,e3(x, z) is x1 + e1 = x2 + e2 \u2227 x2 = 0. The corresponding equality interpolating term for e3 is x1 + e1. \u2013 The formula ImplDefT2\u03c82,e4(x, z) is also equivalent to x1 + e1 = x2 + e2 \u2227 x2 = 0 and the equality interpolating term for e4 is x1 + e1 + x2. So, if we apply Step 1 we get\n\u2203e1 \u00b7 \u00b7 \u00b7 \u2203e4\n\u239b\n\u239c \u239d e1 = f (x1) \u2227 e2 = f (x2) \u2227 \u2227 f (e3) = e3 \u2227 f (e4) = x1 \u2227 e3 = e4 \u2227 \u2227 x1 + e1 \u2264 e3 \u2227 e3 \u2264 x2 + e2 \u2227 e4 = x2 + e3 \u2227 x1 + e1 = x2 + e2\n\u239e\n\u239f \u23a0 (19)\n(notice that the literal x2 = 0 is entailed by \u03c82, so we can simplify it to in ImplDefT2\u03c82,e3(x, z) and ImplDef T2 \u03c82,e4\n(x, z)). If we apply Step (2.i) (for i=3), we get (after removing implied equalities)\n\u2203e1 \u00b7 \u00b7 \u00b7 \u2203e4\n\u239b\n\u239c \u239d e1 = f (x1) \u2227 e2 = f (x2) \u2227 e3 = x1 + e1 \u2227 \u2227 f (e3) = e3 \u2227 f (e4) = x1 \u2227 e3 = e4 \u2227 \u2227 e4 = x2 + e3 \u2227 x1 + e1 = x2 + e2\n\u239e\n\u239f \u23a0 (20)\nStep (2.i) (for i=4) gives a formula logically equivalent to (20). Notice that (20) is terminal too, because all existential variables are now explicitly defined (this is a lucky side-effect of the fact that e3 has been moved to the defined variables). Thus the exhaustive application of Steps (1) and (2.i) is concluded.\nApplying the final step of Proposition 2 to (20) is quite easy: it is sufficient to unravel the acyclic definitions. The result, after little simplification, is\nx2 = 0 \u2227 x1 + f (x1) = x2 + f (x2)\u2227 \u2227 f (x2 + f (x1 + f (x1))) = x1 \u2227 f (x1 + f (x1)) = x1 + f (x1);\nthis can be further simplified to\nx2 = 0 \u2227 x1 + f (x1) = x2 + f (x2)\u2227 \u2227 f (2x2 + f (x2)) = x1 \u2227 f (x1 + f (x1)) = x1 + f (x1); (21)\nAs to formula (19), we need to apply the final cover computations mentioned in Proposition 2. The formulae \u03c81 and \u03c82 are now\n\u03c8 \u20321 \u2261 f (e3) = e3 \u2227 f (e4) = x1 \u2227 e3 = e4 \u03c8 \u20322 \u2261 x1 + e1 \u2264 e3 \u2264 x2 + e2 \u2227 e4 = x2 + e3 \u2227 x1 + e1 = x2 + e2 \u2227 e3 = e4\nThe T1-cover of \u03c8 \u20321 is . For the T2-cover of \u03c8 \u20322, eliminating with Fourier-Motzkin the variables e4 and e3, we get\nx1 + e1 < x2 + e2 \u2227 x2 = 0 which becomes\nx1 + f (x1) < x2 + f (x2) \u2227 x2 = 0 (22) after unravelling the explicit definitions of e1, e2. Thus, the analysis of the case of the partition P1 gives, as a result, the disjunction of (21) and (22).\nWe now analyze the case of P2. Before proceeding, we replace e4 with e3 (since P2 precisely asserts that these two variables coincide); our formulae \u03c81 and \u03c82 become\n\u03c8 \u2032\u20321 \u2261 f (e3) = e3 \u2227 f (e3) = x1 \u03c8 \u2032\u20322 \u2261 x1 + e1 \u2264 e3 \u2227 e3 \u2264 x2 + e2 \u2227 0 = x2\nFrom \u03c8 \u2032\u20321 we deduce e3 = x1, thus we can move e3 to the explicitly defined variables (this avoids useless calculations: the implicit definability condition for variables having an entailed explicit definition is obviously , so making case split on it produces either tautological consequences or inconsistencies). In this way we get the terminal working formula\n\u2203e1 \u00b7 \u00b7 \u00b7 \u2203e3\n\u239b\n\u239c \u239d e1 = f (x1) \u2227 e2 = f (x2) \u2227 e3 = x1 \u2227 f (e3) = e3 \u2227 f (e3) = x1 \u2227 \u2227 x1 + e1 \u2264 e3 \u2227 e3 \u2264 x2 + e2 \u2227 0 = x2\n\u239e\n\u239f \u23a0 (23)\nUnravelling the explicit definitions, we get (after exhaustive simplifications)\nx2 = 0 \u2227 f (x1) = x1 \u2227 x1 \u2264 0 \u2227 x1 \u2264 f (0) (24) Now, the disjunction of (21), (22) and (24) is precisely the final result (18) claimed above. This concludes our detailed analysis of our example. Notice that the example shows that combined cover computations may introduce terms with arbitrary alternations of symbols from both theories (like f (x2+ f (x1+ f (x1))) above).\nThe point is that when a variable becomes explicitly definable via a term in one of the theories, then using such additional variablemay in turn cause some other variables to become explicitly definable via terms from the other theory, and so on and so forth; when ultimately the explicit definitions are unraveled, highly nested terms arisewithmany symbol alternations from both theories."
        },
        {
            "heading": "7 The Non-convex Case: A Counterexample",
            "text": "In this section, we show by giving a suitable counterexample that the convexity hypothesis cannot be dropped from Theorems 5, 6. We make use of basic facts about ultrapowers (see [11] for the essential information we need). We take as T1 integer difference logic IDL, i.e. the theory of integer numbers under the unary operations of successor and predecessor, the constant 0 and the strict order relation <. This is stably infinite, universal and has quantifier elimination (thus it coincides with its own model completion). It is not convex, but it satisfies the equality interpolating condition, once the latter is suitably adjusted to non-convex theories, see [2] for the related definition and all the above mentioned facts.\nAs T2, we take EUF(\u03a3 f ), where \u03a3 f has just one unary free function symbol f (this f is supposed not to belong to the signature of T1).\nProposition 3 Let T1, T2 be as above; the formula\n\u2203e (0 < e \u2227 e < x \u2227 f (e) = 0) (25) does not have a cover in T1 \u222a T2.\nProof Suppose that (25) has a cover \u03c6(x). This means (according to Cover-by-Extensions Lemma 1) that for every model M of T1 \u222a T2 and for every element a \u2208 |M| such that M | \u03c6(a), there is an extension N of M such that N | \u2203e (0 < e \u2227 e < a \u2227 f (e) = 0).\nConsider themodelM, so specified: the support ofM is the set of the integers, the symbols from the signature of T1 are interpreted in the standard way and the symbol f is interpreted so that 0 is not in the image of f . Let ak be the number k > 0 (it is an element from the support ofM). Clearly it is not possible to extendM so that \u2203e (0 < e\u2227e < ak \u2227 f (e) = 0) becomes true: indeed, we know that all the elements in the interval (0, k) are definable as iterated successors of 0 and, by using the axioms of IDL, no element can be added between a number and its successor, hence this interval cannot be enlarged in a superstructure. We conclude that M | \u00ac\u03c6(ak) for every k.\nConsider now an ultrapower \u220f\nD M ofMmodulo a non-principal ultrafilter D and let a be the equivalence class of the tuple \u3008ak\u3009k\u2208N; by the fundamental Los theorem [11], \u220fD M | \u00ac\u03c6(a). We claim that it is possible to extend \u220fD M to a superstructure N such that N | \u2203e (0 < e\u2227e < a\u2227 f (e) = 0): this would entail, by definition of cover, that\u220fD M | \u03c6(a), contradiction. We now show why the claim is true. Indeed, since \u3008ak\u3009k\u2208N has arbitrarily big numbers as its components, we have that, in \u220f D M, a is bigger than all standard numbers.\nThus, if we take a further non-principal ultrapower N of \u220fD M, it becomes possible to change in it the evaluation of f (b) for some b < a and set it to 0 (in fact, as it can be easily seen,\nthere are elements b \u2208 |N | less than a but not in the support of \u220fD M).\nThe counterexample still applieswhen replacing integer difference logicwith linear integer arithmetics (the proof is literally the same)."
        },
        {
            "heading": "8 Tame Combinations",
            "text": "So far, we only analyzed the mono-sorted case. However, many interesting examples arising in model-checking verification are multi-sorted: this is the case of array-based systems [20] and in particular of the array-based system used in data-aware processes verification [5, 9]. The above examples suggest restrictions on the theories to be combined other than convexity, in particular they suggest restrictions that make sense in a multi-sorted context.\nMost definitions we gave in Sect. 2 have straightforward natural extensions to the multisorted case (we leave the reader to formulate them). A little care is needed however for the disjoint signatures requirement. Let T1, T2 be multisorted theories in the signatures \u03a31,\u03a32; the disjointness requirement for \u03a31 and \u03a32 can be formulated in this context by saying that the only function or relation symbols in\u03a31\u2229\u03a32 are the equality predicates over the common sorts in\u03a31\u2229\u03a32.Wewant to strengthen this requirement: we say that the combination T1\u222aT2 is tame iff the sorts in \u03a31 \u2229 \u03a32 cannot be a domain sort of a symbol from \u03a31 other than an equality predicate. In other words, if a relation or a function symbol has as among its domain sorts a sort from \u03a31 \u2229 \u03a32, then this symbol is from \u03a32 (and not from \u03a31, unless it is the equality predicate).\nTame combinations arise in infinite-state model-checking (in fact, the definition is suggested by this application domain), where signatures can be split into a signature \u03a32 used to represent \u2018datatypes\u2019 like integers and a signature \u03a31 for representing elements contained in a database: this is customary in the literature on data-aware processes verification [5, 9].\nNotice that the notion of a tame combination is not symmetric in T1 and T2: to see this, notice that if the sorts of \u03a31 are included in the sorts of \u03a32, then T1 must be a pure equality theory (but this is not the case if we swap T1 with T2). The combination of IDL and EUF(\u03a3) used in the counterexample of Sect. 7 is not tame: even if we formulate EUF(\u03a3) as a twosorted theory, the unique sort of IDL must be a sort of EUF(\u03a3) too, as witnessed by the impure atom f (e) = 0 in the formula (25). Because of this, for the combination to be tame, IDL should play the role of T2 (the arithmetic operation symbols are defined on a shared sort); however, the unary function symbol f \u2208 \u03a3 has a shared sort as domain sort, so the combination is not tame anyway.\nIn a tame combination, an atomic formula A can only be of two kinds: (1) we say that A is of the first kind iff the sorts of its root predicate are from \u03a31 \\ \u03a32; (2) we say that A is of the second kind iff the sorts of its root predicate are from \u03a32. We use the roman letters e, x, . . . for variables ranging over sorts in\u03a31\\\u03a32 and the greek letters \u03b7, \u03be, . . . for variables ranging over sorts in \u03a32. Thus, if we want to display free variables, atoms of the first kind can be represented as A(e, x, . . . ), whereas atoms of the second kind can be represented as A(\u03b7, \u03be, . . . , t(e, x, . . . ), . . . ), where the t are\u03a31-terms. In the following, given two tuples of \u03a3i -terms \u03b1 := \u3008\u03b11, . . . , \u03b1n\u3009 and \u03b2 := \u3008\u03b21, . . . , \u03b2n\u3009 (for some i = 1, 2), we use the notation \u03b1 = \u03b2 for denoting the conjunction of equalities \u2227 j \u03b1 j = \u03b2 j .\nRemark 2 We remark that if a formula \u03c8(\u03b7) is a \u03a31-formula and \u03b7 are variables of \u03a32-sorts, according to the definition of a tame combination, \u03c8(\u03b7) must be a conjunction of equalities and disequalities between variables: indeed, in this case \u03b7 need to range over the interpretation of a common sort S, and \u03c8 cannot contain non-variable terms built out of \u03b7, because there cannot be a \u03a31-function symbol having S as domain.\nSuppose that T1\u222aT2 is a tame combination and that T1, T2 are universal theories admitting model completions T \u22171 , T \u22172 . We propose the following algorithm, called TameCombCover,\nto compute the cover of a primitive formula; this formula must be of the kind\n\u2203e \u2203\u03b7(\u03c6(e, x) \u2227 \u03c8(\u03b7, \u03be, t(e, x))) (26) where \u03c6 is a \u03a31-conjunction of literals, \u03c8 is a conjunction of \u03a32-literals and the t are \u03a31-terms.\nThe TameCombCover algorithm has three steps:\n(i) First Step. We flatten (26) and get\n\u2203e \u2203\u03b7 \u2203\u03b7\u2032 (\u03c6(e, x) \u2227 \u03b7\u2032 = t(e, x) \u2227 \u03c8(\u03b7, \u03be, \u03b7\u2032))) (27) where the \u03b7\u2032 are fresh variables abstracting out the t and \u03b7\u2032 = t(e, x) is a component-wise conjunction of equalities.\n(ii) Second Step. We apply the cover algorithm of T1 to the formula\n\u2203e (\u03c6(e, x) \u2227 \u03b7\u2032 = t(e, x)) ; (28) this gives as a result a formula \u03c6\u0303(x, \u03b7\u2032) that we put in DNF. A disjunct of \u03c6\u0303 will have the form \u03c61(x) \u2227 \u03c62(\u03b7\u2032, t \u2032(x)) after separation of the literals of the first and of the second kind. We pick such a disjunct \u03c61(x) \u2227 \u03c62(\u03b7\u2032, t \u2032(x)) of the DNF of \u03c6\u0303(x, \u03b7\u2032) and update our current primitive formula to\n\u2203\u03be \u2032 (\u03be \u2032 = t \u2032(x) \u2227 (\u2203\u03b7 \u2203\u03b7\u2032 (\u03c61(x) \u2227 \u03c62(\u03b7\u2032, \u03be \u2032) \u2227 \u03c8(\u03b7, \u03be, \u03b7\u2032)))) (29) (this step is nondeterministic: in the end we shall output the disjunction of all possible outcomes). Here again the \u03be \u2032 are fresh variables abstracting out the terms t \u2032.4\n(iii) Third Step. We apply the cover algorithm of T2 to the formula\n\u2203\u03b7 \u2203\u03b7\u2032 (\u03c62(\u03b7\u2032, \u03be \u2032) \u2227 \u03c8(\u03b7, \u03be, \u03b7\u2032)) (30) this gives as a result a formula \u03c8 \u2032(\u03be , \u03be \u2032). We update our current formula to\n\u2203\u03be \u2032 (\u03be \u2032 = t \u2032(x) \u2227 \u03c61(x) \u2227 \u03c8 \u2032(\u03be, \u03be \u2032)) and finally to the equivalent quantifier-free formula\n\u03c61(x) \u2227 \u03c8 \u2032(\u03be , t \u2032(x)). (31) We now show that the above algorithm is correct under very mild hypotheses. We need some technical facts about stably infinite theories in a multi-sorted context. We say that a multi-sorted theory T is stably infinite with respect to a set of sorts S from its signature iff every T -satisfiable constraint is satisfiable in a model M where, for every S \u2208 S, the set SM (namely the interpretation of the sort S in M) is infinite. The next Lemma is a light generalization of Lemma 2 and is proved in the same way:\nLemma 7 Let T be stably infinite with respect to a subset S of the set of sorts of the signature of T . Let M be a model of T and let, for every S \u2208 S, XS be an at most countable superset of SM. Then there is an extension N of M such that for all S \u2208 S we have SN \u2287 XS.\n4 As noticed in Remark 2, \u03c62(\u03b7\u2032, \u03be \u2032) must be a conjunction of equalities and disequalities between variables, because it is a \u03a31-formula (it comes from a T1-cover computation) and \u03b7\u2032, \u03be \u2032 are variables of \u03a32-sorts.\nProof Let us expand the signature of T with the setC of fresh constants (we take one constant for every c \u2208 XS \\ SM). We need to prove the T -consistency of \u0394(M) with a the set D of disequalities asserting that all c \u2208 C are different from each other and from the names of the elements of the support ofM. By compactness, it is sufficient to ensure the T -consistency of \u03940 \u222a D0, where \u03940 and D0 are finite subsets of \u0394(M) and D, respectively. SinceM | \u03940, this set is T -consistent and hence it is satisfied in a T -model M\u2032 where all the sorts in S are interpreted as infinite sets; in such M\u2032, it is trivially seen that we can interpret also the constants occurring in D0 so as to make D0 true too. Lemma 8 Let T1, T2 be universal signature disjoint theories which are stably infinite with respect to the set of shared sorts (we let \u03a31 be the signature of T1 and \u03a32 be the signature of T2). Let the index i be 1 or 2: we let M0 be a model of T1 \u222a T2 and M1 be a model of Ti extending the \u03a3i -reduct ofM0. Then there exists a model N of T1 \u222a T2, extendingM0 as a \u03a31 \u222a \u03a32-structure and whose \u03a3i -reduct extends M1. Proof Using Lemma 7, we build infinitely many models M0,M1,M2, . . . such that: (i) M2 j is a \u03a33\u2212i -structure which is a model of T3\u2212i ; (ii) M2 j+1 is a \u03a3i -structure which is a model of Ti ; (iii) M2 j+2 is a \u03a33\u2212i -extension of M2 j ; (iv) M2 j+3 is a \u03a3i -extension of M2 j+1; (v) the supports of the Mk , once restricted to the \u03a31 \u2229 \u03a32-sorts (call |Mk | such restrictions), form an increasing chain |M0| \u2286 |M1| \u2286 |M2| \u2286 \u00b7 \u00b7 \u00b7 .\nThe union over this chain of models will be the desired N . We are now ready for the main result of this section:\nTheorem 7 Let T1 \u222a T2 be a tame combination of two universal theories admitting a model completion. If T1, T2 are also stably infinite with respect to their shared sorts, then T1 \u222a T2 has amodel completion. Covers in T1\u222aT2 can be computed as shown in the above three-steps algorithm TameCombCover.\nProof Since condition (i) of Lemma 1 is trivially true, we need only to check condition (ii), namely that given a T1 \u222a T2-model M and elements a, b from its support such that M | \u03c61(a) \u2227 \u03c8 \u2032(b, t \u2032(a)) as in (31), then there is an extension N of M such that (26) is true in N when evaluating x over a and \u03be over b.\nIf we let b\u2032 be the tuple such that M | b\u2032 = t \u2032(a), then we have M | b\u2032 = t \u2032(a) \u2227 \u03c6\u2032(a) \u2227 \u03c8 \u2032(b, b\u2032). Since \u03c8 \u2032(\u03be , \u03be \u2032) is the T2-cover of (30), the \u03a32-reduct ofM embeds into a T2-model where (30) is true under the evaluation of the \u03be as the b. By Lemma 8, this model can be embedded into a T1 \u222a T2-model M\u2032 in such a way that M\u2032 is an extension of M and that M\u2032 | b\u2032 = t \u2032(a) \u2227 \u03c61(a) \u2227 \u03c62(c\u2032, b\u2032) \u2227 \u03c8(c, b, c\u2032) holds for some c, c\u2032. Since \u03c61(x) \u2227 \u03c62(\u03b7\u2032, t \u2032(x)) implies the T1-cover of (28) and M\u2032 | \u03c61(a) \u2227 \u03c62(c\u2032, t(a)), then the \u03a31-reduct ofM\u2032 can be extended to a T1-model where (28) is true when evaluating the x, \u03b7\u2032 to the a, c\u2032. Again by Lemma 8, this model can be extended to a T1\u222aT2-modelN such thatN is an extension ofM\u2032 (hence also ofM) andN | \u03c6(a\u2032, a)\u2227c\u2032 = t(a\u2032, a)\u2227\u03c8(c, b, c\u2032), that isN | \u03c6(a\u2032, a)\u2227\u03c8(c, b, t(a\u2032, a)). This means thatN | \u2203e \u2203\u03b7(\u03c6(e, a)\u2227\u03c8(\u03b7, b, t(e, a))), as desired.\nWe conclude this subsection discussing the applications that inspired tame combinations. In the context of data-aware processes verification [4, 5, 9], where relational databases can be extended with arithmetical values such as integers and reals, tame combinations become particularly interesting. Consider the combination TDB \u222a Tint , where: 1. TDB is a multi-sorted version of EUF(\u03a3) in a signature \u03a3 comprising three sorts\nS1,S2,S3, and two function symbols fR,1 : S1 \u2192 S2 and fR,2 : S1 \u2192 S3;\n2. Tint is some theory for linear arithmetics, e.g., LIA or LRA, such that the unique sort of Tint coincides with S3.\nIt can be trivially seen that this combination is tame. As explained in [9], (\u03a3, TDB) can be thought of as a DB schema, i.e. as the formalization of a classical relational databasewith primary and foreign keys: for instance, fromunary functions fR,1 and fR,2, one can reconstruct the corresponding database relation R(A1, A2, A3), where each attribute Ai has type Si (for i = 1, . . . , 3) and A1 is the primary key of R. The interested reader is referred to [9, 31] for details on this. In addition, S3, which is interpreted into a model of Tint , can be used to formalize a value domain (using again the nomenclature of [9]), i.e., an infinite arithmetic domain whose elements are constrained by Tint : in this sense, these elements can be thought of as (possibly infinitely many and fresh) values that can be injected into the database, e.g., by an external user (they are essential for applications in data-aware process verification). For details on this and its use in formal verification, see [31]."
        },
        {
            "heading": "8.1 An Example of Combined Covers for the Tame Combination",
            "text": "Let T1 be EUF(\u03a31), where \u03a31 is a multi-sorted signature with three sorts S1, S2 and S3 and with a function symbol f : S1 \u00d7 S2 \u2192 S3. Let T2 be LIA (which is not convex, see [2, Sect. 4] for a precise description of this theory), where its (unique) sort is S3, which is in common with \u03a31. We notice that T1 \u222aT2 is a tame combination, since the common sort S3 is the codomain sort (and not the domain sort) of the unique symbol f from \u03a31 different from equality. We show a simple example on how to compute a T1 \u222a T2-cover using the above algorithm.\nLet\n\u2203e (\nf (e, x1) \u2264 f (e, x2) \u2227 2\u03be2 \u2264 f (e, x1) + \u03be1 \u2227 f (e, x2) + \u03be3 < 4\u03be4 \u2227 \u03be3 \u2264 \u03be1\n)\n(32)\nbe the formula forwhichwewould like to compute a T1\u222aT2-cover: the only truly existentially quantified variable here is e.\nWe first apply the First Step, and we abstract out f (e, x1) and f (e, x2) by introducing two fresh variables \u03b7\u20321 and \u03b7\u20322:\n\u2203e, \u03b7\u20321, \u03b7\u20322 ( \u03b7\u20321 = f (e, x1) \u2227 \u03b7\u20322 = f (e, x2) \u2227 2\u03be2 \u2264 \u03b7\u20321 + \u03be1 \u2227 \u03b7\u20322 + \u03be3 < 4\u03be4 \u2227 \u03be3 \u2264 \u03be1 \u2227 \u03b7\u20321 \u2264 \u03b7\u20322 )\n(33)\nThen, in order to apply the Second Step, we need to compute the T1-cover of the following formula:\n\u2203e (\u03b7\u20321 = f (e, x1) \u2227 \u03b7\u20322 = f (e, x2)) (34) and we obtain:\nx1 = x2 \u2192 \u03b7\u20321 = \u03b7\u20322 which, in turn, is equivalent to the following formula in DNF form:\nx1 = x2 \u2228 \u03b7\u20321 = \u03b7\u20322 Now, we analyze the two different cases create by each disjunct in the previous formula.\nFirst Case If we pick up the disjunct x1 = x2, after updating Formula (33), we get the following equivalent formula:\n\u2203\u03b7\u20321, \u03b7\u20322 ( x1 = x2 \u2227 2\u03be2 \u2264 \u03b7\u20321 + \u03be1 \u2227 \u03b7\u20322 + \u03be3 \u2264 1 + 4\u03be4 \u2227 \u03be3 \u2264 \u03be1 \u2227 \u03b7\u20321 \u2264 \u03b7\u20322 )\n(35)\nWe now apply the Third Step, by computing the T2-cover of the formula:\n\u2203\u03b7\u20321, \u03b7\u20322 ( 2\u03be2 \u2264 \u03b7\u20321 + \u03be1 \u2227 \u03b7\u20322 + \u03be3 \u2264 1 + 4\u03be4 \u2227 \u03be3 \u2264 \u03be1 \u2227 \u03b7\u20321 \u2264 \u03b7\u20322. )\n(36)\nThis is in general achieved by applying theCooper\u2019s algorithm [12]. In this case, it is sufficient to notice that Formula (36) implies:\n2\u03be2 \u2212 \u03be1 \u2264 \u03b7\u20321 \u2227 \u03b7\u20321 \u2264 \u03b7\u20322 \u2227 \u03b7\u20322 \u2264 1 + 4\u03be4 \u2212 \u03be3 which provide lower and upper bounds for both \u03b7\u20321 and \u03b7\u20322, as wanted. Hence, the T2-cover of Formula (36) is:\n2\u03be2 \u2212 \u03be1 \u2264 1 + 4\u03be4 \u2212 \u03be3 \u2227 \u03be3 \u2264 \u03be1 (37)\nWe then update our Formula (35) and we get the first disjunct of our T1 \u222a T2-cover:\nx1 = x2 \u2227 2\u03be2 \u2212 \u03be1 \u2264 1 + 4\u03be4 \u2212 \u03be3 \u2227 \u03be3 \u2264 \u03be1 (38)\nSecond Case If we pick up the disjunct \u03b7\u20321 = \u03b7\u20322, after updating Formula (33), we get the following equivalent formula:\n\u2203\u03b7\u20321, \u03b7\u20322 ( \u03b7\u20321 = \u03b7\u20322 \u2227 2\u03be2 \u2264 \u03b7\u20321 + \u03be1 \u2227 \u03b7\u20322 + \u03be3 \u2264 1 + 4\u03be4 \u2227 \u03be3 \u2264 \u03be1 \u2227 \u03b7\u20321 \u2264 \u03b7\u20322 )\n(39)\nWe now apply the Third Step, by computing the T2-cover of the previous formula. In this case, it is sufficient to notice that Formula (39) implies:\n2\u03be2 \u2212 \u03be1 \u2264 \u03b7\u20321 \u2227 \u03b7\u20321 = \u03b7\u20322 \u2227 \u03b7\u20322 \u2264 1 + 4\u03be4 \u2212 \u03be3 which provide lower and upper bounds for both \u03b7\u20321 and \u03b7\u20322, as wanted. Hence, the T2-cover of Formula (39) is:\n2\u03be2 \u2212 \u03be1 \u2264 1 + 4\u03be4 \u2212 \u03be3 \u2227 \u03be3 \u2264 \u03be1 (40)\nWe then update our Formula (39) and we get the second disjunct of our T1 \u222a T2-cover:\n2\u03be2 \u2212 \u03be1 \u2264 1 + 4\u03be4 \u2212 \u03be3 \u2227 \u03be3 \u2264 \u03be1 (41)\nHence, by taking the disjunction of Formulae (38) and (41) it is straightforward to see that the T1 \u222a T2-cover of Formula (32) is equivalent to:\n2\u03be2 \u2212 \u03be1 \u2264 1 + 4\u03be4 \u2212 \u03be3 \u2227 \u03be3 \u2264 \u03be1 (42)"
        },
        {
            "heading": "9 Conclusions and FutureWork",
            "text": "In this paper we showed that covers (aka uniform interpolants) exist in the combination of two convex universal theories over disjoint signatures in case they exist in the component theories and in case the component theories also satisfy the equality interpolating condition. Notice that the last condition is needed to transfer to combinations the existence of (ordinary) quantifier-free interpolants. In order to prove our result on combined covers, Beth definability property for primitive fragments turned out to be the crucial ingredient to extensively employ. In case convexity fails, we showed by a counterexample that covers might not exist in the combined theory. The last result raises the following research problem: even if in general covers do not exist for the combination of non-convex theories, under which conditions can one decide whether covers exist and, if so, how can one compute them?\nAnother interesting research question concerns complexity of the convex combined algorithm. It generates a tree whose depth is linear, hence the number of created nodes are in the worst case exponential. In order to generate new nodes, the algorithm makes use of the cover algorithms for the component theories and of the algorithms for generating the equality interpolating terms: these algorithms are given as input to our algorithm. Taking into consideration also the fact that these algorithms are used recursively, it is not immediate to give a significant upper bound to the overall complexity in the general case: instead, notice that this problem strongly depends on the component theories considered, hence it should be tackled separately for each involved theory and in view of the specific, concrete applications that the users have in mind. For these reasons, we leave an exhaustive investigation of this to future work, since it would require genuinely novel research and a thorough analysis of different examples of theories.\nApplications suggested a different line of investigations, which led us to consider so-called \u2018tame combinations\u2019. In data-aware processes verification [4, 5, 9] one uses tame combinations T1 \u222a T2, where T1 is a multi-sorted version of EUF(\u03a3) in a signature \u03a3 containing only unary function symbols and relation symbols of any arity, and where T2 is typically some fragment of linear arithmetics (T2-sorts are called value sorts in the terminology of [4, 5, 9]). In this context, quantifier elimination in T \u22171 for primitive formulae is quadratic in complexity. Model-checkers likeMCMT represent sets of reachable states by using conjunctions of literals and during preimage computations quantifier elimination needs to be applied to primitive formulae. Now, if all relation symbols are at most binary, such a quantifier elimination in T \u22171 produces conjunctions of literals out of primitive formulae. Thus, step (ii) in the algorithm from Sect. 8 becomes deterministic and the only reason why such an algorithm may become expensive (i.e., non polynomial) lies in the final quantifier elimination step for T \u22172 . This step might be extremely expensive if substantial arithmetic is involved, but it might still be efficiently handled in practical cases where only very limited arithmetic is used (e.g., difference bound constraints like x \u2212 y \u2264 n or x \u2264 n, where n is a constant). Our algorithm for covers in tame combinations has been implemented in version 3.0 of MCMT.\nWe also feel that this algorithm can be really useful in various model-checking applications. More specifically, such a model checking framework can be applied along the recent line of research concerning analysis of data-aware processes, in which data representation and manipulation capabilities can be extended with arithmetic. Like that, one could adapt the results of this paper to the existing formalism for data-aware extensions of the de-facto standard for business process modeling [4] or to data-aware classes of Petri nets [14, 15, 28, 29]. We leave it for future work.\nA final future research line could consider cover transfer properties to non-disjoint signatures combinations, analogously to similar results obtained in [18, 19] for the transfer of quantifier-free interpolation.\nFunding Open access funding provided by Libera Universit\u00e0 di Bolzano within the CRUI-CARE Agreement.\nOpen Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article\u2019s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article\u2019s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/."
        }
    ],
    "title": "Combination of Uniform Interpolants via Beth Definability",
    "year": 2022
}