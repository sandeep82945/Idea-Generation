{
    "abstractText": "Notifications are important for the user experience in mobile apps and can influence their engagement. However, too many notifications can be disruptive for users. A typical mobile app usually has several types of notification, managed by distinct teams with objectives that are possibly conflicting with each other, or even with the overall platform objective. Therefore, there is a need for careful curation of notifications sent to users of these different types. In this work, we study a novel centralized approach for notification optimization, where we view the opportunities to send user notifications as items and types of notifications as buyers in an auction market. Furthermore, the auction setup is unique, and the platform has the ability to subsidize the bids from the notification types. Using tools from fair division, we study the application of competitive equilibrium for addressing this problem. We show that an Eisenberg-Gale-style convex program allows us to find an allocation that is fair to all notification types in hindsight. Using the dual of the formulation, we present an online algorithm that allocates notifications via first-price auctions using a pacing-multiplier approach. Secondly, we introduce an approach based on second-price auctions and pacing, which has the benefit of working well with existing advertising systems built for second-price auctions. Through an A/B test in production, we show that the second price-based auction system improves over a decentralized notification optimization system, leading to its launch in production for some Instagram notifications. Further, through simulations on Instagram notification data and a subsequent production A/B test, we compare the outcomes of first-price and second-price auctions and show that the former has more stable pacing multipliers.",
    "authors": [
        {
            "affiliations": [],
            "name": "Christian Kroer"
        },
        {
            "affiliations": [],
            "name": "Deeksha Sinha"
        },
        {
            "affiliations": [],
            "name": "Xuan Zhang"
        },
        {
            "affiliations": [],
            "name": "Shiwen Cheng"
        },
        {
            "affiliations": [],
            "name": "Ziyu Zhou"
        }
    ],
    "id": "SP:58af1659d474be89ec6323b0658011216679d4f8",
    "references": [
        {
            "authors": [
                "Alvin Glay"
            ],
            "title": "Real-time push mobile marketing strategy: To what extent do time and relevance matter? 2019",
            "year": 2019
        },
        {
            "authors": [
                "Xuan-Lam Pham",
                "Thi-Huyen Nguyen",
                "Wu-Yuin Hwang",
                "Gwo-Dong Chen"
            ],
            "title": "Effects of push notifications on learner engagement in a mobile learning app",
            "venue": "In 2016 IEEE 16th International Conference on Advanced Learning Technologies (ICALT),",
            "year": 2016
        },
        {
            "authors": [
                "Atilla Wohllebe"
            ],
            "title": "Consumer acceptance of app push notifications: systematic review on the influence of frequency",
            "year": 2020
        },
        {
            "authors": [
                "Atilla Wohllebe",
                "Dirk Siegfried H\u00fcbner",
                "Uwe Radtke",
                "Szil\u00e1rd Podruzsik"
            ],
            "title": "Mobile apps in retail: Effect of push notification frequency on app user behavior",
            "venue": "Innovative Marketing,",
            "year": 2021
        },
        {
            "authors": [
                "Abhinav Mehrotra",
                "Veljko Pejovic",
                "Jo Vermeulen",
                "Robert Hendley",
                "Mirco Musolesi"
            ],
            "title": "My phone and me: understanding people\u2019s receptivity to mobile notifications",
            "venue": "In Proceedings of the 2016 CHI conference on human factors in computing systems,",
            "year": 2016
        },
        {
            "authors": [
                "Conor O\u2019Brien",
                "Huasen Wu",
                "Shaodan Zhai",
                "Dalin Guo",
                "Wenzhe Shi",
                "Jonathan J Hunt"
            ],
            "title": "Should i send this notification? optimizing push notifications decision making by modeling the future",
            "venue": "arXiv preprint arXiv:2202.08812,",
            "year": 2022
        },
        {
            "authors": [
                "Rupesh Gupta",
                "Guanfeng Liang",
                "Hsiao-Ping Tseng",
                "Ravi Kiran Holur Vijay",
                "Xiaoyu Chen",
                "R\u00f3mer Rosales"
            ],
            "title": "Email volume optimization at linkedin",
            "venue": "In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,",
            "year": 2016
        },
        {
            "authors": [
                "Rupesh Gupta",
                "Guanfeng Liang",
                "R\u00f3mer Rosales"
            ],
            "title": "Optimizing email volume for sitewide engagement",
            "venue": "In Proceedings of the 2017 ACM on Conference on Information and Knowledge Management,",
            "year": 2017
        },
        {
            "authors": [
                "Bo Zhao",
                "Koichiro Narita",
                "Burkay Orten",
                "John Egan"
            ],
            "title": "Notification volume control and optimization system at pinterest",
            "venue": "In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining,",
            "year": 2018
        },
        {
            "authors": [
                "Kevin P Yancey",
                "Burr Settles"
            ],
            "title": "A sleeping, recovering bandit algorithm for optimizing recurring notifications",
            "venue": "In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining,",
            "year": 2020
        },
        {
            "authors": [
                "Luchen Tan",
                "Adam Roegiest",
                "Jimmy Lin",
                "Charles LA Clarke"
            ],
            "title": "An exploration of evaluation metrics for mobile push notifications",
            "venue": "In Proceedings of the 39th International ACM SIGIR conference on Research and Development in Information Retrieval,",
            "year": 2016
        },
        {
            "authors": [
                "Yan Gao",
                "Viral Gupta",
                "Jinyun Yan",
                "Changji Shi",
                "Zhongen Tao",
                "PJ Xiao",
                "Curtis Wang",
                "Shipeng Yu",
                "Romer Rosales",
                "Ajith Muralidharan"
            ],
            "title": "Near real-time optimization of activity-based notifications",
            "venue": "In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining,",
            "year": 2018
        },
        {
            "authors": [
                "Yiping Yuan",
                "Ajith Muralidharan",
                "Preetam Nandy",
                "Miao Cheng",
                "Prakruthi Prabhakar"
            ],
            "title": "Offline reinforcement learning for mobile notifications",
            "venue": "arXiv preprint arXiv:2202.03867,",
            "year": 2022
        },
        {
            "authors": [
                "Prakruthi Prabhakar",
                "Yiping Yuan",
                "Guangyu Yang",
                "Wensheng Sun",
                "Ajith Muralidharan"
            ],
            "title": "Multi-objective optimization of notifications using offline reinforcement learning",
            "venue": "In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining,",
            "year": 2022
        },
        {
            "authors": [
                "Yiping Yuan",
                "Jing Zhang",
                "Shaunak Chatterjee",
                "Shipeng Yu",
                "Romer Rosales"
            ],
            "title": "A state transition model for mobile notifications via survival analysis",
            "venue": "In Proceedings of the Twelfth ACM International Conference on Web Search and Data Mining,",
            "year": 2019
        },
        {
            "authors": [
                "Yuguang Yue",
                "Yuanpu Xie",
                "Huasen Wu",
                "Haofeng Jia",
                "Shaodan Zhai",
                "Wenzhe Shi",
                "Jonathan J Hunt"
            ],
            "title": "Learning to rank for push notifications using pairwise expected regret",
            "venue": "arXiv preprint arXiv:2201.07681,",
            "year": 2022
        },
        {
            "authors": [
                "Zheqing Zhu",
                "Shiwen Cheng",
                "Haoran Zhang"
            ],
            "title": "Non-monetized market auction system",
            "venue": "unpublished internal manuscript,",
            "year": 2021
        },
        {
            "authors": [
                "Hal R Varian"
            ],
            "title": "Equity, envy, and efficiency",
            "venue": "Journal of Economic Theory,",
            "year": 1974
        },
        {
            "authors": [
                "Eric Budish"
            ],
            "title": "The combinatorial assignment problem: Approximate competitive equilibrium from equal incomes",
            "venue": "Journal of Political Economy,",
            "year": 2011
        },
        {
            "authors": [
                "Martin Aleksandrov",
                "Haris Aziz",
                "Serge Gaspers",
                "Toby Walsh"
            ],
            "title": "Online fair division: Analysing a food bank problem",
            "venue": "arXiv preprint arXiv:1502.07571,",
            "year": 2015
        },
        {
            "authors": [
                "Sean R Sinclair",
                "Siddhartha Banerjee",
                "Christina Lee Yu"
            ],
            "title": "Sequential fair allocation: Achieving the optimal envyefficiency tradeoff curve",
            "venue": "arXiv preprint arXiv:2105.05308,",
            "year": 2021
        },
        {
            "authors": [
                "MohammadHossein Bateni",
                "Yiwei Chen",
                "Dragos Florin Ciocan",
                "Vahab Mirrokni"
            ],
            "title": "Fair resource allocation in a volatile marketplace",
            "venue": "Operations Research,",
            "year": 2022
        },
        {
            "authors": [
                "Christian Borgs",
                "Jennifer Chayes",
                "Nicole Immorlica",
                "Kamal Jain",
                "Omid Etesami",
                "Mohammad Mahdian"
            ],
            "title": "Dynamics of bid optimization in online advertisement auctions",
            "venue": "In Proceedings of the 16th international conference on World Wide Web,",
            "year": 2007
        },
        {
            "authors": [
                "Vincent Conitzer",
                "Christian Kroer",
                "Debmalya Panigrahi",
                "Okke Schrijvers",
                "Nicolas E Stier-Moses",
                "Eric Sodomka",
                "Christopher A Wilkens"
            ],
            "title": "Pacing equilibrium in first price auction markets",
            "venue": "Management Science,",
            "year": 2022
        },
        {
            "authors": [
                "Vadim I Shmyrev"
            ],
            "title": "An algorithm for finding equilibrium in the linear exchange model with fixed budgets",
            "venue": "Journal of Applied and Industrial Mathematics,",
            "year": 2009
        },
        {
            "authors": [
                "Nikhil R Devanur",
                "Christos H Papadimitriou",
                "Amin Saberi",
                "Vijay V Vazirani"
            ],
            "title": "Market equilibrium via a primal-dual algorithm for a convex program",
            "venue": "Journal of the ACM (JACM),",
            "year": 2008
        },
        {
            "authors": [
                "Benjamin Birnbaum",
                "Nikhil R Devanur",
                "Lin Xiao"
            ],
            "title": "Distributed algorithms via gradient descent for fisher markets",
            "venue": "In Proceedings of the 12th ACM conference on Electronic commerce,",
            "year": 2011
        },
        {
            "authors": [
                "Yuan Gao",
                "Christian Kroer"
            ],
            "title": "First-order methods for large-scale market equilibrium computation",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2020
        },
        {
            "authors": [
                "Santiago Balseiro",
                "Anthony Kim",
                "Mohammad Mahdian",
                "Vahab Mirrokni"
            ],
            "title": "Budget management strategies in repeated auctions",
            "venue": "In Proceedings of the 26th International Conference on World Wide Web,",
            "year": 2017
        },
        {
            "authors": [
                "Santiago R Balseiro",
                "Yonatan Gur"
            ],
            "title": "Learning in repeated auctions with budgets: Regret minimization and equilibrium",
            "venue": "Management Science,",
            "year": 2019
        },
        {
            "authors": [
                "Vincent Conitzer",
                "Christian Kroer",
                "Eric Sodomka",
                "Nicolas E Stier-Moses"
            ],
            "title": "Multiplicative pacing equilibria in auction markets",
            "venue": "Operations Research,",
            "year": 2022
        },
        {
            "authors": [
                "Edmund Eisenberg",
                "David Gale"
            ],
            "title": "Consensus of subjective probabilities: The pari-mutuel method",
            "venue": "The Annals of Mathematical Statistics,",
            "year": 1959
        },
        {
            "authors": [
                "Xi Chen",
                "Christian Kroer",
                "Rachitesh Kumar"
            ],
            "title": "The complexity of pacing for second-price auctions",
            "venue": "In Proceedings of the 22nd ACM Conference on Economics and Computation,",
            "year": 2021
        },
        {
            "authors": [
                "Yuan Gao",
                "Christian Kroer"
            ],
            "title": "Infinite-dimensional fisher markets and tractable fair division",
            "venue": "Operations Research",
            "year": 2022
        },
        {
            "authors": [
                "Yuan Gao",
                "Alex Peysakhovich",
                "Christian Kroer"
            ],
            "title": "Online market equilibrium with application to fair division",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2021
        },
        {
            "authors": [
                "Chris Coey",
                "Lea Kapelevich",
                "Juan Pablo Vielma"
            ],
            "title": "Solving natural conic formulations with Hypatia.jl",
            "venue": "INFORMS Journal on Computing,",
            "year": 2022
        },
        {
            "authors": [
                "Bi/ui]. Now",
                "invoking Gao"
            ],
            "title": "2021, Theorem 2], which is exactly the theorem statement when G2 is an upper bound on the squared `2 norm of the subgradients and \u03c32 is the strong convexity parameter, yields the bound. Here, note that \u03c32 is indeed the strong convexity",
            "year": 2021
        }
    ],
    "sections": [
        {
            "text": "Using tools from fair division, we study the application of competitive equilibrium for addressing this problem. We show that an Eisenberg-Gale-style convex program allows us to find an allocation that is fair to all notification types in hindsight. Using the dual of the formulation, we present an online algorithm that allocates notifications via first-price auctions using a pacing-multiplier approach. Secondly, we introduce an approach based on second-price auctions and pacing, which has the benefit of working well with existing advertising systems built for second-price auctions.\nThrough an A/B test in production, we show that the second price-based auction system improves over a decentralized notification optimization system, leading to its launch in production for some Instagram notifications. Further, through simulations on Instagram notification data and a subsequent production A/B test, we compare the outcomes of first-price and second-price auctions and show that the former has more stable pacing multipliers.\nKeywords Notification, Auction, Fair allocation"
        },
        {
            "heading": "1 Introduction",
            "text": "Notifications are an important part of many mobile application (app) experiences. They inform users about promotions, new emails and messages, relevant activity in their social network, reminders about events such as birthdays, updates to threads they follow, etc. By serving as a communication channel for important information, notifications can influence user engagement on apps. Further, push / email notifications provide a way to communicate to users when they are not actively using the app. Though on the flip side, notifications can be a source of distraction and too many notifications can make users feel spammed. This can lead to users becoming habituated to ignoring notifications or turning off notifications, cutting off the possibility of any future communication through this channel. Thus, there is a need for careful curation of the notifications sent to users, sending only those that provide the most value to them.\nFor the purpose of this curation, we need to understand the goals behind sending notifications. Often there are several types of notifications even within a single mobile app. For example, in a social media app, there can be notifications informing users about engagement (e.g., likes and comments) on their posts, new posts made by their friends, events such as birthdays, etc. For context, there are more than 550 types of notification in the Instagram app (see Figure 1 for some examples). These notification types are managed by individual product teams, each having different goals. Typically, each team is responsible for choosing an appropriate set of notifications of that type to send to users. But this operating model has multiple shortcomings.\nar X\niv :2\n30 2.\n04 83\n5v 1\n[ cs\n.G T\n] 9\nF eb\n2 02\nDifferent teams can have goals that are not aligned with each other or with the overall platform1 objectives. Thus, optimization of notifications within the silo of each team can lead to incoherent communication for the users. In addition, notifications from different teams may reach the same set of users and hence compete with each other for the users\u2019 attention. Furthermore, if one team sends excessive notifications to a user, making the user unresponsive to future notification, all other teams are also adversely impacted. Another limitation of this decentralized approach is that the best notification of one type might not be among the best when all notification types are considered. This leads to suboptimal notifications being sent to users. Thus, it is important for these teams to work cohesively to identify the best set of notifications across all types to send to users. This set of notifications should not only take into account the goals of each team but also the overall goals of the app.\nMore generally, this can be viewed as a problem of fairly sharing users\u2019 attention across multiple parties with potentially different goals. This also occurs on the personalized landing pages of many websites (or mobile apps) such as Spotify and Amazon. On Amazon\u2019s homepage, there are multiple different sections such as \u201cTop Deals\u201d, \u201cNew Year Sale\u201d, \u201cBest Sellers in Books\u201d, \u201cAmazon Live\u201d. These sections are likely maintained and curated by different teams within the company, each responsible for the sale of a different category of products. Thus, for each user, these teams have to decide cohesively what are the best sections to show on the personalized homepage. For the rest of the paper, we focus on the notification application, although the model and insights are broadly applicable to these other settings.\nIn this work, we present an auction-based system for optimizing over notifications. This system incorporates the goals of each notification type team and the platform. Using tools from fair division, we study the application of competitive equilibrium for ensuring fair allocation of notification sending opportunities. We show that an Eisenberg-Gale-style convex program allows us to find an allocation that is fair to all notification types in hindsight, due to the fact that the formulation optimizes the geometric mean of the utilities of notification types and the platform. Using the dual of the formulation, we present an online algorithm that can be used to fairly allocate notification opportunities over time, by allocating each opportunity via first-price auctions combined with pacing.\nWe describe a production implementation and relevant design choices for this auction system. The production design choices highlight both the novel aspects of this auction system and the elements based on auction systems already in use for other applications in the company (particularly the pacing algorithm and auction strategy). The latter enable re-use of existing production infrastructure. Through an A/B test, we validate the gains achieved from the centralized auction system over the existing decentralized optimization system which lead to its launch in production.\nFurther, we compare, through simulation on real Instagram notification data and a subsequent production A/B test, the outcome of the proposed pacing algorithm with the outcomes of a first-price and a second-price auction using the production pacing algorithm. We observe that the two first-price auctions have similar outcomes albeit their pacing approaches differ. Further, we observe that first-price auction has more stable pacing multipliers laying ground for further improvements in the production system."
        },
        {
            "heading": "1.1 Related Work",
            "text": "Several studies have established the value of notifications for engaging users on websites and mobile apps [Glay, 2019, Pham et al., 2016, Wohllebe, 2020, Wohllebe et al., 2021]. At the same time, it has been established that excessive notifications can cause the opposite effect [Pham et al., 2016, Wohllebe, 2020, Wohllebe et al., 2021, Mehrotra et al., 2016]. This need for balance and communicating the most important information with few notifications has driven research on how to optimally send notifications to users. This stream of research has been tested and deployed in production systems in companies such as Twitter [O\u2019Brien et al., 2022], LinkedIn [Gupta et al., 2016, 2017], Pinterest [Zhao et al., 2018] and Duolingo [Yancey and Settles, 2020].\n1We use the terms mobile app and platform interchangeably in this text.\nTan et al. [2016] discuss metrics for evaluating quality of push notifications. Several types of techniques have been proposed in the literature for the notification optimization task. Gupta et al. [2016, 2017], Gao et al. [2018] formulate a problem to minimize the number of notifications sent (email / in-app/ push) with constraints on the resulting user sessions or platform wide events. Here, the optimization problems are solved using a linear program for the offline version and a primal-dual approach for the online problem.\nSeveral other techniques have also been proposed for the notification optimization problem. Given that long term user engagement is likely driven from a sequence of notifications, instead of one notification, there have been works on modeling the notification decision-making as a Markov Decision process and subsequently using reinforcement learning techniques for optimization [Yuan et al., 2022, O\u2019Brien et al., 2022, Prabhakar et al., 2022]. Yuan et al. [2019] propose a survival analysis based framework for modeling the effectiveness of notifications. Zhao et al. [2018] propose a machine learning approach to decide notification volume for each user. Yancey and Settles [2020] propose a multi-armed bandit approach for notification optimization. Yue et al. [2022] propose a ranking solution to decide which notification to send to users.\nMost of the above works optimize for a single objective function. Prabhakar et al. [2022] consider optimizing for multiple objectives by scalarizing to a single objective using a weighted combination. In contrast to these, our work considers multiple objectives of different notification teams and the overall platform goals and seeks to distribute the notification resources fairly to optimize these objectives. We present an auction based solution for this optimization problem. We discuss guarantees of this auction system and present appropriate pacing algorithms. Importantly, the auction based solution provides fairness guarantees for the different notification types and the platform. An earlier system-focused paper [Zhu et al., 2021] also discusses a pacing-based second-price notifications system, and our paper builds on that work. We propose to study both first-price and second-price auctions, and develops the first algorithmic and fairness guarantees for such systems.\nThe Competitive Equilibrium from Equal Incomes (CEEI) approach that we base our first-price auctions approach on was introduced by Varian [1974], where he showed that the CEEI mechanism has many desirable properties such as envy-freeness, proportionality, and Pareto optimality. Since then, the CEEI mechanism, or variants thereof, has been applied to a number of real-world problems such as matching course seats to students [Budish, 2011], allocating food to food banks [Aleksandrov et al., 2015, Sinclair et al., 2021], fair resource allocation for contracted ads [Bateni et al., 2022], and fair allocation of workforce to different sections [Allouah et al., 2022]. Moreover, competitive equilibria in Fisher markets are known to be related to budget-management systems for first-price auctions in internet advertising settings [Borgs et al., 2007, Conitzer et al., 2022a]. In all of the above work, it is assumed that the utility of each buyer depends only on the items that they receive. Our competitive equilibrium model is novel in that it introduces an auxiliary buyer, the platform, which does not receive items, but instead cares about how items are matched to the other buyers, i.e. the notification types. The problem of computing Fisher market equilibria has received extensive attention in the computer science literature, with both combinatorial and first-order algorithms [Shmyrev, 2009, Devanur et al., 2008, Birnbaum et al., 2011, Gao and Kroer, 2020]. Second-price auctions have also been studied extensively in the context of budget-management systems in internet advertising [Balseiro et al., 2017, Balseiro and Gur, 2019, Conitzer et al., 2022b]. Most related to our work is Conitzer et al. [2022b], Borgs et al. [2007], who show a connection between Fisher markets with supply-aware buyers and the solution to budget-management problems in second-price auction markets."
        },
        {
            "heading": "1.2 Notification System Overview",
            "text": "In this subsection, we give an overview of the notification system on Instagram. Notification generation can be triggered by a variety of events depending on the notification type. For example, a notification can be generated for a particular user due to relevant activity by another user (such as a comment, or a relevant post) or it can be triggered at fixed times such as to summarize recent activity in the user\u2019s network. After a notification is generated, the sending optimization layer makes a real time decision if the notification should be sent to the user or not. If the decision is in favor of sending the notification, then the notification is sent to the user immediately. Otherwise, the notification is dropped. In summary, the generation layer is responsible for what and when to generate notifications for a user; and the sending layer is responsible for deciding which of the generated notifications to send to the user. In this work, our focus is on optimizing the sending layer, while taking the notification generation process as input."
        },
        {
            "heading": "1.2.1 Decentralized sending optimization system",
            "text": "The notification sending system before the introduction of the auction system was based on a decentralized optimization framework. In this system, each notification type individually optimized for which notifications to send. Machine learning models are trained on each notification type to quantify the value of a notification with respect to the relevant metrics for that notification type. For example, the models can be trained to predict the probability of the notification\nbeing clicked on by the user or the notification leading to the user using the app or a particular feature on the app that day. Each notification type team tunes thresholds for these model scores, taking into account the desired sending volume of that notification type and the users\u2019 response to the volume and quality of notifications. A notification is sent to the user if the notification\u2019s score is greater than the threshold."
        },
        {
            "heading": "1.2.2 Auction based sending optimization system",
            "text": "In this work, we study a centralized mechanism where a central agency, instead of individual notification teams, decides the set of notifications to send. The idea of using an auction system in non-monetized markets in Meta\u2019s line of businesses beyond the ads space was first proposed by Zhu et al. [2021]. In this system, different notification type teams are given a budget of faux currency which they use to bid on the opportunity to send a notification to a user. The auction system consists of the following key components.\nNotification type bidders Each notification type has a model which estimates the value of generated notifications, which are related to the goals of the team responsible for the notification type. These valuations guide the notification type bidders on the amount to bid on the generated notifications.\nPlatform bidder The platform also has a model which estimates the value of generated notifications based on platform metrics, which could be different from those of the notification types. For example, a notification type might prioritize engagement on a specific product whereas the platform is interested in broader platform level engagement metrics. The platform bidder similarly decides their bids based on their valuations of generated notifications.\nSystem bidder The system bidder serves as a personalized time-varying threshold for controlling the number and quality of notifications sent to users. A notification is sent only if its combined bids from the notification type and the platform exceeds the system bid. Thus, the system bids can be viewed as reserve prices on the opportunity to send notifications to users.\nBudget Each notification type, as well as the platform, is assigned a faux currency budget that they can use to bid on notifications. These budgets serve as a lever to control the resource distribution among the (possibly competing) goals of different notification types and the platform.\nPacing The pacing system ensures that the budget is spent uniformly over time and in accordance with the expected amount of future notification opportunities. Furthermore, the pacing system helps make the valuations from the different notification types and the platform comparable by bringing them to the same budget unit. The system maintains a pacing multiplier for every notification type and the platform, and adapts it according to their overall budget and spending rate. The bids are computed as follows.\nnotif. type bid = notif. type valuation\u00d7 notif. type pacing multiplier platform bid = platform valuation\u00d7 platform pacing multiplier\nThe system also has the ability to perform pacing on the system bid. This lever is typically used to ensure different sending rates for users in different segments. The sending rate is defined as the ratio of notifications sent to notifications generated.\nAuction instance An auction is run as soon as a notification is generated. Since it is rare that two or more notifications are generated for a user at the same instant, most auctions consist of exactly one notification type bidder."
        },
        {
            "heading": "2 Model and Notations",
            "text": "We propose an economic approach to the notification prioritization problem. Here we treat this as a market equilibrium problem and solve it via an auctions-based approach.\nTo that end, we view the notification types as buyers and denote the set of notification types by T = {\u03c41, \u03c42, \u00b7 \u00b7 \u00b7 , \u03c4n}. The buyers are then interested in buying a set of items, which are the individual opportunities to show a notification to a user. Thus, each user has a set of items associated to them. We denote the set of users by U = {u1, u2, \u00b7 \u00b7 \u00b7 , um}. Throughout the paper, we index notification types and users by i \u2208 [n] and j \u2208 [m] respectively. Each user uj has a capacity sj representing the maximum number of notifications that can be sent to the user within the time horizon T . In order to enable our auctions-based approach, each notification type \u03c4i \u2208 T is endowed with a budget of faux currency, where Bi denotes the allocated budget. Since the budgets (and later prices) are in fake currency, the magnitude of the budget can be thought of as the level of priority a given notification type has. The larger the budget, the more\nnotification opportunities they will be able to purchase relative to other notification types. By allocating items to buyers in the economy induced from the faux currency, we can choose an allocation based on computing a competitive equilibrium; in the case where all buyers have the same budget, this is called competitive equilibrium from equal incomes (CEEI), which is known to have many attractive fairness properties [Varian, 1974]. Unlike the standard CEEI setup, we extend the model to include the platform as a buyer as well, and we let Bp denote the platform\u2019s allocated budget. The platform uses its budget to subsidize bids from notification types based on how beneficial a particular notification is to the platform.\nWe next describe the dynamics of the notification system. At a given time t \u2208 [T ], a notification of type \u03c4i(t) \u2208 T is generated for user uj(t) \u2208 U , where we let i(t) and j(t) be the indices of the notification type and user respectively. We denote by vt > 0 (resp. vtp \u2265 0) the valuation of sending the generated notification to user uj(t) for the notification type \u03c4i(t) (resp. for the platform). The valuation in this case can be interpreted as the probability of being clicked, or the probability of generating further interactions between users on the platform or some specific features of the platform. This valuation is typically aligned with the team\u2019s goals. Note that we allow notification types and platform to have different valuations. Moreover, in our setting, the valuations are time dependent, meaning that the same type of notification generated for the same user could have different valuations depending on other factors: for instance, different notifications informing users about comments on their posts can have varying click probabilities depending on who commented.\nOnce a notification is generated for a user, the platform then needs to decide whether the notification will be sent to the user. In our proposed auction-based system, this decision relies on various pieces of information maintained by the system:\n(i) The price ptj(t) to send notifications to user uj(t) at time t;\n(ii) A pacing multiplier \u03b2ti(t) of notification type \u03c4i(t) at time t;\n(iii) A pacing multiplier \u03b2tp of the platform at time t.\nAt time t, notification type \u03c4i(t) generates a bid \u03b2ti(t)v t, which is interpreted as their willingness to pay for the notification to be sent. Similarly, the platform generates a bid \u03b2tpv t p. The generated notification is pushed to the user if and only if the sum of the bids from the notification type \u03c4i(t) and the platform exceeds the price for user j(t) at time t, i.e. if:\n\u03b2ti(t)v t\ufe38 \ufe37\ufe37 \ufe38\nbid from notification type\n+ \u03b2tpv t p\ufe38\ufe37\ufe37\ufe38\nsubsidy from platform \u2265 ptj(t)\ufe38\ufe37\ufe37\ufe38 price . (1)\nIf the notification is pushed to the user, then the notification type \u03c4i(t) and the platform gain utilities of vt and vtp respectively.\nThe prices and pacing multipliers are maintained so that the utilities of the notification types and the platform are maximized in a way that is fair to all, while ensuring the number of notification sent to each user uj does not exceed sj (i.e., the supply constraint). To be more precise, let xt \u2208 [0, 1] be the probability with which the notification generated at time t is sent to user uj(t), and for each notification type \u03c4i \u2208 T , let Ti := {t \u2208 [T ] : i(t) = i} be the collection of times during which a notification of type \u03c4i is generated. Then, the utility ui of each notification type \u03c4i and the utility up of the platform are\nui := \u2211 t\u2208Ti vtxt, \u2200i \u2208 [n]; up := \u2211 t\u2208[T ] vtpx t. (2)\nNow we turn to the question of how to select the prices. It is known that such auction setups with budgets can be captured by a Fisher market equilibrium [Borgs et al., 2007, Conitzer et al., 2022a]. Our setting can be described as a novel type of Fisher market where there is an additional auxiliary buyer, the platform, whose utility depends on the overall allocation of items to buyers, whereas individual buyers (i.e. notification types) only care about their own allocation.\nNext we define a competitive equilibrium for our setting. For every notification type \u03c4i, the bundle received by \u03c4i can be written as xTi , which is a sub-vector of the allocation x. Let p \u2208 RT+ be a price vector for each possible notification. Then we define the demand set Di(p, \u03b2p) for notification type \u03c4i as follows,\nDi(p, \u03b2p) := arg max x\u2208[0,1]Ti {\u2211 t\u2208Ti xtvt | \u2211 t\u2208Ti xt(ptj(t) \u2212 \u03b2pv t p) \u2264 Bi } .\nSimilarly, define the demand set of the platform as\nDp(p, \u03b2) := arg max x\u2208[0,1][T ] \u2211 t\u2208[T ] xtvtp | \u2211 t\u2208[T ] xt(ptj(t) \u2212 \u03b2i(t)v t) \u2264 Bp .\nFor each user uj \u2208 U , we similarly let Tj := {t \u2208 [T ] : j(t) = j} as the collection of times during which a notification is generated for user uj . We define a competitive equilibrium to be a tuple (x, p, \u03b2) of allocation x, price vector p \u2208 RT+, and pacing multipliers \u03b2 \u2208 Rn+, \u03b2p \u2208 R+ such that:\n1. (notification types get demands) Notification types receive bundles from their demand sets: xTi \u2208 Di(p, \u03b2p), \u2200\u03c4i \u2208 T .\n2. (platform gets demand) Platform receives a bundle from its demand set: x \u2208 Dp(p, \u03b2). 3. (supply) For every user uj , \u2211 t\u2208Tj x t = min(sj , |Tj |).\nNote that we defined prices as being on a per-notification basis. Alternatively, one could try to define prices as being per user, meaning that each user uj gets a price pj \u2265 0, and the price for a particular notification at time t would be pj(t). We will use such per-user pricing in the second-price setting, but for the first-price setting we will need per-notification pricing.\nIn the typical Fisher market equilibrium, the equality condition in the supply constraint is usually only set as a lessthan-or-equals, with equality required only if the price for a user is strictly positive. Since we will have per-notification pricing, it is simpler to avoid dealing with whether the user price is positive and thus we have Item 3 in the definition of competitive equilibrium.\nWe define a notification-type competitive equilibrium (NCE) to be a tuple (x, p, \u03b2) such that conditions (1) and (3) are satisfied, but the platform may not receive a bundle in its demand set. We will see that first-price auctions will allow us to obtain competitive equilibria, whereas second-price auctions will only allow NCE."
        },
        {
            "heading": "3 First-Price (FP) Auction",
            "text": "In this section we describe our proposed approach for how to utilize first-price auctions to determine which notifications to send. Our first-price auctions will still use the rule in Eq. (1) to decide whether to send or not. If we decide to send, then everyone pays their bid, meaning that the notification type pays \u03b2ti(t)v t and the platform pays \u03b2tpv t p. We will show that a competitive equilibrium can be used to facilitate such first-price-based allocation for our problem. In order to develop this equilibrium notion, we will start by considering a static setting where we know the full set of notifications that will be generated, and thus we do not have to worry about the online aspect of allocation. Section 5 will then develop online algorithms for handling the online arrival of notification generation.\nIt is known that a competitive equilibrium in the standard Fisher market model can be found by finding an allocation that maximizes the budget-weighted geometric mean of the utilities for the buyers. For our setting with an auxiliary\nplatform buyer, the budget-weighted geometric mean is ( u Bp p \u00d7 \u220f i\u2208[n] u Bi i ) 1 Bp+ \u2211 i\u2208[n] Bi . Now, in order to obtain a convex program for finding such a maximizing allocation, one can take the logarithm of the geometric mean and drop the resulting constant 1Bp+ \u2211 i\u2208[n]Bi to get an Eisenberg-Gale (EG) Eisenberg and Gale [1959]-style convex program:\nmaxx \u2211 i\u2208[n] Bi log(ui(x)) +Bp log(up(x))\ns.t. \u2211 t\u2208Tj xt \u2264 sj , \u2200j \u2208 [m]\nxt \u2208 [0, 1], \u2200t \u2208 [T ].\n(3)\nFor every user uj , let pj be the dual variable associated with its corresponding supply constraint. This dual variable can be interpreted as the \u201cbase price\u201d of sending a notification to user uj . For each time t, let \u03bbt be the dual variable associated with the xt \u2264 1 constraint and define the per-notification price ptj(t) := pj(t) + \u03bb\nt. Moreover, let \u03b2i = Bi/ui and \u03b2p = Bp/up be the pacing multipliers of buyers and the platform. First-order optimality conditions and\ncomplementary slackness yield that for all t \u2208 [T ], we have:\n\u03b2i(t)v t + \u03b2pv t p \u2264 ptj(t) = pj(t) if x t = 0\n\u03b2i(t)v t + \u03b2pv t p = p t j(t) = pj(t) if x t \u2208 (0, 1) \u03b2i(t)v t + \u03b2pv t p = p t j(t) \u2265 pj(t) if x t = 1.\n(4)\nThus, we can interpret this as notification type \u03c4i(t) facing a clearing price of pj(t)\u2212\u03b2pvtp, with the platform subsidizing the amount of \u03b2pvtp. The allocation occurs only if the notification type bids beats the clearing price. Since we run a first-price auction, the total payment by the notification type and the platform is ptj(t) instead of the base price pj(t), out of which the notification type \u03c4i(t) pays \u03b2i(t)vt and the platform pays \u03b2pvtp By definition of the pacing multipliers and the inequalities given in (4), we immediately have the following two propositions (proofs of all propositions and theorems are presented in Appendix B) . Proposition 1 (budget clearing). For each notification type \u03c4i and the platform, we have\u2211\nt\u2208Ti\n\u03b2iv txt = Bi, \u2200i \u2208 [n]; and \u2211 t\u2208[T ] \u03b2pv t px t = Bp.\nProposition 2 (budget spent optimally). For each notification type \u03c4i, and any t1, t2 \u2208 [T ] such that i(t1) = i(t2) = i, if xt1 > 0, then\npt1j(t1) \u2212 \u03b2pv t1 p vt1 \u2264 pt2j(t2) \u2212 \u03b2pv t2 p vt2 .\nSimilarly, for the platform, let t1, t2 \u2208 [T ], if xt1 > 0, then\npt1j(t1) \u2212 \u03b2i(t1)v t1 vt1p \u2264 pt2j(t2) \u2212 \u03b2i(t2)v t2 vt2p .\nIt now follows that Eq. (3) yields a competitive equilibrium; we call a competitive equilibrium from Eq. (3) a notifications first-price pacing equilibrium (nFPPE). Theorem 1. An optimal solution x for (3), the prices {ptj(t)}t defined based on dual variables, and the pacing multipliers \u03b2i = Bi/ui,\u2200i \u2208 [n] of buyers and \u03b2p = Bp/up of the platform yield a competitive equilibrium.\nAnother consequence of Eq. (3) is that an nFPPE must necessarily be Pareto optimal: if there exists some alternative allocation that Pareto improves the utilities, then it would yield a strictly higher objective value in Eq. (3), which contradicts optimality.\nFairness Guarantees for nFPPE. We now show that nFPPE satisfies two new fairness criteria that mirror standard fairness criteria in fair allocation but adapted to our setting. Assume without loss of generality that |Ti \u2229 Tj | \u2265 sj for every notification type \u03c4i and every user uj . This is wlog because if this does not hold then we can add zero-valued opportunities until it does.\nConsider the allocation x\u0303 where each notification type \u03c4i is given a fraction fi := Bi/(Bp + \u2211 i\u2208[n]Bi) of the total supply sj of each user, and then notification type \u03c4i consumes sjfi/|Ti \u2229 Tj | of each opportunity t \u2208 Ti \u2229 Tj . Let ui = \u2211 t\u2208Ti v\ntx\u0303t be the utility of this allocation. Consider also the allocation x\u0302where the platform gets its proportional share: x\u0302t = (sj(t)/Tj(t)) \u00d7 (Bp/(Bp + \u2211 i\u2208[n]Bi)) for all t. Let up be the platform utility of this allocation x\u0302. We\nsay that an allocation x satisfies proportionality if for each notification type \u03c4i, \u2211 t\u2208Ti x\ntvt \u2265 ui, and for the platform,\u2211 t\u2208[T ] x\ntvtp \u2265 up. Proposition 3. Any nFPPE allocation x satisfies proportionality."
        },
        {
            "heading": "4 Second-Price (SP) Auctions",
            "text": "Next we study a model where we use second-price auctions to perform each allocation. This will still use the allocation rule in Eq. (1), but the difference is in the price charges to a winning notification type.\nAt a given time t, suppose that the notification type bid plus the platform subsidy is greater than ptj(t). In that case, we charge the notification type pj(t) \u2212 \u03b2tpvtp, which is exactly the lowest amount that they could have bid in order to get allocated. Note that the platform pays its full subsidy, which is \u03b2tpv t p.\nWe now study the offline version of this model. In that case, our goal will be to find what we will call a notifications second-price pacing equilibrium (nSPPE). An nSPPE is a tuple (x, p, \u03b2) where x is an allocation, p \u2208 Rm+ is a set of prices for the users, and \u03b2 = ({\u03b2i}i\u2208[n], \u03b2p) \u2208 Rn+1+ is the set of pacing multipliers for notification types and the platform, such that:\n(1) (price setting) The price pj for user uj equals to the (sj + 1)-th highest combined bid (i.e., notification type bid plus platform subsidy) for notifications generated for uj , or zero if there are no more than sj notifications generated for uj .\n(2) (winning bids allocated) xt = 1 if \u03b2i(t)vt + \u03b2tpv t p \u2265 pj(t) and xt = 0 otherwise. (3) (supply exhausted) For every user uj , \u2211 t\u2208Tj x t \u2264 sj where equality holds if pj > 0.\n(4) (notification type budgets cleared) For every notification type \u03c4i: \u2211 t\u2208Ti x\nt(pj(t) \u2212 \u03b2pvtp) = Bi. (5) (platform budget cleared) \u2211 t\u2208T x t\u03b2pv t p = Bp.\nSPPE was previously introduced by Conitzer et al. [2022b] in the setting of second-price auction markets with budgets, where each buyer is quasilinear, meaning that they have value for leftover budget. Here we consider a variant of their SPPE concept where buyers (i.e. notification types) do not have outside value for their leftover budget. Moreover, our model is a generalization that allows for the existence of a platform bidder and multiple items per user (i.e. the notification opportunities). Proposition 4. In an nSPPE, each notification type \u03c4i buys a bundle in their demand set given the prices.\nIt follows that an nSPPE is a competitive equilibrium among the notification types given the subsidized prices, i.e. an NCE. However, the platform does not buy a bundle that maximizes its utilities with the prices defined as the pernotification-opportunity price minus the notification-type bid, since that is not even the price faced by the platform in nSPPE.\nFairness Guarantees for nSPPE. It turns out that nSPPE guarantees a certain notion of proportionality. Consider the allocation x\u0304 where every notification type receives their budget-proportional share (i.e., fi) of the supply of each user, and then allocates that supply optimally to the notification opportunities they have for that user. We call the utilities of notification types under x\u0304 their proportional share utility. Proposition below states that in an nSPPE, the utility of each notification type is at least as good as their proportional share utility. Note that this guarantee is stronger than the proportionality guarantee for nFPPE, where the buyers are not allocated towards their highest-value items for each user. Proposition 5. In an nSPPE (\u03b2, p, x), each notification type receives an allocation such that \u2211 t\u2208Ti x\ntvt \u2265\u2211 t\u2208Ti x\u0304 tvt.\nUnfortunately, the nSPPE solution concept is unlikely to be easily computable, unlike our first-price solution concept which can be solved via convex programming due to Eq. (3). It was recently shown that for the SPPE solution concept of Conitzer et al. [2022b], it is PPAD-hard to compute an SPPE [Chen et al., 2021], which makes it unlikely that an efficient algorithm for nSPPE exist. Despite the theoretical drawback on computability, nSPPE has an important practical advantage over nFPPE: existing pacing systems at large-scale internet companies are targeted at pacing in second-price auction markets (despite that problem falling directly under the PPAD-hardness result of Chen et al. [2021]) and thus nSPPE can be implemented relatively easily by leveraging such existing infrastructure."
        },
        {
            "heading": "5 Online Algorithm for nFPPE",
            "text": "We start the section by deriving the dual of (3), which will be used to develop the online algorithm. Proposition 6. The dual of Eq. (3) is the following:\nmin p,\u03bb,\u03b2\u22650 \u2211 j\u2208[m] sjpj + \u2211 t\u2208[T ] \u03bbt \u2212 \u2211 i\u2208[n] Bi log \u03b2i \u2212Bp log \u03b2p\ns.t. pj(t) \u2265 \u03b2i(t)vt + \u03b2pvtp \u2212 \u03bbt \u2200t \u2208 [T ]. (5)\nSince we want to perform the allocation online, it will be useful to reformulate this problem in order to get rid of the \u03bbt variables. After reformulating, we get the following dual problem, where [\u00b7]+ := max(\u00b7, 0) denotes thresholding at zero.\nmin p,\u03b2\u22650 T\u2211 t=1 [ \u03b2i(t)v t + \u03b2pv t p \u2212 pj(t) ]+ + m\u2211 j=1 sjpj \u2212 n\u2211 i=1 Bi log \u03b2i \u2212Bp log \u03b2p (6)\nAlgorithm 1 1: Input: pacing multipliers {\u03b20i }i\u2208[n] and \u03b20p , prices {pj}j\u2208[m] 2: initialize ui = 0 for all i \u2208 [n] and initialize up = 0 3: for time t = 1, 2, 3, \u00b7 \u00b7 \u00b7 , T do 4: a notification of type \u03c4i(t) is generated for user uj(t) with valuation vt for the notification type and vtp for the\nplatform 5: if \u03b2t\u22121i(t) v t + \u03b2t\u22121p v t p \u2265 pj(t) then 6: set xt = 1 7: update notification type utility: ui(t) \u2190 ui(t) + vt 8: update platform utility: up \u2190 up + vtp 9: for each notification type \u03c4i do\n10: update pacing multipliers: \u03b2ti \u2190 min ( Bi (ui/t) , Biui ) 11: update platform multiplier \u03b2tp \u2190 min ( Bp\n(up/t) , Biup ) 12: Output: allocation vector {xt}t\u2208[T ]\nOur algorithm (outlined in Algorithm 1) assumes that a set of per-user prices {pj}j is given, and focuses on learning the remaining variables, which are the pacing multipliers \u03b2. The user prices {pj}j are assumed to come from some black box, for example, the price that would have yielded the right amount of notifications yesterday, or a machine learning model. The reason we do not perform online learning of the user prices is that most users only have a relatively small number of potential notifications generated each day, and thus we do not expect to be able to learn those prices online.\nThen, for a fixed set of prices p for each user, we can use online learning to solve (6):\nmin \u03b2\u22650 T\u2211 t=1 [ \u03b2i(t)v t + \u03b2pv t p \u2212 pj(t) ]+ + m\u2211 j=1 sjpj \u2212 n\u2211 i=1 Bi log \u03b2i \u2212Bp log \u03b2p (7)\nThe underlying solution.\nNow suppose that there is an underlying probability distribution \u00b5 \u2208 L\u221e+ over possible valuation matrix pairs \u03b8 = (v, vp). Suppose furthermore that the support of \u00b5 is contained in [0, 1]n\u00d7m\u00d7 [0, 1]n\u00d7m. Note that this model is more general than our notifications setting in the sense that this model allows multiple interested notification types per time period (where a single sampled (v, vp) is analogous to a time period). Suppose we treat each pair \u03b8 as an item with supply s(\u03b8). In that case, we get an infinite-dimensional Fisher market whose market equilibria are described by the following convex program:\nmin p\u22650,\u03b2\u22650 m\u2211 j=1 E(vij ,vpij)\u223c\u00b5 [ max i (\u03b2ivij + \u03b2pvpij \u2212 pj) ]+\n+ m\u2211 j=1 sjpj \u2212 n\u2211 i=1 Bi log \u03b2i \u2212Bp log \u03b2p. (8)\nWe call this the underlying market equilibrium. This is analogous to the infinite-dimensional Fisher market model of Gao and Kroer [2022], except that we include the platform buyer p, and the per-user supplies sj . Their results about the relationship between solutions to Eq. (8) and market equilibria easily extend to our setting, since the fact that valuations are contained in [0, 1] means that all measurability and integrability conditions are satisfied. Thus, there is a vector u\u2217 \u2208 Rn+ describing the utilities achieved by each buyer i in the underlying equilibrium.\nPACE algorithm. Now we show that if we are given the user prices p\u2217 \u2208 Rm+ associated to the supply constraint for each user, then we can learn the pacing multipliers \u03b2i, \u03b2p from Eq. (8) in an online fashion. Our algorithm is an extension of the PACE (Pace According to Current Estimated utilities) algorithm of Gao et al. [2021]. The algorithm is given in Algorithm 1 for the case where only a single notification type has a non-zero valuation at each time t (thus corresponding to our nFPPE setting).\nTheorem 2. PACE generates pacing multipliers \u03b2t (where we include the platform multiplier \u03b2tp in this vector) such that\nE\u2016\u03b2t \u2212 \u03b2\u2217\u20162 \u2264 (6 + log t)G 2\ntmini\u2208{[n],p} u 2 i\n,\nwhere G2 = maxi\u2208{1,...,n} E(vi,vp)\u223c\u00b5 [(\u221a vi + \u221a vp )2] , and ui is the proportional utility of i.\nTheorem 2 shows that pacing multipliers from learning nFPPE online converge in mean-square. Thus, we can expect that an nFPPE-based system will have stable pacing multipliers, whereas for nSPPE we have no such guarantee. Indeed, we do not expect them to be stable, based on the connection to the PPAD-hard SPPE problem.\nNote that the guarantee is under the assumption that user prices are given as inputs. However, in practice, it is hard to correctly estimate user prices as user activities on the platform (and thus the amount of notifications generated) are often spiky. Thus, additional heuristics are needed to learn and update user prices. We discuss more about this in Section 6.3."
        },
        {
            "heading": "6 Experiments",
            "text": ""
        },
        {
            "heading": "6.1 Launch of SP in Production",
            "text": "To evaluate the performance of the auction system on real data and in the production environment, we ran an A/B test to compare the auction system (test group) with the production system at the time (control group) for four push notification types at Instagram.\nThe control group was a decentralized optimization system where notifications of each type were separately optimized. A generated notification was sent to the user if its utility exceeded the notification type specific threshold. These thresholds had been tuned, separately for each notification type, to achieve a desired volume of notifications sent and click-through rate.\nThe test group was the auction system with budget spent based pacing. This pacing mechanism is based on the pacing mechanism used for other auction applications within the company. The pacing multiplier is defined as a function of the ratio of the notification budget spent to the expected budget spend2. The expected budget spend is calculated based on a uniform budget spending rate.\nSecond price auctions with budget spent based pacing were chosen instead of first price auctions because of two main reasons. Firstly, second price auctions are already used in the company in other domains such as ads, leading to general familiarity with the concept. Secondly, there already exists production infrastructure related to budget spent based pacing, easing its use in new domains.\nThe budget for each notification type and the system bidder (which can be thought of the price) were configured through simulations and prior A/B tests. The system bidder was configured to be the fifth-highest bid of all notifications in the past three days for the user and the budgets were chosen as shown in Table\nThis A/B test was run from May 10, 2022 to June 11, 2022. Each user in the experiment was assigned to either the test or the control group. For a user in a particular group, all the generated notifications went through the corresponding optimization system. Both the experiment groups consisted of 77.4 million users. The four notification types considered in the A/B test were Comment Subscribed, Feed Suite Organic Campaign, Like, and Story Daily Digest. Table 4 in Appendix A contains the description of each of these notification types and Figure 1 contains a sample of each notification type.\nThe A/B test showed positive results in favor of the auction system (Table 1). The auction system increased two core platform metrics of Instagram (metric name and definition concealed due to confidentiality concerns). Further, the click-through rate on notifications increased. Simultaneously, there was a decrease in the number of notifications sent. Further, there was no negative impact on the reachability of users due to excessive notification sending. Typically, if users get more notifications than desired then they turn off notifications which impacts reachability through push notifications. These results show that the auction system increased user engagement by sending fewer, but better quality, notifications.\nGiven the strong performance of the auction system in the A/B test, it was launched in production for these four notification types on Instagram in July 2022. This launch impacts about 2.9B (resp. 13.1B) daily sent (resp. generated) notifications. More notification types have been added to the auction system since then.\n2Exact functional form concealed due to confidentiality concerns."
        },
        {
            "heading": "6.2 Dataset",
            "text": "For simulations, we consider a dataset with all the generated notifications for a subset of users across the four notification types mentioned above. In addition, the faux currency budget Bi for each notification type is available (see Table 4 in Appendix A).\nIn terms of users\u2019 capacity for notifications, the rule of thumb we consider is that no more than five notifications should be sent every three days across these four notification types. Thus, for our experiments, we always choose a three-day window and assume the time horizon T is the number of notifications generated during the three-day period and let sj = 5 for every user uj .\nEach row of the dataset represents the notification event at one time period, which includes (1) notification type that generates the notification; (2) user for whom the notification is generated; (3) the utility of the generated notification for the notification type; (4) timestamp. Note that the platform utility is not currently available in production. Therefore, we assume that vtp = 0 for all time t."
        },
        {
            "heading": "6.3 Algorithm 1 Heuristics",
            "text": "In this subsection, we describe how to obtain the inputs for Algorithm 1 and additional steps required to maintain these parameters. For the input, we use historical data \u2013 in particular, the three days immediately before the three-day window for the experiment data."
        },
        {
            "heading": "6.3.1 Price Learning",
            "text": "Although one can learn the price by solving the optimization problem in (3) and gather the optimal dual solution, this is essentially impossible, or at best extremely time-consuming, due to the size of the user set. However, note that the price of each user uj can be obtained by\npj := { 5-th largest value in {\u03b2i(t)vt + \u03b2pvtp : t \u2208 Tj} if |Tj | > 5; 0 otherwise.\nHence, we may instead estimate the pacing multipliers {\u03b2i}i\u2208[n] and \u03b2p, and then compute the prices using these estimates. Pacing multipliers are much easier to estimate as they can be computed by solving a smaller optimization problem where only a random sample of the users is included. The optimization problem is solved by the Hypatia package in Julia [Coey et al., 2022]."
        },
        {
            "heading": "6.3.2 Price Updates",
            "text": "We observe that for many users, their prices are zero because fewer than five notifications were generated during the three-day window used for price learning, but then during the three-day simulation window, they post something that results in the generation of a significant amount of \u201clike\u201d notifications. This is not surprising given that many people only post once in a while and only post things that are of significance (e.g., wedding pictures).\nIn such cases, an additional mechanism needs to be employed to ensure that the user is not flooded with notifications. One possible mechanism is to set a hard capacity constraint where once a user receives five notifications, no additional notification will be allowed. However, this would lead to efficiency loss as valuable notifications generated later on will no longer be pushed to users. Alternatively, we implement a soft constraint that dynamically updates prices: whenever a notification is sent to a user who has already received five notifications, their price is increased to the value that would have resulted in only five notifications being sent."
        },
        {
            "heading": "6.4 Comparing Algorithm 1 and Production",
            "text": "In this section, we investigate the performance of Algorithm 1 with the heuristics described in Section 6.3. In addition, using an internal simulator, we compare the outcome with the production pacing and pricing system (as described in Section 6.1).\nThe dataset we run the simulation on is obtained by sampling 0.01% of the users during a ten-day period with the last three days used as the testing duration and the rest used for learning parameters. The exact window of data needed for learning stable parameters is tuned for each algorithm separately. The utility based pacing algorithm uses the three-day window just before the last three days to learn user prices and the budget based pacing algorithm uses the full seven-day window before the testing duration to learn stable system bidder values.\nAs is the case in the production implementation, we assume that the platform valuation vtp = 0 for all t. We summarize the results in Table 2 and we next explain the metrics investigated.\nThe average winning valuation is the average valuation for the notification type among all notifications that are sent to users. The number of notifications sent is the number of notifications (of each notification type) that are sent to users. The standard deviations of pacing multipliers measure the variability of the pacing multipliers for each notification type over time.\nNext, for supply constraint violation, overall rate is the percentage of the users for whom the number of notifications sent is above the allowance. Here, we consider the original allowance sj as well as a softer allowance 2 \u00d7 sj . The average per user is the average number of notifications that are sent above the allowance sj .\nLastly, for supply wastage, overall rate is the percentage of the users for whom at least one rejected notification can be sent without violating the supply constraint, and average per user is the average number of notification opportunities that got wasted.\nImmediately from Table 2, we can see that the outcomes are similar between the two FP auction systems with either pacing mechanisms, but they are quite different from the SP auction system. The main differences are (1) FP auction results in more notifications sent to users without sacrificing the quality of the sent notifications, and in fact, FP has a higher average winning valuation; (2) FP auction has a higher supply violation rate, although pretty small with the soft allowance 2 \u00d7 sj ; (3) FP auction has lower wastage; and (4) pacing multipliers under FP auction have smaller variability, and thus FP auction has a more stable pacing system (see Figure 3 in Appendix C).\nIn their raw form, it is hard to evaluate whether sending more notifications to users is beneficial to the platform or not. However, in the next section, based on an FP versus SP production A/B test, we discuss further the effects of sending more notifications on other metrics of interest that are not directly observable from offline simulations."
        },
        {
            "heading": "6.5 Online A/B test: FP versus SP",
            "text": "From a production implementation perspective, changing SP auction to FP auction is easy. But it is more involved to change the pacing system. Thus, given that our offline simulation shows similarity between FP auctions with different pacing systems, we ran an A/B test where we compared the FP auction system with the SP auction system, both with budget spent based pacing, which is currently used in production and the same as the simulator.\nThis A/B test was run between December 14, 2022 - Jan 19, 2023 on the same four push notification types at Instagram mentioned earlier. The test group (FP) and control group (SP) each consisted of 8.75 million users.\nThe metrics from the A/B test are presented in Tables 1 and 3. We observe that the test group sends more notification with smaller amount of supply constraint violation per user and supply wastage per user. But this increase does not lead to a change in the topline metrics such as click-through rate or any of the two previously mentioned core platform metrics. Thus, the additional notifications were likely targeted to users who are already active on the platform.\nWe observe that FP leads to a decrease in the variance of pacing multiplier in the test group for all the notification types. For two of the four notification types, there is at least an order of magnitude decrease in standard deviation. This reduction comes largely from reducing the magnitude of large spikes (Figure 2 and Figure 4 in Appendix C). Note that spikes are possible in the notification system due to upstream production ecosystem changes or non-stationarity in the user activity on the platform. For example, during the early part of the experiment, a new machine learning model for assigning valuations to one of the notification types was launched in production. This launch impacted both the test and control groups. We observe that there are spikes in pacing multipliers for both the FP and SP auctions. But the spikes are much smaller in magnitude for FP. Further, the stability in FP pacing multipliers is visible not just in periods of change, but also other times. In Table 3, we observe that even when the outliers in pacing multipliers are clipped to the 5th or 95th percentile values, the standard deviation of FP is at least 10% smaller than that of SP and for two notification types, it is more than 50% smaller.\nA system with reduced variance has several desirable properties. Reduced variance means a more stable pacing system. Smaller fluctuations in pacing multiplier imply that the budget spending over time is closer to the ideal spending rate. Further, a stable pacing system would be easier to debug. Finally, if the pacing mechanism can graciously accommodate changes in upstream systems, then the process of launching changes in other parts of the ecosystem becomes smoother."
        },
        {
            "heading": "7 Conclusion And Future Work",
            "text": "We presented an auction-based system for notification optimization. We provided theoretical guarantees for this auction system and illustrated its success in the production system for Instagram notifications.\nThere are several open questions related to this auction system, both from a theoretical and a system design perspective. First, as the system is expanded to include more notification types, we need a systematic approach to choose individual budgets (which are akin to priorities). The current system treats the notification delivery time decision and the notification sending decision as two separate problems (with our work focusing on the latter). It is worth investigating if combining these decisions into one framework can lead to further improvements. In particular, it is useful to understand the change in performance of the auction system if notification generation can be batched and several notifications simultaneously participate in the same auction instance.\nWhen using Algorithm 1, we need to estimate prices of the opportunities to send users notifications via historical data, and update the price when a user\u2019s capacity constraint is violated. The latter is a heuristic to deal with non-stationairity in user behaviors which results in spikes in the number of generated notifications for the user. It would be ideal to have a theoretically sound way of handling these spikes and, similar to what we have for the pacing multipliers, have a mechanism to learn these prices online."
        },
        {
            "heading": "Acknowledgements",
            "text": "We would like to thank Bolun Zhang, Nailong Zhang, Moon Kang, Hao Feng, Haoran Zhang, and Zheqing (Bill) Zhu for their efforts in productionalizing the notification auction system."
        },
        {
            "heading": "A Additional Tables",
            "text": "Table 4 gives the description of notification types and their budgets. The budgets are scaled by a certain factor to hide their magnitude."
        },
        {
            "heading": "B Additional Proofs",
            "text": "B.1 For Section 3 Proof of Proposition 1. The first claim follows because for each notification type \u03c4i, we have \u2211 t\u2208Ti \u03b2iv txt =\n(Bi/ui) \u2211 t\u2208Ti v txt = (Bi/ui)ui = Bi. The same logic holds for the platform.\nProof of Proposition 2. This can be shown by rearranging the terms in the first-order conditions in (4).\nProof of Theorem 1. Items 1 and 2 from our definition of a competitive equilibrium follow from Propositions 1 and 2. Item 3 follows because if the claim is not true, then there must be one buyer who has a t such that they could improve their utility by getting more of xt, which contradicts Item 1.\nProof of Proposition 3. We know from Proposition 1 that Bp + \u2211 i\u2208[n] Bi = \u2211 t\u2208T ptj(t)x t\n\u2265 \u2211\nt\u2208Ti,xt=1\nptj(t)x t + \u2211 t/\u2208Ti pj(t)x t + \u2211 t\u2208Ti,xt<1 pj(t)x t (9)\nNow consider any bundle x\u0302 purchased by notification type \u03c4i such that \u2211 t\u2208Tj\u2229Ti x\u0302\nt = sj for each user uj . Notice that the price faced by \u03c4i for buying x\u0302 is upper bounded by Eq. (9), since if xt = 1 then xt \u2265 x\u0302t, and thus the price paid for taking the whole supply sj of user uj is \u2211 t\u2208Tj\u2229Ti,xt=1 x\u0302 tptj + \u2211 t\u2208Tj\u2229Ti,xt<1 x\u0302\ntpj , which is weakly less than the total price contributed by user uj in Eq. (9).\nThus, we have that the allocation x\u0302 costs at most Bp + \u2211 i\u2208[n]Bi. It follows directly that x\u0303 costs at most Bi, and thus notification type \u03c4i could have afforded the proportional bundle x\u0303. By Proposition 2, \u03c4i must prefer their bundle in x to buying x\u0303.\nBy a completely analogous argument, proportionality holds for the platform as well.\nB.2 For Section 4\nProof of Proposition 4. First note that every notification type spends their budget by definition of nSPPE. Secondly, consider any t \u2208 Ti. If xt > 0, then we have that the price per utility is at most \u03b2i because the notification type bid \u03b2iv\nt is at least (pj(t) \u2212 \u03b2tpvtp); on the other hand if xt = 0, it must be that \u03b2ivt < (pj(t) \u2212 \u03b2tpvtp). Thus, goods they win yield a better return on spend (i.e., best bang per buck) than goods they do not win. Moreover, for any t such that \u03b2i > (pj \u2212 \u03b2tpvtp)/vt, we have by definition that i wins all of that good, and thus they buy as much as possible of any good with price-per-utility strictly greater than \u03b2i.\nProof of Proposition 5. It follows from the definition of nSPPE that \u2211 j sjpj = Bp+ \u2211 i\u2208[n]Bi. Thus the total price of\nthe allocation x\u0304 isBp+ \u2211 i\u2208[n]Bi, since it also exactly allocates sj of each user uj . Since notification type \u03c4i receives\nBi/(Bp + \u2211 i\u2208[n]Bi) of each user, their share x\u0304\nTi costs exactly Bi. Therefore they can afford their proportional bundle (which can only become cheaper due to platform subsidies), and since they are buying a utility-maximizing bundle given the prices, it must be the case that they receive at least as much utility.\nB.3 For Section 5 Proof of Proposition 6. We can rewrite the problem in (3) by adding constraints ui \u2264 \u2211 t\u2208Ti x\ntvt for all i \u2208 [n] and up \u2264 \u2211 t\u2208T x t pv t p. Let (pj)j , (\u03bb\nt)t, (\u03b2i)i, and \u03b2p be the Lagrange multipliers on the corresponding supply constraint, the xt \u2264 1 constraint, the new utility constraints on notification types and the platform, respectively. Then, we can apply Sion\u2019s minimax theorem (this applies because we can add redundant upper bounds to the allocation variables xij \u2264 sj + without loss of generality), we get the Lagrangian of the optimization problem:\nmin p,\u03bb,\u03b2\u22650 max x,u\u22650 n\u2211 i=1 Bi log ui +Bp log up \u2212 m\u2211 j=1 pj( \u2211 t\u2208Tj xt \u2212 sj) \u2212 T\u2211 t=1 \u03bbt(xt \u2212 1)\u2212 n\u2211 i=1 \u03b2i(ui \u2212 \u2211 t\u2208Ti xtvt)\u2212 \u03b2p(up \u2212 \u2211 t\u2208T xtpv t p)\n= min p,\u03bb,\u03b2\u22650 n\u2211 i=1 max ui\u22650 (Bi log ui \u2212 \u03b2iui) + max up\u22650 (Bp log up \u2212 \u03b2pup)\n+ m\u2211 j=1 pjsj + T\u2211 t=1 \u03bbt \u2212 T\u2211 t=1 max x\u22650 xt(pj(t) + \u03bb t \u2212 \u03b2i(t)vt \u2212 \u03b2pvtp).\nHere we note the fact that for strictly positive constantsB, \u03b2, we have that maxuB log u\u2212\u03b2u = B logB\u2212B log \u03b2\u2212B. In addition, while \u03b2i \u2265 0 is the constraint in the Lagrangian, we must have \u03b2i > 0 because otherwise, maxui Bi log ui \u2212 \u03b2iui = maxui Bi log ui = +\u221e (this is handled by the log \u03b2 term in the derivation). Similarly, we must have \u03b2p > 0. Solving each of the single-dimensional optimization problems, we get that the Lagrangian is equivalent to\nmin p\u22650,\u03b2\u22650 n\u2211 i=1 (\u2212Bi log \u03b2i +Bi logBi \u2212Bi)\n+ (\u2212Bp log \u03b2p +Bp logBp \u2212Bp) + m\u2211 j=1 pjsj + T\u2211 t=1 \u03bbt\ns.t. pj(t) \u2265 \u03b2i(t)vt + \u03b2pvtp \u2212 \u03bbt, \u2200t \u2208 [T ].\nAfter removing constants from the objective, we get Eq. (5).\nProof of Theorem 2. This follows by interpreting PACE as dual averaging (DA) in the composite setting without an auxiliary regularizer. Consider the problem\nmin w\nEfz(w) + \u03a8(w),\nwhere fz(w) is a convex and subdifferentiably function for each point z \u2208 Z for some arbitrary sample space, and \u03a8 is a strongly convex function. At iteration t, let ft be the observed convex function based on some sample z, let gt \u2208 \u2202ft(wt), and then the dual average is g\u0304t = \u2211t \u03c4=1 1 t g t. DA without an auxiliary regularizer uses the update rule\nwt+1 = arg min w \u3008g\u0304t, w\u3009+ \u03a8(w).\nGoing back to Eq. (8), we let fz = maxi(\u03b2ivit + \u03b2pvpit \u2212 pj) (as a function of \u03b2), and \u03a8 = \u2212 \u2211 iBi log \u03b2i \u2212 Bp log \u03b2p, with domain equal to \u03b2i \u2208 [0, Bi/ui] for each i \u2208 {1, . . . , n, p}. Now it is straightforward to see that uti is the subgradient gti , u\u0304 t i is the dual average, and the update rule for pacing multipliers is the DA rule. Finally, by Proposition 3 we have that \u03b2\u2217i = Bi/u \u2217 i \u2208 [0, Bi/ui].\nNow, invoking Gao et al. [2021, Theorem 2], which is exactly the theorem statement when G2 is an upper bound on the squared `2 norm of the subgradients and \u03c32 is the strong convexity parameter, yields the bound. Here, note that \u03c32 is indeed the strong convexity parameter, which can be seen by calculating the second derivative of \u2212Bi log \u03b2i which isBi/\u03b22i , and noting that the corresponding Hessian has diagonal entries. So, a lower bound on the Eigenvalues is a lower bound on miniBi/\u03b22i over all i including the platform. But we know \u03b2i \u2264 Bi/ui, so we get Bi/\u03b22i \u2265 Bi/(Bi/ui) = ui.\nC Additional Figures and Experiment Results"
        }
    ],
    "title": "FAIR NOTIFICATION OPTIMIZATION: AN AUCTION APPROACH",
    "year": 2023
}