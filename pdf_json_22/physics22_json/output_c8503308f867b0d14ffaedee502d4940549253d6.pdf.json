{
    "abstractText": "The Kepler\u2019s equation of elliptic orbits is one of the most significant fundamental physical equations in Satellite Geodesy. This paper demonstrates symbolic iteration method based on computer algebra analysis (SICAA) to solve the Kepler\u2019s equation. The paper presents general symbolic formulas to compute the eccentric anomaly (E) without complex numerical iterative computation at run-time. This approach couples the Taylor series expansion with higher-order trigonometric function reductions during the symbolic iterative progress. Meanwhile, the relationship between our method and the traditional infinite series expansion solution is analyzed in this paper, obtaining a new truncation method of the series expansion solution for the Kepler\u2019s equation. We performed substantial tests on a modest laptop computer. Solutions for 1,002,001 pairs of (e, M) has been conducted. Compared with numerical iterative methods, 99.93% of all absolute errors \u03b4E of eccentric anomaly (E) obtained by our method is lower than machine precision \u01eb over the entire interval. The results show that the accuracy is almost one order of magnitude higher than that of those methods (double precision). Besides, the simple codes make our method well-suited for a wide range of algebraic programming languages and computer hardware (GPU and so on).",
    "authors": [
        {
            "affiliations": [],
            "name": "Ruichen Zhang"
        },
        {
            "affiliations": [],
            "name": "Shaofeng Bian"
        },
        {
            "affiliations": [],
            "name": "Houpu Li"
        }
    ],
    "id": "SP:262b61deda480ceceabcd464173d170c7242fc93",
    "references": [
        {
            "authors": [
                "A. Nijenhuis"
            ],
            "title": "Solving Kepler\u2019s equation with high efficiency and accuracy",
            "venue": "Celest. Mech. Dyn. Astron",
            "year": 1991
        },
        {
            "authors": [
                "E.W. Ng"
            ],
            "title": "A general algorithm for the solution of Kepler\u2019s equation for elliptic orbits",
            "venue": "Celest. Mech. Dyn. Astron. 20(3),",
            "year": 1979
        },
        {
            "authors": [
                "J.M. Danby",
                "T. Teichmann"
            ],
            "title": "Fundamentals of celestial mechanics",
            "venue": "Phys. Today. 16,",
            "year": 1963
        },
        {
            "authors": [
                "N. Ashby",
                "Spilker",
                "J.J. Introduction to relativisitic effects on the global positioning system. In Global Positioning System"
            ],
            "title": "Theory and Applicaions Vol",
            "venue": "I, Chapter 18 (eds Parkinson, B. W. & Spiller, J. J.)",
            "year": 1996
        },
        {
            "authors": [
                "S.J. Aarseth"
            ],
            "title": "Gravitational N-Body Simulations Tools and Algorithms",
            "year": 2003
        },
        {
            "authors": [
                "R.H. Battin"
            ],
            "title": "An Introduction to the Mathematics and Methods of Astrodynamics",
            "venue": "Revised Version (AIAA,",
            "year": 1999
        },
        {
            "authors": [
                "M.O. Karslioglu"
            ],
            "title": "An interactive program for GPS-based dynamic orbit determination of small satellites",
            "venue": "Comput. Geosci. 31(3),",
            "year": 2005
        },
        {
            "authors": [
                "R Tenzer"
            ],
            "title": "Spectral harmonic analysis and synthesis of Earth\u2019s crust gravity field",
            "venue": "Comput. Geosci. 16,",
            "year": 2012
        },
        {
            "authors": [
                "E. Colwell"
            ],
            "title": "Solving Kepler\u2019s Equation Over Three Centuries (Willman-Bell",
            "year": 1993
        },
        {
            "authors": [
                "L.G. Taff",
                "T.A. Brennan"
            ],
            "title": "On solving Kepler\u2019s equation",
            "venue": "Celest. Mech. Dyn. Astron. 46,",
            "year": 1989
        },
        {
            "authors": [
                "A.W. Odell",
                "R.H. Gooding"
            ],
            "title": "Procedures for solving Kepler\u2019s equation",
            "venue": "Celest. Mech. 38,",
            "year": 1986
        },
        {
            "authors": [
                "S. Mikkola"
            ],
            "title": "A cubic approximation for Kepler\u2019s equation",
            "venue": "Celest. Mech. 40,",
            "year": 1987
        },
        {
            "authors": [
                "P. Sengupta"
            ],
            "title": "The Lambert W function and solutions to Kepler\u2019s equation",
            "venue": "Celest. Mech. Dyn. Astron. 99(1),",
            "year": 2007
        },
        {
            "authors": [
                "M Calvo"
            ],
            "title": "Optimal starters for solving the elliptic Kepler\u2019s equation",
            "venue": "Celest. Mech. Dyn. Astron. 115(2),",
            "year": 2013
        },
        {
            "authors": [
                "D.L. Oltrogge"
            ],
            "title": "Efficient solutions of Kepler\u2019s equation via hybrid and digital approaches",
            "venue": "J. Astronaut. Sci. 62(4),",
            "year": 2015
        },
        {
            "authors": [
                "M. Zechmeister"
            ],
            "title": "CORDIC-like method for solving Kepler\u2019s equation",
            "venue": "Astron. Astrophys. 619,",
            "year": 2018
        },
        {
            "authors": [
                "D. Tommasini",
                "Olivieri",
                "D.N. Fast switch",
                "spline scheme for accurate inversion of nonlinear functions"
            ],
            "title": "The new first choice solution to Kepler\u2019s equation",
            "venue": "Appl. Math. Comput. 364, 124677",
            "year": 2020
        },
        {
            "authors": [
                "J. Traub"
            ],
            "title": "Iterative Methods for the Solution of Equations (Prentice-Hall",
            "year": 1964
        },
        {
            "authors": [
                "T. Fukushima"
            ],
            "title": "A method solving Kepler\u2019s equation without transcendental function evaluations",
            "venue": "Celest. Mech. Dyn. Astron. 66(3),",
            "year": 1997
        },
        {
            "authors": [
                "G.N. Watson"
            ],
            "title": "A Treatise on the Theory of Bessel Functions 2nd edn",
            "year": 1966
        }
    ],
    "sections": [
        {
            "text": "1 Vol.:(0123456789) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nwww.nature.com/scientificreports\nSymbolic iteration method based on computer algebra analysis for Kepler\u2019s equation Ruichen Zhang*, Shaofeng Bian & Houpu Li\nThe Kepler\u2019s equation of elliptic orbits is one of the most significant fundamental physical equations in Satellite Geodesy. This paper demonstrates symbolic iteration method based on computer algebra analysis (SICAA) to solve the Kepler\u2019s equation. The paper presents general symbolic formulas to compute the eccentric anomaly (E) without complex numerical iterative computation at run-time. This approach couples the Taylor series expansion with higher-order trigonometric function reductions during the symbolic iterative progress. Meanwhile, the relationship between our method and the traditional infinite series expansion solution is analyzed in this paper, obtaining a new truncation method of the series expansion solution for the Kepler\u2019s equation. We performed substantial tests on a modest laptop computer. Solutions for 1,002,001 pairs of (e, M) has been conducted. Compared with numerical iterative methods, 99.93% of all absolute errors \u03b4E of eccentric anomaly (E) obtained by our method is lower than machine precision \u01eb over the entire interval. The results show that the accuracy is almost one order of magnitude higher than that of those methods (double precision). Besides, the simple codes make our method well-suited for a wide range of algebraic programming languages and computer hardware (GPU and so on).\nAs one of the fundamental physical equations in Geoscience, the Kepler\u2019s equation in elliptical orbits describes a relationship of the eccentric anomaly (E), the eccentricity (e), and the mean anomaly (M)1, in which M is related to the time. For elliptic orbits, it is shown as Eq.\u00a0(1), and the contours of the Kepler\u2019s equation with different eccentricities ( e = 0, 0.1, 0.5, 0.9, 1 ), are shown in Fig.\u00a01. This paper focuses on the situation of nearly-circular motions ( e \u226a 1 ). We simplify the problem by limiting E and M within the range of [0,\u03c0]2, as shown in Eq.\u00a0(2). General Solutions for (E,M) \u2208 R\u00d7 R can be easily calculated through (\u00b1E + 2n\u03c0 , \u00b1M + 2n\u03c0) , n \u2208 Z.\nBrouwer and Clemence3, and Danby4 have described the principles and applications of this equation for artificial Earth satellites and other celestial bodies in great detail. The enormous researches to solve the Kepler\u2019s equation underline its significance in many fields of Satellite Geodesy (e.g. precise orbit determination, perturbation theory and Earth model calculation), Geophysics and Trajectory Optimization5\u201311. As all the satellite orbits are nearly-circular, this paper focuses on the situation of nearly-circular motions, providing a symbolic iteration method based on computer algebra analysis for Kepler\u2019s equation.\nMany scientists have made considerable improvements with high accuracy and low time consumption of various algorithms to solve the equation. Nijenhuis and Albert1 combined the Mikkola\u2019s starter algorithm with a higher-order Newton method, requiring only two trigonometric evaluations. Markley and Landis12 presented a non-iterative method with four transcendental function evaluations. Colwell13 systematically analyzed the traditional solutions for the Kepler\u2019s equation, such as traditional power serious expansion based on Lagrange inversion theorem, and series solutions in Bessel functions of the first kind, which are still the most common methods for Kepler\u2019s equation. Taff and Brennan14 explored an extensive starting values and solution techniques for iterative methods, giving the best and simplest starting value algorithm. Odell15 provided an iterative process that always gives 4th order convergence, with error less than 7 \u00d7 10\u221215\u00a0rad. Mikkola16 derived a high order iteration formula by adding an auxiliary variable, which could be used both for elliptical and hyperbolic orbits. Sengupta17\n(1)E = M + e sin E\n(2)E,M \u2208 [0,\u03c0], e \u226a 1\nOPEN\nDepartment of Navigation, Naval University of Engineering, 717 Jiefang Avenue, Wuhan, China. *email: zrcrc1009@ sina.com\n2 Vol:.(1234567890) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\npresented the Lambert W method for the truncation of infinite Fourier\u2013Bessel representations. Calvo and Elipe18 compared the quality of starting algorithm for the iterative solution of elliptic Kepler\u2019s equation, giving new optimal starters. Oltrogge and Daniel19 derived a solution via families of hybrid and table lookup techniques, achieving the accuracies to machine precision at 3 \u00d7 10\u221211. Zechmeister20 presented an algorithm to compute the eccentric anomaly without usage of transcendental functions. Tommasini and Olivieri21 provided a solution for the inverse of a function based on switching variables followed by spline interpolation.\nHowever, limited by historical scientific conditions, these traditional methods usually contain numerical iterative calculations, such as the standard Newton\u2013Raphson method2,4 and the Halley\u2019s method2, which have to reset the initial values and iterate from the beginning every time the eccentricity e changes22. Meanwhile, some traditional numerical methods 4 contain tremendously complex functions, which costs too much time to compute. In these methods, the CPU time cost by transcendental functions accounts for a large part of the total CPU time consumption23. For instance, an iterative method to solve the Kepler\u2019s equation usually requires two trig evaluations (sine and cosine) at every iterative step1; the CPU time cost increases exponentially with the number of iterations grows. As for the Intel i7 \u00d7 920 processor, the calling time of trigonometric functions occupies more than 80% of the total time consumption in measured unmanaged arithmetic19. Besides, some traditional formulas are given in the form of concrete numerical values, which lacks generality. Meanwhile, there were also some analytic solutions with a certain tolerance and maximum eccentricity. For example, Markley and Landis12 provided a non-iterative method with errors better than 10\u22124 requiring four transcendental functions, containing square-root, cube-root and trigonometric operations. Nijenhuis1 further presented a non-iterative method that represented a gain obtained through a starter algorithm, which required two trigonometric evaluations. Although these methods are classic and efficient at that time, their performances are limited by the historical scientific conditions with a relatively poor accuracy.\nThe current research is mainly aimed at improving the iterative methods and expanding the scope of the application of algorithms. Meanwhile, since the solution for the Kepler\u2019s equation is a traditional problem, the traditional iterative methods are relatively mature. Thus, entering into the new century, there are fewer studies specifically on this problem, letting alone specifically on the circumstances of nearly-circular motions. However, most of the two-body motions in the universe are nearly-circular motions, especially for all satellite motions. The accuracy of the eccentric anomaly (E) is the basis and the determinant for the accuracy of satellite orbit determination. Thus, in order to improve the accuracy of the eccentric anomaly (E) in the field of satellite geodesy, this paper proposes a solution for Kepler\u2019s equation specifically for the nearly-circular orbits, which improves the accuracy to the order of 10\u221217. In this paper, based on the computer algebra system (Mathematica 12.1 and Python 3.8), we present an analytic method with a general symbolic formula to compute the eccentric anomaly (E) without complex numerical iterative computation at run-time for nearly-circular motions. This non-iterative method only requires two trigonometric functions during the whole computation process. Compared with the traditional analytic methods, our analytic method is easy to understand with a higher accuracy and simpler codes; compared with the commonly used traditional iterative methods, our method has higher accuracy and stability;\nFigure\u00a01. Contours of the Kepler\u2019s equation with different eccentricities ( e = 0, 0.1, 0.5, 0.9, 1).\n3 Vol.:(0123456789) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\ncompared with modern solutions for Kepler\u2019s equation, on the basis of retaining the accuracy of the algorithm, our method takes into account the advantages of analytical methods and the simplicity of codes.\n\u00a9 Basic scheme. The SICAA method is to symbolically iterate the Kepler\u2019s equation in the form of Taylor series expansion without concrete numerical values. Due to the limitation of the computer platform precision, we could control the error \u03b5E = En+1 \u2212 En when the residual \u03b5M = Mn+1 \u2212Mn is within the accuracy. Nonetheless, the cancellation problem is hard to avoid for the Kepler\u2019s equation when the limits of platform precision are pushed. As for this problem, we use the Taylor series expansion for every symbolic operational step, as shown in Eq.\u00a0(5). The starter of E is shown in Eq.\u00a0(3). If the variable e in Eq.\u00a0(4) is regarded as an argument of the function E(e) , the variable M is regarded as the parameter. We suppose e \u226a 1 , so En+1(e) is expanded at e = 0 by Taylor Series expansion, and then Eq.\u00a0(4) can be expanded as Eq.\u00a0(5).\nwhere n = 0, 1, 2, . . . k = 0, 1, 2, . . . 18. The final analytic formula to calculate the eccentric anomaly obtained by our SICAA method is shown in Eq.\u00a0(6), where series is extended to infinitely small quantity O[e]18 . The specific coefficients of sin nM are shown in supplementary material S.4.\nIt can be found that our analytic solution is really intuitive, and the process of the SICAA method is easy to conduct and simple to understand.\nConvergence criteria and convergence domain. According to the convergence rule, we need to discuss the convergence of Eq.\u00a0(4). Thus, we rearrange Eq.\u00a0(4). The function f1(E) is defined as f1(E) = E . The function f2(E) is defined as f2(E) = M + e sin E . When e < 1 , for \u2203Ea \u2208 [0,\u03c0], \u2203Eb \u2208 [0,\u03c0] , so |cosEb| \u2264 1 and eventually we can get the Eq.\u00a0(7).\nThe above iterative equation converges at E \u2208 [0,\u03c0] and e < 1 . The convergence rate (also called error disappearance rate) is equivalent to \u03b1n . The specific formula of \u03b1 is shown in Eq.\u00a0(8).\nThe relationship between the SICAA method and the Bessel function. The traditional series expansion of the eccentric anomaly9,13 is shown as the Eqs.\u00a0(24) and (25) in \u201cMathematics essence of our method and relationship with traditional Fourier\u2013bessel series\u201d section. By comparing the coefficients of our method (SICAA) and those of Fourier\u2013Bessel series expansion of the eccentric anomaly, the relationship between SICAA and the Bessel function are shown in Eqs.\u00a0(9) and (10).\nwhere \u2308\u2217\u2309 is the Ceiling function. From the Eqs.\u00a0(9) and (10), we can see that the coefficients of the SICAA method are the truncation ( \u2308kmax \u2212 k + 1\u2309 ) of the first kind infinite Bessel function."
        },
        {
            "heading": "Variants and refinements",
            "text": "As mentioned above, the code of SICAA method is simple and easy to implement with strong expansibility. We also present some generalized types of our SICAA method.\nThe Newton-like SICAA method. The convergence of the Eq.\u00a0(4) is linear. Based on Newton numerical iterative theory, the convergence of the Eq.\u00a0(11) is quadratic. Our algorithm can serve derivatives and starters at\n(3)E0 \u2248 M (e \u226a 1)\n(4)En+1(e,M) \u2248 M + e sin En(e,M)\n(5)En+1(e,M) \u2248 En+1(0,M)+ E \u2032 n+1(0,M)e + E \u2032\u2032 n+1(0,M)\n2! e2 + . . .+\nEkn+1(0,M)\nk! ek\n(6)E = f (e,M) = M+a1 sinM+a2 sin 2M+a3 sin 3M+a4 sin 4M+a5 sin 5M+\u00b7 \u00b7 \u00b7+ai sin nM\n(7)\n\u2223\u2223\u2223f \u20322(Eb) \u2223\u2223\u2223 \u2223\u2223f \u20321(Ea) \u2223\u2223 = |e cosEb| |1| = |e cosEb| < 1\n(8)\u03b1 \u2248 E2 \u2212 E1\nE1 \u2212 E0\n(9)ESICAA \u2248 M + 2 kmax\u2211\nk=1\n1 k J \u2308kmax\u2212k+1\u2309 k (ke) sin kM\n(10)J\u2308kmax\u2212k+1\u2309k (ke) = \u2308kmax\u2212k+1\u2309\u2211\nj=0\n(\u22121)j\n( ke 2 )k+2j j! ( k + j ) !\n4 Vol:.(1234567890) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nany stage in a symbolic way. The quadratic convergence could get the accuracy from, for example, 10\u22126 down to 10\u22128, costing mainly one division. It would be preferred over the optimization mentioned in \u201cSymbolic iteration method based on computer algebra analysis (SICAA)\u201d section. The starter of E is shown in Eq.\u00a0(3). We modify Eq.\u00a0(4) into the symbolic form of the standard Newton\u2013Raphson method, as shown in Eq.\u00a0(12). The function En+1(e,M) in Eq.\u00a0 (12) is expanded at e = 0 by Taylor Series expansion in every operational step, shown in Eq.\u00a0(13). The main schemes of the Newton-like SICAA method are shown in Eqs.\u00a0(12) and (13).\nwhere n = 0, 1, 2, . . . k = 0, 1, 2, . . . , 18.\nThe Halley-like SICAA method. The Halley\u2019s numerical iterative method has a cubic convergence, as shown in Eq.\u00a0 (14), while it is more sensitive to the starters. The starter of E is shown in Eq.\u00a0 (3). We modify Eq.\u00a0(4) into the symbolic form of the Halley\u2019s method, as shown in Eq.\u00a0(15). The function En+1(e,M) in Eq.\u00a0(15) is expanded at e = 0 by Taylor Series expansion in every step, shown in Eq.\u00a0(16). The main scheme of the Halleylike SICAA method is shown in Eqs.\u00a0(15) and (16).\nwhere n = 0, 1, 2, . . . k = 0, 1, 2, . . . , 18. When the coefficients of sin iM are the same between two symbolic iterations, which means En+1 = En , then En+1 is regarded as the final analytic formula calculated by our SICAA methods. Figure\u00a02 shows the number of symbolic iterations through three SICAA methods (double precision). As we can see, the standard SICAA method needs 19 steps to get the precision of e18 series expansion, while the Newton-like SICAA method and the Halley-like SICAA method only need 5 steps and 4 steps, respectively. Although the final coefficients of sin iM calculated by any of these SICAA methods are the same, the Newton-like SICAA method has the advantages of both fewer symbolic operational steps than the standard SICAA method and simpler in symbolic form than the Halley-like one. Thus, we use the Newton-like SICAA method to get the final analytic formula.\n(11)En+1 = En \u2212 f (En)\nf \u2032(En) , n = 0, 1, 2, . . .\n(12)En+1(e,M) \u2248 En(e,M)\u2212 En(e,M)\u2212M \u2212 e sin En(e,M)\n1\u2212 e cosEn(e,M)\n(13)En+1(e,M) \u2248 En+1(0,M)+ E \u2032 n+1(0,M)e + E\u2032\u2032n+1(0,M)\n2! e2 + \u00b7 \u00b7 \u00b7 +\nEkn+1(0,M)\nk! ek\n(14)En+1 = En \u2212 f\nf \u2032\n[ 1+ ff \u2032\u2032\n2f \u20322\n] k = 1, 2, . . .\n(15)En+1(e,M) \u2248 En \u2212 En \u2212M \u2212 e sin En\n1\u2212 e cosEn\n[ 1+ (En \u2212M \u2212 e sin En)(e sin En)\n2(1\u2212 e cosEn) 2\n]\n(16)En+1(e,M) \u2248 En+1(0,M)+ E\u2032n+1(0,M)e + E \u2032\u2032 n+1(0,M)\n2! e2 + \u00b7 \u00b7 \u00b7 +\nEkn+1(0,M)\nk! ek\nFigure\u00a02. Number of iterations through standard SICAA method, Newton-like SICAA method and Halley-like SICAA method (double precision), until the ith iterative coefficients of en (n = 1, 2, . . . , 18) and the (i \u2212 1) th iterative coefficients of en (n = 1, 2, . . . , 18) are the same.\n5 Vol.:(0123456789) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5"
        },
        {
            "heading": "Analysis and comparison",
            "text": "Accuracy and performance analysis. Analytic accuracy. After symbolic operation process, we change the implicit expression f1(M,E) = 0 into the explicit expression E = f2(M) , as shown in Eq.\u00a0(6), thus obtaining the analytic solution of the Kepler\u2019s equation when e \u226a 1 to directly study the relationship between E and M , as shown in Fig.\u00a03.\nIt is convenient to study the characteristics of the solution by explicit expression Eq.\u00a0(6). To analyze the error properties, the error expression \u03b4analysis is defined, as shown in Eq.\u00a0(17). The parameter M in Eq.\u00a0(17) is calculated by the Eq.\u00a0(18). After injecting Eqs.\u00a0(6) and (18) into Eq.\u00a0(17), the specific form of error \u03b4analysis is shown in Eq.\u00a0(19), and the coefficient of si is the same with that of the Eq.\u00a0(6). Figure\u00a04 shows the error distribution lines of the Eq.\u00a0(19) over Etrue \u2208 [0,\u03c0] for the cases of eccentricity e = 0.01, 0.05, 0.1 . As we can see in Fig.\u00a04, the theoretical prediction of error \u03b4analysis for Eq.\u00a0(6) is no more than 2.5 \u00d7 10\u221217 (shown by the blue line). Obviously, owing to the computer machine precision limits and truncation errors caused in every step, the numerical errors distribution will be slightly different with what are shown in Fig.\u00a04, which will be discussed in the following part.\n(17)\u03b4analysis = \u2223\u2223Etrue \u2212 f2(e,M) \u2223\u2223\n(18)M = Etrue \u2212 e sin Etrue\nFigure\u00a03. Explicit expression E = f2(M) of the SICAA method applied to the function f1(M,E) = E \u2212M \u2212 0.1 sin E over the domain M \u2208 [0,\u03c0] (top right), matching nearly-circular orbit of eccentricity 0.1. The implicit function contour (top left) of the Kepler\u2019s equation is shown for comparison.\nFigure\u00a04. Analytic formula of the error distributions given by \u03b4analysis = \u2223\u2223Etrue \u2212 f (Etrue \u2212 e sin Etrue) \u2223\u2223 over the domain E \u2208 [0,\u03c0] , matching nearly-circular orbits of eccentricity 0.01, 0.05, 0.1.\n6 Vol:.(1234567890) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nwhere si = sin (iEtrue \u2212 ie sin Etrue).\nNumerical accuracy. To prove if the SICAA method can achieve double precision practically, we pre-calculated 1001 \u00d7 1001pairs of (E \u2212 e sin E,E) uniformly sampled over (e,E) \u2208 [0, 0.1]\u00d7[0,\u03c0] . The eccentric anomaly E is regarded as true values. Then, the M(E) = E \u2212 e sin E and e are the input of our algorithm, outputting the inverse function Esymbol(M) as the solution of the Kepler\u2019s equation. Differences between the true eccentric anomalies and the re-calculated ones \u03b4E = \u2223\u2223Esymbol(M)\u2212 E \u2223\u2223 are shown in Fig.\u00a05 for each case e = 0.01, 0.03, 0.05, 0.07, 0.09 . To better present the changing trends of the error \u03b4E with the increase of M and e, a waterfall picture of the error \u03b4E has been drawn in Fig.\u00a05. With the increase of M, the errors increase and then decrease gradually, except for two outliers. With the increase of e, the errors increase slightly. Hence, the change of e has less influences on the precision in the SICAA method, while the accuracy of the SICAA solution is more sensitive to M.\nFor M \u2208 [0,\u03c0] and e \u2208 [0, 0.1] , most of the deviations \u03b4E are no more than machine precision \u01eb = 2.220446049250313\u00d7 10\u221216 as indicated by the grey line in Fig.\u00a06. As shown in Fig.\u00a06, when e = 0.1 , there are only two points higher than the machine accuracy \u01eb ; when e = 0.01 and 0.05, all the errors are no more than the machine accuracy \u01eb ; there are many errors even close to 0.\n(19) \u03b4analysis = \u2212e sin Etrue + a1s1 + a2s2 + a3s3 + a4s4 + a5s5 + a6s6 + a7s7 + a8s8 + a9s9 + a10s10\n+ a11s11 + a12s12 + a13s13 + a14s14 + a15s15 + a16s16 + a17s17\nFigure\u00a05. Numerical result of the SICAA method over M \u2208 [0,\u03c0] , matching nearly-circular orbits of eccentricity 0.01, 0.03, 0.05, 0.07, 0.09. The SICAA method is shown for 1001 \u00d7 5 grid points within the accuracy for O(e)18 , together with the evaluation of the numerical error: \u03b4E = \u2223\u2223Esymbol(M)\u2212 E \u2223\u2223 , where the error is computed by the method mentioned above.\nFigure\u00a06. Accuracy of the SICAA method \u03b4E = \u2223\u2223Esymbol(M)\u2212 E \u2223\u2223 as mentioned before over M \u2208 [0,\u03c0] for the cases e = 0.01, 0.05, 0.1 with machine precision \u01eb = 2.220446049250313\u00d7 10\u221216 by the grey line.\n7 Vol.:(0123456789) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nAfter Esymbol(M) has been solved, we recomputed Mre by Mre = Esymbol \u2212 e sin ( Esymbol ) . Then, the con-\ntour plot of errors \u03b4M = |M \u2212Mre| = \u2223\u2223M \u2212 ( Esymbol \u2212 e sin ( Esymbol ))\u2223\u2223 (left) (are shown in Fig.\u00a0 7 over (M, e) \u2208 [0,\u03c0]\u00d7 [0, 0.1] . It can be found from Fig.\u00a07 (left) that as M becomes closer to \u03c02 , the contour lines become more and more dense, which means the error \u03b4M increases; with the increase of e , the color of contour lines changes from dark blue to light blue, which means the error \u03b4M increases slightly. That is matched perfectly with Fig.\u00a05. As can be seen from Fig.\u00a07 (right), the error value \u03b4E is symmetrically distributed with M \u2248 \u03c02 ; the more inclined it is to \u03c02 , the greater the error \u03b4E is. With the increase of e , the error also increases slightly. However, the errors are almost all under 10\u221217.\nNumerical errors (shown in Figs.\u00a0 5, 6 and 7) almost match the analytic error distribution (shown in Fig.\u00a0 4), with 99.93% of all numerical errors computed lower than machine precision \u01eb , and all \u03b4E = \u2223\u2223Esymbol(M)\u2212 E \u2223\u2223 \u2264 4.4409\u00d7 10\u221216 over the entire interval.\nDiscussion of truncation error. The deviations \u03b4E and \u03b4M become larger in the corner ( e \u2192 0.1,M \u2192 \u03c02 ) of the plane (M, e) . That is because the Eq.\u00a0(6) is expanded by Taylor series expansion at e = 0 , also called Maclaurin series expansion. The principle of Maclaurin series expansion is that the equation is only available in the neighborhood of the expansion point e = 0 , which is why when e goes far away from 0, the errors become larger.\nFigure\u00a0 8 shows the contour plot of the analytic errors \u03b4analysis = \u2223\u2223Etrue \u2212 f2(Etrue \u2212 e sin Etrue) \u2223\u2223 (as shown in Eq.\u00a0(17)) on the plane (e,E) \u2208 [0, 0.2]\u00d7 [0,\u03c0] . In Fig.\u00a08, the error \u03b4analysis increases significantly when e = 0.2 (strong elliptic), but it performs perfectly when e \u2208 [0, 0.1] , meeting most needs of geoscience applications (most Earth satellites\u2019 orbits are nearly-circular at e = 10\u22122 \u223c 10\u22123).\nTo analyze the error distribution, we rearrange Eq.\u00a0(6) as Eq.\u00a0(20). The coefficients of ei(i = 1, 2, . . . , 18) are expressed as bi(M) . Table\u00a01 represents the extremum value Max(bi) and the corresponding extremum point Max(M) of the coefficient bi(M) over the domain M \u2208 [0,\u03c0] . Apparently, the coefficients of the en are expressed in the polynomial function forms of sin iM . Consequently, the larger the bi is, the larger the coefficients of e are, and the greater the errors of e accumulate, resulting in the larger final deviations. Therefore, when M \u2192 \u03c02 and e \u2192 1 , the error accumulated. The analytic error distribution \u03b4analysis is shown in Fig.\u00a08. In spite of that, the errors shown in Fig.\u00a08 are almost under 5\u00d7 10\u221216.\nThe plot of truncation driving errors are manifested in Fig.\u00a09. The dashed-blue line pictures the errors \u03b4analysis when the series ceases at kmax = 16 , which is lower than the machine precision \u01eb . With an additional term ( kmax = 17 ), the errors \u03b4analysis are cut down to almost one order of magnitude lower than the ones at kmax = 16 , portrayed by solid line. Then setting the termination at 18 ( kmax = 18 ), represented by the dashed-green line, the errors \u03b4analysis are almost identical to the ones at kmax = 17 , much lower than the standard double float accuracy, where we can get the tolerance of 2 \u00d7 10\u221217. Therefore, we use the Eq.\u00a0(6) at kmax = 17 to run the numerical computation in the next section.\nComparisons with traditional numerical iterative methods. In this section, error comparisons are conducted between our SICAA method and two traditional Newton iterative methods to deal with the Kepler\u2019s equation. All methods were executed in the Python programming language, counting on numerical and algebraic libraries in the system. The details of the comparisons among our SICAA method, the standard Newton\u2013 Raphson method and the Halley\u2019s method are as follows.\n(20) E(e,M) = M + b1e + b2e\n2 + b3e 3 + b4e 4 + b5e 5 + b6e 6 + b7e 7 + b8e 8 + b9e 9 + b10e 10\n+ b11e 11 + b12e 12 + b13e 13 + b14e 14 + b15e 15 + b16e 16 + b17e 17 + b18e 18\nFigure\u00a07. Contour plots of the errors \u03b4M = \u2223\u2223M \u2212 ( Esymbol \u2212 e sin ( Esymbol ))\u2223\u2223 (left plot) and \u03b4E = \u2223\u2223Esymbol(M)\u2212 E \u2223\u2223 (right plot) over the domain (M, e) \u2208 [0,\u03c0]\u00d7 [0, 0.1].\n8 Vol:.(1234567890) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nHardware: Comparisons conducted on a modest laptop computer (Intel i7-8550U x64 CPU @ 1.8GHz 2GHz, RAM 8GB, and with the Windows operating system with 10.0.18362.1139 kernel). Data preparation: Forward-calculating Mi,j = Ei \u2212 ej sin Ei , using 1001 \u00d7 1001 ( Ei , ej ) pairs uniformly sampled\nby the equation Ei = i1000\u03c0 and ej = 0.1\u00d7 j 1000 , ( i, j = 0, 1, . . . , 1000 ). Then, the Mi,j and ej are the input of our algorithm, outputting the inverse function E\u0302i,j ( Mi,j , ej ) .\nPrecision: Average eccentric anomaly errors \u03b4E ( ej ) are computed by the Eq.\u00a0(21), where \u03b4Ei,j ( Mi,j , ej )\ndenotes the error obtained in one computation, as shown in Eq.\u00a0(22). The average CPU time (units: second) is computed by the Eq.\u00a0(23), where ti,j ( Mi,j , ej ) denotes the CPU time cost in one computation. Starters: E0 = Mi,j , as mentioned in \u201cSymbolic iteration method based on computer algebra analysis (SICAA)\u201d section.\nFigure\u00a08. Contour plot of the errors \u03b4analysis = \u2223\u2223Etrue \u2212 f (Etrue \u2212 e sin Etrue) \u2223\u2223 on the plane (e,E) \u2208 [0, 0.2]\u00d7 [0,\u03c0] . For visibility, the gray line shows the case e = 0.1.\nbi b1 b2 B3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 b17 Max(bi) 1 0.5 0.5 0.46 0.5 0.59 0.7 0.89 1.18 1.47 2.0 2.56 3.54 4.66 6.51 7.25 12.30\nMax(M) \u03c0 2 0.8 \u03c0 2 1.14 \u03c0 2 1.27 \u03c0 2 1.34 \u03c0 2 1.75 \u03c0 2 1.42 \u03c0 2 1.44 \u03c0 2 1.23 \u03c0 2"
        },
        {
            "heading": "Figure\u00a09. Errors \u03b4analysis =",
            "text": "\u2223\u2223Etrue \u2212 f (Etrue \u2212 e sin Etrue) \u2223\u2223 for the cases if the series is terminated at kmax = 16 (dashed-blue), kmax = 17 (solid), and kmax = 18 (dashed-green), respectively.\n9 Vol.:(0123456789) Scientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nFigure\u00a010 shows numerical comparisons among our SICAA method, the standard Newton\u2013Raphson method and the Halley\u2019s method. The SICAA method (Green line) has a higher precision than the traditional iterative methods when e \u226a 1 , with all errors under 4.5 \u00d7 10 \u2212 16, less than machine precision \u01eb . As for CPU time cost, the SICAA method\u2019 s time cost is close to the Halley\u2019s method (cubic-Newton method, the blue line) at 10\u22125order of magnitude (units: second). Therefore, compared with traditional iterative methods, the SICAA method is available to solve the Kepler\u2019 equation for nearly-circular orbits, by one order of magnitude more in precision with time cost at around 0.00005\u00a0s. The precision of our method is stable.\nCompared with our analytic solution, Fig.\u00a011 shows average numbers of iteration of two traditional Newton iterative methods. Our method only needs to solve one analytic formula to get the final results. With the increase of e , the iteration numbers of traditional methods increase rapidly, and the total computation numbers of transcendental functions will increase exponentially as iteration numbers grow. Meanwhile, iteration numbers are greatly affected by the iterative starters. When the quality of starters is poor, the performance of traditional iterative methods will be significantly degraded. Many studies18 focus on the starting algorithms of the traditional\n(21)\u03b4E ( ej ) =\n\u22111000 i=0 \u03b4Ei,j ( Mi,j , ej )\n1001\n(22)\u03b4Ei,j ( Mi,j , ej ) = \u2223\u2223\u2223f2 ( Mi,j , ej ) \u2212 E\u0302i,j \u2223\u2223\u2223\n(23)tE ( ej ) =\n\u22111000 i=0 ti,j ( Mi,j , ej )\n1001\nFigure\u00a010. Numerical comparisons among our SICAA method, the standard Newton\u2013Raphson method and the Halley\u2019s method to solve the Kepler\u2019s equation. Errors (left) and CPU times (right, units: second) are averaged with respect to M \u2208 [0,\u03c0].\nFigure\u00a011. Compared with SICAA analytic solution, average numbers of iteration of standard Newton\u2013 Raphson method and Halley\u2019s method, which are averaged with respect to M \u2208 [0,\u03c0] , respectively.\n10\nVol:.(1234567890)\nScientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\niterative methods to solve the Kepler\u2019s equation. As for nearly-circular orbits, the starter E0 = M is a simple form of starter with relatively small computational cost. However, compared with our method, there is still a certain gap in accuracy, mainly due to the limits of truncation caused by machine precision \u01eb in each iterative step.\nAs can be seen from Fig.\u00a06, 99.93% of the all errors computed by our SICAA method are lower than machine precision \u01eb = 2.220446049250313\u00d7 10\u221216 . The maximum errors are 4.4409 \u00d7 10\u221216 accounting for 0.07%, while minimum errors are 0 accounting for 96.42%, over the entire interval, showing that the accuracy is almost one order of magnitude higher than that of traditional Newton iterative methods (double precision). In this case, our method, to some extent, has a better accuracy with acceptable time consumption to solve the Kepler\u2019s equation for nearly-circular motions than the traditional Newton iterative methods.\nComparisons with traditional non-iterative methods. There are also many classic non-iterative solutions. For example, the method proposed by American scholar Nijenhuis1 in 1991 combines the Mikkola\u2019s idea and higher-order Newton\u2019s method. Besides, the method proposed by NASA researcher Markley12 in 1995 is based on higher-order processing of cubic algebraic equations. At that time, those methods could effectively solve the Kepler\u2019s equation, by reducing the calculation numbers of the transitional functions and providing non-iterative solutions, which optimizes the algorithms, compared with the Newton iterative methods. However, due to the limitations of computer science at that time, these methods could not balance the accuracy with CPU time consumption. With the rapid development of computer science, although their ideas still shine with wisdom, the algorithms themselves are difficult to meet the current requirements of accuracy."
        },
        {
            "heading": "Discussions and applications",
            "text": "Mathematics essence of our method and relationship with traditional Fourier\u2013bessel series. The traditional series expansion of the eccentric anomaly is provided by scientists Colwell13 and Battin9, as shown in Eqs.\u00a0(24) and (25).\nThe Eq.\u00a0(24) contains two infinite series, which cannot be directly solved by numerical methods. The scientists have studied the truncation methods of infinite Fourier\u2013Bessel representations, for example, the method based on the Lambert W function17 (referred to as the Lambert W method), as shown in Eqs.\u00a0(26) and (27). Moreover, the kth-order Bessel function also need to be truncated, as shown in Eq.\u00a0(28), where jmax = s is obtained by the Eqs.\u00a0(29) and (30).\nIn Eq.\u00a0(27), c1 , c2 , c3 are parameters related to the basic inequality of kth-order Bessel function24 and the Lambert W function17.\nAs our method can reach the accuracy of 10\u221217 (given in \u201cAnalysis and comparison\u201d section), we compare the truncation of infinite series expansion based on the Lambert W function (the Lambert W method) at the same accuracy of 10\u221217. For e = 0.1 and 10\u2212Ntol = 10\u221217 , the max order obtained through the Eq.\u00a0(27) 17 is kmax = 17 . To reach the accuracy of 10\u221217 for a second-order Newton\u2013Raphson solution, we use k = kmax = 17 , and e = 0.1 in the Eq.\u00a0(28) and the Eq.\u00a0(29); the order needed in J17(17e) is s = 1 . Figure\u00a012 shows numerical comparisons\n(24)E = M + 2 \u221e\u2211\nk=1\n1 k Jk(ke) sin kM\n(25)Jk(ke) = \u221e\u2211\nj=0\n(\u22121)j\n( ke 2 )k+2j j! ( k + j ) !\n(26)E \u2248 M + 2 kmax\u2211\nk=1\n1 k Jsk(ke) sin kM\n(27)kmax = k\u2217 \u2212 1 = ( c2\nc1\n) W ( exp ( c3\nc2\n) c1\nc2\n) \u2212 1\n(28)Jsk(ke) = s\u2211\nj=0\n(\u22121)j\n( ke 2 )k+2j j! ( k + j ) !\n(29)s = ( kmax\n2\n) + 2 g1\n( kmax 2 )\ng2 ( kmax 2 )\n(30)\n   g1(s \u2217) = dds\u2217 \ufffd 1 g(s\u2217) \ufffd\ng2(s \u2217) = d\n2\nds\u22172\n\ufffd 1\ng(s\u2217)\n\ufffd\n11\nVol.:(0123456789)\nScientific Reports | (2022) 12:2957 | https://doi.org/10.1038/s41598-022-07050-5\nbetween the SICAA method and the Lambert W method. The SICAA method (Green line) has a higher precision than the Lambert W method. As for CPU time cost, the SICAA method\u2019s time cost is shorter than that of the Lambert W method except for a few outliers. Therefore, compared with the traditional truncation of series expansion method, our method presents better truncation combinations of the two infinite series expansion for solving the Kepler\u2019s equation when the orbit is nearly-circular.\nIn conclusion, based on the Eq.\u00a0(9) and the Eq.\u00a0(10), the mathematics essence of our method is a new effective and accurate truncation method of Fourier\u2013Bessel representations for the Kepler\u2019s equation, which could achieve the accuracy of E at 10\u221217 , with higher accuracy than traditional truncation method of Lambert W\u2019s.\nThe performance and the application of the SICAA method. At present, most of the solutions for the Kepler\u2019s equation focus on refining the iterative methods. Relying on high-speed computer hardware, by optimizing the iterative algorithms and their starters, iterative methods25 are often more efficient to solve transcendental functions than complex analytic solutions, not to mention that there are still many transcendental functions that could not be solved analytically. For example, in 2019, the fast switch and spline scheme21 proposed by Spanish scholar Daniele Tomasini is used to solve the Kepler\u2019s equation with a faster speed than that of the standard Newton\u2013Raphson method. The CORDIC-like iterative method20 proposed by German scholar Zechmeister can be applied for both elliptic orbits and hyperbolic orbits, and consumes less CPU time than the Newton iterative methods. However, If only nearly-circle orbits are considered, our method could get accuracy at 10\u221217 , the accuracy of which is higher than CORDIC-like iterative method."
        },
        {
            "heading": "Conclusion",
            "text": "This paper presents a new efficient and accurate truncation method of the infinite Fourier\u2013Bessel representation, symbolic iteration method based on computer algebra analysis, taking Kepler\u2019s equation as an example. Based on the computer algebra system, it eventually provides an analytical formula to compute the eccentric anomaly without complex iterative computation at run-time. Compared with traditional truncation method (Lambert W), our method has higher accuracy and shorter CPU consumption; compared with commonly used iterative methods (the standard Newton\u2013Raphson method and the Halley\u2019s method), our method has higher accuracy and stronger robustness; compared with high-performance iterative algorithms proposed in the new century, on the basis of retaining the accuracy of the algorithm, our method takes into account the advantages of analytical methods and the simplicity of codes. Further, the simple codes make our method well-suited for various satellite orbit determination algorithms, semi-analytic satellite orbit propagators form low fidelity to high fidelity, and other geoscience fields."
        },
        {
            "heading": "Code availability",
            "text": "Name of code: \u201cCASI Mthod.py\u201d and \u201cnumerical CASI.py\u201d; Developer: Ruichen Zhang; Year first available: 2020.11; Hardware required: Win 10; Software required: Mathematica 11.2; Python 3.8; Program language: Mathematica, python; Program size: 4\u00a0KB, 1\u00a0KB; The source code are available for download at GitHub: https:// github. com/ chur- 614/ CSI_ chur.\nReceived: 26 August 2021; Accepted: 11 February 2022"
        },
        {
            "heading": "Author contributions",
            "text": "Author Contributions: Conceptualization, R.Z. and S.B.; methodology, R.Z.; software, R.Z.; validation, R.Z., S.B. and H.L.; formal analysis, R.Z.; investigation, R.Z.; resources, S.B.; data curation, H.L.; writing\u2014original draft preparation, R.Z.; writing\u2014review and ed-iting, R.Z.; visualization, R.Z.; supervision, S.B.; project administration, S.B.; funding acquisition, S.B. and H.L.. All authors have read and agreed to the published version of the manuscript."
        },
        {
            "heading": "Funding",
            "text": "[National Natural Science Foundation of China] Grant Number [42074010, 41971416],\u00a0[National\u00a0Science Foundation for Outstanding Young Scholars] Grant Number [42122025]\u00a0and [Natural Science Foundation for Distinguished Young Scholars of Hubei Province of China] Grant Number [2019CFA086]."
        },
        {
            "heading": "Competing interests",
            "text": "The authors declare no competing interests."
        },
        {
            "heading": "Additional information",
            "text": "Supplementary Information The online version contains supplementary material available at https:// doi. org/ 10. 1038/ s41598- 022- 07050-5.\nCorrespondence and requests for materials should be addressed to R.Z.\nReprints and permissions information is available at www.nature.com/reprints.\nPublisher\u2019s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.\nOpen Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or\nformat, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article\u2019s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article\u2019s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http:// creat iveco mmons. org/ licen ses/ by/4. 0/.\n\u00a9 The Author(s) 2022"
        }
    ],
    "title": "Symbolic iteration method based on computer algebra analysis for Kepler\u2019s equation",
    "year": 2022
}