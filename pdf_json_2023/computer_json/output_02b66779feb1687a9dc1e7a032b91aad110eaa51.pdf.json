{
    "abstractText": "We consider the two-bar charts packing problem generalizing the strongly NP-hard bin packing problem. We prove that the problem remains strongly NP-hard even if each two-bar chart has at least one bar higher than 1/2. If the first (or second) bar of each two-bar chart is higher than 1/2, we show that the O(n2)-time greedy algorithm with lexicographic ordering of two-bar charts constructs a packing of length at most OPT+1, where OPT is optimum, and present an O(n2.5)-time algorithm that constructs a packing of length at most 4/3 \u00b7OPT+2/3 in the NP-hard case where each two-bar chart has at least one bar higher than 1/2. Bibliography: 22 titles. Illustrations: 2 figures.",
    "authors": [
        {
            "affiliations": [],
            "name": "A. I. Erzin"
        },
        {
            "affiliations": [],
            "name": "A. V Kononov"
        },
        {
            "affiliations": [],
            "name": "S. A. Nazarenko"
        }
    ],
    "id": "SP:14f3cbf0a30217b14c56477e7f187c6296ee8be1",
    "references": [
        {
            "authors": [
                "A. Erzin et al.",
                "\u201cOptimal investment in the development of oil",
                "gas field",
                "\u201d In"
            ],
            "title": "Mathematical Optimization Theory and Operations Research, pp",
            "venue": "336\u2013349, Springer, Cham",
            "year": 2020
        },
        {
            "authors": [
                "A. Erzin",
                "G. Melidi",
                "S. Nazarenko",
                "R. Plotnikov"
            ],
            "title": "A posteriori analysis of the algorithms for two-bar charts packing problem,",
            "venue": "Commun. Comput. Inf. Sci",
            "year": 2021
        },
        {
            "authors": [
                "M.R. Garey",
                "R.L. Graham",
                "D.S. Johnson",
                "A.C.C. Yao"
            ],
            "title": "Resource constrained scheduling as generalized bin packing,",
            "venue": "J. Comb. Theory, Ser. A 21,",
            "year": 1976
        },
        {
            "authors": [
                "H. Kellerer",
                "V. Kotov"
            ],
            "title": "An approximation algorithm with absolute worst-case performance ratio 2 for two-dimensional vector packing,",
            "venue": "Oper. Res. Lett. 31,",
            "year": 2003
        },
        {
            "authors": [
                "V.V. Vazirani"
            ],
            "title": "Approximation Algorithms, Springer, Berlin",
            "year": 2001
        },
        {
            "authors": [
                "B.S. Baker"
            ],
            "title": "A new proof for the first-fit decreasing bin-packing algorithm,",
            "venue": "J. Algorithms",
            "year": 1985
        },
        {
            "authors": [
                "E.G. Coffman Jr. et al.",
                "\u201cBin packing approximation algorithms"
            ],
            "title": "Survey and classification,\u201d In: Handbook of Combinatorial Optimization, pp",
            "venue": "455\u2013531, Springer, New York",
            "year": 2013
        },
        {
            "authors": [
                "M. Delorme",
                "M. Iori",
                "S. Martello",
                "\u201cBin packing",
                "cutting stock problems"
            ],
            "title": "mathematical models and exact algorithms,\u201d Eur",
            "venue": "J. Oper. Res. 225, No. 1, 1\u201320",
            "year": 2016
        },
        {
            "authors": [
                "G. D\u00f3sa"
            ],
            "title": "The tight bound of first fit decreasing bin-packing algorithm is FFD(I)OPT(I) + 6/9,",
            "venue": "Lect. Notes Comput. Sci. 4614,",
            "year": 2007
        },
        {
            "authors": [
                "D.S. Johnson",
                "M.R. Garey"
            ],
            "title": "A 71/60 theorem for bin packing,",
            "venue": "J. Complexity",
            "year": 1985
        },
        {
            "authors": [
                "R. Li",
                "M. Yue"
            ],
            "title": "The proof of FFD(L) 11/9 OPT(L)+7/9,",
            "venue": "Chin. Sci. Bull. 42,",
            "year": 1997
        },
        {
            "authors": [
                "M. Yue"
            ],
            "title": "A simple proof of the inequality FFD(L) 11/9 OPT(L)+1, \u2200L, for the FFD bin-packing algorithm,",
            "venue": "Acta Math. Appl. Sin., Engl. Ser. 7,",
            "year": 1991
        },
        {
            "authors": [
                "M. Yue",
                "L. Zhang"
            ],
            "title": "A simple proof of the inequality MFFD(L) 71/60 OPT(L)+1 \u2200L, for the MFFD bin-packing algorithm,",
            "venue": "Acta Math. Appl. Sin., Engl. Ser. 11,",
            "year": 1995
        },
        {
            "authors": [
                "W.F. de la Vega",
                "G.S. Lueker"
            ],
            "title": "Bin packing can be solved within 1+epsilon in linear time,",
            "venue": "Combinatorica 1,",
            "year": 1981
        },
        {
            "authors": [
                "H.I. Christensen",
                "A. Khanb",
                "S. Pokutta",
                "P. Tetali",
                "\u201cApproximation",
                "online algorithms for multidimensional bin packing"
            ],
            "title": "A survey,\u201d Comput",
            "venue": "Sci. Rev. 24, 63\u201379",
            "year": 2017
        },
        {
            "authors": [
                "G.J. Woeginger"
            ],
            "title": "There is no asymptotic PTAS for two-dimensional vector packing,",
            "venue": "Inf. Process. Lett. 64,",
            "year": 1997
        },
        {
            "authors": [
                "M. Garey",
                "D. Johnson"
            ],
            "title": "Computers and Intractability; A Guide to the Theory of NPCompleteness",
            "year": 1979
        },
        {
            "authors": [
                "Y. Xie",
                "\u201cAn O(n2.5) algorithm"
            ],
            "title": "For maximum matchings in general graphs,\u201d J",
            "venue": "Appl. Math. Phys. 6, No. 9, 1773-1782",
            "year": 2018
        }
    ],
    "sections": [
        {
            "heading": "Journal of Mathematical Sciences, Vol. 269, No. 6, February, 2023",
            "text": "A 4/3 OPT+2/3 APPROXIMATION FOR BIG TWO-BAR"
        },
        {
            "heading": "CHARTS PACKING PROBLEM",
            "text": "A. I. Erzin\u2217 Sobolev Institute of Mathematics SB RAS 4, Akad. Koptyuga pr., Novosibirsk 630090, Russia adilerzin@math.nsc.ru\nA. V Kononov Sobolev Institute of Mathematics SB RAS 4, Akad. Koptyuga pr., Novosibirsk 630090, Russia alvenko@math.nsc.ru"
        },
        {
            "heading": "G. E. Melidi",
            "text": "Sorbonne University CNRS, Laboratoire d\u2019informatique de Paris 6, France g.melidi@yandex.ru"
        },
        {
            "heading": "S. A. Nazarenko",
            "text": "Novosibirsk State University 1, Pirogova St., Novosibirsk 630090, Russia s.nazarenko@g.nsu.ru\nWe consider the two-bar charts packing problem generalizing the strongly NP-hard bin packing problem. We prove that the problem remains strongly NP-hard even if each two-bar chart has at least one bar higher than 1/2. If the first (or second) bar of each two-bar chart is higher than 1/2, we show that the O(n2)-time greedy algorithm with lexicographic ordering of two-bar charts constructs a packing of length at most OPT+1, where OPT is optimum, and present an O(n2.5)-time algorithm that constructs a packing of length at most 4/3 \u00b7OPT+2/3 in the NP-hard case where each two-bar chart has at least one bar higher than 1/2. Bibliography: 22 titles. Illustrations: 2 figures."
        },
        {
            "heading": "1 Introduction",
            "text": "We consider the following resource-constrained scheduling problem [1]. We are given a set of jobs with two no-wait unit-execution-time operations. Both operations of the same job must be performed without delay. All jobs can run in parallel, but each operation requires for its processing certain fixed amount of a common renewable resource. This scheduling problem was recently introduced in [2]\u2013[5] and formulated as a packing problem. We are given a set of bar charts consisting of two bars (two-bar charts) and a fixed sequence of bins of unit capacity. Each bar must be packed into a bin so that the bars of each two-bar chart do not change their order\n\u2217 To whom the correspondence should be addressed.\nJMS Source Journal International Mathematical Schools. Vol. 2. Advances in Pure and Applied Mathematics\n1072-3374/23/2696-0813 c\u00a9 2023 Springer Nature Switzerland AG\nDOI 10.1007/s10958-023-06319-y\nand they occupy adjacent bins. The goal is to minimize the number of used bins. By the packing length we mean the number of used bins. The problem was called the two-bar charts packing problem for the first time in [3]. This problem is a generalization of the bin packing problem and a relaxation of the two-dimensional vector packing problem [6, 7].\nIn the bin packing problem, items with given sizes must be packed in the minimal number of unit-capacity bins. The bin packing problem is a particular case of the two-bar charts packing problem when each two-bar chart consists of equal bars. The bin packing problem is strongly NP-hard, and the existence of a (3/2 \u2212 \u03b5)-approximation algorithm for the problem implies P = NP [8]. In the 70s and 80s of the last century, greedy algorithms were proposed, such as first-fit, best-fit, first-fit decreasing [9]\u2013[15]. The main advantage of such algorithms is their low complexity. Johnson and Garey [13] proposed the modified first-fit decreasing algorithm that has the best guaranteed accuracy among the known greedy algorithms. As shown in [16], the packing length obtained by the modified first-fit decreasing algorithm is bounded by 71/60 \u00b7 OPT+1, where OPT is optimum. In their celebrated work, de la Vega and Lueker [17] gave the first APTAS for the bin packing problem. They shown that for any fixed \u03b5 > 0 there exists a polynomial-time algorithm with asymptotic worst-case ratio not exceeding 1+ \u03b5. The result was consistently improved (for a detailed survey we refer the interested reader to [10, 18]).\nThe two-dimensional vector packing problem considers two attributes for each item and bin. The problem is to pack all items into the minimal number of bins, considering both attributes of the bin capacity limits. The two-bar charts packing problem is a relaxation of the two-dimensional vector packing problem. Indeed, every feasible solution of the two-dimensional vector packing problem is a feasible solution of the two-bar charts packing problem. At the same time, the value of the objective functions differs exactly by a factor of two. In turn, any solution of the two-bar charts packing problem can be transformed into a solution of the two-dimensional vector packing problem, so that the number of occupied bins will increase at most by a factor of two. Thus, any \u03c1-approximation algorithm for the two-dimensional vector packing problem is a 2\u03c1-approximation algorithm for the two-bar charts packing problem. From approximation point of view, the two-dimensional vector packing problem is harder than the bin packing problem. Woeginger [19] proved that there is no asymptotic polynomial time approximation scheme unless P = NP. The best known algorithm yields a (3/2 + \u03b5)-approximate solution for any \u03b5 > 0 (see [18] for a detailed review of approximations algorithms for the two-dimensional vector packing problem).\nThe bar charts packing problem was first formulated in [2] to optimize investments in the development of oil and gas fields. Then the two-bar charts packing problem was considered in [3]\u2013[5], [20]. A linear time algorithm for the two-bar charts packing problem that gives a packing of length of at most 2OPT+1, where OPT is the minimal packing length, was proposed in [3].\nA bar is called big if it is higher than 1/2. A two-bar chart is called big if at least one of its bars is big. A particular case of the two-bar charts packing problem, where all two-bar charts are big was considered in [4, 20]. This problem is denoted by 2-BCPP>. An algorithm for finding a 3/2-approximation of optimal packing length was given in [4]. This result was improved in [20], where a 16/11-approximation algorithm for the 2-BCPP> was presented. In the same paper, the authors proposed a 5/4-approximation algorithm if all the first (second) bars are big.\nWe note that, despite the existence of approximation algorithms for various variants of the two-bar charts packing problem with big bars, the question of their computational complexity remains open. In the next section, we prove that the 2-BCPP> is strongly NP-hard. In Section\n3, we consider a greedy heuristic presented in [4, 5] and show that it finds a solution with the packing length at most OPT+1 in the case where all the first (second) bars are big. Using this result, we present a 2/3(2OPT+1)-approximation algorithm for the 2-BCPP> in Section 4.\nWe end this section with an exact definition of the 2-BCPP>. We are given a set S of n big two-bar charts and 2n bins numbered from 1 to 2n. For each two-bar chart i \u2208 S we denote by ai and bi the height of the first (left) and second (right) bar respectively. We assume that max{ai, bi} > 1/2 for all i \u2208 S . Denote by [k, r] the set of integers {k, k + 1, . . . , r}. Definition 1.1. A packing is a function p : S \u2192 [1, 2n \u2212 1] which associates with each two-bar chart i \u2208 S an integer p(i) corresponding to the bin number into which its first bar falls. Let Bk = {i \u2208 S |p(i) = k}. To avoid uncertainty, we set B0 = \u2205. A packing is feasible if the sum of the bar heights that fall into each bin does not exceed 1, i.e.,\n\u2211 i\u2208Bk ai + \u2211 i\u2208Bk\u22121 bi 1 \u2200 k \u2208 [1, 2n].\nAs a result of a packing p, the first bar of two-bar chart i falls into the bin p(i) and the second bar falls into the bin p(i) + 1. We consider only feasible packings, so the word \u201cfeasible\u201d will be further omitted.\nDefinition 1.2. The packing length L(p) is the number of bins in which at least one bar\nfalls.\nThe 2-BCPP> is to pack the big two-bar charts into the minimal number of bins.\n2 NP-Hardness of 2-BCPP>\nIn this section, we show that the 2-BCPP> is strongly NP-hard. Our proof is based on a\nreduction from the numerical 3-dimensional matching (SP16 in [21]).\nNumerical 3-dimensional matching\nInstance: Three disjoint sets of positive integers X = {x1, . . . , xr}, Y = {y1, . . . , yr}, Z = {z1, . . . , zr} consisting of r elements each and an integer b > 0.\nQuestion: Can X \u22c3 Y \u22c3 Z be partitioned into r disjoint sets A1, A2, . . . , Ar such that each\nAi, i = 1, . . . , r, contains one element from each of X, Y, Z, and \u2211\nej\u2208Ai ej = b?\nTheorem 2.1. The 2-BCPP> is strongly NP-hard.\nProof. Let {x1, . . . , xr}, {y1, . . . , yr}, {z1, . . . , zr} and an integer b > 0 be the instance I of the numerical 3-dimensional matching problem. Without loss of generality we assume that\nr\u2211\ni=1\n(xi + yi + zi) = rb.\nWe construct an instance I \u2032 of the 2-BCPP> with 3r two-bar charts as follows (Figure 1 (a)):\n\u2022 two-bar charts of the first type (red) i, 1 i r, ai = 1, bi = xi 2b ,\n\u2022 two-bar charts of the second type (yellow) i, r + 1 i 2r, ai = b+ y(i\u2212r)\n2b , bi =\n1\n4b ,\n\u2022 two-bar charts of the third type (green) i, 2r + 1 i 3r, ai = z(i\u22122r) 2b , bi = 1\u2212 1 4b .\nWe note that ai > 1/2 for 1 i 2r and bi > 1/2 for 2r + 1 i 3r. Thus, we definitely get the instance of the 2-BCPP>. We claim that the answer to the instance I is affirmative if and only if there is a feasible solution of instance I \u2032 which uses at most 3r bins. First, let the required partition exist, and let xi+ yj + zk = b for some i, j, k. Then the three two-bar charts i, r+ j, and 2r+k can be packed into three bins as shown in Figure 1 (a). Hence there is a feasible solution of instance I \u2032 which uses at most 3r bins. Next, let p be a packing such that L(p) 3r. Since all two-bar charts are big, each bin contains at most three bars. Indeed, let some bin contain more than three bars. No more than one big bar can be placed in each bin. Therefore, all other bars in the bin should be small. But then either the left or right bin contains two big bars. We got a contradiction with the feasibility of packing.\nSince ai = 1 for every 1 i r, r bins should be occupied by exactly one bar, namely, the left bar of the first type two-bar chart. Therefore, out of the remaining 2r bins, r bins contain exactly 3 bars in each bin and r bins contain exactly 2 bars in each bin. Since bi = 1 \u2212 1/(4b) for every 2r + 1 i 3r and mini=1,...,r{xi, yi, zi} 1, the right bar of the third type two-bar chart can be placed in the same bin only with the right bar of the second type two-bar chart. Such pairs will take up another r of bins. Hence the right bars of the first type two-bar chart, the left bars of the second type two-bar chart, and the left bars of the third type two-bar chart should be distributed in the remaining r bins of three each. We have\nr\u2211\ni=1\nbi + 2r\u2211\ni=r+1\nai + 3r\u2211\ni=2r+1\nai = r\u2211\ni=1\nb+ xi + yi + zi 2b = r.\nTherefore, the remaining 3r bars with total size r are located in r unit-capacity bins. It is possible if and only if the instance I of the numerical 3-dimensional matching has the required partition."
        },
        {
            "heading": "3 Linearly Ordered Packing",
            "text": "In this section, we consider the particular case of the two-bar charts packing problem, in which we impose an additional restriction on the set of feasible solutions. We say that a packing p is linearly ordered if for any two two-bar charts x, y \u2208 S we have p(x) = p(y). We note that with a linearly ordered packing, each bin contains no more than two bars. In this section, we present a greedy algorithm that finds an almost optimal linearly ordered packing. At the end of the section, as a consequence, we get an approximation with an absolute error bound for the 2-BCPP> when the first (second) bar of each two-bar chart is big.\nLet p : S \u2192 [1, 2n\u2212 1] be a linearly ordered packing, and let x, y \u2208 S be such that p(x) = i and p(y) = i+ 1 for some i \u2208 [1, 2n\u2212 2]. We refer to x as the left neighbor of y and to y as the right neighbor of x respectively and write r(x) = y, i.e., r(x) denotes the right neighbor of x. We call the maximal sequence of two-bar charts in which each two-bar chart except for the first one has the left neighbor, the chain. Let \u03bb(p) be a number of chains in the packing p. Then L(p) = n+ \u03bb(p).\nWe adopt the greedy algorithm GALO presented in [3, 5] to this particular case. The algorithm GALO works as follows. Sort all two-bar charts lexicographically in nonincreasing order of the bar height. Starting from the first bin, repeat the following procedure until all two-bar charts are packed. Place first two-bar chart from the list (if any) that can be packed into the current bin. Remove this two-bar chart from the list and move to the next bin.\nThe algorithm GALO performs at most 2n \u2212 1 iterations. At each iteration, the search for a suitable two-bar chart requires no more than O(n) time. Thus, the running time of the algorithm GALO is O(n2).\nThe packing constructed by the algorithm GALO will be denoted by pg. Theorem 3.1. Let p\u2217 be an optimal linearly ordered packing. Then L(pg) L(p\u2217) + 1.\nProof. After the first step of the algorithm GALO, all two-bar charts are ordered lexicographically in a nonincreasing manner. For two two-bar charts x and y we write x \u2190 y if bx + ay 1.\nLet i(x) = min{y \u2208 S | x \u2190 y}, x \u2208 S . If for some x \u2208 S there is no any two-bar chart y \u2208 S such that bx+ay 1, then set (for definiteness) i(x) = n+1. Note that for any x, y \u2208 S such that y i(x) we have x \u2190 y.\nWe call x in the packing an unfortunate two-bar chart if it does not have a right neighbor. Let us number the chains in the packing pg in the order of their appearance in pg and refer to the ith chain as Ci. It is clear that the last two-bar chart in each chain is an unfortunate two-bar chart. We will prove that all but one of the unfortunate two-bar charts in the packing pg can be put into a one-to-one correspondence with the unfortunate two-bar charts in the optimal packing p\u2217. Let x1 \u2208 C1 be the first unfortunate two-bar chart in the packing pg.\n1. If i(x1) = n+ 1, then none of two-bar charts can be the right neighbor of x1.\nTherefore, x1 does not have a right neighbor in the optimal packing p \u2217 either.\n2. Let i(x1) n. Then all two-bar charts in the packing pg from i(x1) up to n belong to C1. We denote by U1 the set of their left neighbors. Let i(U1) = min{i(y) | y \u2208 U1}. Note that i(U1) i(x1).\n2.0. If i(x1) = 1, then U1 \u2261 S and, consequently, all two-bar charts except for x1 have the right neighbors. Since there should be at least one unfortunate two-bar chart\n(one chain) in the optimal packing, the resulting solution is optimal.\nLet i(x1) > 1.\n2.1. If i(U1) = i(x1), then there is at least one two-bar chart in U1 \u222a {x1} which does not have a 1-union on the right in p\u2217. Indeed, we have |U1 \u222a {x1}| > |{i(x1), . . . , n}| and at least one two-bar chart from the set U1 \u222a {x1} will not get a right neighbor. Choose such an arbitrary unfortunate two-bar chart x\u20321 \u2208 U1 \u222a {x1} in p\u2217 and put it in accordance with x1. 2.2. Let i(U1) < i(x1). Choose z \u2208 S such that i(z) = i(U1). Since i(z) < i(x1) and r(z) i(x1), all two-bar charts from i(z) to i(x1)\u2212 1 are packed before z and belong to C1. We set U1 = U1 \u222a {u \u2208 S | u \u2190 y, i(z) y i(x1)\u2212 1}. Repeating the above reasoning for z, we again find ourselves in one of the three cases described above.\nIn case 2.0, the solution is optimal. In case 2.1, in the optimal packing p\u2217 there is an unfortunate two-bar chart in the set U1 \u222a {z} which corresponds to x1. In case 2.2, we find a new element z\u2032 such that i(z\u2032) < i(z) and r(z\u2032) i(z) and repeat our reasoning. Each time in case 2.2, the value of i(U1) decreases, and, eventually, at some iteration, we get into case 2.0 or 2.1.\nSuppose we have matched k \u2212 1 unfortunate two-bar charts in the packing pg with unfortunate two-bar charts in p\u2217. By construction, all these two-bar charts belong to the set Uk\u22121 \u222a {x1, x2, . . . , xk\u22121}.\n3. Let xk \u2208 Ck be the kth unfortunate two-bar chart (which does not have a right neighbor in the packing pg). Let rk = min{i | i /\u2208 C1 \u222a \u00b7 \u00b7 \u00b7 \u222a Ck\u22121}. The algorithm GALO starts a new chain with rk. Note that all two-bar charts with numbers greater than or equal to\ni(Uk\u22121) and less than rk have already been used in the previous chains.\n3.0. If i(xk) rk, then all two-bar charts from rk + 1 to n either belong to the first k\u2212 1 chains or have the left neighbor in the chain Ck. But, as noted above, all two-bar\ncharts with numbers less than rk are also used in the previous chains. Therefore, the chain Ck is the last one in the packing p g. Hence, in pg, for all unfortunate two-bar charts except xk, a one-to-one correspondence with unfortunate two-bar charts in the packing p\u2217 is found, so L(pg) L(p\u2217) + 1.\nLet i(xk) > rk.\nWe set Uk as follows. If i(Uk\u22121) i(xk), then Uk = Uk\u22121. Let i(Uk\u22121) > i(xk). In this case, all two-bar charts in the packing pg from i(xk) to n have the left neighbors. This set will be denoted by Uk. Let i(Uk) = min{i(y) | y \u2208 Uk}. Note that i(Uk) i(xk).\n3.1. If i(Uk) = i(xk), then there is at least one two-bar chart in Uk\u222a{xk} which in p\u2217 does not have a right neighbor, not matching the previously selected {x\u20321, . . . , x\u2032k\u22121}. As in case 2.1, we select such an arbitrary two-bar chart x\u2032k and put it in the correspondence with xk.\n3.2. Let i(Uk) < i(xk). Choose a two-bar chart z such that i(z) = i(Uk). Since i(z) <\ni(xk), all two-bar charts from i(z) to i(xk) \u2212 1 are already packed before z. We set Uk = Uk \u222a {u \u2208 S | u \u2190 y, i(z) y i(xk) \u2212 1}. Repeating the reasoning for the two-bar chart z, we again fall into one of the three cases described above. Each time when we go back to case 3.2, the value of i(Uk) decreases, and, eventually, at some iteration, we get into case either 3.0 or 3.1.\nThus, at the kth step, we either find a new correspondence between the unfortunate two-bar charts in the packings pg and p\u2217 or observe that the chain under consideration is the last one in pg and there is a one-to-one correspondence with unfortunate two-bar charts in the optimal packing p\u2217 for all unfortunate two-bar charts in pg, except for xk. Hence we finally get the statement of the theorem.\nLet S be a set of n two-bar charts such that aj > 1/2 for all j \u2208 [1, n]. Since for any two-bar charts x, y \u2208 S we have ax+ay > 1, any feasible packing of S is linearly ordered. So, Theorem 3.1 implies the following result.\nCorollary 3.1. If the first bar of each two-bar chart is big, then L(pg) OPT+1, where OPT is the length of optimal packing.\n4 A 4/3 OPT+2/3 Approximation for 2-BCPP>\nIn this section, we consider the case where all two-bar charts are big (at least one bar of each two-bar chart is big). Let p : S \u2192 [1, 2n\u2212 1], be a packing of S . We say that two two-bar charts i, j \u2208 S form a pair if p(i) = p(j). We note that there are no pairs of two-bar charts in a linearly ordered packing.\nFirst, we present an algorithm that finds a packing in which there is the maximum possible number of pairs. The algorithm Matching builds a graph G = (V,E) in which the vertices are the images of the two-bar charts. We have (i, j) \u2208 E if both two-bar charts i and j can be packed in the two consecutive bins, i.e., if ai + aj 1 and bi + bj 1. After that the algorithm finds the maximal matching M in G [22]. This matching determines the packing pm as follows. Each pair of two-bar charts i and j such that (i, j) \u2208 M is packed in the two consecutive bins. Each of the remaining two-bar charts is assigned to the bins in any way. The running time of the algorithm Matching is evidently dominated by finding the maximal matching and can be estimated by O(n2.5) time [22].\nNow we are ready to present an approximation algorithm for the 2-BCPP>."
        },
        {
            "heading": "Algorithm App",
            "text": "1. Find a linearly ordered packing pg by the algorithm GALO. 2. Find a packing pm by the algorithm Matching. 3. Take the best of two solutions, say, pa.\nTheorem 4.1. If all two-bar charts are big, then the algorithm App finds a packing of length at most 4/3 \u00b7OPT+2/3 in O(n2.5) time, where OPT is the length of the optimal packing. This performance guarantee is tight.\nProof. Let p\u2217 be an optimal packing, i.e., OPT = L(p\u2217). Since any two big bars cannot occupy the same bin, we have OPT n. Denote by k2 the number of pairs of two-bar charts in p\u2217. Each pair consists of two two-bar charts and occupies two bins. Then the number of the remaining two-bar charts is equal to n\u2212 2k2 .= k1.\nLet \u03bc be the number of pairs obtained by the algorithm Matching. Then L(pm) 2\u03bc+2k1. Since the algorithm Matching finds a packing with the maximum possible number of pairs, we have \u03bc k2. Thus, L(pm) 2n\u2212 2\u03bc = 2k1 + 4k2 \u2212 2\u03bc 2k1 + 2k2 = k1 + n OPT+k1. Let i, j \u2208 S be a pair in p\u2217. Without lost of generality we assume that ai > 1/2 and bj > 1/2. Then aj + bi 1. We push the two bins p(i) and p(i) + 1 apart and place the left bar of j and right bar of i in a new bin between them. We get a new feasible packing the length of which will increase by 1 (Figure 1 (b)). Having done this for all pairs in p\u2217, we get a linearly ordered packing with the packing length OPT+k2. Then Theorem 3.1 implies L(p\ng) OPT+k2 + 1. Finally, we get\nL(pa) OPT+min{k1, k2 + 1} OPT+k1 3 + 2(k2 + 1) 3 = OPT+ n 3 + 2 3 4 3 OPT+ 2 3 .\nFigure 2 shows that the performance guarantee obtained is tight. In this example, the\noptimal packing length is 4, while the length of packings pg and pm is 6. Then\nL(pa) = 4\n3 OPT+\n2 3 = 6.\nThe time complexity of the algorithm GALO is O(n2). The maximal matching can be found with O(n2.5) time complexity [22]."
        },
        {
            "heading": "5 Conclusion",
            "text": "For the problem 2-BCPP> of packing big two-bar charts (the height of at least one bar is\nmore than 1/2) in the minimal number of unit-capacity bins\n\u2022 we prove that the 2-BCPP> is strongly NP-hard, \u2022 in the case where the first (second) bar of each two-bar chart is big, we prove that the\nalgorithm GALO yields a packing of length at most OPT+1 in O(n2) time,\n\u2022 we propose an algorithm which finds a packing for 2-BCPP> of length no more than 4/3 \u00b7OPT+2/3 in O(n2.5) time."
        },
        {
            "heading": "Acknowledgments",
            "text": "The study was carried out within the framework of the state contract of Sobolev Institute\nof Mathematics (project FWNF-2022-0019)."
        }
    ],
    "title": "A 4/3 OPT+2/3 APPROXIMATION FOR BIG TWO-BAR CHARTS PACKING PROBLEM",
    "year": 2023
}