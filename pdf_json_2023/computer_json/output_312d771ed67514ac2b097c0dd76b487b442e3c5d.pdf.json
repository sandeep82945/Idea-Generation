{
    "abstractText": "Forecasting of renewable energy generation provides key insights which may help with decisionmaking towards global decarbonisation. Renewable energy generation can often be represented through cross-sectional hierarchies, whereby a single farm may have multiple individual generators. Hierarchical forecasting through reconciliation has demonstrated a significant increase in the quality of forecasts both theoretically and empirically. However, it is not evident whether forecasts generated by individual temporal and cross-sectional aggregation can be superior to integrated cross-temporal forecasts and to individual forecasts on more granular data. In this study, we investigate the accuracies of different cross-sectional and cross-temporal reconciliation methods using both linear regression and gradient boosting machine learning for forecasting wind farm power generation. We found that crosstemporal reconciliation is superior to individual cross-sectional reconciliation at multiple temporal aggregations. Cross-temporally reconciled machine learning base forecasts also demonstrated a high accuracy at coarser temporal granularities, which may encourage adoption for short-term wind forecasts. We also show that linear regression can outperform machine learning models across most levels in cross-sectional wind time series.",
    "authors": [],
    "id": "SP:8370a8bebec0fa368bc668c3e6fa1543988893d4",
    "references": [
        {
            "authors": [
                "Fotios Petropoulos",
                "Daniele Apiletti",
                "Vassilios Assimakopoulos",
                "Mohamed Zied Babai",
                "Devon K. Barrow",
                "Souhaib Ben Taieb",
                "Christoph Bergmeir",
                "Ricardo J. Bessa",
                "Jakub Bijak",
                "John E. Boylan",
                "Jethro Browell",
                "Claudio Carnevale",
                "Jennifer L. Castle",
                "Pasquale Cirillo",
                "Michael P. Clements",
                "Clara Cordeiro",
                "Fernando Luiz Cyrino Oliveira",
                "Shari De Baets",
                "Alexander Dokumentov",
                "Joanne Ellison",
                "Piotr Fiszeder",
                "Philip Hans Franses",
                "David T. Frazier",
                "Michael Gilliland",
                "M. Sinan G\u00f6n\u00fcl",
                "Paul Goodwin",
                "Luigi Grossi",
                "Yael Grushka-Cockayne",
                "Mariangela Guidolin",
                "Massimo Guidolin",
                "Ulrich Gunter",
                "Xiaojia Guo",
                "Renato Guseo",
                "Nigel Harvey",
                "David F. Hendry",
                "Ross Hollyman",
                "Tim Januschowski",
                "Jooyoung Jeon",
                "Victor Richmond R. Jose",
                "Yanfei Kang",
                "Anne B. Koehler",
                "Stephan Kolassa",
                "Nikolaos Kourentzes",
                "Sonia Leva",
                "Feng Li",
                "Konstantia Litsiou",
                "Spyros Makridakis",
                "Gael M. Martin",
                "Andrew B. Martinez",
                "Sheik Meeran",
                "Theodore Modis",
                "Konstantinos Nikolopoulos",
                "Dilek \u00d6nkal",
                "Alessia Paccagnini",
                "Anastasios Panagiotelis",
                "Ioannis Panapakidis",
                "Jose M. Pav\u00eda",
                "Manuela Pedio",
                "Diego J. Pedregal",
                "Pierre Pinson",
                "Patr\u00edcia Ramos",
                "David E. Rapach",
                "J. James Reade",
                "Bahman Rostami-Tabar",
                "Micha\u0142 Rubaszek",
                "Georgios Sermpinis",
                "Han Lin Shang",
                "Evangelos Spiliotis",
                "Aris A. Syntetos",
                "Priyanga Dilini Talagala",
                "Thiyanga S. Talagala",
                "Len Tashman",
                "Dimitrios Thomakos",
                "Thordis Thorarinsdottir",
                "Ezio Todini",
                "Juan Ram\u00f3n Trapero Arenas",
                "Xiaoqian Wang",
                "Robert L. Winkler",
                "Alisa Yusupova",
                "Florian Ziel"
            ],
            "title": "Forecasting: theory and practice",
            "venue": "International Journal of Forecasting,",
            "year": 2022
        },
        {
            "authors": [
                "George Athanasopoulos",
                "Puwasala Gamakumara",
                "Anastasios Panagiotelis",
                "Rob J. Hyndman",
                "Mohamed Affan"
            ],
            "title": "Hierarchical Forecasting, chapter 21, pages 689\u2013719",
            "year": 2020
        },
        {
            "authors": [
                "Gokhan Mert Yagli",
                "Dazhi Yang",
                "Dipti Srinivasan"
            ],
            "title": "Automatic hourly solar forecasting using machine learning models",
            "venue": "Renewable & Sustainable Energy Reviews,",
            "year": 2019
        },
        {
            "authors": [
                "Yao Zhang",
                "Jiaojiao Dong"
            ],
            "title": "Least squares-based optimal reconciliation method for hierarchical forecasts of wind power generation",
            "venue": "IEEE Transactions on Power Systems,",
            "year": 2018
        },
        {
            "authors": [
                "Ciaran Gilbert",
                "Jethro Browell",
                "David McMillan"
            ],
            "title": "Leveraging turbine-level data for improved probabilistic wind power forecasting",
            "venue": "IEEE Transactions on Sustainable Energy,",
            "year": 2020
        },
        {
            "authors": [
                "Sonam Norbu",
                "Benoit Couraud",
                "Valentin Robu",
                "Merlinda Andoni",
                "David Flynn"
            ],
            "title": "Modelling the redistribution of benefits from joint investments in community energy projects",
            "venue": "Applied Energy,",
            "year": 2021
        },
        {
            "authors": [
                "Ruddy Blonbou"
            ],
            "title": "Very short-term wind power forecasting with neural networks and adaptive bayesian learning",
            "venue": "Renewable Energy,",
            "year": 2011
        },
        {
            "authors": [
                "Cesar Azorin-Molina",
                "Tim R. McVicar",
                "Jose A. Guijarro",
                "Blair Trewin",
                "Andrew J. Frost",
                "Gangfeng Zhang",
                "Lorenzo Minola",
                "Seok-Woo Son",
                "Kaiqiang Deng",
                "Deliang Chen"
            ],
            "title": "A decline of observed daily peak wind gusts with distinct seasonality in australia, 1941-2016",
            "venue": "Journal of Climate,",
            "year": 2021
        },
        {
            "authors": [
                "Mahdi Abolghasemi",
                "Rob J. Hyndman",
                "Evangelos Spiliotis",
                "Christoph Bergmeir"
            ],
            "title": "Model selection in reconciling hierarchical time series",
            "venue": "Machine Learning,",
            "year": 2022
        },
        {
            "authors": [
                "Byron J. Dangerfield",
                "John S. Morris"
            ],
            "title": "Top-down or bottom-up: Aggregate versus disaggregate extrapolations",
            "venue": "International Journal of Forecasting,",
            "year": 1992
        },
        {
            "authors": [
                "Charles W. Gross",
                "Jeffrey E. Sohl"
            ],
            "title": "Disaggregation methods to expedite product line forecasting",
            "venue": "Journal of Forecasting,",
            "year": 1990
        },
        {
            "authors": [
                "Rob J. Hyndman",
                "Roman A. Ahmed",
                "George Athanasopoulos",
                "Han Lin Shang"
            ],
            "title": "Optimal combination forecasts for hierarchical time series",
            "venue": "Computational Statistics & Data Analysis,",
            "year": 2011
        },
        {
            "authors": [
                "Shanika L. Wickramasuriya",
                "George Athanasopoulos",
                "Rob J. Hyndman"
            ],
            "title": "Optimal forecast reconciliation for hierarchical and grouped time series through trace minimization",
            "venue": "Journal of the American Statistical Association,",
            "year": 2019
        },
        {
            "authors": [
                "Jooyoung Jeon",
                "Anastasios Panagiotelis",
                "Fotios Petropoulos"
            ],
            "title": "Probabilistic forecast reconciliation with applications to wind power and electric load",
            "venue": "European Journal of Operational Research,",
            "year": 2019
        },
        {
            "authors": [
                "Mahdi Abolghasemi",
                "Garth Tarr",
                "Christoph Bergmeir"
            ],
            "title": "Machine learning applications in hierarchical time series forecasting: Investigating the impact of promotions",
            "venue": "International Journal of Forecasting,",
            "year": 2022
        },
        {
            "authors": [
                "Evangelos Spiliotis",
                "Mahdi Abolghasemi",
                "Rob J. Hyndman",
                "Fotios Petropoulos",
                "Vassilios Assimakopoulos"
            ],
            "title": "Hierarchical forecast reconciliation with machine learning",
            "venue": "Applied Soft Computing,",
            "year": 2021
        },
        {
            "authors": [
                "Nikolaos Kourentzes",
                "Fotios Petropoulos",
                "Juan R. Trapero"
            ],
            "title": "Improving forecasting by estimating time series structural components across multiple frequencies",
            "venue": "International Journal of Forecasting,",
            "year": 2014
        },
        {
            "authors": [
                "Nikolaos Kourentzes",
                "Bahman Rostami-Tabar",
                "Devon K. Barrow"
            ],
            "title": "Demand forecasting by temporal aggregation: Using optimal or multiple aggregation levels",
            "venue": "Journal of Business Research,",
            "year": 2017
        },
        {
            "authors": [
                "Nikolaos Kourentzes",
                "George Athanasopoulos"
            ],
            "title": "Cross-temporal coherent forecasts for australian tourism",
            "venue": "Annals of Tourism Research,",
            "year": 2019
        },
        {
            "authors": [
                "Tommaso Di Fonzo",
                "Daniele"
            ],
            "title": "Girolimetto. Cross-temporal forecast reconciliation: Optimal combination method and heuristic alternatives",
            "venue": "International Journal of Forecasting,",
            "year": 2021
        },
        {
            "authors": [
                "Rob J. Hyndman",
                "George Athanasopoulos"
            ],
            "title": "Forecasting: principles and practice. OTexts, Melbourne, third print edition",
            "year": 2021
        },
        {
            "authors": [
                "Juliane Sch\u00e4fer",
                "Korbinian Strimmer"
            ],
            "title": "A shrinkage approach to large-scale covariance matrix estimation and implications for functional genomics",
            "venue": "Statistical Applications in Genetics and Molecular Biology,",
            "year": 2005
        },
        {
            "authors": [
                "Charlie Plumley"
            ],
            "title": "Kelmarsh wind farm data",
            "year": 2022
        },
        {
            "authors": [
                "Charlie Plumley"
            ],
            "title": "Penmanshiel wind farm data",
            "year": 2022
        },
        {
            "authors": [
                "Yu Shi",
                "Jian Li",
                "Zhize Li"
            ],
            "title": "Gradient boosting with piece-wise linear regression trees",
            "year": 2019
        },
        {
            "authors": [
                "Peter Nystrup",
                "Erik Lindstr\u00f6m",
                "Pierre Pinson",
                "Henrik Madsen"
            ],
            "title": "Temporal hierarchies with autocorrelation for load forecasting",
            "venue": "European Journal of Operational Research,",
            "year": 2020
        },
        {
            "authors": [
                "Rob J. Hyndman",
                "Anne B. Koehler"
            ],
            "title": "Another look at measures of forecast accuracy",
            "venue": "International Journal of Forecasting,",
            "year": 2006
        },
        {
            "authors": [
                "Andrey Davydenko",
                "Robert Fildes"
            ],
            "title": "Measuring forecasting accuracy: The case of judgmental adjustments to sku-level demand forecasts",
            "venue": "International Journal of Forecasting,",
            "year": 2013
        }
    ],
    "sections": [
        {
            "text": "Keywords Hierarchical forecasting reconciliation \u00b7 Renewable energy \u00b7 Machine learning \u00b7 Cross-sectional forecasts \u00b7 Cross-temporal forecasts"
        },
        {
            "heading": "1 Introduction and background",
            "text": "Modern forecasting relies on the axiom that not only the history of one series can be utilized in predicting future events but the histories of other series can be useful also. For time series forecasting, patterns in historical measurements are used to extrapolate future values of the series [1]. In many circumstances, time series can be aggregated to form hierarchical frameworks [1]. Aggregation may be performed logically, geographically, temporally, etc. For example, in forecasting wind power, we can either forecast at the total aggregated level which may miss information from turbine locations and their individual performance, or we can forecast each turbine individually considering all of their unique information. While there are advantages and disadvantages associated with each of these approaches, it has been shown that building time series hierarchies can improve forecast accuracies across locations and various forecasting horizons in different problems [2], including renewable energies sectors [3, 4]. Ensuring the coherency of forecasts of the hierarchy can be achieved through different reconciliation algorithms, however, there is not enough empirical evidence to depict how reconciliation methods can help to improve the forecasting performance across different levels and horizons, and whether hierarchical forecasting can be useful in a wind-farm setting for very short-term forecasting.\nRenewable energy technologies are considered to be a key challenge for facing climate change and energy security problems [1]. Forecasting renewable energies is of utmost importance for the security of the systems and ensuring consistent supply for demand. One leading source of renewable energy is wind energy, which contributed 6.7% of the global electricity demand in 2021 [5]. Accurate forecasting of wind power generation is critical for planning suitable energy schedules and setting achievable renewable energy targets, on the scale of minutes to days-ahead [1]. Coherent forecasts for wind power generation are desired, as decision-making often draws on forecasts from multiple levels of\nar X\niv :2\n30 8.\n03 47\n2v 1\n[ cs\n.L G\n] 7\nA ug\nthe hierarchy [6]. Hierarchical forecasting ensures coherency of forecasts, and has been empirically shown to improve wind power forecasts [4]. However, difficulties involved in forecasting wind power includes the limited predictability of the weather, failure of turbines due to technical or physical issues such as high wind speed, and the nonlinearity of the power curve of wind turbines [7].\nVery short-term forecasts, including minutes to a few hours ahead, are important for decision-making of wind power generation and for such forecasts, recent observations are more relevant to forecasting than numerical weather predictions (NWP) [1]. The volatility of wind power generation necessitates such short-term forecasts to allow for wind farm operators to enable backup power supplies in case of shortages [8]. Common forecast horizons in literature include 10-minutely, 20-minutely, 30-minutely, and 1-hourly [1, 8] and accurate forecasts at each horizon can be important for power distribution planning. Strong complex seasonality in the form of multiple seasonality has been observed in instantaneous wind speeds [9], and thus must be considered with extra care in forecasting. This is, in particular, challenging in the context of hierarchical forecasting because temporal aggregation may change the dynamic of multiple seasonality in data and introduce a new one. The optimal hierarchical forecasting method is closely related to the characteristics of the individual series involved, forecasting horizon, the level at which forecasts are needed, among other factors [10]. It is not evident whether one should rely on cross-temporal hierarchies or use sequential methods for reconciliation (temporal and cross-sectional) to obtain a more accurate forecast that accounts for high-frequency data, like wind data in our experiment.\nReconciliation towards coherent forecasts of hierarchical time series can be largely broken down into four categories: bottom-up (BU), top-down (TD), middle-out (MO) and combination (COM). In the BU paradigm, base forecasts are produced at the bottom level of the hierarchy, and are summed to give forecasts for higher level nodes in the hierarchy [11]. In the TD paradigm, base forecasts are performed on the root node, and the historical proportionality of the lower-level nodes are used to disaggregate the forecast [12]. The MO method performs base forecasts at an intermediate level - at neither the root node, nor leaf nodes [13]. The forecasts are summed upwards on the hierarchy, and historical proportions are used to disaggregate to lower-level nodes. Forecasts of the BU, TD and MO paradigms are inherently coherent, that is, forecasts at every level sum to give values which are consistent with the aggregation structure.\nThe COM method produces forecasts at multiple levels of the hierarchy and performs reconciliation to produce more accurate forecasts [14, 15]. One distinguished method within the COM paradigm is the trace minimization (MinT) algorithm. MinT has a strong theoretical foundation [14], and has empirically shown to improve forecast accuracies in some circumstances [16, 17]. However, it has been suggested that MinT may provide inadequate forecasts when in-sample errors do not represent post-sample accuracy of the baseline forecast models, or when the hierarchy of interest places more emphasis on some levels than others [10]. These reconciliation methods can be applied not only to cross-sectional hierarchies, but temporal hierarchies also.\nTemporal aggregation transforms a time series of a given frequency to a series of a lower frequency. For example, a time series of length n with hourly measurements may be temporally aggregated into a new series of length n/2 with 2-hourly measurements, or length n/24 with daily measurements, among other possibilities. For fast-moving series, higher level aggregations capture the trend patterns better since the higher frequency components of the underlying series are averaged out [18]. However, lower aggregation levels are better for investigating seasonal patterns [18].\nTo investigate seasonal and trend components of the underlying series, multiple temporal aggregation (MTA) can be performed, in which aggregations at multiple frequencies are computed [18]. Disaggregated temporal time series must sum up to the higher levels, similar to cross-sectional hierarchies, to ensure coherency. MTA has been shown empirically to produce more accurate forecasts even if they are theoretically suboptimal [19]. Similar to logical and geographic aggregation, temporal aggregation can be considered under the hierarchical time series framework.\nAn emerging method in hierarchical forecasting is cross-temporal forecasting. In cross-temporal hierarchies, aggregation is performed on a logical or geographic scale (i.e., cross-sectional), and aggregation is also performed temporally. Simultaneous reconciliation across the cross-sectional and temporal hierarchies is a non-trivial problem, and it remains an open problem in literature as to a systematic method to construct cross-temporal forecasts [1]. One reason for this difficulty is that the cross-temporal hierarchy is represented by the tensor product across the temporal and cross-sectional dimensions. Therefore, the number of nodes of the cross-temporal hierarchy is equal to the product of the number of nodes in the cross-sectional hierarchy, and the temporal hierarchy. As a result, the hierarchy can become prohibitively large [20]. Nonetheless, cross-temporal reconciliation has empirically shown to significantly improve forecasting accuracy in a variety of forecasting scenarios [20, 21].\nIn this work, we sought to identify the best strategy for base forecasting, as well as reconciling the hierarchical time series in the cross-sectional and cross-temporal paradigms for wind energy forecasting. We aim to determine the best reconciling technique for hierarchical wind series in the very short-term horizon, i.e., up to one hour. We also investigate whether it is advantageous to first aggregate historical data and fit a model to the aggregated data, or to\nforecast at the finest temporal granularity and aggregate the forecasts. To do so, we use two models for generating base forecasts, including a simple linear regression and LightGBM as a common powerful machine learning (ML) model. We compare accuracies through one-hour-ahead forecasts to mimic practical forecasting concerns. We compare a variety of cross-sectional and cross-temporal forecasting reconciliation techniques to identify the optimal setting using Friedman and post-hoc Nemenyi tests.\nThe rest of this report is organised as follows. Section 2 outlines the most common hierarchical forecasting methods found in literature. Section 3 presents the primary data sets used in this work, describes the preprocessing method, and explains the experimental setup. Section 4 presents the empirical results of the experiment and discusses our findings. Finally, Section 5 concludes the paper."
        },
        {
            "heading": "2 Hierarchical forecasting methods",
            "text": "In this section, we describe the TD, BU, MO and MinT methods for time series hierarchical forecasting. These methods are widely used in literature, and a detailed discussion of their advantages and drawbacks can be found in [1]. We provide herein a basic overview of the methods, and the notations and parameters used in this study. For a thorough pedagogical introduction to the methods, please see [22]. An example time series hierarchy is given in Figure 1. To such a hierarchy, we define the following parameters, in which bold variables signify vectors:\nm : Total number of nodes (i.e., series) in the hierarchy\nmi : Total number of nodes at level i, e.g., m0 = 1\nk : Total number of levels in the hierarchy, i.e., 0 \u2264 i \u2264 k n : Length of each series (in observations)\nYx,t : The tth observation of node Yx\nY\u0302x,n(h) : The h step-ahead forecast of node Yx from n historical values\nYi,t : A vector holding the series for all nodes at level i\nY\u0302i,t(h) : The h step-ahead forecast of all nodes at level i\nY\u0302t : A vector holding all observations\nY\u0302n(h) : The h step-ahead base forecasts for all nodes from n historical values\nY\u0303n(h) : The reconciled forecasts of all nodes\nFor a hierarchical time series, all observations can be expressed through the matrix equation Yt = SYk,t, where S is a matrix of dimension m\u00d7mk that expresses the hierarchical structure. For example, the hierarchical time series in Figure 1 can be expressed as:\n\nYt YA,t YB,t YA1,t YA2,t YB1,t YB2,t\n = \n1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1\n YA1,tYA2,tYB1,t YB2,t  = 1 1 1 11 1 0 00 0 1 1 I4  YA1,tYA2,tYB1,t YB2,t \nWith the knowledge of the hierarchical structure, we can determine S, and various reconciliation methods can be expressed through Y\u0303n(h) = SGY\u0302n(h). The matrix G is of dimension mk \u00d7m and is determined by the reconciliation method used. For example, with the hierarchy in Figure 1, BU reconciliation is expressed by:\nG = 0 0 0 1 0 0 00 0 0 0 1 0 00 0 0 0 0 1 0 0 0 0 0 0 0 1  = [0mk\u00d7(m\u2212mk)|Imk ] TD reconciliation is expressed by:\nG = p1 0 0 0 0 0 0p2 0 0 0 0 0 0p3 0 0 0 0 0 0 p4 0 0 0 0 0 0  = [g|0mk\u00d7(m\u22121)] In this expression, g = [p1, p2, \u00b7 \u00b7 \u00b7 pk]. The values p1, p2, p3 and p4 represent proportions which distribute the base forecast of the root node down to the bottom level. The values can be computed through Equation 1.\npj = \u03a3nt=1Yj,t \u03a3nt=1Yt , j = 1, 2, \u00b7 \u00b7 \u00b7 ,mk (1)\nMO methods will have G matrices which are a mix between the forms for BU and TD reconciliation.\nThe COM method produces forecasts across all nodes of the hierarchy and combines them linearly to reconcile the forecasts to ensure coherency. The covariance matrix of the errors of forecasts is given by1:\nVh = Var[Yn+h \u2212 Y\u0303n(h)] = SGWhG\u2032S\u2032 (2)\nThe matrix Wh is the variance-covariance matrix of the h-step-ahead base forecast errors from the forecasts at every node. The diagonal elements of Vh represent the autocovariance of the errors. Therefore, to produce unbiased reconciled forecasts, it is desireable to minimize the trace of Vh. The matrix G which minimizes the trace of Vh is given by:\nG = (S\u2032W\u2020hS) \u22121S\u2032W\u2020h (3)\nW\u2020h is the generalized inverse of Wh. Evaluating Wh can be computationally expensive, but there are several simplifying approximations, including the methods of ordinary least squares (OLS), variance scaling, structural scaling and the shrinkage estimator [22]. In this work, OLS and the shrinkage estimator will be considered for their low time-complexity and high forecast accuracy [17].\nFor the OLS method, Wh is set to the identity matrix, Wh = I. One disadvantage is that this specification does not distinguish between differences in scale of the hierarchy. For the shrinkage estimator, Wh is estimated by:\nWh = \u03bbDW\u03021,D + (1\u2212 \u03bbD)W\u03021 (4)\n1A proof for this equality can be found in [14].\nIn this formula, W\u03021,D is a diagonal matrix with diagonal entries of W\u03021, and \u03bbD is the shrinkage parameter [23]. Off-diagonal elements of W\u03021 are shrunk towards zero (hence shrinkage), while diagonal elements, i.e., variances, are unchanged. The shrinkage parameter is given by:\n\u03bbD = \u03a3i \u0338=jVar(r\u0302ij)\n\u03a3i\u0338=j r\u03022ij (5)\nwhere r\u0302ij is the (i, j)th element of the 1-step-ahead in-sample correlation matrix."
        },
        {
            "heading": "3 Data and experimental setup",
            "text": ""
        },
        {
            "heading": "3.1 Data",
            "text": "This work was aimed at investigating the reconciliation of hierarchical time series data relating measured wind speed and power generated from wind farms. The objective was to increase the forecasting accuracy across all levels, through comparing different reconciliation approaches. In addition, forecasts were desired at 10-minutely, 20-minutely, 30-minutely, and 1-hourly periods. Two data sets were used, denoted Data Set A and Data Set B. Data Set A comprised 25 wind farm sensors located across a single wind farm in the UK. The farm included four different models of wind turbine which were denoted by A, B, C and D. Data Set B comprised 20 wind farm sensors located across 2 wind farms in Kelmarsh and Penmanshiel in the UK [24, 25]. Each farm used a different model of wind turbine, which were denoted A and B. The cross-sectional hierarchies of Data Set A and B are shown in Figure 2.\nFor both data sets, each turbine was equipped with a sensor that measured in 10-minute intervals the average wind speed in m/s, and the average power generated in kW within each interval. Some data were incorrect, typically having a 0 or negative wind speed or power, which was attributed to faults in the turbine, excessively high wind speed, or other issues. Data Set A spanned 1/07/2020 at 00:00 to 30/06/2021 at 23:50, for approximately 1 year of data. Data Set B spanned 01/01/2020 at 00:00:00 to 31-12-2020 at 19:50:00 for approximately 1 year of data. Both data sets had 3 levels in the hierarchy, with the bottom level representing the individual turbines. The next level up represented each turbine model\u2019s aggregated power generation. Finally, the root node represented the total power generated across all turbines, i.e., the power delivered to the electricity grid.\nMultiple temporal aggregation (MTA) was performed on the data, using aggregations of 10-minutely (bottom level), 20-minutely, 30-minutely and 1-hourly data (top level). Each temporal aggregation level was treated as an individual time series. Figures 3 and 4 present the power generated over 1-hourly increments for the bottom level of the hierarchy (Level 2), that is, the individual wind turbines, as well as the total power generated for each turbine model (Level 1), and the total power delivered to the grid (Level 0) for Data Set A. In these examples, the overall trend as shown in the time series of Level 0 is reflected in the bottom level nodes. Because the power generated is approximately linearly proportional to the wind speed, the proximity of the wind turbines from one another leads to similar instantaneous power generation, due to similar wind speeds across their locations. In Figure 3, several horizontal lines in time series data can be observed across all wind turbines. These lines correspond to periods in which the power generated for the specific wind turbine was recorded as negative or NA, and was naive-interpolated from the last non-zero value forwards, until the measurements began again.\nA boxplot for the wind turbines in the hierarchy for both data sets is given in Figure 5. From Figure 5, it can be seen that for Data Set A, turbines of models A-C generated power approximately equally, however turbines of model D generated greater power than the others on average. Moreover, we observe that the maximum value of the third and first quartiles for turbines of model D was also higher than those of models A-C, indicating different power generation capabilities. It can also be seen that for Data Set B, turbine model A contained more turbines than model B. However, all turbines across both models had equal minimum and maximum powers, and roughly equal power generated. This implies that a single model may work well for all turbines, given that they all have similar distributions."
        },
        {
            "heading": "3.2 Preprocessing",
            "text": "Data was preprocessed by using naive interpolation for incorrect values with 0 or negative wind speed or power. After, features were extracted to allow for linear and machine learning regression. These features are listed in Table 1. Prior values of wind speed and power generation were used as predictors for forecasts, with up to 6 observations prior. A moving average and moving standard deviation of both wind speed and power were included to capture the multiple seasonality of the data. The box width for these predictors included {2, 3, \u00b7 \u00b7 \u00b7 , 6} observations, with equal weights. As described above, there is a strong linear relationship between wind speed and power generation. Consequently, the predictors of lagged wind speed and power are not linearly independent. However, there is a non-linear relationship for power generated by wind-speeds below 2 m/s and above 15 m/s, with the power curve resembling a sigmoid function. Therefore, the variables are not collinear, and hence both wind speed and power are included as predictors.\nTo capture the complex seasonality of the wind speeds, temporal dummy variables were used in the regressions. Seasonal dummy variables included the quarter (i.e., summer, winter, etc.) and the hour of day (in 24-hour time). The month was not included as a seasonal dummy variable due to limitations of the data set. That is, only one year of data was available, so month could not be regressed over if, for example, the training set comprised 11 months, and the testing set comprised 1 month.\nThe formulas for the weighted moving average and standard deviation of wind speed and power with box width b, at time k are given in Equations 6-9.\nWMA,b(k) = 1\nb \u03a3k\u22121n=k\u22121\u2212bW (n) (6)\nWMSD,b(k) =\n\u221a \u03a3k\u22121n=k\u22121\u2212b(W (n)\u2212 1 b\u03a3 k\u22121 p=k\u22121\u2212bW (p)) 2\nb (7)\nPMA,b(k) = 1\nb \u03a3k\u22121n=k\u22121\u2212bP (n) (8)\nPMSD,b(k) =\n\u221a \u03a3k\u22121n=k\u22121\u2212b(P (n)\u2212 1 b\u03a3 k\u22121 p=k\u22121\u2212bP (p)) 2\nb (9)"
        },
        {
            "heading": "3.3 Base forecasts",
            "text": "The 58 features as shown in Table 1 were used in producing base forecasts. Base forecasts were performed using naive forecasting using the Fable package. Linear regression was also performed using the Fable package. Gradient boosting was performed using the LightGBM package. A custom wrapper was written for LightGBM to act as a model to allow hierarchical reconciliation through the fabletools package in the R programming language [26], with code available upon request. The three base forecasting methods were then classified as naive, linear regression and gradient boosting. Base forecasts used linear regression (LR) and light gradient boosting machine learning (GB), with features given in Table 1. One hour ahead was forecast at each step, with the 10-minutely data having 6-steps-ahead, the 20-minutely data having 3-steps-ahead, the 30-minutely data having 2-steps-ahead and the 1-hourly data having 1-step-ahead. These one-hour-ahead forecasts were then cross-temporally reconciled using the algorithms described above, to compare the accuracy of the different cross-temporal reconciliation algorithms.\nThe hyperparameters of the GB model were first optimized using a grid search algorithm. To mitigate overfitting of the hyperparameters, forecasts on a rolling origin basis were performed, starting with (percentages quoted as the proportion of the total 1-year of data used) 80% training data, 10% test data and 2% validation data. The validation and test proportions were kept constant, and the training data was swept across {80%, 81%, \u00b7 \u00b7 \u00b7 , 88%}, whereby the data used in the validation and test sets were shifted further ahead in time. Hyperparameters optimized included max number of leaves in one tree (num_leaves), the max depth for a tree model (max_depth), the learning rate (learning_rate), the minimal number of data in one leaf (min_data_in_leaf ), and the linear tree regularization parameter (linear_lambda) [27]. The optimal hyperparameters for each temporal aggregation is given in Table 2."
        },
        {
            "heading": "3.4 Forecast reconciliation",
            "text": "After generating base forecasts with LR and GB, we use several methods for reconciling time series. These include TD, BU, MO, and COM methods with OLS and MinT estimators. We use hts package in R for this purpose. Six cross-temporal aggregation algorithms were used, including (1) cross-temporal bottom-up reconciliation (BU-CT), (2) forecast reconciliation through temporal hierarchies for all time series using series autocovariance (THF) [28], (3) heuristic first-temporal-then-cross-sectional cross-temporal reconciliation using temporal weighted least squares and cross-sectional shrinkage (TCS) [20], (4) heuristic first-cross-sectional-then-temporal cross-temporal reconciliation using temporal autocovariance and cross-sectional shrinkage (CST) [21], (5) iterative cross-temporal reconciliation (ITE) [21] and (6) optimal cross-temporal reconciliation using block-diagonal shrunk cross-covariance scaling (OCT) [21]. Cross-temporal reconciliation was performed using the FoReco package."
        },
        {
            "heading": "3.5 Forecast evaluation",
            "text": "Accuracy was evaluated on a rolling origin basis, whereby the origin was rolled one hour forwards each step, and an hour of forecasts were produced at each temporal granularity. As the time-series data had an additive hierarchical\nstructure, the magnitude of forecasts at each level differed. To account for these differing magnitudes, average relative accuracy indices were used in evaluating forecast accuracies [21]. Average relative accuracy indices were used in favour of scaled errors, such as MASE or RMSSE [29], to minimize the bias towards overrating the performance of a benchmark forecast as a result of arithmetic averaging, and to ensure accuracy indices were robust to outliers, in the case of dividing by small benchmark error measures [30]. The average relative root mean squared error (AvgRelRMSE) was used for comparison, in which high weight is given to larger errors due to squaring.\nWe first represent the forecast error through:\ne\u0302j = yj \u2212 y\u0302j (10)\nThen, for a base time series, the RMSE is computed through:\nRMSE = \u221a\u221a\u221a\u221a\u221a 1 n n\u2211 j=1 (e\u0302j)2 (11)\nFor each base time series, we can then scale it by a benchmark forecast error, for example, an h-steps-ahead naive forecast. With a benchmark error of \u02c6eb,j , we can compute the relative RMSE through:\nRelRMSE =\n\u221a\u221a\u221a\u221a 1 n\nn\u2211 j=1\n(e\u0302j)2\u221a\u221a\u221a\u221a 1 n\nn\u2211 j=1 ( \u02c6eb,j)2\n(12)\nFinally, to compute the average RelRMSE of a set of forecasts in a hierarchy, either cross-sectional, temporal, or cross-temporal, we simply take the geometric mean of the set of relative errors. That is, for a set of base time series indexed by ts = {1, 2, \u00b7 \u00b7 \u00b7 , q}, the average RelRMSE is computed through:\nAvgRelRMSE = ( q\u220f ts=1\n\u221a\u221a\u221a\u221a 1 n\nn\u2211 j=1 (e\u0302tsj ) 2\n\u221a\u221a\u221a\u221a 1 n\nn\u2211 j=1 ( \u02c6etsb,j) 2 ) 1 q (13)\nFor further details on the experiments, please see the R code publicly available at https://github.com/englishlu keh/WindPowerForecasting."
        },
        {
            "heading": "4 Empirical results and discussion",
            "text": "Using a training set of 90%, and a testing set of 10% of the total 1-year data set, time series cross-validation (TSCV) was used to evaluate the effectiveness of the forecasting. We present the results for cross-sectional and cross-temporal in sections 4.1 and 4.2, respectively."
        },
        {
            "heading": "4.1 Cross-sectional reconciliation",
            "text": "The results of the AvgRelRMSE, after cross-sectional reconciliation, are given in Tables 3 and 4. The AvgRelRMSE at levels 2 (L2), 1 (L1), 0 (L0), and across all levels of the hierarchy, that is, the total geometric mean (GM), are provided. Values greater than one indicate poorer performance measured through the average relative error index than the naive h-steps-ahead benchmark. Values less than one indicate greater performance. In these tables, LR denotes base forecasts produced through linear regression, and GB denotes base forecasts produced through LightGBM. The cross-sectional reconciliation method used is denoted through BU (bottom-up), TD (top-down), MO (middle-out) OLS (ordinary least squares) and MinT (minimum trace with shrinkage estimator).\nAt the 10-minutely temporally-disaggregated level, for Data Set A, LR-MinT performed optimally for wind turbine forecasting (i.e., Level 2), aggregated turbine model forecasting (i.e., Level 1) and across all levels of the hierarchy. GB-OLS performed optimally for forecasting power delivered to the grid (Level 0). For Data Set B, LR-TD performed optimally across all levels. LR base forecasts were approximately 1.8% less accurate for Data Set B compared to Data Set A, and GB base forecasts were approximately 7.6% less accurate. The optimal reconciliation method was 2% more accurate for Data Set A than Data Set B. This suggests greater forecastability for Data Set A. We also observe that the GB model was significantly less accurate for Data Set B, indicating that simple methods like LR can be more accurate than more complex methods such as GB when data are more forecastable.\nAt the 20-minutely level, for Data Set A, LR-MinT performed optimally for wind turbine forecasting, aggregated turbine model forecasting and across all levels of the hierarchy. GB-MO performed optimally for forecasting power delivered to the grid. For Data Set B, LR-TD performed optimally across all levels. The 20-minutely base forecasts were mostly less accurate than the 10-minutely, suggesting this level of temporal aggregation reduced the forecastability, likely due to seasonalities being unsuccessfully captured at the new frequency.\nAt the 30-minutely level, for Data Set A, LR-MinT performed optimally for wind turbine forecasting, aggregated turbine model forecasting and across all levels of the hierarchy. The base forecast without reconciliation (i.e., LR) at the root node, that is, power delivered to the grid, performed optimally. The same optimal reconciliation methods were found for Data Set B, which suggests that the optimal reconciliation methods may hold for other wind farm time series also.\nAt the 1-hourly level, for Data Set A, LR-MinT performed optimally for wind turbine forecasting, aggregated turbine model forecasting and across all levels of the hierarchy. The base forecast without reconciliation (i.e., LR) at the root node performed optimally. For Data Set B, LR-MinT performed optimally across all levels. As the temporal granularity decreases, the MinT algorithm becomes increasingly optimal across both data sets."
        },
        {
            "heading": "A LR 0.957 0.962 0.964 0.958 0.972 0.975 0.977 0.973",
            "text": "For the geometric means across all temporal aggregations, for Data Set A, LR-MinT performed optimally for forecasts of wind turbines, aggregated turbine models and across all levels of the hierarchy. Base forecasts at the root node without reconciliation performed optimally. The same optimal reconciliation methods were found for Data Set B, which further suggests that this may hold for other wind farm time series. Optimal reconciliation increased the accuracy over base forecasts by 1.4% for Data Set A, and 0.8% for Data Set B.\nWe observe by aggregating data, the performance of TD models is increasing at the top level. However, the improvement is not equal across different levels and data. The accuracy achievement at Level 0 is relatively equal for 10-minutely, 20-minutely, 30-minutely, and hourly data. However, at Level 2 we observe a higher gain for 10-minutely data. This shows that the frequency of data may impact the performance of reconciliation methods. While MinT remains a top-performing model across all data and levels, other methods behave differently with TD being better than others. The choice of the forecasting method is also important. We see a different performance for LR and GB models, with LR consistently doing better than GB. This may be different in other data, but in our experiment a simple LR model with a sufficient number of features is able to forecast more accurately than a GB model.\nOne dominant trend across all cross-sectional and temporal aggregation levels is the optimality of the MinT reconciliation algorithm. Additionally, unreconciled base forecasts proved optimal for the cross-sectional root node, that is, power delivered to the grid. Across most levels, LR outperformed GB, which may suggest a local minimum was found during hyperparameter optimization, instead of the global minimum. Nonetheless, GB performed optimally at the 10- and 20-minutely temporal aggregation levels for power delivered to the grid. A comparison of the forecasting performance across all cross-sectional and temporal aggregations is shown in Figure 6. For both data sets, TD and MinT exhibited the greatest accuracy with LR base forecasts. However, TD performed poorly with GB forecasts for Data Set A, but optimally for Data Set B. This may suggest greater variability in the reconciliation of GB base forecasts when compared with LR base forecasts. However, MinT also performed well with GB for both data sets.\nThe non-parametric Friedman and post-hoc Nemenyi tests were performed using the nemenyi() function from the tsutils package in R. These tests establish if the differences in forecasts produced by the different reconciliation methods are significant [20]. The Friedman test establishes whether at least one forecast is significantly different from the rest, and the Nemenyi test identifies groups of forecasts with no evidence of statistically significant differences. The results are shown in Figure 7. The Friedman test revealed that there were statistically significant differences in the reconciliation methods for the AvgRelRMSE for LR and GB base forecasts. LR-MinT and LR-TD was optimal for reconciliation, with no statistical significant difference between them for both data sets. However, for Data Set B, the difference between these methods and LR-OLS was also not statistically significant. This suggests that for cross-sectional reconciliation, linear regression was optimal over GB base forecasts, with TD and MinT being the optimal reconciliation methods.\nThis implies that a simple statistical model such as LR can be used along with appropriate reconciliation techniques for reconciling hierarchical series. Moreover, this can outperform more complicated methods such as GB.\nA Nemenyi test was then performed on only the LR base forecasts, and is shown in Figure 8. The tests revealed that the AvgRelRMSE for LR-MinT was among the optimal methods for both data sets. However, for Data Set A, all other methods were less accurate and the difference was statistically significant. For Data Set B, LR-TD was the optimal, and the difference in accuracy with LR-MinT and LR-OLS was not statistically significant. The common optimal method among both data sets was LR-MinT, so this was determined to be the optimal base forecast and cross-sectional reconciliation method."
        },
        {
            "heading": "4.2 Cross-temporal reconciliation",
            "text": "The results of the AvgRelRMSE, after cross-temporal reconciliation, are given in Tables 5-6. Values greater than one indicate poorer performance measured through the average relative error index than the naive h-steps-ahead benchmarks. Values less than one indicate greater performance. In these tables, LR denotes base forecasts produced through linear regression, and GB denotes base forecasts produced through gradient boosting. The cross-temporal reconciliation method used is denoted through BU-CT (cross-temporal bottom-up), THF (temporal hierarchies using autocovariance),\nTCS (heuristic first-temporal-then-cross-sectional), CST (heuristic first-cross-sectional-then-temporal), ITE (iterative) and OCT (optimal cross-temporal using block-diagonal shrunk cross-covariance scaling).\nAt the 10-minutely temporally disaggregated level, for Data Set A, the LR base forecasts were optimal for wind turbine forecasts and across all levels, GB-BU-CT was optimal for aggregated turbine model forecasts and GB base forecasts were optimal for forecasts of power delivered to the grid. For Data Set B, LR base forecasts were optimal considering all cross-sectional levels. At the temporally disaggregated level, base forecasts were optimal for both data sets.\nAt the 20-minutely level, for Data Set A, LR-OCT was optimal for wind turbine forecasts. GB-BU-CT was optimal for for aggregated turbine model forecasts and power delivered to the grid. LR-BU-CT was optimal considering all cross-sectional levels. For Data Set B, LR-BU-CT was optimal for all levels. At the 20-minutely level, the forecasting accuracy increases between 1-2% compared to the 10-minutely forecasts. We observe THF has the lowest performance on average, meaning that temporal aggregation for highly seasonal data such as wind data may not be useful to improve the forecast accuracy.\nAt the 30-minutely level, for Data Set A, LR-OCT was optimal for wind turbine forecasts, GB-BU-CT was optimal for aggregated turbine model forecasts and power delivered to the grid, and LR-BU-CT was optimal considering all cross-sectional levels. For Data Set B, LR-BU-CT was optimal across all levels. Similarly, the optimal forecast accuracy at the 30-minutely level is roughly 3% improved compared to the 20-minutely forecasts. We observe the BU-CT reconciliation method exhibiting optimality, and improving the forecast accuracy compared with the 30-minutely cross-sectionally reconciled forecasts. This suggests than aggregating forecasts may be more accurate than aggregating data prior to forecasts for wind farm time series.\nAt the 1-hourly level, for Data Set A, LR-OCT was optimal for wind turbine forecasts and GB-BU-CT was optimal aggregated turbine models, power delivered to the grid and across all cross-sectional levels. For Data Set B, LR-BU-CT was optimal across all levels. At this highest temporally aggregated level, despite GB base forecasts being less accurate than LR forecasts, for Data Set A, the GB-BU-CT exhibited significantly increased accuracy, which suggests that GB may have filtered more of the high-frequency noise which did not improve the aggregated forecasts. In addition, the optimal reconciliation improved forecast accuracy by roughly 9-10% over 30-minutely forecasts, which is a much larger increase in accuracy compared to the other temporal aggregations. This suggests that aggregating forecasts improves the accuracy more effectively at higher temporal aggregations. This may be due to complex seasonalities being adversely affected at higher temporal aggregations for the wind farm time series."
        },
        {
            "heading": "A LR 0.972 0.973 0.962 0.972 0.963 0.960 0.941 0.962",
            "text": ""
        },
        {
            "heading": "B LR 0.980 0.980 0.979 0.980 0.984 0.983 0.981 0.984",
            "text": "Finally, considering all temporal aggregations, for Data Set A, LR-BU-CT was optimal for wind turbines and considering all cross-sectional levels, and GB-BU-CT was optimal for aggregated turbine model forecasts and power delivered to the grid. For Data Set B, LR-BU-CT was optimal across all levels. One dominant trend was the optimality of LR-BU-CT. For Data Set A, optimally cross-temporally reconciled forecasts considering all cross-sectional and temporal levels was 4.3% more accurate than the optimally cross-sectionally reconciled forecasts. For Data Set B, the optimal cross-temporally reconciled forecasts were 4.8% more accurate than the optimal cross-sectionally reconciled forecasts. This suggests that cross-temporal reconciliation exhibits significant advantages over cross-sectional reconciliation, and that for wind farm time series, aggregating forecasts leads to better accuracies than forecasts of aggregated data.\nFor both data sets, across all cross-sectional and temporal levels, LR-BU-CT was the optimal cross-temporal reconciliation method. However, for Data Set A, GB-BU-CT was optimal across all temporal aggregations at the aggregated turbine model level and for power delivered to the grid. GB produced suboptimal base forecasts compared to LR at the 10-minutely level, as shown in Table 5. However, when these base forecasts were aggregated in a bottom-up cross-temporal method, it became optimal at forecasting power generated by aggregated turbine models and power delivered to the grid. For Data Set B, LR-BU-CT was optimal for all levels. A comparison of the forecasting performance across all cross-sectional and temporal aggregations is shown in Figure 9. As seen, the performance of LR and GB models are much closer and aligned with each other in comparison to cross-section reconciliation results for Data Set A. However, for Data Set B, GB performed significantly worse than LR base forecasts, suggesting greater variability in the applicability of the model to wind farm time series forecasts. For Data Set B, LR-OCT performed much worse than Data Set A, however, the relative accuracies of the other reconciliation methods were very similar.\nThe non-parametric Friedman and post-hoc Nemenyi tests were performed on the cross-temporally reconciled forecasts. The results are shown in Figure 10 for the AvgRelRMSE. The Friedman test revealed that there were statistically significant differences in the reconciliation methods for AvgRelRMSE with LR and GB base forecasts. For the AvgRelRMSE, LR-OCT, LR-BU-CT and LR-TCS were optimal for reconciliation, with no statistical significant difference between them for Data Set A. For Data Set B, LR-BU-CT and LR-TCS were optimal. Across both data sets, LR was optimal over GB base forecasts, and LR-BU-CT performed optimally.\nA Nemenyi test was then performed on only the LR base forecasts, which revealed that there was no statistically significant difference between the AvgRelRMSE for the OCT and BU-CT reconciliation methods for Data Set A. Similarly, for Data Set B, there was no statistically significant difference between the AvgRelRMSE for the BU-CT and TCS reconciliation methods.\nAcross all cross-sectional and temporal aggregations, cross-temporal reconciliation significantly improved the forecasting accuracy over cross-sectional reconciliation. The best cross-sectional reconciliation was LR-MinT which had an AvgRelRMSE of 0.952 for Data Set A and 0.971 for Data Set B, whereas the best cross-temporal reconciliation was LR-BU-CT which had an AvgRelRMSE of 0.909 for Data Set A and 0.923 for Data Set B. This corresponds to a 4.3% (Data Set A) and 4.8% (Data Set B) increase to forecasting accuracy across all aggregations. However, the optimal methods at each cross-sectional aggregation differed.\nIn the cross-temporally reconciled paradigm, forecasting of wind turbine power is optimal using LR-BU-CT for Data Set A. However, forecasting of aggregated turbine models and power delivered to the grid is optimal using GB-BU-CT. The base forecasts produced by LR were more accurate than GB, however, bottom-up cross-temporal reconciliation of the GB base forecasts was optimal at higher levels in the cross-sectional hierarchy. This may suggest that GB filtered more of the high-frequency noise which did not improve the aggregated forecasts. For Data Set B, we found that LR-BU-CT was optimal across all levels in the cross-temporal paradigm. These results indicate that for wind farm\ntime series, simple base forecasting methods such as LR, combined with aggregating forecasts can outperform more complicated base forecasting and reconciliation methods. Nonetheless, GB shows potential for base forecasts, however the optimality at certain cross-sectional levels could not be replicated for both data sets in this work. Hence, one needs to consider the characteristics of the data and the level of forecasts needed, in selecting the best forecasting and reconciliation method."
        },
        {
            "heading": "5 Conclusions",
            "text": "This study sought to determine the optimal forecast setting, i.e., base forecasting, the level of aggregation including choice of cross-sectional and cross-temporal reconciliation methods, for wind farm power generation time series. We introduced the common methods of hierarchical forecasting used in literature, for which empirical studies have shown various advantages and disadvantages in different scenarios. We analysed and compared the forecast accuracies for up to one-hour-ahead forecasts at different cross-sectional and temporal aggregations using two datasets from wind farms in the UK. The data used showed complex seasonalities and the power was approximately linearly proportional to the wind speed measured at the turbines.\nThe cross-sectional reconciliation algorithms we investigated included those in the bottom-up, top-down, middle-out and combination paradigms. The cross-temporal reconciliation algorithms in this study included bottom-up cross-temporal, temporal hierarchies with autocovariance, heuristic first-temporal-then-cross-sectional, heuristic first-cross-sectionalthen-temporal, iterative cross-temporal and optimal cross-temporal reconciliation.\nWe found linear regression using the minimum trace with shrinkage estimator to be optimal for the cross-sectionally reconciled forecasts across all cross-sectional and temporal aggregations. Unreconciled linear regression forecasts at the root node, that is, power delivered to the grid performed optimally at the root cross-sectional level. We also found linear regression with the bottom-up cross-temporal reconciliation method to be optimal for cross-temporally reconciled forecasts across all cross-sectional and temporal aggregations. Friedman tests indicated that the improvements to forecast accuracies were statistically significant, and post-hoc Nemenyi tests confirmed the optimal hierarchical forecasting methods.\nThe cross-temporally reconciled forecasts offer an approximate 4-5% increase to accuracy across all cross-sectional and temporal aggregations compared to the cross-sectional reconciliation algorithms. For forecasts which require multiple temporal aggregations for decision-making, cross-temporal reconciliation greatly improves the accuracy compared with simple cross-sectional reconciliation performed on multiple temporal aggregations independently. In addition, this work showed that machine learning base forecasts may provide improvements to cross-temporal reconciliation algorithms despite base forecast accuracy being lower than other potential time series models.\nFuture research should investigate optimizing hyperparameters for each h-steps-ahead machine learning model. In this work, hyperparameters were optimized only for a 1-step-ahead model at each cross-sectional and temporal aggregation, which may have limited the accuracy of gradient boosting base forecasts. In addition, more base forecasting methods should be compared against machine learning techniques. Also, generalized logit transformations of the wind power time series could be applied to better model the sigmoid-resembling power curves, especially for probabilistic very short-term wind power forecasts. Whether the results found in this work are reproducible for other wind farms with different turbines and structures, should also be investigated."
        },
        {
            "heading": "A Descriptive statistics",
            "text": "We conducted an exploratory data analysis for each temporally disaggregated time series (i.e., 10-minutely) in the cross-sectional hierarchy for both data sets. The minimum value, first quartile, median, mean, third quartile and maximum values are tabulated in Tables 7 and 8.\nFrom Table 7, for Data Set A, turbine model B delivered the greatest power to the grid, followed by model D, model C and lastly model A. Observe that model D has fewer turbines than model A, but each turbine generates more power on average than those of model A. All turbines had a minimum value of 0.1 kW average, which represented a 10-minutely period during which the turbine did not generate any power. Models A-C also shared (approximately) a greatest maximum value of 2761 kW average, which was the upper limit for the turbines. For turbines of model D, this average was instead around 3037 kW.\nFrom Table 8, for Data Set B, model A delivered greater power to the grid than model B since it included more turbines. However, the turbines of both models generated approximately the same average power, and had equal maximum power limits. The average power generated was smaller than the turbines of Data Set A, due to differences in turbine models. In addition, the cross-sectional hierarchy structures were different, with Data Set A having a balanced structure, while Data Set B only included two models with most turbines being of a single model. However, the inter-turbine variance is similar, which allows for a reasonable comparison between the two sets of data."
        }
    ],
    "title": "HOW TO FORECAST POWER GENERATION IN WIND FARMS? INSIGHTS FROM LEVERAGING HIERARCHICAL STRUCTURE",
    "year": 2023
}