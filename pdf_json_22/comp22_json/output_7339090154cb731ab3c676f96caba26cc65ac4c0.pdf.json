{
    "abstractText": "We present two attacks targeting the Proof-of-Stake (PoS) Ethereum consensus protocol. The first attack suggests a fundamental conceptual incompatibility between PoS and the Greedy Heaviest-Observed Sub-Tree (GHOST) fork choice paradigm employed by PoS Ethereum. In a nutshell, PoS allows an adversary with a vanishing amount of stake to produce an unlimited number of equivocating blocks. While most equivocating blocks will be orphaned, such orphaned \u2018uncle blocks\u2019 still influence fork choice under the GHOST paradigm, bestowing upon the adversary devastating control over the canonical chain. While the Latest Message Driven (LMD) aspect of current PoS Ethereum prevents a straightforward application of this attack, our second attack shows how LMD specifically can be exploited to obtain a new variant of the balancing attack that overcomes a recent protocol addition that was intended to mitigate balancing-type attacks. Thus, in its current form, PoS Ethereum without and with LMD is vulnerable to our first and second attack, respectively.",
    "authors": [
        {
            "affiliations": [],
            "name": "Joachim Neu"
        },
        {
            "affiliations": [],
            "name": "Ertem Nusret Tas"
        },
        {
            "affiliations": [],
            "name": "David Tse"
        }
    ],
    "id": "SP:35bdbefc308c1d7a49fac307e544e95c782a066c",
    "references": [
        {
            "authors": [
                "Vitalik Buterin"
            ],
            "title": "Proposal for mitigation against balancing attacks to LMD GHOST",
            "venue": "url: https://notes.ethereum.org/@vbuterin/lmd_ghost_mitigation (visited on 04/20/2021)",
            "year": 2020
        },
        {
            "authors": [
                "Vitalik Buterin",
                "Virgil Griffith"
            ],
            "title": "Casper the Friendly Finality Gadget",
            "venue": "[cs.CR]",
            "year": 2019
        },
        {
            "authors": [
                "Vitalik Buterin",
                "Diego Hernandez",
                "Thor Kamphefner",
                "Khiem Pham",
                "Zhi Qiao",
                "Danny Ryan",
                "Juhyeok Sin",
                "Ying Wang",
                "Yan X Zhang"
            ],
            "title": "Combining GHOST and Casper",
            "year": 2003
        },
        {
            "authors": [
                "Vitalik Buterin",
                "Alistair Stewart"
            ],
            "title": "Beacon chain Casper mini-spec (comments",
            "venue": "Ethereum Research. Sept",
            "year": 2018
        },
        {
            "authors": [
                "Ittay Eyal",
                "Emin G\u00fcn Sirer"
            ],
            "title": "Majority is not enough: Bitcoin mining is vulnerable",
            "venue": "Communications of the ACM",
            "year": 2018
        },
        {
            "authors": [
                "Aggelos Kiayias",
                "Giorgos Panagiotakos"
            ],
            "title": "On Trees, Chains and Fast Transactions in the Blockchain",
            "venue": "In: LATINCRYPT",
            "year": 2017
        },
        {
            "authors": [
                "Ryuya Nakamura"
            ],
            "title": "Analysis of bouncing attack on FFG",
            "venue": "Ethereum Research",
            "year": 2020
        },
        {
            "authors": [
                "Ryuya Nakamura"
            ],
            "title": "Prevention of bouncing attack on FFG",
            "venue": "Ethereum Research. Sept",
            "year": 2019
        },
        {
            "authors": [
                "Joachim Neu",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "A balancing attack on Gasper, the current candidate for Eth2\u2019s beacon chain",
            "venue": "Ethereum Research. Oct",
            "year": 2020
        },
        {
            "authors": [
                "Joachim Neu",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "Attacking Gasper without adversarial network delay",
            "venue": "Ethereum Research. July",
            "year": 2021
        },
        {
            "authors": [
                "Joachim Neu",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "Avalanche Attack on Proof-of-Stake GHOST",
            "venue": "Ethereum Research. Jan",
            "year": 2022
        },
        {
            "authors": [
                "Joachim Neu",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "Balancing Attack: LMD Edition",
            "venue": "Ethereum Research. Jan",
            "year": 2022
        },
        {
            "authors": [
                "Joachim Neu",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "Ebb-and-Flow Protocols: A Resolution of the Availability-Finality Dilemma",
            "venue": "IEEE Symposium on Security and Privacy. IEEE,",
            "year": 2021
        },
        {
            "authors": [
                "Joachim Neu",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "The Availability-Accountability Dilemma and its Resolution via Accountability Gadgets",
            "venue": "In: International Conference on Financial Cryptography and Data Security. FC \u201922. Forthcoming",
            "year": 2022
        },
        {
            "authors": [
                "Michael Neuder",
                "Daniel J. Moroz",
                "Rithvik Rao",
                "David C. Parkes"
            ],
            "title": "Low-cost attacks on Ethereum 2.0 by sub-1/3 stakeholders",
            "venue": "url: https://arxiv.org/abs/2102.02247",
            "year": 2021
        },
        {
            "authors": [
                "Caspar Schwarz-Schilling",
                "Joachim Neu",
                "Barnab\u00e9 Monnot",
                "Aditya Asgaonkar",
                "Ertem Nusret Tas",
                "David Tse"
            ],
            "title": "Three Attacks on Proof-of-Stake Ethereum",
            "venue": "In: International Conference on Financial Cryptography and Data Security",
            "year": 2022
        },
        {
            "authors": [
                "Yonatan Sompolinsky",
                "Aviv Zohar"
            ],
            "title": "Secure High-Rate Transaction Processing in Bitcoin",
            "venue": "Financial Cryptography",
            "year": 2015
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "The currently proposed Proof-of-Stake (PoS) Ethereum consensus protocol [7, 5, 6] is constructed from an application of the finality gadget Casper FFG [2] on top of the fork choice rule LMD GHOST, a variant of the Greedy Heaviest-Observed Sub-Tree (GHOST) [20] rule which considers only each participant\u2019s most recent vote (Latest Message Driven, LMD). Subsequently, we refer as validators to participants with stake that allows them to vote as part of the protocol. A slightly simplified and analytically more tractable variant of the proposed PoS Ethereum protocol is given by the Gasper protocol [3]. The protocol is recapitulated on a high level in Section 2.\nThis report continues a sequence of earlier works [16, 12, 13, 19, 18, 4, 10, 11, 17] that highlighted security vulnerabilities in PoS Ethereum and the constituent protocols Casper FFG and LMD GHOST. More specifically, we report two new attacks.\nThe first attack, called avalanche attack and described in Section 3 (cf. [14]), suggests a fundamental conceptual incompatibility between PoS on the one hand and the GHOST fork\nJN and ENT contributed equally and are listed alphabetically.\nar X\niv :2\n20 3.\n01 31\n5v 1\n[ cs\n.C R\n] 2\nM ar\nchoice paradigm on the other hand. In a nutshell, \u2018orphaned\u2018 so called \u2018uncle blocks\u2019 off the canonical chain still influence the fork choice in GHOST. In Proof-of-Work (PoW), for which GHOST is secure [9], this does not create a problem because the number of uncle blocks which the adversary controls and by which it can influence the fork choice is bounded by the PoW mechanism. PoS, on the other hand, allows the adversary to equivocate, i.e., for each block production opportunity the adversary can produce an unlimited amount of equivocating blocks extending different parent blocks of the block tree. As a result, GHOST\u2019s way of accounting for uncle blocks in fork choice gives the adversary much more influence over fork choice in PoS than in PoW, casting doubt over whether GHOST should be used with PoS at all.\nThe LMD aspect of current PoS Ethereum interferes with a naive application of the avalanche attack to PoS Ethereum. However, our second attack, described in Section 4 (cf. [15]), shows how the LMD feature specifically can be exploited to obtain a new variant of the balancing attack [12, 13]. This new attack also overcomes \u2018proposer boosting\u2019 [1], a recent protocol addition that was intended to mitigate balancing-type attacks.\nThus, in its current form, PoS Ethereum without LMD is vulnerable to our first attack (avalanche attack), and PoS Ethereum with LMD is vulnerable to our second attack (new LMDspecific variant of earlier balancing attack)."
        },
        {
            "heading": "2 Proof-of-Stake Ethereum Consensus Protocol",
            "text": "Let Ledgerti denote the transaction ledger output by honest validator i at time t. Security of a consensus protocol such as PoS Ethereum is comprised of safety and liveness:\n\u2022 Safety: For any given times t, t\u2032 and honest validators i, j, either Ledgerti is a prefix of Ledgert \u2032 j , or vice versa. Less formally, the ledgers output by two honest validators at two\npoints in time are consistent with each other.\n\u2022 Liveness: If a transaction tx is received by all honest validators by some time t, then tx appears in Ledgert \u2032 i for any time t\n\u2032 \u2265 t + Tconf and for any honest validator i, where Tconf is the protocol\u2019s confirmation time. Less formally, transactions get confirmed in honest validators\u2019 ledgers with at most Tconf time delay.\nWe first describe a simplified version of PoS Ethereum without the LMD rule, reduced to the relevant fork choice mechanics. Although we present a self-contained description, familiarity with the protocols GHOST [20] and Gasper [3], as well as with the beacon chain\u2019s fork choice specification [7] and proposal weights2 [1] are useful for a deeper understanding of this section.\nIn the consensus protocol (also called Committee-GHOST), time proceeds in synchronized slots of duration 2\u2206, since it is assumed that message delay between honest validators is bounded by \u2206. For each slot, one proposer and a committee of W validators are drawn independently and uniformly at random (without replacement for the committee members) from the N validators. We say a slot is honest or adversarial if the corresponding block proposer is honest or adversarial, respectively. The following fork-choice rule is used in the view of validator i at slot t to determine a canonical block and its prefix of blocks as the canonical chain:\n2https://github.com/ethereum/consensus-specs/pull/2730\n\u2022 Starting at the genesis block b0, sum for each child block b the number of unique valid votes for that block and its descendents. Here, unique means counting only one vote per committee member in each slot s < t. Valid means that the vote from a committee member of slot s < t was cast for a block produced in a slot s\u2032 \u2264 s. Ties are broken by the adversary. Add a proposal boost of Wp to the score of b if b or one of its descendants is a valid proposal from the current slot t. Here, valid means that the block is not from a future slot, was produced by the proposer of slot t, and that proposal time slots along block chains are strictly increasing.\n\u2022 Pick the child block b\u2217 with highest score (cf. GHOST rule [20]), breaking ties adversarially.\n\u2022 Recurse (b0 \u2190 b\u2217) until reaching a leaf block. Output that block.\nAt the beginning of each slot, the slot\u2019s proposer determines a block using the fork-choice rule and extends it with a new proposal. Half way into each slot (i.e., \u2206 time after the proposal and after the beginning of the slot), the slot\u2019s committee members determine a block using the fork-choice rule in their local view and vote for it. The unit of time is a time slot. A block from slot t and its prefix are confirmed and output as the ledger if and only if at time t+Tconf + 1 2 (i.e., at the time of voting in slot t + Tconf), the block is in the chain determined by the fork-choice rule in the view of the respective honest validator. Here, Tconf is the confirmation time.\nFor simplicity, we assume a fraction \u03b2 such that (a) for any given slot the probability of the block proposer being adversarial is at most \u03b2, and (b) the fraction of adversarial validators in any committee is at most \u03b2 throughout the protocol\u2019s execution.\nThe LMD rule modifies the above protocol as follows. Every validator keeps a table of \u2018latest votes\u2019 received from the other validators, in the following manner: When a valid vote from a validator is received, then the table entry for that validator is updated, if and only if the new vote is from a slot strictly later than the current entry. Hence, when a validator observes a slot-t vote from the committee member i of some slot t, it records this vote and ignores all subsequent slot-t\u2032 votes for t\u2032 \u2264 t by i. Thus, if a validator receives two equivocating votes from the same validator for the same time slot, the validator counts only the vote received earlier in time."
        },
        {
            "heading": "3 Avalanche Attack on Proof-of-Stake GHOST",
            "text": "We describe a generic attack on PoS GHOST variants. This points to conceptual issues with the combination of PoS and GHOST, awareness of which might be of interest beyond PoS Ethereum fork choice design. PoS Ethereum, as it stands, is not susceptible to this attack (due to LMD, which comes with its own problems, see Section 4).\nWe assume basic familiarity with GHOST [20] and Gasper [3]. For details, we refer the interested reader to the beacon chain\u2019s fork choice specification [7] and earlier attacks [12, 13]."
        },
        {
            "heading": "3.1 High Level Description",
            "text": "The avalanche attack on PoS GHOST combines selfish mining [8] with equivocations. The adversary uses withheld blocks to displace an honest chain once it catches up in sub-tree weight with the number of withheld adversarial blocks. The withheld blocks are released in a flat but\nwide sub-tree, exploiting the fact that under the GHOST rule such a sub-tree can displace a long chain. Only two withheld blocks enter the canonical chain permanently, while the other withheld blocks are subsequently reused through equivocations to build further sub-trees to displace even more honest blocks. The attack exploits a specific weakness of the GHOST rule in combination with equivocations, namely that an adversary can reuse \u2018uncle blocks\u2019 in GHOST, and thus such equivocations contribute to the weight of multiple ancestors. This casts doubt over whether GHOST should be used with PoS at all.\nWe also provide a proof-of-concept implementation for vanilla PoS GHOST and CommitteeGHOST.3 By \u2018vanilla PoS GHOST\u2019, we mean a one-to-one translation of GHOST [20] from proofof-work lotteries to proof-of-stake lotteries. In that case, every block comes with unit weight. By \u2018Committee-GHOST\u2019 we mean a vote-based variant of GHOST as used in PoS Ethereum, where block weight is determined by votes and potentially a proposal boost [1]. Subsequently, we first illustrate the attack with an example, then provide a more detailed description, and finally show plots produced by the proof-of-concept implementation."
        },
        {
            "heading": "3.2 A Simple Attack Example",
            "text": "We illustrate the attack using a slightly simplified example where the adversary starts with k = 6 withheld blocks and does not gain any new blocks during the attack. In this case, the attack eventually runs out of steam and stops. (In reality, the larger the number of withheld blocks, the more likely the attack continues practically forever, and even for low k that probability is not negligible.) Still, the example illustrates that k = 6 blocks are enough for the adversary to displace 12 honest blocks\u2014not a good sign.\nFirst, the adversary withholds its flat-but-wide sub-tree of k = 6 withheld blocks, while honest\n3Source code: https://github.com/tse-group/pos-ghost-attack\nnodes produce a chain (cf. Figure 1). (Green and red indicate honest and adversarial blocks respectively, and the numbers on blocks indicate which block production opportunity of honest/adversary they correspond to.) Once honest nodes build a chain of length k = 6, the adversary releases the withheld blocks, and displaces the honest chain (cf. Figure 2). Note that the adversary can reuse its blocks 3, 4, 5, 6. Honest nodes build a new chain on top of 2 \u2192 1 \u2192 Genesis. Once that new chain reaches length 4, the adversary releases another displacing sub-tree (cf. Figure 3). Finally, note that the adversary can again reuse its blocks 5, 6. Honest nodes build a new chain on top of 4 \u2192 3 \u2192 2 \u2192 1 \u2192 Genesis. Once the new chain reaches length 2, the adversary releases the last displacing sub-tree (cf. Figure 4). Honest nodes now build on 6 \u2192 5 \u2192 4 \u2192 3 \u2192 2 \u2192 1 \u2192 Genesis. All honest blocks so far have been displaced. Overall, with this strategy, the adversary gets to displace \u0398(k2) honest blocks with k withheld adversarial blocks."
        },
        {
            "heading": "3.3 Attack Details",
            "text": "Selfish mining and equivocations can be used to attack PoS GHOST (using an \u2018avalanche of equivocating sub-trees rolling over honest chains\u2019\u2014hence the name of the attack). The following description is for vanilla PoS GHOST, but can be straightforwardly translated for CommitteeGHOST. Variants of this attack work for Committee-GHOST with proposer boosting [1] as well.\nSuppose an adversary gets k block production opportunities in a row, for modest k. This eventually happens with considerable probability. The adversary withholds these k blocks, as in selfish mining (cf. Figure 1 above). On average, more honest blocks are produced than\nadversary blocks, so the developing honest chain eventually \u2018catches up\u2019 with the k withheld adversarial blocks. In that moment, the adversary releases the k withheld blocks. However, not on a competing adversarial chain (as in selfish mining for a Longest Chain protocol), but on a competing adversarial sub-tree of height 2, where all but the first withheld block are siblings, and children of the first withheld block. Due to the GHOST weight counting, this adversarial sub-tree is now of equal weight as the honest chain\u2014so the honest chain is abandoned (cf. Figure 2 above). At the same time, ties between equal-weight sub-trees are broken such that honest nodes from now on build on what was the second withheld block. This allows the adversary to reuse in the form of equivocations the withheld blocks 3, 4, ..., k on top of the chain 2\u2192 1\u2192 Genesis formed by the first two withheld adversarial blocks, which is now the chain adopted by the honest nodes.\nAs an overall result of the attack so far, the adversary started with k withheld blocks, has used those to displace k honest blocks, and is now left with equivocating copies of k \u2212 2 adversarial withheld blocks that it can still reuse through equivocations (cf. Figure 3 above). In addition, while the k honest blocks were produced, the adversary likely had a few block production opportunities of its own, which get added to the pool of adversarial withheld blocks. Note that the attack has renewed in favor of the adversary if the adversary had two new block production opportunities, making up for the two adversarial withheld blocks lost because they cannot be reused. The process is now repeated (cf. Figure 4 above): The adversary has a bunch withheld blocks; whenever honest nodes have built a chain of weight equal to the withheld blocks, then the adversary releases a competing sub-tree of height 2; the chain made up from the first two released withheld blocks is adopted by the honest nodes, the other block production opportunities can still be reused in the future through equivocations on top of it and thus remain in the pool of withheld blocks of the adversary.\nIf the adversary starts out with enough withheld blocks k, and adversarial stake is not too small, then the adversary gains 2 block production opportunities during the production of the k honest blocks that will be displaced subsequently, and the process renews (or even drifts in favor of the adversary). No honest blocks enter the canonical chain permanently\u2014a liveness failure. Also, all honest blocks are eventually removed from the canonical chain, after increasing amount of time\u2014a safety failure for any fixed confirmation time."
        },
        {
            "heading": "3.4 Proof-of-Concept Implementation",
            "text": "For illustration purposes, we plot a snapshot of the block tree resulting after 100 time slots in our proof-of-concept implementation\u2014see Figure 5 for PoS GHOST and Figure 6 for CommitteeGHOST.4 The attack is still ongoing thereafter, and as long as the attack is sustained, no honest blocks remain in the canonical chain permanently."
        },
        {
            "heading": "3.5 Applicability to PoS Ethereum",
            "text": "Section 2 gives a description of the Committee-GHOST protocol based on the consensus protocol of PoS Ethereum, albeit without the LMD aspect. The avalanche attack works on this protocol as well. In particular, an adversary controlling any positive fraction of validators can still replace \u0398(k2) honest blocks with k withheld blocks in this protocol.\n4Source code: https://github.com/tse-group/pos-ghost-attack\nPoS Ethereum\u2019s LMD (Latest Message Driven) aspect interferes with this attack, but comes with its own challenges, as shown in Section 4. Nevertheless, the avalanche attack suggests a fundamental conceptual incompatibility between PoS (which enables equivocations) and GHOST (where equivocating uncle blocks disproportionately influence fork choice) and casts doubt over whether GHOST should be used with PoS at all."
        },
        {
            "heading": "4 LMD-Specific Balancing Attack on PoS Ethereum",
            "text": "Proposal weights (also called \u2018proposer boosting\u2019) were suggested [1] and implemented5 to mitigate earlier balancing attacks [12, 13]. However, we show that the LMD aspect of PoS Ethereum\u2019s fork choice enables balancing attacks even with proposal weights. This is particularly dire because PoS GHOST without LMD is susceptible to the avalanche attack, as described in Section 3. A version of PoS Ethereum with the LMD rule is described in Section 2."
        },
        {
            "heading": "4.1 Preliminaries",
            "text": "Recall the following from earlier discussion of balancing-type attacks [12, 13]:\n\u2022 On a high level, the balancing attack consists of two steps: First, adversarial block proposers initiate two competing chains\u2014let us call them Left and Right. Then, a handful of adversarial votes per slot, released under particular circumstances, suffice to steer honest validators\u2019 votes so as to keep the system in a tie between the two chains and consequently stall consensus.\n\u2022 It is quite feasible for an adversary to release two messages to the network in such a way that roughly half of the honest validators receive one message first and the other half of the honest validators receives the other message first. This certainly holds in the setting of adversarial network propagation delay [12] but also in the weaker setting of random network propagation delay [13].\n5https://github.com/ethereum/consensus-specs/pull/2730\n\u2022 The LMD rule deals with equivocating votes in the following way. Under LMD, every validator keeps a table of the \u2018latest message\u2019 (here, each message is a vote) received from each other validator, in the following manner:6 When a valid vote from a validator is received, then the \u2018latest message\u2019 table entry for that validator is updated if and only if the new vote is from a time slot strictly later than the current \u2019latest message\u2019 table entry. Thus, if a validator observes two equivocating votes from the same validator for the same time slot, the validator considers the vote received earlier in time."
        },
        {
            "heading": "4.2 High Level Description",
            "text": "The LMD rule gives the adversary a remarkable power in a balancing attack: Once the adversary has set up two competing chains, it can equivocate on them. The release of these equivocating votes can be timed such that the vote for Left is received by half of honest validators first, and the vote for Right is received by the other half of honest validators first. Honest validators are split in their views concerning the \u2018latest messages\u2019 from adversarial validators. Even though all validators will soon have received both votes, the split view persists for a considerable time due to the LMD rule, and since the adversarial validators release no votes for later slots.\nAs a result, half of the honest validators will see Left as leading, and will vote for it; half will see Right as leading, and will vote for it. But since the honest validators are split roughly in half, their votes balance, and they continue to see their respective chain as leading. (The adversary might have to release a few votes every now and then to counteract any drift stemming from an imbalance on the chains different honest validators see as leading.) This effect is so stark, that it could only be overcome using proposer boosting if the proposal weight exceeds the adversary\u2019s equivocating votes (which is some fraction of the committee size) by more than a constant factor. Otherwise, if the adversary leads that constant factor number of slots, it can surpass the proposer boost again. In that case, the proposer effectively overpowers the committees by far, thus eliminating the purpose of committees."
        },
        {
            "heading": "4.3 A Simple Example",
            "text": "Let W = 100 denote the number of validators per slot. Suppose the proposal weight is Wp = 0.7W = 70, and the fraction of adversarial validators is \u03b2 = 0.2. Furthermore, for simplicity, assume that the attack starts when there are five consecutive slots with adversarial proposers.\nDuring the first four slots, the adversary creates two parallel chains Left and Right of 4 blocks each, which are initially kept private from the honest validators. Each block is voted on by the 20 adversarial validators from its slot. Thus, there are equivocating votes for the conflicting blocks proposed at the same slot. For the fifth slot, the adversary includes all equivocating votes for the Left chain into a block and attaches it on the Left chain; and all the equivocating votes for the Right chain into an equivocating block and attaches it on the Right chain. With this, votes are \u2018batched\u2019 in the following sense. The adversary releases the two equivocating blocks from the fifth slot in such a way that roughly half of the honest validators see the Left block first (call HLeft that set of honest validators) and with it all the equivocating votes for the Left chain; and half of the honest validators see the Right block first (call HRight that set of honest validators)\n6https://github.com/ethereum/consensus-specs/blob/72d45971310a24f6e5ecfb149d23c9fac4c7878a/\nspecs/phase0/fork-choice.md#update_latest_messages\nGlobal view\nView of HLeft\nView of HRight\nand with it all the equivocating votes for the Right chain. (Note that this trick is not needed in networks with adversarial delay, where the release of equivocating votes can be targeted such that each honest validator either sees all Left votes first or all Right votes first.) By the LMD rule, validators in HLeft and HRight believe that Left and Right have 80 votes, respectively. They also believe that the respective other chain has 0 votes as the later arriving votes are not considered due to LMD (cf. Figure 7).\nNow suppose the validator of slot 6 is honest and from set HLeft. Then, it proposes a block extending Left. Left gains a proposal boost equivalent to 70 votes (cf. Figures 8 and 9). Thus, validators in HLeft see Left as leading with 150 votes and vote for it. Validators in HRight believe that Left has 70 votes while Right has 80 votes, so they vote for Right. As a result, their vote is tied\u2014Left increases by roughly half of honest votes and Right increases by roughly half of honest votes (cf. Figure 10). At the end of the slot, the proposer boost disappears. In the view of each honest validator, both chains gained roughly the same amount of votes, namely half of the honest validators\u2019 votes. Assuming a perfect split of |HLeft| = |HRight| = 40, Left:Right is now 120:40 in the view of HLeft and 40:120 in the view of HRight (up from 80:0 and 0:80, respectively).\nThis pattern repeats in subsequent slots, with the honest validators in HLeft and HRight solely voting for the chains Left and Right, respectively, thus maintaining a balance of weights the in global view and perpetuating the adversarially induced split view\u2014In the LMD view of each validator, they keep voting for the chain they see leading, and \u2018cannot understand\u2019 why other honest validators keep voting for the other chain. (cf. Figure 11)\nGlobal view\nView of HLeft\nView of HRight"
        },
        {
            "heading": "Acknowledgment",
            "text": "We thank Danny Ryan, Aditya Asgaonkar, and Francesco D\u2019Amato for feedback and fruitful discussions. JN, ENT and DT are supported by a gift from the Ethereum Foundation. JN is supported by the Reed-Hodgson Stanford Graduate Fellowship. ENT is supported by the Stanford Center for Blockchain Research."
        }
    ],
    "title": "Two Attacks On Proof-of-Stake GHOST/Ethereum",
    "year": 2022
}