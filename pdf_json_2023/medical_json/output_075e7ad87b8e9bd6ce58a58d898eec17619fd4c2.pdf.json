{
    "abstractText": "Due to the increased employment of robots in modern society, path planning methods based on human\u2013robot collaborative mobile robots have been the subject of research in both academia and industry. The dynamic window approach used in the research of the robot local path planning problem involves a mixture of fixed weight coefficients, which makes it hard to deal with the changing dynamic environment and the issue of the sub-optimal global planning paths that arise after local obstacle avoidance. By dynamically modifying the combination of weight coefficients, we propose, in this research, the use of fuzzy control logic to optimize the evaluation function\u2019s sub-functions and enhance the algorithm\u2019s performance through the safe and dynamic avoidance of obstacles. The global path is introduced to enhance the dynamic window technique\u2019s ability to plan globally, and important points on the global path are selected as key sub-target sites for the local motion planning phase of the dynamic window technique. The motion position changes after local obstacle avoidance to keep the mobile robot on the intended global path. According to the simulation results, the enhanced dynamic window algorithm cuts planning time and path length by 16% and 5%, respectively, while maintaining good obstacle avoidance and considering a better global path in the face of various dynamic environments. It is difficult to achieve a local optimum using this algorithm.",
    "authors": [
        {
            "affiliations": [],
            "name": "Ying Sun"
        },
        {
            "affiliations": [],
            "name": "Wenlu Wang"
        },
        {
            "affiliations": [],
            "name": "Manman Xu"
        },
        {
            "affiliations": [],
            "name": "Li Huang"
        },
        {
            "affiliations": [],
            "name": "Kangjing Shi"
        },
        {
            "affiliations": [],
            "name": "Chunlong Zou"
        },
        {
            "affiliations": [],
            "name": "Baojia Chen"
        }
    ],
    "id": "SP:f8781204c8ad3bbdbcd85b79cd30dbe49fd7cf37",
    "references": [
        {
            "authors": [
                "Y. Zhao"
            ],
            "title": "Path Planning of Storage and Logistics Mobile Robot Based on ACA-E Algorithm",
            "venue": "J. Sens",
            "year": 2022
        },
        {
            "authors": [
                "G.A. Pereira",
                "E.J. Freitas"
            ],
            "title": "Navigation of semi-autonomous service robots using local information and anytime motion planners",
            "venue": "Robotica",
            "year": 2020
        },
        {
            "authors": [
                "I. Vlachos",
                "R.M. Pascazzi",
                "M. Ntotis",
                "K. Spanaki",
                "S. Despoudi",
                "P. Repoussis"
            ],
            "title": "Smart and flexible manufacturing systems using Autonomous Guided Vehicles (AGVs) and the Internet of Things (IoT)",
            "venue": "Int. J. Prod. Res",
            "year": 2022
        },
        {
            "authors": [
                "Y. Gao",
                "C. Bai",
                "R. Fu",
                "Q. Quan"
            ],
            "title": "A non-potential orthogonal vector field method for more efficient robot navigation and control",
            "venue": "Robot. Auton. Syst",
            "year": 2023
        },
        {
            "authors": [
                "A. Muhammad",
                "M.A. Ali",
                "S. Turaev",
                "I.H. Shanono",
                "F. Hujainah",
                "M.N.M. Zubir",
                "M.K. Faiz",
                "E.R.M. Faizal",
                "R. Abdulghafor"
            ],
            "title": "Novel algorithm for mobile robot path planning in constrained environment",
            "venue": "Comput. Mater. Contin",
            "year": 2021
        },
        {
            "authors": [
                "J. Yun",
                "Y. Sun",
                "C. Li",
                "D. Jiang",
                "B. Tao",
                "G. Li",
                "Y. Liu",
                "B. Chen",
                "X. Tong",
                "M. Xu"
            ],
            "title": "Self-adjusting force/bit blending control based on quantitative factor-scale factor fuzzy-PID bit",
            "year": 2022
        },
        {
            "authors": [
                "X. Liu",
                "D. Jiang",
                "B. Tao",
                "G. Jiang",
                "Y. Sun",
                "J. Kong",
                "X. Tong",
                "G. Zhao",
                "B. Chen"
            ],
            "title": "Genetic algorithm-based trajectory optimization for digital twin robots",
            "venue": "Front. Bioeng. Biotechnol",
            "year": 2022
        },
        {
            "authors": [
                "L. Liu",
                "X. Wang",
                "X. Yang",
                "H. Liu",
                "J. Li",
                "P. Wang"
            ],
            "title": "Path planning techniques for mobile robots: Review and prospect",
            "venue": "Expert Syst. Appl",
            "year": 2023
        },
        {
            "authors": [
                "X. Zhang",
                "G. Li",
                "F. Xiao",
                "D. Jiang",
                "B. Tao",
                "J. Kong",
                "G. Jiang",
                "Y. Liu"
            ],
            "title": "An inverse kinematics framework of mobile manipulator based on unique domain constraint",
            "year": 2023
        },
        {
            "authors": [
                "D. Li",
                "L. Wang",
                "J. Cai",
                "A. Wang",
                "T. Tan",
                "J. Gui"
            ],
            "title": "Research on path planning of mobile robot based on improved genetic algorithm",
            "venue": "Int. J. Model. Simul. Sci. Comput",
            "year": 2023
        },
        {
            "authors": [
                "T.H. Nguyen",
                "X.T. Nguyen",
                "D.A. Pham",
                "B.L. Tran",
                "D.B. Bui"
            ],
            "title": "A new approach for mobile robot path planning based on RRT algorithm",
            "venue": "Mod. Phys. Lett. B",
            "year": 2023
        },
        {
            "authors": [
                "I.M. Al-Adwan"
            ],
            "title": "Intelligent Path Planning Approach for Autonomous Mobile Robot",
            "venue": "J. Robot. Mechatron",
            "year": 2021
        },
        {
            "authors": [
                "G. Enthrakandi Narasimhan",
                "J. Bettyjane"
            ],
            "title": "Implementation and study of a novel approach to control adaptive cooperative robot using fuzzy rules",
            "venue": "Int. J. Inf. Technol",
            "year": 2021
        },
        {
            "authors": [
                "C. Li",
                "X. Huang",
                "J. Ding",
                "K. Song",
                "S. Lu"
            ],
            "title": "Global path planning based on a bidirectional alternating search A* algorithm for mobile robots",
            "venue": "Comput. Ind. Eng",
            "year": 2022
        },
        {
            "authors": [
                "A. Azzabi",
                "K. Nouri"
            ],
            "title": "An advanced potential field method proposed for mobile robot path planning",
            "venue": "Trans. Inst. Meas. Control",
            "year": 2019
        },
        {
            "authors": [
                "M.R. Islam",
                "P. Protik",
                "S. Das",
                "P.K. Boni"
            ],
            "title": "Mobile robot path planning with obstacle avoidance using chemical reaction optimization",
            "venue": "Soft Comput",
            "year": 2021
        },
        {
            "authors": [
                "X. Yin",
                "P. Cai",
                "K. Zhao",
                "Y. Zhang",
                "Q. Zhou",
                "D. Yao"
            ],
            "title": "Dynamic path planning of AGV based on kinematical constraint A* algorithm and following DWA fusion algorithms",
            "venue": "Sensors",
            "year": 2023
        },
        {
            "authors": [
                "O. Khatib"
            ],
            "title": "Real-time obstacle avoidance for manipulators and mobile robots",
            "venue": "Int. J. Robot. Res",
            "year": 1986
        },
        {
            "authors": [
                "H.M. Jayaweera",
                "S. Hanoun"
            ],
            "title": "A dynamic artificial potential field (d-apf) uav path planning technique for following ground moving targets",
            "venue": "IEEE Access 2020,",
            "year": 1927
        },
        {
            "authors": [
                "J. Yun",
                "D. Jiang",
                "Y. Sun",
                "L. Huang",
                "B. Tao",
                "G. Jiang",
                "J. Kong",
                "Y. Weng",
                "G. Li",
                "Z. Fang"
            ],
            "title": "Grasping pose detection for loose stacked object based on convolutional neural network with multiple self-powered sensors information",
            "venue": "IEEE Sens. J. 2023,",
            "year": 2063
        },
        {
            "authors": [
                "Y. Liu",
                "F. Xiao",
                "X. Tong",
                "B. Tao",
                "M. Xu",
                "G. Jiang",
                "B. Chen",
                "Y. Cao",
                "N. Sun"
            ],
            "title": "Manipulator trajectory planning based on work subspace division",
            "venue": "Concurr. Comput. Pract. Exp. 2022,",
            "year": 2022
        },
        {
            "authors": [
                "Y. Liu",
                "D. Jiang",
                "J. Yun",
                "Y. Sun",
                "C. Li",
                "G. Jiang",
                "J. Kong",
                "B. Tao",
                "Z. Fang"
            ],
            "title": "Self-tuning control of manipulator positioning based on fuzzy PID and PSO algorithm",
            "venue": "Front. Bioeng. Biotechnol",
            "year": 2022
        },
        {
            "authors": [
                "M. Kobayashi",
                "N. Motoi"
            ],
            "title": "Local path planning: Dynamic window approach with virtual manipulators considering dynamic obstacles",
            "venue": "IEEE Access 2022,",
            "year": 2022
        },
        {
            "authors": [
                "L. Chang",
                "L. Shan",
                "C. Jiang",
                "Y. Dai"
            ],
            "title": "Reinforcement based mobile robot path planning with improved dynamic window approach in unknown environment",
            "venue": "Auton. Robot",
            "year": 2021
        },
        {
            "authors": [
                "D. Kiss",
                "G. Tevesz"
            ],
            "title": "Advanced dynamic window based navigation approach using model predictive control",
            "venue": "In Proceedings of the 2012 17th International Conference on Methods & Models in Automation & Robotics (MMAR), Miedzyzdroje,",
            "year": 2012
        },
        {
            "authors": [
                "C. Henkel",
                "A. Bubeck",
                "W. Xu"
            ],
            "title": "Energy efficient dynamic window approach for local path planning in mobile service robotics",
            "venue": "IFAC Pap. 2016,",
            "year": 2016
        },
        {
            "authors": [
                "J. Gao",
                "F. Claveau",
                "A. Pashkevich",
                "P. Chevrel"
            ],
            "title": "Real-time motion planning for an autonomous mobile robot with wheel-ground adhesion",
            "year": 2023
        },
        {
            "authors": [
                "C. Zhang"
            ],
            "title": "Path planning for robot based on chaotic artificial potential field method",
            "venue": "IOP Conf. Ser. Mater. Sci. Eng",
            "year": 2018
        },
        {
            "authors": [
                "A.T. Nguyen",
                "C.T. Vu"
            ],
            "title": "Mobile robot motion control using a combination of fuzzy logic method and kinematic model. In Intelligent Systems and Networks: Selected Articles from ICISN 2022",
            "venue": "Vietnam; Springer Nature: Singapore,",
            "year": 2022
        },
        {
            "authors": [
                "A. Dalla Libera",
                "N. Castaman",
                "S. Ghidoni",
                "R. Carli"
            ],
            "title": "Autonomous learning of the robot kinematic model",
            "venue": "IEEE Trans. Robot",
            "year": 2020
        },
        {
            "authors": [
                "X. Zhang",
                "F. Xiao",
                "X. Tong",
                "J. Yun",
                "Y. Liu",
                "Y. Sun",
                "B. Tao",
                "J. Kong",
                "M. Xu",
                "B. Chen"
            ],
            "title": "Time optimal trajectory planing based on improved sparrow search algorithm",
            "venue": "Front. Bioeng. Biotechnol",
            "year": 2022
        },
        {
            "authors": [
                "Y. Zhang",
                "J. Guo",
                "X. Li"
            ],
            "title": "Study on redundancy in robot kinematic parameter identification",
            "venue": "IEEE Access 2022,",
            "year": 2022
        },
        {
            "authors": [
                "K. Shi",
                "L. Huang",
                "D. Jiang",
                "Y. Sun",
                "X. Tong",
                "Y. Xie",
                "Z. Fang"
            ],
            "title": "Path planning optimization of intelligent vehicle based on improved genetic and ant colony hybrid algorithm",
            "venue": "Front. Bioeng. Biotechnol",
            "year": 2022
        },
        {
            "authors": [
                "L. Liu",
                "J. Yao",
                "D. He",
                "J. Chen",
                "J. Huang",
                "H. Xu",
                "B. Wang",
                "J. Guo"
            ],
            "title": "Global dynamic path planning fusion algorithm combining jump-A* algorithm and dynamic window approach",
            "venue": "IEEE Access 2021,",
            "year": 1963
        },
        {
            "authors": [
                "Y. Li",
                "R. Jin",
                "X. Xu",
                "Y. Qian",
                "H. Wang",
                "S. Xu",
                "Z. Wang"
            ],
            "title": "A mobile robot path planning algorithm based on improved A* algorithm and dynamic window approach",
            "venue": "IEEE Access 2022,",
            "year": 2022
        },
        {
            "authors": [
                "H. Wang",
                "X. Ma",
                "L. Zhu"
            ],
            "title": "Obstacle avoidance path planning of mobile robot based on improved DWA",
            "venue": "J. Phys. Conf. Ser",
            "year": 2022
        },
        {
            "authors": [
                "F. Xiao",
                "G. Li",
                "D. Jiang",
                "Y. Xie",
                "J. Yun",
                "Y. Liu",
                "L. Huang",
                "Z. Fang"
            ],
            "title": "An effective and unified method to derive the inverse kinematics formulas of general six-DOF manipulator with simple geometry",
            "year": 2021
        },
        {
            "authors": [
                "H. Gao",
                "S. Lu",
                "T. Wang"
            ],
            "title": "Motion path planning of 6-DOF industrial robot based on fuzzy control algorithm",
            "venue": "J. Intell. Fuzzy Syst",
            "year": 2020
        },
        {
            "authors": [
                "Y. Long",
                "H. He"
            ],
            "title": "Robot path planning based on deep reinforcement learning",
            "venue": "In Proceedings of the 2020 IEEE Conference on Telecommunications, Optics and Computer Science (TOCS), Shenyang, China,",
            "year": 2020
        },
        {
            "authors": [
                "Y. Sun",
                "X. Zhao",
                "Y. Yu"
            ],
            "title": "Research on a random route-planning method based on the fusion of the A* algorithm and dynamic window method",
            "year": 2022
        },
        {
            "authors": [
                "D. Fox",
                "W. Burgard",
                "S. Thrun"
            ],
            "title": "The dynamic window approach to collision avoidance",
            "venue": "IEEE Robot. Autom. Mag",
            "year": 1997
        },
        {
            "authors": [
                "G. Li",
                "F. Xiao",
                "X. Zhang",
                "B. Tao",
                "G. Jiang"
            ],
            "title": "An inverse kinematics method for robots after geometric parameters compensation",
            "venue": "Mech. Mach. Theory 2022,",
            "year": 2022
        },
        {
            "authors": [
                "W. Gao",
                "Q. Tang",
                "B. Ye",
                "Y. Yang",
                "J. Yao"
            ],
            "title": "An enhanced heuristic ant colony optimization for mobile robot path planning",
            "venue": "Soft Comput",
            "year": 2020
        },
        {
            "authors": [
                "T. Hossain",
                "H. Habibullah",
                "R. Islam",
                "R.V. Padilla"
            ],
            "title": "Local path planning for autonomous mobile robots by integrating modified dynamic-window approach and improved follow the gap method",
            "venue": "J. Field Robot",
            "year": 2022
        }
    ],
    "sections": [
        {
            "text": "Citation: Sun, Y.; Wang, W.; Xu, M.;\nHuang, L.; Shi, K.; Zou, C.; Chen, B.\nLocal Path Planning for Mobile\nRobots Based on Fuzzy Dynamic\nWindow Algorithm. Sensors 2023, 23,\n8260. https://doi.org/10.3390/\ns23198260\nAcademic Editor: Sergio\nToral Mar\u00edn\nReceived: 1 August 2023\nRevised: 6 September 2023\nAccepted: 13 September 2023\nPublished: 5 October 2023\nCopyright: \u00a9 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed under the terms and\nconditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nKeywords: dynamic windowing algorithm; efficient human\u2013robot collaboration; mobile robot; dynamic path planning; fuzzy control"
        },
        {
            "heading": "1. Introduction",
            "text": "With the development of robot technology, HRC-based robots are widely used in autonomous navigation, inspection and exploration, agricultural machinery services, logistics and warehousing, and other fields [1\u20134]. Map creation and localization, path planning, and controlled movement are the three main components of autonomous navigation for mobile robots [5\u20137]. One of the most important of these is the path planning of mobile robots, which can be divided into global path planning and local path planning depending on the availability\nSensors 2023, 23, 8260. https://doi.org/10.3390/s23198260 https://www.mdpi.com/journal/sensors\nSensors 2023, 23, 8260 2 of 20\nof environmental information. It is necessary to be familiar with the map and the obstacles of an area to plan a global path. Global paths can only be applied to static environments, but this is not in line with the actual motion environment of mobile robots, and current industrial applications also require mobile robots to be able to achieve local dynamic obstacle avoidance while considering a better global path [8,9]. Therefore, local path planning and dynamic obstacle avoidance algorithms for mobile robots must be studied [10\u201312]. To execute real-time obstacle avoidance and online planning based on the local environment information, local path planning uses many sensors, which gather local environment information in real time while the robot is moving. Most human labor has been replaced by robots, yet accessible human\u2013robot collaboration still requires technological advances. In this paper, the dynamic window algorithm is improved to solve robots\u2019 path planning problems more effectively. Fuzzy control is used to dynamically adjust the combination of weight coefficients, and the evaluation function of the dynamic window approach is further improved to enhance its dynamic obstacle avoidance capability. Finally, the global path is introduced, and the position of the mobile robot is adjusted after local obstacle avoidance to achieve better dynamic obstacle avoidance and human\u2013robot collaboration. The rest of the paper is organized as follows: Section 2 presents the relevant research on path planning methods in the past few years. Section 3 analyzes the dynamic window algorithm to obtain directions for improvement, proposes a dynamic window algorithm based on fuzzy control [13], and introduces the globally optimal path [14]. Section 4 compares the proposed algorithm with previous algorithms to demonstrate the effectiveness and advancement of the proposed algorithm. Section 5 concludes the paper."
        },
        {
            "heading": "2. Related Work",
            "text": "The local path planning methods that are the most effective and commonly used include the D* algorithm, artificial potential field method [15], fuzzy logic method [16], dynamic window method [17], etc. The Dynamic A* (D*) algorithm is a dynamic planning algorithm proposed by Stentz et al., based on the A* algorithm, which can quickly replan part of the local path when the environment changes without replanning the whole path, thus reducing the computational effort and meeting real-time requirements. Khatib was the first to propose the artificial potential field (APF) method [18] and to apply it to path planning. The artificial potential field method is easy to calculate, more effective in real time, safer, and does not collide with obstacles [19]. The fuzzy logic method (fuzzy logic) is based on expert experience and establishes an accurate correspondence mapping of the external environment for robot motion control, thus enabling local path planning [20,21]. Fuzzy logic has certain advantages in dealing with complex environments and planning paths in real time. The dynamic window approach (DWA) takes into account the kinematics and dynamics of the mobile robot during local path planning. It converts the problem of local path planning into an optimization problem with velocity constraints. Compared with other local path planning algorithms, the dynamic window approach initially incorporates the mechanical characteristics of the mobile robot itself. It takes into account the environmental restrictions related to velocity and other factors, which grants it distinct advantages in local path planning. Consequently, the generated trajectories are more in line with the requirements of the actual control of the robot [22]. It has been extensively studied and applied in indoor complex dynamic environment motion planning [23]. Chang et al. [24] improved the evaluation function of the DWA algorithm by integrating the Q-learning algorithm. The improved DWA algorithm primarily enhances and extends the evaluation function, while introducing two additional evaluation functions to enhance the algorithm\u2019s performance. Kiss et al. [25] introduced a global dynamic window navigation scheme, leveraging an unweighted objective function rooted in model predictive control for the problem that the DWA algorithm cannot pass narrow bands when formulating optimal paths. Henkel et al. [26] took the mobile robot motion process as an entry point to improve\nSensors 2023, 23, 8260 3 of 20\nthe dynamic planning efficiency of the algorithm and experimentally verified that the improved local path planner can further reduce energy consumption. Compared with the above local path planning algorithms, the D* algorithm exhibits notable challenges, such as low search efficiency, high cost, and making multiple turns in a tiny region. The artificial potential field method tends to fall into local optimality and can suffer from problems such as unreachable targets and path fluctuations, when employed across diverse environmental settings. This requires a more reasonable potential field function according to the given scene, and the wide application is not strong [27,28]. The fuzzy logic method relies on expert experience and lacks flexibility [29]. The dynamic window method exhibits inefficacy when encountering atypical obstacles, such as \u201cL\u201d- or \u201cC\u201d-shaped obstacles. However, the dynamic window algorithm takes into account the robot\u2019s motion performance in local path planning [30,31]. This is more in line with the actual motion of the mobile robot. It can greatly improve the performance of the algorithm if combined with other algorithms [32,33]."
        },
        {
            "heading": "3. Dynamic Windowing Algorithm Based on Fuzzy Control",
            "text": ""
        },
        {
            "heading": "3.1. Dynamic Window Algorithm Analysis and Improvement Direction",
            "text": "3.1.1. Dynamic Window Algorithm Analysis\nThe basic principle of the dynamic window approach (DWA) is based on the magnitude and direction of the recorded velocity at a certain time. The trajectory of the mobile robot during the subsequent time interval is simulated simultaneously [34]. The generated trajectories are assessed and an evaluation index is developed. The velocity associated with the trajectory with the largest value of the evaluation function is calculated to ascertain the current motion state of the mobile robot. The core idea of the dynamic window method comprises three main components: motion model establishment, velocity space sampling, and trajectory evaluation function design [35].\n(1) Modeling the kinematics of mobile robots\nIn the dynamic window method, the optimal combination of linear and angular positions in each simulation cycle is calculated based on the motion model of the mobile robot. Therefore, the kinematic model of the mobile robot needs to be established first [36,37]. The fundamental kinematic models of mobile robots are both non-holonomic and omnidirectional motion. The mobile robot platform utilized in this section is a robot with non-omnidirectional motion, featuring only two types of motion, forward and steering. The kinematic model of the mobile robot is shown in Figure 1, where four drive wheels realize the forward movement of the mobile robot, and the steering of the mobile robot is realized by the differential rotation of the two front drive wheels.\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 3\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\ni \u00a0 the\u00a0dynamic\u00a0planning\u00a0efficiency\u00a0of\u00a0 the\u00a0algorithm\u00a0and\u00a0experimentally\u00a0verified\u00a0 that\u00a0the\u00a0improved\u00a0local\u00a0path\u00a0planner\u00a0can\u00a0further\u00a0reduce\u00a0energy\u00a0consumption.\u00a0\nCompared\u00a0with\u00a0the\u00a0above\u00a0local\u00a0path\u00a0planning\u00a0algorithms,\u00a0the\u00a0D*\u00a0algorith \u00a0exhibits\u00a0 notable\u00a0challenges,\u00a0such\u00a0as\u00a0low\u00a0search\u00a0efficiency,\u00a0high\u00a0cost,\u00a0and\u00a0making\u00a0multiple\u00a0turns\u00a0in\u00a0 a\u00a0tiny\u00a0region.\u00a0The\u00a0artificial\u00a0potential\u00a0field\u00a0method\u00a0tends\u00a0to\u00a0fall\u00a0into\u00a0local\u00a0optimality\u00a0and\u00a0 can\u00a0suffer\u00a0from\u00a0problems\u00a0such\u00a0as\u00a0unreachable\u00a0targets\u00a0and\u00a0path\u00a0fluctuations,\u00a0when\u00a0employed\u00a0across\u00a0diverse\u00a0environmental\u00a0settings.\u00a0This\u00a0requires\u00a0a\u00a0more\u00a0reasonable\u00a0potential\u00a0 field\u00a0function\u00a0according\u00a0to\u00a0the\u00a0given\u00a0scene,\u00a0and\u00a0the\u00a0wide\u00a0application\u00a0is\u00a0not\u00a0strong\u00a0[27,28].\u00a0 The\u00a0fuzzy\u00a0logic\u00a0method\u00a0relies\u00a0on\u00a0expert\u00a0experience\u00a0and\u00a0lacks\u00a0flexibility\u00a0[29].\u00a0The\u00a0dynamic\u00a0 window\u00a0method\u00a0exhibits\u00a0inefficacy\u00a0when\u00a0encountering\u00a0atypical\u00a0obstacles,\u00a0such\u00a0as\u00a0\u201cL\u201d-\u00a0or\u00a0 \u201cC\u201d-shaped\u00a0obstacles.\u00a0\nHowever,\u00a0the\u00a0dynamic\u00a0window\u00a0algorithm\u00a0takes\u00a0into\u00a0account\u00a0the\u00a0robot\u2019s\u00a0motion\u00a0performance\u00a0in\u00a0local\u00a0path\u00a0planning\u00a0[30,31].\u00a0This\u00a0is\u00a0more\u00a0in\u00a0line\u00a0with\u00a0the\u00a0actual\u00a0motion\u00a0of\u00a0the\u00a0 mobile\u00a0robot.\u00a0It\u00a0can\u00a0greatly\u00a0improve\u00a0the\u00a0performance\u00a0of\u00a0the\u00a0algorithm\u00a0if\u00a0combined\u00a0with\u00a0 other\u00a0algorithms\u00a0[32,33].\u00a0\n3.\u00a0Dynamic\u00a0Windowing\u00a0Algorithm\u00a0Based\u00a0on\u00a0Fuzzy\u00a0Control\u00a0 3.1.\u00a0Dynamic\u00a0Window\u00a0Algorithm\u00a0Analysis\u00a0and\u00a0Improvement\u00a0Direction\u00a0 3.1.1.\u00a0Dynamic\u00a0Window\u00a0Algorithm\u00a0Analysis\u00a0\nThe\u00a0basic\u00a0principle\u00a0of\u00a0the\u00a0dynamic\u00a0window\u00a0approach\u00a0(DWA)\u00a0is\u00a0based\u00a0on\u00a0the\u00a0magnitude\u00a0and\u00a0direction\u00a0of\u00a0the\u00a0recorded\u00a0velocity\u00a0at\u00a0a\u00a0certain\u00a0time.\u00a0The\u00a0trajectory\u00a0of\u00a0the\u00a0mobile\u00a0 robot\u00a0during\u00a0the\u00a0subsequent\u00a0time\u00a0interval\u00a0is\u00a0simulated\u00a0simultaneously\u00a0[34].\u00a0The\u00a0generated\u00a0 trajectories\u00a0are\u00a0assessed\u00a0and\u00a0an\u00a0evaluation\u00a0 index\u00a0 is\u00a0developed.\u00a0The\u00a0velocity\u00a0associated\u00a0 with\u00a0the\u00a0trajectory\u00a0with\u00a0the\u00a0largest\u00a0value\u00a0of\u00a0the\u00a0evaluation\u00a0function\u00a0is\u00a0calculated\u00a0to\u00a0ascertain\u00a0the\u00a0current\u00a0motion\u00a0state\u00a0of\u00a0the\u00a0mobile\u00a0robot.\u00a0The\u00a0core\u00a0idea\u00a0of\u00a0the\u00a0dynamic\u00a0window\u00a0 method\u00a0comprises\u00a0three\u00a0main\u00a0components:\u00a0motion\u00a0model\u00a0establishment,\u00a0velocity\u00a0space\u00a0 sampling,\u00a0and\u00a0trajectory\u00a0evaluation\u00a0function\u00a0design\u00a0[35].\u00a0 (1) odeling\u00a0the\u00a0kinematics\u00a0of\u00a0mobile\u00a0robots\u00a0\n\u00a0t e\u00a0 ynamic\u00a0window\u00a0method,\u00a0the\u00a0optimal\u00a0combination\u00a0 f\u00a0linear\u00a0and\u00a0angular\u00a0positions\u00a0 in\u00a0each\u00a0simulation\u00a0cycle\u00a0 is\u00a0calculated\u00a0based\u00a0on\u00a0 the\u00a0motion\u00a0model\u00a0of\u00a0 the\u00a0mobile\u00a0 robot.\u00a0Therefore,\u00a0 the\u00a0kinematic\u00a0m del\u00a0of\u00a0 the\u00a0mobile\u00a0robot\u00a0needs\u00a0 to\u00a0be\u00a0established\u00a0first\u00a0 [36,37].\u00a0The\u00a0fu d me tal\u00a0kinematic\u00a0models\u00a0of\u00a0mobile\u00a0r bots\u00a0are\u00a0both\u00a0non-holo \u00a0and\u00a0 omnidirectional\u00a0motion.\u00a0The\u00a0 il \u00a0r ot\u00a0platform\u00a0utilized\u00a0in\u00a0this\u00a0section\u00a0is\u00a0a\u00a0robot\u00a0with\u00a0 o -o nidirectional\u00a0motion,\u00a0featuring\u00a0only\u00a0two\u00a0types\u00a0of\u00a0motion,\u00a0forward\u00a0an \u00a0steering.\u00a0 The\u00a0kine atic\u00a0model\u00a0of\u00a0the\u00a0mobile\u00a0robot\u00a0is\u00a0shown\u00a0in\u00a0Figure\u00a01,\u00a0where\u00a0four\u00a0drive\u00a0wheels\u00a0 realize\u00a0the\u00a0forward\u00a0movement\u00a0of\u00a0the\u00a0mobile\u00a0robot,\u00a0and\u00a0the\u00a0steering\u00a0of\u00a0the\u00a0mobile\u00a0robot\u00a0is\u00a0 realized\u00a0by\u00a0the\u00a0differential\u00a0rotation\u00a0of\u00a0the\u00a0two\u00a0front\u00a0drive\u00a0wheels.\u00a0\n\u00a0 Figure\u00a01.\u00a0A\u00a0kinematic\u00a0model\u00a0for\u00a0mobile\u00a0robots.\u00a0Figure 1. kinematic model for mobile robots.\nThe mobile robot\u2019s trajectory can be approximated as uniform linear motion during the two sampling intervals before and after, given that the sampling period \u2206t is typically\nSensors 2023, 23, 8260 4 of 20\nsmall. Accordingly, the change in the mobile machine\u2019s position and heading angle in the subsequent time intervals can be expressed as: \u2206x = vt \u00b7 \u2206t \u00b7 cos(\u03b8t) \u2206y = vt \u00b7 \u2206t \u00b7 sin(\u03b8t)\n\u2206\u03b8 = w \u00b7 \u2206t (1)\n x(t + 1) = x(t) + vt \u00b7 \u2206t \u00b7 cos(\u03b8t) y(t + 1) = y(t) + vt \u00b7 \u2206t \u00b7 sin(\u03b8t)\n\u03b8(t + 1) = \u03b8(t) + w \u00b7 \u2206t (2)\n(2) Sampling speed space\nThe dynamic window algorithm necessitates determining the range of linear velocity [vmin, vmax] and angular velocity [wmin, wmax] within the current simulation period before simulating the motion trajectory of each set of sampled velocity combinations (v, w). The sampled velocities must take into account the maximum and minimum velocities achievable by the mobile robot in a sampling period, the limitations of mechanical properties on the velocities, and the limitations of obstacle avoidance on the velocity limitations. In summary, the velocity sampling space of the dynamic window algorithm comprises three components. The first component encompasses the maximum and minimum velocity that the mobile robot can reach. The second component encompasses the maximum and minimum velocity that the mobile robot can reach within a simulation period limited by its mechanical performance. The third component involves selecting velocities to ensure that the mobile robot can stop its motion before colliding with an obstacle.\n(1) Kinematic constraints\nThe maximum and minimum speed limit of the mobile robot itself is:\nVs = { (v, w)|v \u2208 [vmin, vmax]\u039bw \u2208 [wmin, wmax]} (3)\nIn the formula, vmin, vmax\u2014minimum and maximum linear speed of the robot; wmin, wmax\u2014minimum and maximum angular velocity of the robot.\n(2) Mechanical performance constraints\nThe output torque of the mobile robot\u2019s motor is constrained, resulting in limitations on both maximum acceleration and maximum deceleration for both linear and angular velocities [38]. The set of velocities Vd that is constrained by the maximum acceleration and deceleration in one simulation period should satisfy the following:\nVd = { (v, w)|v \u2208 [ vc \u2212 \u2022 vb \u00b7 \u2206t, vc + \u2022 va \u00b7 \u2206t ] \u039bw \u2208 [ wc \u2212 \u2022 wb \u00b7 \u2206t, wc + \u2022 wa \u00b7 \u2206t ]} (4)\nIn the formula, vc, wc\u2014linear and angular velocities of the mobile robot in its current motion; \u2022 va, \u2022 vb\u2014maximum acceleration and maximum deceleration of the linear velocity of the\nmobile robot; \u2022 wa, \u2022 wb\u2014maximum acceleration and maximum deceleration of the angular velocity of the moving robot.\n(3) Security constraints\nTo uphold the safety measures in the dynamic window method of obstacle avoidance, the sampled velocity should allow the mobile robot to come to a complete stop before reaching the obstacle. Thus, the sampled velocity space must also be constrained by the braking distance [39]. Therefore, the set of velocities Va sampled in a period, constrained by\nSensors 2023, 23, 8260 5 of 20\nthe maximum deceleration that enables the mobile robot to come to a stop prior to colliding with an obstacle, should satisfy the following:\nVa = { (v, w)|v \u2264 \u221a 2 \u00b7 dist(v, w) \u00b7 \u2022vb\u039bw \u2264 \u221a 2 \u00b7 dist(v, w) \u00b7 \u2022wb } (5)\nIn the formula, dist(v,w)\u2014the shortest distance to the obstacle on the trajectory corresponding to speed (v,w). Combining the above three speed constraints, the ultimate selection for the admissible velocity is the intersection of these sets. Let Vr denote the set of admissible velocities; thus, Vr should satisfy the following:\nVr = Vs \u2229Vd \u2229Va (6)\n(3) Design trajectory evaluation function\nThe purpose of the evaluation function is to choose the optimal trajectory. Varying speeds will give different predicted trajectories, consequently yielding evaluation function values of varying magnitudes. The primary criterion in formulating the evaluation function is to ensure that the mobile robot avoids obstacles as much as possible in local path planning while advancing in the direction of the target point at the fastest speed.\nThe equation of the designed evaluation function is:\nG(v, w) = \u03c3(\u03b1 \u00b7 Heading(v, w) + \u03b2 \u00b7 Dist\u2212 obstacle(v, w) + \u03b3 \u00b7Velocity(v, w)) (7)\nIn the formula: Heading(v, w)\u2014a target azimuth evaluation function indicating the azimuthal devi-\nation between the end direction of the simulated trajectory and the target point at the current velocity; Obstacle-Distance(v, w)\u2014evaluation function of the distance between the obstacle and the cart;\nVelocity(v, w)\u2014evaluation function of the velocity magnitude of the current motion; \u03b1, \u03b2, \u03b3\u2014the weight coefficients of the three sub-functions; \u03b1, \u03b2, \u03b3; \u03c3\u2014the coefficients normalized to the three components of the trajectory evaluation\nfunction are generally constants. Among them:\nheading(v, w) = 180\u25e6 \u2212 \u03b8 (8)\ndist(v, w) = {\nd, d < dmax dmax, d \u2265 dmax\n(9)\nAfter obtaining the results of the evaluation function of the above three components, each component should be normalized. Subsequently, they are combined, aiming to make the trajectory smoother and avoiding a certain part accounting for too large a proportion. The normalization process entails dividing each term by the sum of the terms, ensuring that the three components of the trajectory evaluation function are normalized within the interval [0, 1]. The normalization calculation formula is as follows: normal_heading(i) = heading(i)n \u2211 i=1 heading(i) normal_dist(i) = dist(i)n \u2211 i=1 dist(i) normal_velocity(i) = velocity(i)n \u2211\ni=1 velocity(i)\n(10)\nIn Equation (10), n\u2014all sample traces in one simulation cycle; i\u2014current simulation trajectory to be evaluated.\nSensors 2023, 23, 8260 6 of 20\nThe dynamic window method has the capability to engage in real-time obstacle avoidance and online path planning by leveraging locally detected environmental information. The dynamic obstacle avoidance performance is superior, resulting in a smoother planned motion trajectory that aligns closely with the actual motion trajectory of the mobile robot. However, the algorithm has a short sampling. It can only compute based on the current window, lacking global information from the starting point to the target point. Therefore, it is prone to falling into the local optima, and the resulting path is often not the optimal global path [40].\n3.1.2. Dynamic Window Algorithm Improvement Direction\nThe magnitude of appropriate weight coefficients, denoted as \u03b1, \u03b2, and \u03b3, in the trajectory evaluation function G (v, w) of the dynamic window method is pivotal in the selection of an optimal trajectory. While weighting coefficients in the dynamic window method are typically determined through experimental exploration for optimal constant combination, the real operational environments for mobile robots are inherently uncertain. Consequently, achieving an ideal combination of constant \u03b1, \u03b2, and \u03b3 that caters to practical requirements can pose a challenge. Based on an extensive set of simulation comparison experiments, Fox D. et al. [41] concluded that the algorithm exhibits enhanced path planning and dynamic obstacle avoidance capabilities when \u03b1 is taken as 0.8, \u03b2 as 0.1, and \u03b3 as 0.1. The experimental results demonstrated the mobile robot\u2019s adeptness in navigating through a challenging environment and avoiding obstacles. However, the benefit of dynamic obstacle avoidance through the dynamic window method is notably diminished in complicated scenarios, often leading to a tendency to converge towards a local optimum.\nAnalysis of the problems of the dynamic window method:\n(1) When encountering \u201cL\u201d- or \u201cC\u201d-type obstacles positioned along the path between the mobile robot and the target point, it is easy to fall into the local optimum. When \u03b1 = 0.8, \u03b2 = 0.1, \u03b3 = 0.1, the target azimuth weight \u03b1 is more extensive, and the mobile robot will head toward the target point. However, the mobile robot will be blocked by the trap-type obstacle on the line between the mobile robot and the target point. It may not be able to bypass the obstacle because the obstacle avoidance weight is too small, thus falling into the local optimum, as shown in Figure 2a. (2) Prioritizing wider channels leads to an increase in path length. When \u03b1 = 0.1, \u03b2 = 0.8, \u03b3 = 0.1, the mobile robot is more capable of avoiding obstacles. However, it may cause the mobile robot to ignore narrower passable passages and choose more expansive passages instead. While this approach maximizes safety, it will lead to a significant increase in the length of the path found by the algorithm, making it difficult to achieve an optimized trajectory, as shown in Figure 2b. (3) The speed weight is too high and the target point represents a reachability problem. When \u03b1 = 0.1, \u03b2 = 0.1, \u03b3 = 0.8, the mobile robot will have a higher bias towards speed and choose the running trajectory with a more significant speed, which can save time to a certain extent. However, it may lead to the mobile robot failing to reach the target point because the speed is too high, the turning radius is larger, and the target point is missed, as shown in Figure 2c.\nDue to the aforementioned challenges, it can be said that the dynamic window method\u2019s improvement path is mostly focused on the trajectory function, which largely entails improving the sub-function and dynamically adjusting the combination of the weight coefficients. The dynamic window method\u2019s capacity for local obstacle avoidance can be enhanced by further sub-function enhancement. The dynamic adjustment can solve challenges related to lengthy path trajectories and elusive goals. They play a crucial role in preventing the dynamic window technique from falling into local optimum and enable the application of the dynamic window algorithm to more complicated and variable dynamic environments.\nSensors 2023, 23, 8260 7 of 20\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 7\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\nand\u00a0choose\u00a0the\u00a0running\u00a0trajectory\u00a0with\u00a0a\u00a0more\u00a0significant\u00a0speed,\u00a0which\u00a0can\u00a0save\u00a0time\u00a0 to\u00a0a\u00a0certain\u00a0extent.\u00a0However,\u00a0it\u00a0may\u00a0lead\u00a0to\u00a0the\u00a0mobile\u00a0robot\u00a0failing\u00a0to\u00a0reach\u00a0the\u00a0target\u00a0 point\u00a0because\u00a0the\u00a0speed\u00a0is\u00a0too\u00a0high,\u00a0the\u00a0turning\u00a0radius\u00a0is\u00a0larger,\u00a0and\u00a0the\u00a0target\u00a0point\u00a0 is\u00a0missed,\u00a0as\u00a0shown\u00a0in\u00a0Figure\u00a02c.\u00a0\n\u00a0 Figure\u00a02.\u00a0The\u00a0main\u00a0problems\u00a0faced\u00a0by\u00a0the\u00a0dynamic\u00a0window\u00a0method\u00a0when\u00a0using\u00a0different\u00a0combinations\u00a0of\u00a0fixed\u00a0weights:\u00a0(a)\u00a0\u03b1\u00a0=\u00a00.8,\u00a0\u03b2\u00a0=\u00a00.1,\u00a0\u03b3\u00a0=\u00a00.1;\u00a0(b)\u00a0\u03b1\u00a0=\u00a00.1,\u00a0\u03b2\u00a0=\u00a00.8,\u00a0\u03b3\u00a0=\u00a00.1;\u00a0(c)\u00a0\u03b1\u00a0=\u00a00.1,\u00a0\u03b2\u00a0=\u00a00.1,\u00a0\u03b3\u00a0=\u00a0 0.8.\u00a0\nDue\u00a0 to\u00a0 the\u00a0 aforementioned\u00a0 challenges,\u00a0 it\u00a0 can\u00a0 be\u00a0 said\u00a0 that\u00a0 the\u00a0 dynamic\u00a0window\u00a0 method\u2019s\u00a0improvement\u00a0path\u00a0is\u00a0mostly\u00a0focused\u00a0on\u00a0the\u00a0trajectory\u00a0function,\u00a0which\u00a0largely\u00a0 entails\u00a0 improving\u00a0 the\u00a0 sub-function\u00a0 and\u00a0dynamically\u00a0 adjusting\u00a0 the\u00a0 combination\u00a0 of\u00a0 the\u00a0 weight\u00a0coefficients.\u00a0The\u00a0dynamic\u00a0window\u00a0method\u2019s\u00a0capacity\u00a0for\u00a0local\u00a0obstacle\u00a0avoidance\u00a0 can\u00a0be\u00a0enhanced\u00a0by\u00a0further\u00a0sub-function\u00a0enhancement.\u00a0The\u00a0dynamic\u00a0adjustment\u00a0can\u00a0solve\u00a0 challenges\u00a0related\u00a0to\u00a0lengthy\u00a0path\u00a0trajectories\u00a0and\u00a0elusive\u00a0goals.\u00a0They\u00a0play\u00a0a\u00a0crucial\u00a0role\u00a0 in\u00a0preventing\u00a0the\u00a0dynamic\u00a0window\u00a0technique\u00a0from\u00a0falling\u00a0into\u00a0local\u00a0optimum\u00a0and\u00a0enable\u00a0 the\u00a0application\u00a0of\u00a0the\u00a0dynamic\u00a0window\u00a0algorithm\u00a0to\u00a0more\u00a0complicated\u00a0and\u00a0variable\u00a0dynamic\u00a0environments.\u00a0\n3.2.\u00a0Dynamic\u00a0Windowing\u00a0Algorithm\u00a0Based\u00a0on\u00a0Fuzzy\u00a0Control\u00a0 3.2.1.\u00a0Fuzzy\u00a0Control\u00a0Dynamically\u00a0Adjusts\u00a0the\u00a0Combination\u00a0of\u00a0Weight\u00a0Coefficients\u00a0\nThe\u00a0dynamic\u00a0window\u00a0method\u00a0and\u00a0its\u00a0improved\u00a0algorithms\u00a0often\u00a0rely\u00a0on\u00a0fixed\u00a0evaluation\u00a0 function\u00a0weight\u00a0 parameters\u00a0when\u00a0 dealing\u00a0with\u00a0 varying\u00a0 obstacle\u00a0 distributions,\u00a0 leading\u00a0to\u00a0unsatisfactory\u00a0path\u00a0planning\u00a0outcomes\u00a0of\u00a0the\u00a0algorithm\u00a0in\u00a0some\u00a0scenarios\u00a0[42].\u00a0\nAllowing\u00a0for\u00a0an\u00a0infinite\u00a0combination\u00a0of\u00a0evaluation\u00a0function\u00a0weights\u00a0will\u00a0inevitably\u00a0 cause\u00a0the\u00a0dynamic\u00a0window\u00a0algorithm\u00a0to\u00a0struggle\u00a0in\u00a0planning\u00a0the\u00a0optimal\u00a0path\u00a0under\u00a0certain\u00a0specific\u00a0circumstances.\u00a0This\u00a0can\u00a0lead\u00a0to\u00a0the\u00a0problems\u00a0of\u00a0falling\u00a0into\u00a0the\u00a0local\u00a0optimum\u00a0 and\u00a0unreachable\u00a0objectives.\u00a0To\u00a0address\u00a0the\u00a0above\u00a0problems,\u00a0this\u00a0paper\u00a0introduces\u00a0a\u00a0fuzzy\u00a0 control\u00a0method\u00a0based\u00a0on\u00a0 the\u00a0dynamic\u00a0window\u00a0algorithm.\u00a0This\u00a0method\u00a0uses\u00a0 the\u00a0 fuzzy\u00a0 control\u00a0method\u00a0to\u00a0dynamically\u00a0adjust\u00a0the\u00a0combination\u00a0of\u00a0weight\u00a0coefficients\u00a0in\u00a0the\u00a0evaluation\u00a0function.\u00a0The\u00a0aim\u00a0is\u00a0to\u00a0better\u00a0adapt\u00a0to\u00a0the\u00a0complex\u00a0and\u00a0changing\u00a0environment\u00a0and\u00a0 improve\u00a0the\u00a0dynamic\u00a0obstacle\u00a0avoidance\u00a0capability\u00a0of\u00a0the\u00a0algorithm.\u00a0\nThe\u00a0construction\u00a0of\u00a0a\u00a0fuzzy\u00a0controller,\u00a0foundational\u00a0to\u00a0fuzzy\u00a0control,\u00a0primarily\u00a0entails\u00a0four\u00a0processes:\u00a0input\u00a0fuzzification,\u00a0fuzzy\u00a0control\u00a0rule\u00a0establishment,\u00a0fuzzy\u00a0inference,\u00a0\ni r . e i r l s f c t ic i t si iffere t co binations of fixed weights: (a) \u03b1 = 0.8, \u03b2 = 0.1, \u03b3 = 0.1; (b) \u03b1 = 0.1, \u03b2 = 0.8, \u03b3 = 0.1; (c) \u03b1 = 0.1, \u03b2 = 0.1, \u03b3 = 0.8."
        },
        {
            "heading": "3.2. Dynamic Windowing Algorithm Based on Fuzzy Control",
            "text": "3.2.1. Fuzzy Control Dynamically Adjusts the Combination of Weight Coefficients\nThe dynamic window method and its improved algorithms often rely on fixed evaluation function weight parameters when dealing with varying obstacle distributions, leading to unsatisfactory path planning outcomes of the algorithm in some scenarios [42]. Allowing for an infinite combination of evaluation function weights will inevitably cause the dynamic window algorithm to struggle in planning the optimal path under certain specific circumstances. This can lead to the problems of falling into the local optimum and unreachable objectives. To address the above problems, this paper introduces a fuzzy control method based on the dynamic window algorithm. This method uses the fuzzy control method to dyna ic lly adjust the combination of weight coefficients in the evaluation function. The aim is to better adapt to the complex and changing environment and improve the dynamic obstacle avoidance capability of the algorithm. The construction of a fuzzy controller, foundational to fuzzy control, primarily entails four processes: input fuzzification, fuzzy control rule establishment, fuzzy inference, and inverse fuzzification. The most crucial of the four steps is fuzzy control rule establishment. The fuzzy controller designed in this section incorporates two inputs and three outputs. The inputs of the fuzzy controller are the distance from the mobile robot to the target point, Dist-Goal, and the distance from the mobile robot to the nearest obstacle, Dist-Obstacle. It can i prove the safety of the planned path and significantly reduce the likelihood of\nllision with obstacles, which is a critical parameter in dynamic obstacle avoidance. The outputs onsist of three weights: \u03b1 for the target azimuth evaluatio functio , \u03b2 for the distanc evaluation function between the mobile robot and the obstacle, and \u03b3 for the velocity evaluation function of the m bile r bot. The input and output variables of the fuzzy controller use continuous-typ theoretical domains, and trapezoidal and triangular functions are used as the affiliation functions. The domain of the input variable Dist-Goal is set to [0, 4], and the fuzzy sets are {PS, PM, PB}, which correspond to the near, medium, and far distances, respectively, max{Dist-Goal} = 4. The input variable Dist-Obstacle is set to [0, 2] with fuzzy sets {PS, PM, PB} corresponding to near, medium, and far distances, respectively, max{Dist-Obstacle} = 2. The graph of the affiliation function of the input variables is shown in Figure 3.\nSensors 2023, 23, 8260 8 of 20\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 8\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\nand\u00a0inverse\u00a0fuzzification.\u00a0The\u00a0most\u00a0crucial\u00a0of\u00a0the\u00a0four\u00a0steps\u00a0is\u00a0fuzzy\u00a0control\u00a0rule\u00a0establishment.\u00a0 The\u00a0fuzzy\u00a0controller\u00a0designed\u00a0in\u00a0this\u00a0section\u00a0incorporates\u00a0two\u00a0inputs\u00a0and\u00a0three\u00a0outputs.\u00a0The\u00a0inputs\u00a0of\u00a0the\u00a0fuzzy\u00a0controller\u00a0are\u00a0the\u00a0distance\u00a0from\u00a0the\u00a0mobile\u00a0robot\u00a0to\u00a0the\u00a0target\u00a0 point,\u00a0Dist-Goal,\u00a0and\u00a0the\u00a0distance\u00a0from\u00a0the\u00a0mobile\u00a0robot\u00a0to\u00a0the\u00a0nearest\u00a0obstacle,\u00a0Dist-Obstacle.\u00a0It\u00a0can\u00a0improve\u00a0the\u00a0safety\u00a0of\u00a0the\u00a0planned\u00a0path\u00a0and\u00a0significantly\u00a0reduce\u00a0the\u00a0likelihood\u00a0 of\u00a0collision\u00a0with\u00a0obstacles,\u00a0which\u00a0is\u00a0a\u00a0critical\u00a0parameter\u00a0in\u00a0dynamic\u00a0obstacle\u00a0avoidance.\u00a0 The\u00a0outputs\u00a0consist\u00a0of\u00a0three\u00a0weights:\u00a0\u03b1\u00a0for\u00a0the\u00a0target\u00a0azimuth\u00a0evaluation\u00a0function,\u00a0\u03b2\u00a0for\u00a0 the\u00a0distance\u00a0evaluation\u00a0function\u00a0between\u00a0the\u00a0mobile\u00a0robot\u00a0and\u00a0the\u00a0obstacle,\u00a0and\u00a0\u03b3\u00a0for\u00a0the\u00a0 velocity\u00a0evaluation\u00a0function\u00a0of\u00a0the\u00a0mobile\u00a0robot.\u00a0\nThe\u00a0input\u00a0and\u00a0output\u00a0variables\u00a0of\u00a0the\u00a0fuzzy\u00a0controller\u00a0use\u00a0continuous-type\u00a0theoretical\u00a0domains,\u00a0and\u00a0trapezoidal\u00a0and\u00a0triangular\u00a0functions\u00a0are\u00a0used\u00a0as\u00a0the\u00a0affiliation\u00a0functions.\u00a0 The\u00a0domain\u00a0of\u00a0the\u00a0input\u00a0variable\u00a0Dist-Goal\u00a0is\u00a0set\u00a0to\u00a0[0,\u00a04],\u00a0and\u00a0the\u00a0fuzzy\u00a0sets\u00a0are\u00a0{PS,\u00a0PM,\u00a0 PB},\u00a0which\u00a0correspond\u00a0 to\u00a0 the\u00a0near,\u00a0medium,\u00a0and\u00a0 far\u00a0distances,\u00a0 respectively,\u00a0max{DistGoal}\u00a0=\u00a04.\u00a0The\u00a0 input\u00a0variable\u00a0Dist-Obstacle\u00a0 is\u00a0set\u00a0 to\u00a0 [0,\u00a02]\u00a0with\u00a0 fuzzy\u00a0sets\u00a0 {PS,\u00a0PM,\u00a0PB}\u00a0 corresponding\u00a0to\u00a0near,\u00a0medium,\u00a0and\u00a0far\u00a0distances,\u00a0respectively,\u00a0max{Dist-Obstacle}\u00a0=\u00a02.\u00a0 The\u00a0graph\u00a0of\u00a0the\u00a0affiliation\u00a0function\u00a0of\u00a0the\u00a0input\u00a0variables\u00a0is\u00a0shown\u00a0in\u00a0Figure\u00a03.\u00a0\nFigure\u00a03.\u00a0Affiliation\u00a0functions\u00a0of\u00a0the\u00a0input\u00a0variables\u00a0and\u00a0output\u00a0variables:\u00a0(a)\u00a0Input\u00a0variable\u00a0Dist-\nGoal;\u00a0(b)\u00a0input\u00a0variable\u00a0Dist-Obstacle;\u00a0(c)\u00a0output\u00a0variable\u00a0\u03b1;\u00a0(d)\u00a0output\u00a0variable\u00a0\u03b2;\u00a0(e)\u00a0output\u00a0variable\u00a0\n\u03b3.\u00a0\nThe\u00a0theoretical\u00a0domains\u00a0for\u00a0the\u00a0output\u00a0variables\u00a0\u03b1,\u00a0\u03b2,\u00a0and\u00a0\u03b3\u00a0are\u00a0uniformly\u00a0defined\u00a0as\u00a0 [0,\u00a01].\u00a0Correspondingly,\u00a0the\u00a0corresponding\u00a0fuzzy\u00a0sets\u00a0are\u00a0all\u00a0{PS,\u00a0PM,\u00a0PB},\u00a0which\u00a0represent\u00a0 {positive\u00a0 small,\u00a0positive\u00a0medium,\u00a0positive\u00a0 large},\u00a0 respectively.\u00a0The\u00a0 affiliation\u00a0 function\u00a0 graph\u00a0for\u00a0the\u00a0input\u00a0variables\u00a0is\u00a0shown\u00a0in\u00a0Figure\u00a03.\u00a0The\u00a0theoretical\u00a0domains\u00a0for\u00a0the\u00a0output\u00a0 variables\u00a0\u03b1,\u00a0\u03b2,\u00a0and\u00a0\u03b3\u00a0are\u00a0uniformly\u00a0defined\u00a0as\u00a0[0,\u00a01].\u00a0Correspondingly,\u00a0the\u00a0corresponding\u00a0 fuzzy\u00a0sets\u00a0are\u00a0all\u00a0{PS,\u00a0PM,\u00a0PB},\u00a0which\u00a0represent\u00a0{positive\u00a0small,\u00a0positive\u00a0medium,\u00a0positive\u00a0 large},\u00a0respectively.\u00a0\nThe\u00a0core\u00a0of\u00a0a\u00a0fuzzy\u00a0controller\u00a0is\u00a0a\u00a0collection\u00a0of\u00a0fuzzy\u00a0rules,\u00a0based\u00a0on\u00a0the\u00a0affiliation\u00a0 function.\u00a0These\u00a0rules\u00a0map\u00a0exact\u00a0values\u00a0in\u00a0an\u00a0argument\u2019s\u00a0domain\u00a0to\u00a0various\u00a0fuzzy\u00a0sub-sets\u00a0 so\u00a0that\u00a0fuzzy\u00a0control\u00a0can\u00a0be\u00a0achieved\u00a0by\u00a0substituting\u00a0fuzzy\u00a0variable\u00a0values\u00a0such\u00a0as\u00a0\u201cposi-\ntive\u00a0large\u201d,\u00a0\u201cpositive\u00a0medium\u201d,\u00a0and\u00a0\u201cpositive\u00a0small\u201d\u00a0for\u00a0exact\u00a0values\u00a0[43].\u00a0Table\u00a01\u00a0presents\u00a0 the\u00a0fuzzy\u00a0rule\u00a0table\u00a0created\u00a0by\u00a0the\u00a0dynamic\u00a0window\u00a0method\u2019s\u00a0algorithmic\u00a0features\u00a0based\u00a0 on\u00a0the\u00a0actual\u00a0motion\u00a0of\u00a0the\u00a0mobile\u00a0robot,\u00a0and\u00a0the\u00a0following\u00a0fuzzy\u00a0rule\u00a0design\u00a0principles\u00a0 are\u00a0used.\u00a0\nThe theoretical domains for the output variables \u03b1, \u03b2, and \u03b3 are uniformly defined as [0, 1]. Correspondingly, the corresponding fuzzy sets are all {PS, PM, PB}, which represent {positive small, positive medium, positive large}, respectively. The affiliation function graph for the input variables is shown in Figure 3. The theoretical domains for the output variables \u03b1, \u03b2, and \u03b3 are uniformly defined as [0, 1]. Correspondingly, the corresponding fuzzy sets are all {PS, PM, PB}, which represent {positive small, positive medium, positive large}, respectively. The core of a fuzzy controller is a collection of fuzzy rules, based on the affiliation function. These rules map exact values in an argument\u2019s domain to various fuzzy sub-sets so that fuzzy control can be achieved by substituting fuzzy variable valu s uch as \u201cp sitive large\u201d, \u201cpositive medium\u201d, and \u201cpositive small\u201d for exact values [43]. Table 1 presents the fuzzy rule table created by the dynamic window method\u2019s algorithmic features based on the actual motion of the mobile robot, and the following fuzzy rule design principles are used.\nTable 1. Fuzzy rule table.\nRule Serial Number Logic Inputs Logic Outputs\nDist-Goal Dist-Obstacle \u03b1 \u03b2 \u03b3\n1 PS PS PB PM PS 2 PS PM PB PM PS 3 PS PB PB PS PS 4 PM PS PS PB PS 5 PM PM PM PM PS 6 PM PB PM PS PB 7 PB PS PS PB PS 8 PB PM PM PM PM 9 PB PB PB PS PB\nSensors 2023, 23, 8260 9 of 20\n(1) When the distance between the mobile robot and the target point and the proximity to the nearest obstacle are considerable, higher values of \u03b1 and \u03b3 and smaller values of \u03b2 should be selected at this time. This configuration encourages the mobile robot to prioritize trajectory with higher speeds, aiming toward the target point to shorten the distance to the target point quickly. (2) In scenarios where the distance between the mobile robot and the target point is significant, and the proximity to the nearest obstacle is minimal, smaller values of \u03b1 and \u03b3 and larger values of \u03b2 should be chosen at this time. This approach encourages the mobile robot to favor a trajectory with low speed and far away from the obstacle to avoid colliding with the obstacle. (3) In cases where the distance between the mobile robot and the target point is small, and the distance to the nearest obstacle is significant, smaller values of \u03b2 and \u03b3 and larger values of \u03b1 should be chosen at this time. This strategy encourages the mobile robot to prioritize the trajectory with low speed, aiming toward the target point to avoid missing the target point. (4) In instances where the distance between the mobile robot and the target point is small and the proximity to the nearest obstacle is close, a more significant value of \u03b1, a moderate value of \u03b2, and a smaller value of \u03b3 should be chosen. This configuration steers the mobile robot to favor a trajectory with low speed and toward the target point, while avoiding collision with the obstacle.\nAfter obtaining the output variables, the fuzzy vector is generated using the Mamdaintype fuzzy inference method. Subsequently, precise output control values are derived through defuzzification using the center of gravity method. This allows the coefficients of the weights of each component of the trajectory evaluation function to be calculated.\n3.2.2. Dynamic Window Algorithm Evaluation Sub-Function Optimization\nIn the dynamic environment, the mobile robot typically approaches obstacles closely to detect dynamic obstacles and activate the judgment function. However, the deceleration of the mobile robot is limited. If the robot or the obstacle moves too swiftly, a collision becomes probable, which is unacceptable. Therefore, there is a need to optimize the three evaluation sub-functions of the traditional dynamic window method to a certain extent to enhance its safe and effective dynamic obstacle avoidance capability.\n(1) Considering the kinematic constraints, motor dynamics constraints, and safety constraints of the mobile robot, the velocity range within a specific time \u2206t is limited. Assuming \u2206t is sufficiently small, both linear velocity and angular velocity are maintained as constant within this duration. The linear and angular velocities in the velocity space are sampled, and the trajectory is determined based on the magnitude and direction of the linear and angular velocities in time \u2206t. The angle of the good area is restricted in alignment with the determined trajectory. The area with more obstacles is avoided as much as possible, and the azimuth evaluation function Heading(v, w) is limited according to the angle of the good area. (2) The distance evaluation function, which assesses the distance between the mobile robot and the obstacles, undergoes enhancement by incorporating a function that accounts for the distance between the mobile robot and the sub-target point to obtain the new distance evaluation function equation:\nDist(v, w) = a \u00b7 Dist\u2212 obstacle(v, w) + b \u00b7 Dist\u2212 goal(v, w) (11)\nIn the formula, a, b\u2014constants.\n(3) The velocity evaluation function, Velocity(v, w), is optimized to ensure that the velocity automatically diminishes when it is close to a dynamic obstacle. However, the reduction is controlled to avoid reaching zero velocity, achieving a safer and faster effect of avoiding dynamic obstacles. In achieving this objective, the introduction of the veloc-\nSensors 2023, 23, 8260 10 of 20\nity difference between the mobile robot and the dynamic obstacle is to be considered. Consequently, the new velocity evaluation function formula is obtained as:\nNew\u2212 velocity(v, w) = m \u00b7Velocity(v, w) + n \u00b7 \u2206Velocity(v, w) (12)\nIn the formula, \u2206Velocity(v, w)\u2014difference in speed between the mobile robot and dynamic obstacle; m, n\u2014constants.\nThe final optimized evaluation function equation is:\nG(v, w) = \u03c3[\u03b1 \u00b7 Heading(v, w) + \u03b2 \u00b7 Dist(v, w) + \u03b3 \u00b7 New\u2212 velocity(v, w)] (13)\nThe final flowchart of the improved dynamic window method is shown in Figure 4. The algorithm flow steps are:\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 11\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n\u00a0 Figure\u00a04.\u00a0Flowchart\u00a0for\u00a0improving\u00a0the\u00a0dynamic\u00a0window\u00a0method.\u00a0\n(1) The\u00a0velocity\u00a0range\u00a0within\u00a0a\u00a0specific\u00a0 time\u00a0\u0394t\u00a0 is\u00a0constrained\u00a0 in\u00a0accordance\u00a0with\u00a0 the\u00a0 mobile\u00a0robot\u2019s\u00a0kinematic\u00a0constraints,\u00a0motor\u00a0dynamics\u00a0constraints,\u00a0and\u00a0safety\u00a0constraints.\u00a0Under\u00a0the\u00a0assumption\u00a0that\u00a0the\u00a0time\u00a0\u0394t\u00a0is\u00a0sufficiently\u00a0short,\u00a0both\u00a0linear\u00a0velocity\u00a0and\u00a0angular\u00a0velocity\u00a0remain\u00a0constant\u00a0within\u00a0the\u00a0time\u00a0\u0394t;\u00a0 (2) The\u00a0linear\u00a0and\u00a0angular\u00a0velocities\u00a0in\u00a0velocity\u00a0space\u00a0are\u00a0sampled,\u00a0allowing\u00a0for\u00a0the\u00a0determination\u00a0of\u00a0the\u00a0trajectory\u00a0in\u00a0time\u00a0\u0394t\u00a0according\u00a0to\u00a0the\u00a0magnitude\u00a0and\u00a0direction\u00a0of\u00a0 the\u00a0linear\u00a0and\u00a0angular\u00a0velocities.\u00a0The\u00a0angle\u00a0of\u00a0the\u00a0passable\u00a0area\u00a0is\u00a0limited\u00a0according\u00a0 to\u00a0the\u00a0trajectory,\u00a0and\u00a0the\u00a0area\u00a0with\u00a0more\u00a0obstacles\u00a0is\u00a0avoided\u00a0as\u00a0much\u00a0as\u00a0possible;\u00a0 (3) The\u00a0obstacle\u00a0map\u00a0is\u00a0processed\u00a0to\u00a0identify\u00a0the\u00a0end\u00a0position\u00a0\u201cT\u201d\u00a0and\u00a0the\u00a0start\u00a0position\u00a0 \u201cS\u201d.\u00a0Subsequently,\u00a0global\u00a0path\u00a0planning\u00a0 is\u00a0executed\u00a0utilizing\u00a0the\u00a0enhanced\u00a0hybrid\u00a0 genetic\u00a0and\u00a0ant\u00a0colony\u00a0algorithm\u00a0for\u00a0global\u00a0path\u00a0planning\u00a0as\u00a0described\u00a0above;\u00a0 (4) The\u00a0 globally\u00a0 optimal\u00a0path\u00a0 is\u00a0divided,\u00a0 and\u00a0 inflection\u00a0 points\u00a0 or\u00a0 obstacle\u00a0 occlusion\u00a0 points\u00a0are\u00a0selected\u00a0for\u00a0marking,\u00a0designated\u00a0as\u00a0multi-level\u00a0sub-target\u00a0points;\u00a0 (5) Concluding\u00a0the\u00a0dynamic\u00a0planning\u00a0of\u00a0the\u00a0environment\u00a0construction\u00a0map\u00a0involves\u00a0positioning\u00a0the\u00a0starting\u00a0and\u00a0ending\u00a0points\u00a0for\u00a0the\u00a0movement\u00a0of\u00a0dynamic\u00a0obstacles.\u00a0The\u00a0 dynamic\u00a0obstacles\u00a0are\u00a0set\u00a0to\u00a0travel\u00a0back\u00a0and\u00a0forth\u00a0at\u00a0a\u00a0consistent\u00a0speed\u00a0(slower\u00a0than\u00a0 the\u00a0mobile\u00a0robot\u2019s\u00a0movement\u00a0speed),\u00a0and\u00a0new\u00a0grey\u00a0static\u00a0obstacles\u00a0are\u00a0added;\u00a0 (6) The\u00a0passable\u00a0area\u2019s\u00a0angle,\u00a0which\u00a0was\u00a0determined\u00a0in\u00a0Step\u00a02,\u00a0acts\u00a0as\u00a0a\u00a0constraint\u00a0for\u00a0 the\u00a0azimuth\u00a0angle\u00a0 function.\u00a0To\u00a0expedite\u00a0 the\u00a0algorithm\u2019s\u00a0convergence,\u00a0 the\u00a0distance\u00a0 evaluation\u00a0function\u00a0takes\u00a0the\u00a0distance\u00a0to\u00a0the\u00a0sub-target\u00a0point\u00a0into\u00a0account.\u00a0The\u00a0velocity\u00a0evaluation\u00a0function\u00a0takes\u00a0into\u00a0account\u00a0the\u00a0velocity\u00a0differential\u00a0between\u00a0the\u00a0mobile\u00a0 robot\u00a0and\u00a0the\u00a0dynamic\u00a0obstacle.\u00a0This\u00a0ensures\u00a0a\u00a0gradual\u00a0reduction\u00a0in\u00a0velocity\u00a0as\u00a0the\u00a0\nFig re 4. Flo chart for improving the dynamic window method.\n( ) he elocity range ithin a specific ti e \u2206t is c nstrained in accordance with the mobile rob t\u2019s kinematic constraints, mot r dynamics constraints, and safety constraints. Under the assumption that the time \u2206t is sufficiently short, both linear velocity and angular velocity remain constant within the time \u2206t; (2) The linear and angular velocities in velocity space are sampled, allowing for the determination of the trajectory in time \u2206t according to the magnitude and direction of the linear and angular velocities. The angle of the passable area is limited according to the trajectory, and the area with more obstacles is avoided as much as possible; (3) The obstacle map is processed to identify the end position \u201cT\u201d and the start position \u201cS\u201d. Subsequently, global path planning is executed utilizing the enhanced hybrid genetic and ant colony algorithm for global path planning as described above;\nSensors 2023, 23, 8260 11 of 20\n(4) The globally optimal path is divided, and inflection points or obstacle occlusion points are selected for marking, designated as multi-level sub-target points; (5) Concluding the dynamic planning of the environment construction map involves positioning the starting and ending points for the movement of dynamic obstacles. The dynamic obstacles are set to travel back and forth at a consistent speed (slower than the mobile robot\u2019s movement speed), and new grey static obstacles are added; (6) The passable area\u2019s angle, which was determined in Step 2, acts as a constraint for the azimuth angle function. To expedite the algorithm\u2019s convergence, the distance evaluation function takes the distance to the sub-target point into account. The velocity evaluation function takes into account the velocity differential between the mobile robot and the dynamic obstacle. This ensures a gradual reduction in velocity as the mobile robot approaches the dynamic obstacle, preventing a complete halt in movement. This strategy aims to smooth out the planned path and eliminate breakpoints; (7) The three evaluation functions are normalized, and the linear and angular velocities in \u2206t time are chosen based on the evaluation functions to complete the local obstacle avoidance and path planning. The planned path in a sub-interval is completed continuously for one segment until it reaches the sub-target point; (8) After successfully avoiding dynamic obstacles during motion, the mobile robot promptly undergoes positional adjustments to return to the globally optimal path as soon as possible; (9) Upon concluding the path planning for one sub-interval, Steps 6, 7, and 8 are continued to complete the local dynamic obstacle avoidance and path planning of the next sub-interval until the global path planning is completed and the target point location is set."
        },
        {
            "heading": "3.3. Global Optimal Paths Are Introduced",
            "text": "The local dynamic obstacle avoidance effect of the improved dynamic window method has been improved to some extent. However, inherent algorithmic limitations persist, making it susceptible to falling into the local optimum. Therefore, the global optimal path must be introduced to guarantee both the local dynamic obstacle avoidance and the superiority of the global planning path.\n3.3.1. Key Sub-Goal Point Setting\nThe dynamic window method in path planning lacks the overall consideration of global information, which leads to the inability of the algorithm to choose the correct \u201cescape\u201d path once the mobile robot encounters semi-enclosed obstacles such as \u201cL\u201d- and \u201cC\u201d-type paths [44]. Therefore, the critical target point method is introduced to divide the global planning path into several small segments according to the position of the obstacles for local dynamic planning, which can achieve better local obstacle avoidance and solve the disadvantage of poor global planning effect on the dynamic window method. The global optimal path is obtained by the A* algorithm. The global optimal path is divided according to the information on obstacle distribution location and corners. Then, the more representative path points are selected as the key sub-target points in the process of local planning by the dynamic window method.\nSelection principle of key sub-target points:\n(1) Corner principle: Emphasizing more prominent or critical corners and utilizing them as sub-target points to prevent the dynamic window method from losing targets in the planning process, resulting in the loss of planning effects; (2) Obstacle avoidance principle: In cases of a longer linear running path, considering the distribution of obstacles, it is prudent to opt for path points that are distant from obstacles as sub-target points. This strategy helps minimize the likelihood of collisions with obstacles.\nSensors 2023, 23, 8260 12 of 20\n3.3.2. Movement Position Adjustment\nA discrepancy exists between the positioning orientation at the sub-goal point and the positional attitude of the globally planned path. This occurs due to the dynamic window technique unavoidably departing from the global ideal path during the dynamic planning process. It becomes increasingly challenging to follow the intended global optimal path as this gap widens. To ensure that the mobile robot\u2019s trajectory realigns with the overall ideal path while avoiding dynamic obstacles, the position attitude of the robot must be changed in real time. Figure 5 illustrates how the mobile robot\u2019s mobility stance can be adjusted. Sensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 13\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n\u00a0\nFigure\u00a05.\u00a0Mobile\u00a0robot\u00a0motion\u00a0posture\u00a0adjustment.\u00a0\nThe\u00a0arrowed\u00a0lines\u00a0in\u00a0Figure\u00a05\u00a0represent\u00a0the\u00a0amount\u00a0and\u00a0direction\u00a0of\u00a0potential\u00a0movement\u00a0velocities.\u00a0The\u00a0brown\u00a0solid\u00a0line\u00a0l2\u00a0is\u00a0the\u00a0planning\u00a0path\u00a0after\u00a0setting\u00a0multi-level\u00a0subtarget\u00a0points,\u00a0 from\u00a0position\u00a0p1\u00a0 to\u00a0position\u00a0p2,\u00a0close\u00a0to\u00a0the\u00a0green\u00a0dashed\u00a0line\u00a0 l1,\u00a0enabling\u00a0 position\u00a0adjustment\u00a0during\u00a0robot\u00a0movement.\u00a0The\u00a0blue\u00a0dashed\u00a0line\u00a0l1\u00a0is\u00a0the\u00a0planning\u00a0path\u00a0 of\u00a0the\u00a0improved\u00a0dynamic\u00a0windowing\u00a0algorithm\u00a0in\u00a0this\u00a0section.\u00a0It\u00a0is\u00a0the\u00a0total\u00a0error\u00a0brought\u00a0 on\u00a0by\u00a0the\u00a0mobile\u00a0robot\u2019s\u00a0departure\u00a0from\u00a0the\u00a0intended\u00a0path\u00a0once\u00a0dynamic\u00a0obstacle\u00a0avoidance\u00a0has\u00a0been\u00a0successful.\u00a0\n4.\u00a0Simulation\u00a0of\u00a0Indoor\u00a0Dynamic\u00a0Environment\u00a0Simulation\u00a0Experiments\u00a0 4.1.\u00a0Experimental\u00a0Parameter\u00a0Setting\u00a0of\u00a0Dynamic\u00a0Window\u00a0Method\u00a0\nThe\u00a0improved\u00a0dynamic\u00a0windowing\u00a0algorithm\u00a0proposed\u00a0in\u00a0this\u00a0section\u00a0is\u00a0compared\u00a0 with\u00a0the\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0proposed\u00a0by\u00a0Pang\u00a0et\u00a0al.\u00a0[45],\u00a0and\u00a0simulation\u00a0experiments\u00a0are\u00a0performed\u00a0in\u00a0different\u00a0dynamic\u00a0environments\u00a0using\u00a0MATLAB\u00a0R2021b.\u00a0\nIn\u00a0 the\u00a0simulation\u00a0environment,\u00a0the\u00a0computer\u00a0system\u00a0environment\u00a0 is\u00a0Windows\u00a010,\u00a0 the\u00a0processor\u00a0is\u00a0Intel\u00a0Core\u00a0i7-12700H\u00a0(Intel,\u00a0Santa\u00a0Clara,\u00a0CA,\u00a0USA),\u00a0the\u00a0running\u00a0memory\u00a0 is\u00a06\u00a0GB,\u00a0and\u00a0the\u00a0compilation\u00a0environment\u00a0is\u00a0MATLAB2018b.\u00a0The\u00a0relevant\u00a0parameters\u00a0of\u00a0 the\u00a0dynamic\u00a0window\u00a0method\u00a0are\u00a0set\u00a0as\u00a0shown\u00a0in\u00a0Table\u00a02.\u00a0\nTable\u00a02.\u00a0Parameters\u00a0related\u00a0to\u00a0the\u00a0dynamic\u00a0windowing\u00a0algorithm.\u00a0\nThe\u00a0initial\u00a0pointing\u00a0weights\u00a0(azimuth\u00a0weights),\u00a0initial\u00a0safety\u00a0distance\u00a0weights,\u00a0initial\u00a0 velocity\u00a0weights,\u00a0and\u00a0maximum\u00a0velocity\u00a0weights\u00a0are\u00a0set\u00a0to\u00a0prevent\u00a0the\u00a0velocity\u00a0weights\u00a0 from\u00a0being\u00a0too\u00a0large\u00a0and\u00a0causing\u00a0the\u00a0mobile\u00a0robot\u00a0to\u00a0miss\u00a0the\u00a0target\u00a0point\u00a0due\u00a0to\u00a0the\u00a0large\u00a0 velocity\u00a0share\u00a0in\u00a0the\u00a0movement\u00a0process.\u00a0\n\u00a0 \u00a0\nFigure 5. obile robot motion posture adjustment.\nhe arrowed lines in Figure 5 represent the amount and direction of potential moveent velocities. The brown solid line l2 is the planning path after setting multi-level sub-target points, from position p1 to position p2, close to the green dashed line l1, enabling position adjustment during robot movement. The blue dashed line l1 is the planning path of the improved dynamic windowing algorithm in this section. It is the total error brought on by the mobile robot\u2019s departure from the intended path once dynamic obstacle avoidance has been successful."
        },
        {
            "heading": "4. Simulation of Indoor Dynamic Environment Simulation Experiments",
            "text": ""
        },
        {
            "heading": "4.1. Experimental Parameter Setting of Dynamic Window Method",
            "text": "The improved dynamic windowing algorithm proposed in this section is compared with the A* fusion DWA algorithm proposed by Pang et al. [45], and simulation experiments are performed in different dynamic environments using MATLAB R2021b. In the simulation environment, the computer system environment is Windows 10, the processor is Intel Core i7-12700H (Intel, Santa Clara, CA, USA), the running memory is 6 GB, and the compilation environment is MATLAB2018b. The relevant parameters of the dynamic window method are set as shown in Table 2.\nSensors 2023, 23, 8260 13 of 20\nThe initial pointing weights (azimuth weights), initial safety distance weights, initial velocity weights, and maximum velocity weights are set to prevent the velocity weights from being too large and causing the mobile robot to miss the target point due to the large velocity share in the movement process."
        },
        {
            "heading": "4.2. Simulation Comparison Experiment under the Dynamic Environment of Unidirectional Motion",
            "text": "The decision has been made to compare and analyze the motion trajectory graph, attitude angle against time graph, linear velocity and angular velocity against time graph, dynamic window algorithm, A* fusion dynamic window algorithm, and improved dynamic window method. The small yellow square that is the dynamic obstacle moves in one direction at a constant speed of 1 m/s, as shown by the dotted line. The black square is a stationary barrier with known dimensions. The green straight line is the motion guide, and the blue one is the program trajectory. From the comparison of Figures 6\u20138, it can be seen that although the dynamic window method can achieve dynamic obstacle avoidance, the planning path is too tortuous. The A* fusion DWA algorithm can achieve dynamic obstacle avoidance in simple static and one-way motion dynamic environments. However, due to the problem of the way the A* algorithm searches for path points, it can cause the algorithm to deviate too much from the original global path at the beginning, increasing path length. The improved dynamic window algorithm proposed in this section can achieve good obstacle avoidance for new static and multi-dynamic obstacles with unidirectional motion. It can return to the global planning path soon after local obstacle avoidance. Thus, it maintains a better overall path and saves time.\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 14\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n4.2.\u00a0Simulation\u00a0Comparison\u00a0Experi ent\u00a0under\u00a0the\u00a0Dynamic\u00a0Environment\u00a0of\u00a0Unidirectional\u00a0 M t on\u00a0\nThe\u00a0decision\u00a0has\u00a0been\u00a0made\u00a0 to\u00a0compare\u00a0and\u00a0analyze\u00a0 the\u00a0motion\u00a0 trajectory\u00a0graph,\u00a0 attitude\u00a0angle\u00a0against\u00a0time\u00a0graph,\u00a0linear\u00a0velocity\u00a0and\u00a0angular\u00a0velocity\u00a0against\u00a0time\u00a0graph,\u00a0 dynamic\u00a0window\u00a0algorithm,\u00a0A*\u00a0fusion\u00a0dynamic\u00a0window\u00a0algorithm,\u00a0and\u00a0 improved\u00a0dynamic\u00a0window\u00a0method.\u00a0The\u00a0small\u00a0y llow\u00a0square\u00a0th t\u00a0is\u00a0the\u00a0dynamic\u00a0obstacle\u00a0moves\u00a0in\u00a0 o e\u00a0d rection\u00a0at\u00a0a\u00a0constant\u00a0speed\u00a0of\u00a01\u00a0 /s,\u00a0as\u00a0shown\u00a0by\u00a0the\u00a0dotted\u00a0line.\u00a0The\u00a0black\u00a0square\u00a0 is\u00a0a\u00a0stationary\u00a0barrier\u00a0with\u00a0kno n\u00a0dimensions.\u00a0The\u00a0green\u00a0straight\u00a0line\u00a0is\u00a0the\u00a0motion\u00a0guide,\u00a0 and\u00a0the\u00a0blue\u00a0one\u00a0is\u00a0the\u00a0program\u00a0trajectory.\u00a0 From\u00a0the\u00a0comparison\u00a0of\u00a0Figures\u00a06\u20138,\u00a0it\u00a0can\u00a0be\u00a0seen\u00a0that\u00a0although\u00a0the\u00a0dynamic\u00a0window\u00a0method\u00a0can\u00a0achieve\u00a0dynamic\u00a0obstacle\u00a0avoidance,\u00a0the\u00a0planning\u00a0path\u00a0is\u00a0too\u00a0tortuous.\u00a0 The\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0can\u00a0achieve\u00a0dynamic\u00a0obstacle\u00a0avoidance\u00a0in\u00a0simple\u00a0static\u00a0 and\u00a0one-way\u00a0motion\u00a0dynamic\u00a0environments.\u00a0However,\u00a0 ue\u00a0to\u00a0the\u00a0problem\u00a0of\u00a0the\u00a0way\u00a0the\u00a0 A*\u00a0algorithm\u00a0searches\u00a0for\u00a0path\u00a0points,\u00a0it\u00a0can\u00a0cause\u00a0the\u00a0algorithm\u00a0to\u00a0deviate\u00a0too\u00a0much\u00a0from\u00a0 the\u00a0original\u00a0global\u00a0path\u00a0at\u00a0the\u00a0beginning,\u00a0increasing\u00a0path\u00a0length.\u00a0The\u00a0improved\u00a0dynamic\u00a0 window\u00a0algorithm\u00a0proposed\u00a0in\u00a0this\u00a0section\u00a0can\u00a0achieve\u00a0good\u00a0obstacle\u00a0avoidance\u00a0for\u00a0new\u00a0 static\u00a0and\u00a0multi-dynamic\u00a0obstacles\u00a0with\u00a0unidirectional\u00a0motion.\u00a0It\u00a0can\u00a0return\u00a0to\u00a0the\u00a0global\u00a0 planning\u00a0path\u00a0soon\u00a0after\u00a0local\u00a0obstacle\u00a0avoidance.\u00a0Thus,\u00a0it\u00a0maintains\u00a0a\u00a0better\u00a0overall\u00a0path\u00a0 and\u00a0saves\u00a0time.\u00a0\n\u00a0\nFigure\u00a06.\u00a0DWA\u00a0algorithm\u00a0one-way\u00a0motion\u00a0trajectory\u00a0in\u00a0a\u00a0dynamic\u00a0environment:\u00a0(a)\u00a0avoid\u00a0known\u00a0\nstatic\u00a0obstacles;\u00a0(b)\u00a0avoid\u00a0new\u00a0static\u00a0obstacles;\u00a0(c)\u00a0detect\u00a0dynamic\u00a0obstacles;\u00a0(d)\u00a0successfully\u00a0avoid\u00a0\ndynamic\u00a0obstacles\u00a0and\u00a0reach\u00a0the\u00a0endpoint.\u00a0\nFigure 6. DWA algorithm one-way motion trajectory in a dynamic e vironment: (a) avoid known static obstacles; (b) avoid new static obstacle ; ( ) dete t ynamic obstacles; (d) successfully avoid dynamic obstacles and reach the endpoint.\nSensors 2023, 23, 8260 14 of 20Sensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 15\u00a0 of\u00a0 22\u00a0\u00a0\n\u00a0\n\u00a0\nFigure\u00a07.\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0one-way\u00a0motion\u00a0dynamic\u00a0environment\u00a0obstacle\u00a0avoidance\u00a0mo-\ntion\u00a0trajectory:\u00a0(a)\u00a0follow\u00a0the\u00a0first\u00a0sub-target\u00a0point,\u00a0avoid\u00a0static\u00a0obstacles;\u00a0(b)\u00a0follow\u00a0the\u00a0second\u00a0sub-\ntarget\u00a0point;\u00a0(c)\u00a0follow\u00a0the\u00a0third\u00a0sub-target\u00a0point,\u00a0detect\u00a0dynamic\u00a0obstacles;\u00a0(d)\u00a0successfully\u00a0avoid\u00a0\ndynamic\u00a0obstacles,\u00a0reach\u00a0the\u00a0endpoint.\u00a0\n\u00a0\nFigure\u00a08.\u00a0Improvement\u00a0of\u00a0the\u00a0trajectory\u00a0of\u00a0the\u00a0DWA\u00a0algorithm\u00a0for\u00a0obstacle\u00a0avoidance\u00a0in\u00a0a\u00a0one-way\u00a0\nmotion\u00a0dynamic\u00a0environment:\u00a0(a)\u00a0detect\u00a0the\u00a0first\u00a0dynamic\u00a0obstacle;\u00a0(b)\u00a0accelerate\u00a0to\u00a0avoid\u00a0the\u00a0first\u00a0\ndynamic\u00a0obstacle;\u00a0(c)\u00a0detect\u00a0the\u00a0second\u00a0dynamic\u00a0obstacle;\u00a0(d)\u00a0successfully\u00a0avoid\u00a0all\u00a0dynamic\u00a0obsta-\ncles\u00a0and\u00a0reach\u00a0the\u00a0endpoint.\u00a0\nFigure 7. A* fusion DWA algorithm one-way motion dynamic environment obstacle avoidance motion trajectory: (a) follow the first sub-target point, avoid static obstacles; (b) follow the second sub-target point; (c) follow the third sub-target point, detect dynamic obstacles; (d) successfully avoid dynamic obstacles, reach the endpoint.\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 15\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n\u00a0\nFigure\u00a07.\u00a0 \u00a0 \u00a0 \u00a0algorithm\u00a0one-way\u00a0motion\u00a0dynamic\u00a0environment\u00a0obstacle\u00a0avoidance\u00a0mo-\ntion\u00a0trajectory:\u00a0(a)\u00a0foll w\u00a0the\u00a0first\u00a0 ub-target\u00a0point,\u00a0avoid\u00a0static\u00a0obstacles;\u00a0(b)\u00a0foll w\u00a0the\u00a0s cond\u00a0sub-\ntarget\u00a0point;\u00a0(c)\u00a0follow\u00a0the\u00a0third\u00a0sub-target\u00a0point,\u00a0detect\u00a0dyna ic\u00a0obstacles;\u00a0(d)\u00a0successfully\u00a0avoid\u00a0\ndynamic\u00a0obstacles,\u00a0reach\u00a0the\u00a0endpoint.\u00a0\n\u00a0\ni re\u00a08.\u00a0I prove ent\u00a0of\u00a0the\u00a0trajectory\u00a0of\u00a0the\u00a0DWA\u00a0algorithm\u00a0for\u00a0obstacle\u00a0avoidance\u00a0in\u00a0a one-way\u00a0\nti \u00a0 yna ic\u00a0environ ent:\u00a0(a)\u00a0detect\u00a0the\u00a0first\u00a0dynamic\u00a0obstacle;\u00a0(b)\u00a0accelerate\u00a0to\u00a0avoid\u00a0the\u00a0first\u00a0\nic\u00a0obstacle;\u00a0(c)\u00a0detect\u00a0the\u00a0second\u00a0dynamic\u00a0obstacle;\u00a0(d)\u00a0suc es fully\u00a0avoid\u00a0all\u00a0dynamic\u00a0obsta-\nl s\u00a0 \u00a0reach\u00a0the\u00a0endpoint.\u00a0\nFigure 8. Improvement of the trajectory of the DWA algorithm for obstacle avoidance in a one-way motion dynamic environment: (a) detect the first dynamic obstacle; (b) accelerate to avoid the first dynamic obstacle; (c) detect the second dynamic obstacle; (d) successfully avoid all dynamic obstacles and reach the endpoint.\nSensors 2023, 23, 8260 15 of 20\nThe comparisons in Figure 9 highlight that improved dynamic window algorithm proposed in this section has a smoother change in attitude angle compared to the A* fusion DWA algorithm. It allows the mobile robot to reduce the rotation angle during motion, ultimately reducing energy consumption.\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 16\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\nThe\u00a0comparisons\u00a0 in\u00a0Figure\u00a09\u00a0highlight\u00a0 that\u00a0 improved\u00a0dynamic\u00a0window\u00a0algorithm\u00a0 proposed\u00a0in\u00a0this\u00a0section\u00a0has\u00a0a\u00a0smoother\u00a0change\u00a0in\u00a0attitude\u00a0angle\u00a0compared\u00a0to\u00a0the\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm.\u00a0It\u00a0allows\u00a0the\u00a0mobile\u00a0robot\u00a0to\u00a0reduce\u00a0the\u00a0rotation\u00a0angle\u00a0during\u00a0motion,\u00a0ultimately\u00a0reducing\u00a0energy\u00a0consumption.\u00a0\nFigure\u00a09.\u00a0The\u00a0attitude\u00a0angle\u00a0versus\u00a0time\u00a0curves\u00a0are\u00a0(a\u2013c),\u00a0and\u00a0the\u00a0linear\u00a0and\u00a0angular\u00a0velocity\u00a0versus\u00a0\ntime\u00a0curves\u00a0are\u00a0(d\u2013f).\u00a0(a,d)\u00a0DWA\u00a0algorithm;\u00a0(b,e)\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm;\u00a0(c,f)\u00a0improved\u00a0DWA\u00a0\nalgorithm.\u00a0The\u00a0solid\u00a0blue\u00a0line\u00a0represents\u00a0the\u00a0orientation\u00a0angle,\u00a0the\u00a0dashed\u00a0blue\u00a0line\u00a0represents\u00a0the\u00a0\nlinear\u00a0velocity,\u00a0and\u00a0the\u00a0solid\u00a0red\u00a0line\u00a0represents\u00a0the\u00a0angular\u00a0velocity.\u00a0\nRegarding\u00a0line\u00a0velocity\u00a0and\u00a0angular\u00a0velocity\u00a0variation,\u00a0the\u00a0improved\u00a0dynamic\u00a0window\u00a0algorithm\u00a0has\u00a0a\u00a0lower\u00a0line\u00a0velocity\u00a0and\u00a0angular\u00a0velocity\u00a0variation.\u00a0This\u00a0characteristic\u00a0 demands\u00a0less\u00a0frequent\u00a0and\u00a0intense\u00a0acceleration\u00a0and\u00a0deceleration,\u00a0thus\u00a0ensuring\u00a0the\u00a0operation\u00a0of\u00a0the\u00a0mobile\u00a0robot.\u00a0The\u00a0three\u00a0algorithms\u2019\u00a0average\u00a0planning\u00a0time\u00a0and\u00a0optimal\u00a0path\u00a0 length\u00a0are\u00a0statistically\u00a0recorded\u00a0and\u00a0compared\u00a0for\u00a0analysis.\u00a0 The\u00a0average\u00a0planning\u00a0times\u00a0of\u00a0the\u00a0DWA\u00a0algorithm,\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm,\u00a0and\u00a0 improved\u00a0DWA\u00a0algorithm\u00a0in\u00a0a\u00a0dynamic\u00a0environment\u00a0are\u00a064.58,\u00a056.70,\u00a0and\u00a048.84,\u00a0respectively,\u00a0and\u00a0the\u00a0average\u00a0path\u00a0lengths\u00a0are\u00a034.57,\u00a032.22,\u00a0and\u00a031.02,\u00a0respectively.\u00a0 From\u00a0the\u00a0above\u00a0results,\u00a0it\u00a0is\u00a0clear\u00a0that\u00a0the\u00a0improved\u00a0DWA\u00a0algorithm\u00a0proposed\u00a0in\u00a0this\u00a0 section\u00a0 reduces\u00a0 the\u00a0 average\u00a0planning\u00a0 time\u00a0 by\u00a0 25.6%\u00a0 and\u00a0 13.8%\u00a0 and\u00a0 the\u00a0 average\u00a0path\u00a0 length\u00a0by\u00a010.2%\u00a0and\u00a03.7%,\u00a0respectively,\u00a0compared\u00a0to\u00a0the\u00a0dynamic\u00a0window\u00a0method\u00a0and\u00a0 the\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0in\u00a0a\u00a0one-way\u00a0motion\u00a0dynamic\u00a0environment.\u00a0\n4.3.\u00a0Simulation\u00a0and\u00a0Comparison\u00a0Experiments\u00a0under\u00a0the\u00a0Dynamic\u00a0Environment\u00a0of\u00a0Round\u2010Trip\u00a0 Motion\u00a0\nTo\u00a0further\u00a0validate\u00a0the\u00a0effectiveness\u00a0of\u00a0the\u00a0algorithm,\u00a0a\u00a0simulation\u00a0comparison\u00a0experiment\u00a0 is\u00a0conducted\u00a0again\u00a0under\u00a0 the\u00a0dynamic\u00a0environment\u00a0where\u00a0 the\u00a0obstacles\u00a0perform\u00a0round-trip\u00a0motion.\u00a0The\u00a0new\u00a0static\u00a0obstacle\u00a0location\u00a0and\u00a0number\u00a0and\u00a0dynamic\u00a0obstacle\u00a0starting\u00a0point,\u00a0endpoint,\u00a0and\u00a0trajectory\u00a0are\u00a0different,\u00a0and\u00a0dynamic\u00a0obstacles\u2019\u00a0uniform\u00a0 round-trip\u00a0motion,\u00a0algorithm\u00a0settings,\u00a0and\u00a0other\u00a0simulation\u00a0experimental\u00a0conditions\u00a0are\u00a0 kept\u00a0the\u00a0same.\u00a0 From\u00a0Figures\u00a010\u201312,\u00a0it\u00a0can\u00a0be\u00a0seen\u00a0that\u00a0the\u00a0dynamic\u00a0window\u00a0method\u00a0cannot\u00a0achieve\u00a0 good\u00a0dynamic\u00a0obstacle\u00a0avoidance\u00a0when\u00a0the\u00a0environment\u00a0becomes\u00a0more\u00a0complex.\u00a0It\u00a0will\u00a0 be\u00a0easy\u00a0to\u00a0fall\u00a0into\u00a0the\u00a0local\u00a0optimum\u00a0or\u00a0even\u00a0hit\u00a0dynamic\u00a0obstacles.\u00a0\nRegarding line velocity and angular velocity variation, the improved dynamic window algorithm has a lower line velocity and angular velocity variation. This characteristic demands less frequent and intense acceleration and deceleration, thus ensuring the operation of the mobile robot. The three algorithms\u2019 average planning time and optimal path length are statistically recorded and compared for analysis. T e average planning times of the DWA algorithm, A* fusion DWA algorithm, and improved DWA algorithm in a dynamic environment are 64.58, 56.70, and 48.84, respectively, and the average path lengt s are 34.57, 32.22, a d 31.02, respectively. From the above results, it is clear that the improved DWA algorithm proposed in this section reduces the average planning time by 25.6% and 13.8% and the average path length by 10.2% and 3.7%, respectively, compared to the dynamic window method and the A* fusion DWA algorithm in a one-way motion dynamic environment."
        },
        {
            "heading": "4.3. Simulation and Comparison Experiments under the Dynamic Environment of Round-Trip Motion",
            "text": "To further v li ate the effectiveness of the algorithm, a simulatio comparison experiment is conducted again under the dynamic environment where the obstacles perform round-trip motion. The new static obstacle location and number and dynamic obstacle starting point, endpoint, and trajectory are different, and dynamic obstacles\u2019 uniform round-trip motion, algorithm settings, and other simulation experimental conditions are kept the same. From Figures 10\u201312, it can be seen that the dynamic wi dow method cannot achi ve good ynamic bstacle avoidance when the environment becomes mor complex. It will be easy to f ll into the local optimum or even hit dynamic obstacles.\nSensors 2023, 23, 8260 16 of 20Sensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 17\u00a0 of\u00a0 22\u00a0\u00a0\n\u00a0\n\u00a0\nFigure\u00a010.\u00a0DWA\u00a0algorithm\u00a0round-trip\u00a0motion\u00a0trajectory\u00a0in\u00a0a\u00a0dynamic\u00a0environment:\u00a0(a)\u00a0detect\u00a0dy-\nnamic\u00a0obstacles;\u00a0(b)\u00a0hit\u00a0dynamic\u00a0obstacles;\u00a0(c)\u00a0avoid\u00a0new\u00a0static\u00a0obstacles;\u00a0(d)\u00a0avoid\u00a0all\u00a0static\u00a0obsta-\ncles.\u00a0 \u00a0\n\u00a0\nFigure\u00a011.\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0round-trip\u00a0motion\u00a0dynamic\u00a0environment\u00a0obstacle\u00a0avoidance\u00a0\nmotion\u00a0 trajectory:\u00a0 (a)\u00a0detect\u00a0 the\u00a0first\u00a0dynamic\u00a0obstacles;\u00a0 (b)\u00a0accelerate\u00a0 to\u00a0avoid\u00a0 the\u00a0first\u00a0dynamic\u00a0\nobstacles;\u00a0(c)\u00a0follow\u00a0the\u00a0second\u00a0sub-target\u00a0point\u00a0to\u00a0avoid\u00a0additional\u00a0static\u00a0obstacles;\u00a0(d)\u00a0successfully\u00a0\navoid\u00a0all\u00a0static\u00a0and\u00a0dynamic\u00a0obstacles\u00a0and\u00a0reach\u00a0the\u00a0endpoint.\u00a0\nFigure 10. DWA algorithm round-trip motion trajectory in a dynamic environment: (a) detect dynamic obstacles; (b) hit dynamic obstacles; (c) avoid new static obstacles; (d) avoid all static obstacles.\nSensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 17\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n\u00a0 Figure\u00a010.\u00a0DWA\u00a0algorithm\u00a0round-trip\u00a0motion\u00a0trajectory\u00a0in\u00a0a\u00a0dynamic\u00a0environment:\u00a0(a)\u00a0detect\u00a0dynamic\u00a0obstacles;\u00a0(b)\u00a0hit\u00a0dynamic\u00a0obstacles;\u00a0(c)\u00a0avoid\u00a0new\u00a0static\u00a0obstacles;\u00a0(d)\u00a0avoid\u00a0all\u00a0static\u00a0obsta-\ncles.\u00a0 \u00a0\n\u00a0\nFigure\u00a011.\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0round-trip\u00a0motion\u00a0dynamic\u00a0environment\u00a0obstacle\u00a0avoidance\u00a0\nmotion\u00a0 trajectory:\u00a0 (a)\u00a0detect\u00a0 the\u00a0first\u00a0dynamic\u00a0obstacles;\u00a0 (b)\u00a0accelerate\u00a0 to\u00a0avoid\u00a0 the\u00a0first\u00a0dynamic\u00a0\nobstacles;\u00a0(c)\u00a0follow\u00a0the\u00a0second\u00a0sub-target\u00a0point\u00a0to\u00a0avoid\u00a0additional\u00a0static\u00a0obstacles;\u00a0(d)\u00a0successfully\u00a0\navoid\u00a0all\u00a0static\u00a0and\u00a0dynamic\u00a0obstacles\u00a0and\u00a0reach\u00a0the\u00a0endpoint.\u00a0\nFigure 11. A* fusion DWA algorithm ound-trip motion dynamic environment obstacle avoidance motion trajectory: (a) detect the first dynamic obstacles; (b) accelerate to avoid he first dynamic obstacles; (c) follow the second sub-target point to avoid additional stat c bstacles; (d) successfully avoid all static and dynamic obstacles and reach the endpoint.\nSensors 2023, 23, 8260 17 of 20 Sensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 18\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n\u00a0\nFigure\u00a012.\u00a0Improvement\u00a0in\u00a0the\u00a0DWA\u00a0algorithm\u00a0round-trip\u00a0motion\u00a0trajectory\u00a0in\u00a0a\u00a0dynamic\u00a0environ-\nment:\u00a0(a)\u00a0detect\u00a0the\u00a0first\u00a0dynamic\u00a0obstacle;\u00a0(b)\u00a0detect\u00a0the\u00a0second\u00a0dynamic\u00a0obstacle\u00a0and\u00a0accelerate\u00a0to\u00a0\navoid\u00a0it;\u00a0(c)\u00a0detect\u00a0the\u00a0third\u00a0dynamic\u00a0obstacle;\u00a0(d)\u00a0successfully\u00a0avoid\u00a0all\u00a0static\u00a0and\u00a0dynamic\u00a0obstacles\u00a0\nand\u00a0reach\u00a0the\u00a0endpoint.\u00a0\nThe\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm\u00a0can\u00a0achieve\u00a0static\u00a0obstacle\u00a0avoidance.\u00a0However,\u00a0when\u00a0 facing\u00a0dynamic\u00a0obstacles,\u00a0the\u00a0algorithm\u00a0will\u00a0deviate\u00a0too\u00a0much\u00a0from\u00a0the\u00a0original\u00a0global\u00a0 path\u00a0at\u00a0the\u00a0beginning,\u00a0leading\u00a0to\u00a0an\u00a0increase\u00a0in\u00a0path\u00a0length\u00a0and\u00a0wastage\u00a0of\u00a0time.\u00a0The\u00a0improved\u00a0dynamic\u00a0window\u00a0algorithm\u00a0presented\u00a0in\u00a0this\u00a0section\u00a0can\u00a0better\u00a0achieve\u00a0the\u00a0obstacle\u00a0avoidance\u00a0of\u00a0new\u00a0static\u00a0and\u00a0multiple\u00a0dynamic\u00a0obstacles.\u00a0It\u00a0can\u00a0slowly\u00a0return\u00a0to\u00a0the\u00a0 global\u00a0optimal\u00a0planning\u00a0path\u00a0by\u00a0adjusting\u00a0the\u00a0position\u00a0after\u00a0the\u00a0local\u00a0obstacle\u00a0avoidance\u00a0 to\u00a0keep\u00a0to\u00a0the\u00a0overall\u00a0path\u00a0better\u00a0and\u00a0save\u00a0time.\u00a0\nAs\u00a0can\u00a0be\u00a0seen\u00a0in\u00a0Figure\u00a013,\u00a0compared\u00a0with\u00a0the\u00a0dynamic\u00a0window\u00a0algorithm\u00a0and\u00a0the\u00a0 A*\u00a0 fusion\u00a0DWA\u00a0algorithm,\u00a0 the\u00a0 improved\u00a0dynamic\u00a0window\u00a0algorithm\u00a0proposed\u00a0 in\u00a0 this\u00a0 section\u00a0has\u00a0a\u00a0smoother\u00a0change\u00a0in\u00a0attitude\u00a0angle.\u00a0It\u00a0makes\u00a0the\u00a0mobile\u00a0robot\u00a0not\u00a0rotate\u00a0as\u00a0 much\u00a0during\u00a0the\u00a0motion,\u00a0thus\u00a0making\u00a0the\u00a0operation\u00a0process\u00a0smoother.\u00a0Concerning\u00a0line\u00a0 velocity\u00a0and\u00a0angular\u00a0velocity\u00a0variation,\u00a0 the\u00a0 improved\u00a0dynamic\u00a0window\u00a0algorithm\u00a0has\u00a0 lower\u00a0line\u00a0velocity\u00a0and\u00a0angular\u00a0velocity\u00a0variation,\u00a0which\u00a0can\u00a0ensure\u00a0the\u00a0smooth\u00a0operation\u00a0 of\u00a0the\u00a0mobile\u00a0robot.\u00a0\nFigure 12. Improvement in the DWA algorithm round-trip motion trajectory in a dynamic environment: (a) detect the first dynamic obstacle; (b) detect the second dynamic obstacle and accelerate to avoid it; (c) detect the third dynamic obstacle; (d) successfully avoid all static and dynamic obstacles and reach the endpoint.\nThe A* fusion DWA algorithm can achieve static obstacle avoidance. However, when facing dynamic obstacles, the algorithm will deviate too much from the original global path at the beginning, leading to an increase in path length and wastage of time. The improved dynamic window algorithm presented in this section can better achieve the obstacl avoidance of new static nd multiple dynamic obstacle . It an slowly return to t e global optim l planning path by adjusting the osition after the local obstacle avoidance to keep to the overall path better and save time. As can be seen in Figure 13, compared with the dynamic window algorithm and the A* fusion DWA algorithm, the improved dynamic window algorithm proposed in this section has a smoother change in attitude angle. It makes the mobile robot not rotate as much during the motion, thus making the operation process smoother. Concerning line velocity and angular velocity v riatio , the improved dyna ic window algorithm has lower line velocity and angular velocity variation, which can ensure the smooth operation of the mobile robot. The three algorithms\u2019 average planning time and optimal path length are statistically recorded and compared for analysis. The average planning times of the DWA algorithm, A* fusion DWA algorithm, and improved DWA algorithm in a dynamic environment are 66.23, 51.88, and 49.57, respectively, and the average path lengths are 38.73, 37.45, and 36.63, respectively. From the above results, it is clear that the improved DWA algorithm reduces the average planning time by 22.6% and 4.5% and the average path length by 3.3% and 2.2%, respectively, compared to the dynamic window method and the A* fusion DWA algorithm in the complex dynamic environment. From the above simulation comparison experiments as well as data comparison, it can be concluded that the improved dynamic window algorithm in this section has better\nSensors 2023, 23, 8260 18 of 20\nresults in terms of path length, planning time, motion trajectory, and smooth motion compared with the dynamic window method and A* fusion dynamic window method. It can make the mobile robot\u2019s obstacle avoidance safer and more effective, the planning path smoother, and the mobile robot\u2019s running state smoother. Consequently, it holds significant advantages in local path planning and obstacle avoidance. Sensors\u00a02023,\u00a023,\u00a0x\u00a0FOR\u00a0PEER\u00a0REVIEW\u00a0 19\u00a0 of\u00a0 22\u00a0 \u00a0\n\u00a0\n\u00a0 Figure\u00a013.\u00a0The\u00a0attitude\u00a0angle\u00a0versus\u00a0time\u00a0curves\u00a0are\u00a0(a\u2013c),\u00a0and\u00a0the\u00a0linear\u00a0and\u00a0angular\u00a0velocity\u00a0versus\u00a0 time\u00a0curves\u00a0are\u00a0(d\u2013f).\u00a0(a,d)\u00a0DWA\u00a0algorithm;\u00a0(b,e)\u00a0A*\u00a0fusion\u00a0DWA\u00a0algorithm;\u00a0(c,f)\u00a0improved\u00a0DWA\u00a0 algorithm.\u00a0The\u00a0solid\u00a0blue\u00a0line\u00a0represents\u00a0the\u00a0orientation\u00a0angle,\u00a0the\u00a0dashed\u00a0blue\u00a0line\u00a0represents\u00a0the\u00a0 linear\u00a0velocity,\u00a0and\u00a0the\u00a0solid\u00a0red\u00a0line\u00a0represents\u00a0the\u00a0angular\u00a0velocity.\u00a0\nThe\u00a0three\u00a0algorithms\u2019\u00a0average\u00a0planning\u00a0time\u00a0and\u00a0optimal\u00a0path\u00a0length\u00a0are\u00a0statistically\u00a0 recorded\u00a0and\u00a0compared\u00a0for\u00a0analysis.\u00a0The\u00a0average\u00a0planning\u00a0times\u00a0of\u00a0the\u00a0DWA\u00a0algorithm,\u00a0 A*\u00a0fusion\u00a0DWA\u00a0algorithm,\u00a0and\u00a0improved\u00a0DWA\u00a0algorithm\u00a0in\u00a0a\u00a0dynamic\u00a0environment\u00a0are\u00a0 66.23,\u00a051.88,\u00a0and\u00a049.57,\u00a0respectively,\u00a0and\u00a0 the\u00a0average\u00a0path\u00a0 lengths\u00a0are\u00a038.73,\u00a037.45,\u00a0and\u00a0 36.63,\u00a0respectively.\u00a0\nFrom\u00a0the\u00a0above\u00a0results,\u00a0it\u00a0is\u00a0clear\u00a0that\u00a0the\u00a0improved\u00a0DWA\u00a0algorithm\u00a0reduces\u00a0the\u00a0average\u00a0planning\u00a0time\u00a0by\u00a022.6%\u00a0and\u00a04.5%\u00a0and\u00a0the\u00a0average\u00a0path\u00a0length\u00a0by\u00a03.3%\u00a0and\u00a02.2%,\u00a0 respectively,\u00a0compared\u00a0 to\u00a0 the\u00a0dynamic\u00a0window\u00a0method\u00a0and\u00a0 the\u00a0A*\u00a0 fusion\u00a0DWA\u00a0algorithm\u00a0in\u00a0the\u00a0complex\u00a0dynamic\u00a0environment.\u00a0\nFrom\u00a0the\u00a0above\u00a0simulation\u00a0comparison\u00a0experiments\u00a0as\u00a0well\u00a0as\u00a0data\u00a0comparison,\u00a0it\u00a0 can\u00a0be\u00a0concluded\u00a0that\u00a0the\u00a0improved\u00a0dynamic\u00a0window\u00a0algorithm\u00a0in\u00a0this\u00a0section\u00a0has\u00a0better\u00a0 results\u00a0in\u00a0terms\u00a0of\u00a0path\u00a0length,\u00a0planning\u00a0time,\u00a0motion\u00a0trajectory,\u00a0and\u00a0smooth\u00a0motion\u00a0compared\u00a0with\u00a0the\u00a0dynamic\u00a0window\u00a0method\u00a0and\u00a0A*\u00a0fusion\u00a0dynamic\u00a0window\u00a0method.\u00a0It\u00a0can\u00a0 make\u00a0the\u00a0mobile\u00a0robot\u2019s\u00a0obstacle\u00a0avoidance\u00a0safer\u00a0and\u00a0more\u00a0effective,\u00a0the\u00a0planning\u00a0path\u00a0 smoother,\u00a0and\u00a0the\u00a0mobile\u00a0robot\u2019s\u00a0running\u00a0state\u00a0smoother.\u00a0Consequently,\u00a0it\u00a0holds\u00a0significant\u00a0advantages\u00a0in\u00a0local\u00a0path\u00a0planning\u00a0and\u00a0obstacle\u00a0avoidance.\u00a0\n5.\u00a0Conclusions\u00a0and\u00a0Future\u00a0Work\u00a0 We\u00a0concentrate\u00a0on\u00a0the\u00a0analysis\u00a0of\u00a0obstacle\u00a0avoidance\u00a0in\u00a0this\u00a0research\u00a0within\u00a0the\u00a0setting\u00a0of\u00a0the\u00a0actual\u00a0dynamic\u00a0motion\u00a0of\u00a0mobile\u00a0robots.\u00a0Fuzzy\u00a0control\u00a0is\u00a0integrated\u00a0with\u00a0the\u00a0 dynamic\u00a0window\u00a0technique.\u00a0To\u00a0optimize\u00a0the\u00a0dynamic\u00a0window\u00a0method\u2019s\u00a0assessment\u00a0subfunction\u00a0and\u00a0enhance\u00a0its\u00a0potential\u00a0for\u00a0safe\u00a0and\u00a0reliable\u00a0dynamic\u00a0obstacle\u00a0avoidance,\u00a0the\u00a0 combination\u00a0of\u00a0weights\u00a0is\u00a0changed\u00a0using\u00a0fuzzy\u00a0logic.\u00a0Next,\u00a0a\u00a0vital\u00a0point\u00a0is\u00a0chosen\u00a0on\u00a0the\u00a0 global\u00a0path.\u00a0These\u00a0selected\u00a0crucial\u00a0points\u00a0are\u00a0employed\u00a0as\u00a0reference\u00a0sub-target\u00a0points\u00a0to\u00a0 keep\u00a0out\u00a0of\u00a0 local\u00a0optima\u00a0while\u00a0 the\u00a0 improved\u00a0dynamic\u00a0window\u00a0approach\u00a0 is\u00a0 in\u00a0motion.\u00a0 After\u00a0avoiding\u00a0local\u00a0obstacles,\u00a0the\u00a0mobile\u00a0robot\u2019s\u00a0position\u00a0is\u00a0swiftly\u00a0changed\u00a0to\u00a0stay\u00a0on\u00a0 the\u00a0global\u00a0ideal\u00a0path.\u00a0Through\u00a0experimental\u00a0validation,\u00a0the\u00a0improved\u00a0dynamic\u00a0window\u00a0 algorithm\u00a0suggested\u00a0in\u00a0this\u00a0paper\u00a0outperforms\u00a0the\u00a0dynamic\u00a0window\u00a0algorithm\u00a0and\u00a0the\u00a0 A*\u00a0 fusion\u00a0DWA\u00a0algorithm\u00a0 in\u00a0 terms\u00a0of\u00a0 the\u00a0mobile\u00a0robot\u2019s\u00a0ability\u00a0 to\u00a0avoid\u00a0obstacles\u00a0and\u00a0 plan\u00a0globally\u00a0in\u00a0a\u00a0variety\u00a0of\u00a0dynamic\u00a0environments.\u00a0\nFigure . The attitude angle versus time curves are (a\u2013c), a d the linear nd angular velocity versus time curves are (d\u2013f). (a,d) DWA algorithm; (b,e) A* fusion DWA algorithm; (c,f) improved DWA algorithm. The solid blue line represents the orientation angle, the dashed blue line represents the linear velocity, and the solid red line represents the angular velocity."
        },
        {
            "heading": "5. Conclusions and Future Work",
            "text": "We concentrate on the analysis of obstacle avoidance in this research within the setting of the actual dynamic motion of mobile robots. Fuzzy control is integrated with the dynamic window technique. To optimize the dynamic window method\u2019s assessment sub-function and enhance its potential for safe and reliable dynamic obstacle avoidance, the combination of weights is changed using fuzzy logic. Next, a vital point is chosen on the global path. Thes selected crucial points are employed as reference sub-targ t points to keep out of local opti a w ile the improved dy amic wi dow approach is in motion. After avoiding local obstacles, the mobile robot\u2019s position is swiftly changed to stay on the glob l ideal path. Through experimental validation, the improved dyn mic window algorithm suggested in thi paper outperforms the dynamic window alg rithm and the A* fusion DWA algorithm in terms of mobile robot\u2019s ability to void ob tacles and plan globally in a variety of dynamic environments.\nAuthor Co ributions: Contributed to the concep ion and design of the study, W.W., Y.S. and K.S.; organized the database, M.X.; performed the statistical analysis, L.H.; wrote the first draft of the manuscript, W.W.; wrote sections of the manuscript, C.Z. and B.C. All authors have read and agreed to the published version of the manuscript.\nFunding: This work was supported by grants of the National Natural Science Foundation of China (Grant Nos. 52075530, 51575407, 51975324, 51505349, 61733011, 41906177); \u201cThe 14th Five Year Plan\u201d Hubei provincial advantaged characteristic disciplines (groups) project of Wuhan University of Science and Technology (2023C0401).\nInstitutional Review Board Statement: Not applicable.\nInformed Consent Statement: Not applicable.\nData Availability Statement: The clerk and the code mentioned in the article are still needed for subsequent use and cannot be made available at this time.\nSensors 2023, 23, 8260 19 of 20\nAcknowledgments: The authors would like to thank all reviewers and editors for their comments on this study.\nConflicts of Interest: The authors declare no conflict of interest."
        }
    ],
    "title": "Local Path Planning for Mobile Robots Based on Fuzzy Dynamic Window Algorithm",
    "year": 2023
}