{
    "abstractText": "Modeling and characterizing multiple factors is perhaps the most important step in achieving excess returns over market benchmarks. Both academia and industry are striving to find new factors that have good explanatory power for future stock returns and good stability of their predictive power. In practice, factor investing is still largely based on linear multi-factor models, although many deep learning methods show promising results compared to traditional methods in stock trend prediction and portfolio risk management. However, the existing non-linear methods have two drawbacks: 1) there is a lack of interpretation of the newly discovered factors, 2) the financial insights behind the mining process are unclear, making practitioners reluctant to apply the existing methods to factor investing. To address these two shortcomings, we develop a novel deep multi-factor model that adopts industry neutralization and market neutralization modules with clear financial insights, which help us easily build a dynamic and multi-relational stock graph in a hierarchical structure to learn the graph representation of stock relationships at different levels, e.g., industry level and universal level. Subsequently, graph attention modules are adopted to estimate a series of deep factors that maximize the cumulative factor returns. And a factor-attention module is developed to approximately compose the estimated deep factors from the input factors, as a way to interpret the deep factors explicitly. Extensive experiments on real-world stock market data demonstrate the effectiveness of our deep multi-factor model in the task of factor investing.",
    "authors": [
        {
            "affiliations": [],
            "name": "Zikai Wei"
        },
        {
            "affiliations": [],
            "name": "Bo Dai"
        },
        {
            "affiliations": [],
            "name": "Dahua Lin"
        }
    ],
    "id": "SP:b86a885a87ff3ad3e826d040c4288fd6ebcf4b25",
    "references": [
        {
            "authors": [
                "Chi Chen",
                "Li Zhao",
                "Jiang Bian",
                "Chunxiao Xing",
                "Tie-Yan Liu"
            ],
            "title": "Investment behaviors can tell what inside: Exploring stock intrinsic properties for stock trend prediction",
            "venue": "In Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining,",
            "year": 2019
        },
        {
            "authors": [
                "Eugene F Fama",
                "Kenneth R French"
            ],
            "title": "Comparing cross-section and time-series factor models",
            "venue": "The Review of Financial Studies,",
            "year": 1891
        },
        {
            "authors": [
                "Sergey Ioffe",
                "Christian Szegedy"
            ],
            "title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
            "venue": "In International conference on machine learning,",
            "year": 2015
        },
        {
            "authors": [
                "Weiwei Jiang"
            ],
            "title": "Applications of deep learning in stock market prediction: recent progress",
            "venue": "Expert Systems with Applications,",
            "year": 2021
        },
        {
            "authors": [
                "Asriel Levin"
            ],
            "title": "Stock selection via nonlinear multi-factor models",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 1995
        },
        {
            "authors": [
                "Hengxu Lin",
                "Dong Zhou",
                "Weiqing Liu",
                "Jiang Bian"
            ],
            "title": "Deep risk model: a deep learning solution for mining latent risk factors to improve covariance matrix estimation",
            "venue": "In Proceedings of the Second ACM International Conference on AI in Finance,",
            "year": 2021
        },
        {
            "authors": [
                "Hengxu Lin",
                "Dong Zhou",
                "Weiqing Liu",
                "Jiang Bian"
            ],
            "title": "Learning multiple stock trading patterns with temporal routing adaptor and optimal transport",
            "venue": "In Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery & Data Mining,",
            "year": 2021
        },
        {
            "authors": [
                "Dimitris Melas"
            ],
            "title": "Best practices in factor research and factor models",
            "venue": "MSCI Research Insight,",
            "year": 2018
        },
        {
            "authors": [
                "Kei Nakagawa",
                "Tomoki Ito",
                "Masaya Abe",
                "Kiyoshi Izumi"
            ],
            "title": "Deep recurrent factor model: interpretable non-linear and time-varying multi-factor model",
            "year": 1901
        },
        {
            "authors": [
                "Kei Nakagawa",
                "Takumi Uchida",
                "Tomohisa Aoshima"
            ],
            "title": "Deep factor model",
            "venue": "In ECML PKDD 2018 Workshops,",
            "year": 2018
        },
        {
            "authors": [
                "Ashish Vaswani",
                "Noam Shazeer",
                "Niki Parmar",
                "Jakob Uszkoreit",
                "Llion Jones",
                "Aidan N Gomez",
                "\u0141ukasz Kaiser",
                "Illia Polosukhin"
            ],
            "title": "Attention is all you need",
            "venue": "Advances in neural information processing systems,",
            "year": 2017
        },
        {
            "authors": [
                "Jianian Wang",
                "Sheng Zhang",
                "Yanghua Xiao",
                "Rui Song"
            ],
            "title": "A review on graph neural network methods in financial applications",
            "venue": "arXiv preprint arXiv:2111.15367,",
            "year": 2021
        },
        {
            "authors": [
                "Wentao Xu",
                "Weiqing Liu",
                "Lewen Wang",
                "Yingce Xia",
                "Jiang Bian",
                "Jian Yin",
                "Tie-Yan Liu"
            ],
            "title": "Hist: A graph-based framework for stock trend forecasting via mining concept-oriented shared information",
            "venue": "arXiv preprint arXiv:2110.13716,",
            "year": 2021
        },
        {
            "authors": [
                "Wentao Xu",
                "Weiqing Liu",
                "Chang Xu",
                "Jiang Bian",
                "Jian Yin",
                "Tie-Yan Liu"
            ],
            "title": "Rest: Relational event-driven stock trend forecasting",
            "venue": "In Proceedings of the Web Conference",
            "year": 2021
        }
    ],
    "sections": [
        {
            "text": "ar X\niv :2\n21 0.\n12 46\n2v 1\n[ q-\nfi n.\nC P]\n2 2\nO ct\n2 02\nModeling and characterizing multiple factors is perhaps the most important step in achieving excess returns over market benchmarks. Both academia and industry are striving to find new factors that have good explanatory power for future stock returns and good stability of their predictive power. In practice, factor investing is still largely based on linear multi-factor models, although many deep learning methods show promising results compared to traditional methods in stock trend prediction and portfolio risk management. However, the existing non-linear methods have two drawbacks: 1) there is a lack of interpretation of the newly discovered factors, 2) the financial insights behind the mining process are unclear, making practitioners reluctant to apply the existing methods to factor investing. To address these two shortcomings, we develop a novel deep multi-factor model that adopts industry neutralization and market neutralization modules with clear financial insights, which help us easily build a dynamic and multi-relational stock graph in a hierarchical structure to learn the graph representation of stock relationships at different levels, e.g., industry level and universal level. Subsequently, graph attention modules are adopted to estimate a series of deep factors that maximize the cumulative factor returns. And a factor-attention module is developed to approximately compose the estimated deep factors from the input factors, as a way to interpret the deep factors explicitly. Extensive experiments on real-world stock market data demonstrate the effectiveness of our deep multi-factor model in the task of factor investing."
        },
        {
            "heading": "1 Introduction",
            "text": "Factor investing is one of the most popular solutions in portfolio analysis and investment management for building an active portfolio with a desirable investment objective, which often relies on the linear multi-factor model as its core module [5, 8, 2]. However, the assumption of a linear relationship between factor exposures and expected returns is quite restrictive, as it ignores interactions between different factors and does not always hold in reality, and an increase in factor exposures may not lead to an increase in expected returns. Moreover, the linear multi-factor model characterizes the relationships of different stocks implicitly via their common factors, whereas their relationships are in fact much more complicated.\nOn the other hand, with the recent rapid development of deep neural networks, they have demonstrated great potential in learning the relationships between different factors [13, 11]. However, although deep neural networks have been widely applied to stock market prediction [7, 1, 14, 15, 4], there is only a factor investing method [5] dated back to 1995 that adopts neural networks to find the nonlinear relationship between factors and expected returns. One major reason that prevents practitioners in factoring investing from using deep neural networks is that the financial insights behind the deep models are not clear and often considered as a \u201cblack box\u201d, making the learned deep factors difficult to interpret.\nPreprint. Under review.\nTo introduce the advance of deep neural networks to factor investing without losing the underlying financial insights, in this paper we propose a novel deep multi-factor framework that, through stock selection, finds deep factors via graph attention modules on top of a multi-relational stock graph. Specifically, the proposed framework consider stocks as nodes in a dynamic graph with two types of edges corresponding to stock relationships at different granularities. In this way, the graph can account for the the unchronological changes in listing or de-listing of stocks and the changes in the multi-level relationships among stocks. The first type of edges connects nodes in the same industry to form an industry graph, from which we can learn the industry influence within the same industry. The second type of edges connects all nodes into a universe graph, from which we can learn the influence of other stocks with the same universe. On top of this multi-relational stock graph, the proposed deep multi-factor model then adopts graph attention module summarize the industry and universe influences on other stocks. Based on these influences, we can distill out the unique information from the stock context at different granularities, i.e., the original context, the unique context after neutralizing the industry influence, and the unique context after neutralizing the industry and universe influence. Later, these contexts at different granularities can help the proposed model learn a set of deep factors to distinguish attractive and unattractive stocks and maximize the cumulative factor returns and information ratio. Finally, a factor-attention module is further introduced to find the relationship between deep factors and the original input factors such as style factor, macroeconomic factors, which indicates how deep factors are composed from the original ones. In this way, practitioners, such as fund managers, can thoroughly understand the market logic and economic insights behind each deep factor used in stock selection.\nTo validate the effectiveness of our approach, we conduct a comprehensive study on real-world data containing three broad-based stock indexes which covers more than 2800 stocks in the Chinese stock market from 2010 to 2022. In summary, the contributions of this work include 1) developing a deep multi-factor model based on financial insights, where each component has a concrete financial meaning, 2) defining stock relationships via a dynamic and multi-relational graph with hierarchical levels of edges, 3) interpreting how our deep factor emerges from the original stock information."
        },
        {
            "heading": "2 Related works",
            "text": "The multifactor model has received considerable attention from researchers and academics for several decades to determine the exact nature of the common factors that influence risk and return in various assets and markets [8], where existing work classify it in two categories w.r.t from different perspectives: linear vs nonlinear, and cross-sectional vs time-series. Comparing the cross-sectional and time-series models, it has been found that the cross-sectional factors can provide better explanation of the average stock returns than the model uses time-series factors [2]. This inspires us develop a deep learning architecture to learn cross-sectional factors.\nWith the rapid development of deep learning and its advantages in learning nonlinear relationships from big data in finance [4, 5], deep learning methods are applied to learn nonlinear relationships between style factors and expected returns of stocks [10, 9]. However, these methods do not consider the relationships between stocks in their models, and the financial insights behind their building blocks are not clear. To incorporate the multi-relational nature of stocks into our model, we turn our attention to graph neural networks [12], which have recently done great work in learning crossstock relationships over a knowledge graph to solve a variety of finance problems [13], such as stock movement prediction [14, 15, 7, 1] event prediction, and risk management [6]. In our model, we use two graph attention networks to learn the influence of other stocks in the same industry and the influence of other stocks in the same universe."
        },
        {
            "heading": "3 Method",
            "text": "In this work, we develop a deep learning framework to find the cross-sectional factors that can consistently explain the average stock returns well, making good use of the relationships between stocks and the insights from finance."
        },
        {
            "heading": "3.1 Graph Construction",
            "text": "Definition 1. Stock Graph. The stock graph is defined as a directed graph as in [15], G = \u3008S,R,M\u3009, where S denotes the set of constituents of a broad-based stock index and R is the set of relations between two stocks. M is the set of adjacent matrices. For an adjacent matrix Mr \u2208 M of relation r \u2208 R, where Mr \u2208 R|R|\u00d7|R|, Mrij = 1 means that there is a relation r from stock sj to stock si and M r ij = 0 means that there is no such relation. However, the edges of the directed graph have an orientation [13], so this stock graph does not always hold in reality: stocks in the same industry always influence each other. In our work, we define the stock graph as a dynamic and multi-relational graph. The nodes and edges could be dynamic because the listed stocks change over time and a stock can be classified into a different industry, which leads to a change in the nodes and edges. We use a time-varying adjacent matrix Mrt to represent this dynamic property. We distill the stock context into different levels: Industry level and Universe level, where the edges at the different levels represent different types of relationships. To learn the graph representation of stock relationships at different levels, we define the multi-related graph in a two-level hierarchy: an undirected graph describing the intra-industry relationship and an undirected graph interpreting the universe relationship.\nDefinition 2. Industry Graph and Universe Graph. We define the industry graph as a stock graph Gs where stocks have relations to each other if they belong to the same industry. Similarly, the universe graph is defined as stock graph Gg that all constituents of a broad-based stock index are related. We use a time-variant graph for both cases of industry and universe, since the constituents in a industry or a index change over time."
        },
        {
            "heading": "3.2 Architecture",
            "text": "Stock Context Encoder. We define n as the number of constituents inside a broad-based stock index, and m as the number of types of stock context that covers fundamental, trading information and analysts\u2019 estimates.\nCt = MLP (BatchNorm (Ft)) , (1)\nwhere Ft \u2208 R n\u00d7m is a matrix represents m original factors w.r.t n stocks, and Ct \u2208 R n\u00d7m1 is the stock context matrix with m1 hidden features extracted from the original factors. The financial insight of the batch normalization [3] used here is the similar to the z-score normalization generally applied in data preprocessing for factor developing.\nLearning the Industry Influence. Fundamentally, stocks are comparable inside the same industry, which makes the inner-industry relations important in industry-based analysis. Stocks in the same industry have mutual influence on each other beyond their common properties. To learn this industry influence, we apply Graph Attention Network (GAT) [12] over the pre-defined industry graph, where the time-variant industry mask, Mt \u2208 R n\u00d7n, is symmetric and defined as\nM t ij =\n{\n1, if stock si and stocksj are in the same industry 0, otherwise , (2)\nwhere t indicates the time stamp and 1 \u2264 i, j \u2264 n. Then, we have the industry influence as\nH t I = GAT(MtCt). (3)\nThis industry influence is useful for neutralizing the industry information.\nDefinition 3. Industry Neutrality. We define the industry neutrality C\u0304tI as the stock context Ct subtracted from the industry influence HtI , i.e.,\nC\u0304 t I = Ct \u2212H t I . (4)\nIndustry neutrality interprets the different context of a stock compared to other stocks in the same industry, which makes stocks comparable across different industries.\nLearning the Universe Influence. Similar to learning the industry influence, we adopt GAT to capture the multual influence of any two stocks over the universe graph:\nH t U = GAT(C\u0304 t I), (5)\nwhere the universe is defined as a set of all constituents in a board-based stock index. The universe influence should learn from the stock context after eliminating industry influence, which can help to learn the cross-stock influence without industry effects.\nDefinition 4. Universe Neutrality. We define the universe neutrality C\u0304tU as the industry-neutralized stock context Ct excluding the universe influence H t U ,\nC\u0304 t U = C\u0304 t I \u2212H t U . (6)\nThe financial insight behind universal neutrality is that it contains the stock independent context with eliminating not only the effect of the industry on this stock but also the effect of the universe context.\nLearning Deep Factor from Hierarchical Contexts. Formally, we learn the deep factor ft \u2208 R n from different granularity: stock original context Ct, industry neutralized context C\u0304tI , and universeneutralized context C\u0304tU :\nft = LeakyReLU ( W T ( C t||C\u0304tI ||C\u0304 t U )) , (7)\nwhere WT is a single-layer feed-forward neural network and || represents concatenation.\nMulti-Head Learning. We design K output heads for learning ultimate factors corresponding to multiple forward periods be aware of practitioners, i.e. k-forward trading days, where k = 3, 5, 10, 15, 20. The Chinese mutual fund regulation does not allow fund managers sell the securities hold less than two trading dates. The minimum forward horizon, therefore, is set to three trading days. The multiple of five indicates the number of weeks that a security is hold. Based on Eq. 7, the deep factor learned w.r.t different forward horizon is defined as\nf t k = LeakyReLU\n(\nW T k\n(\nC t||C\u0304tI ||C\u0304 t U\n))\n, (8)\nwhere f tk \u2208 R n is the deep factor targets for explain the future information on the k-forward trading day and WTk is a single-layer feed-forward neural network corresponding to k-forward trading day.\nInterpretation of Deep Factor f t via Factor Attention Module. We introduce factor attention module to investigate the relationship between the deep factor and the original input factors or features. We employ attention mechanism [11] to attend our deep factor to learn the token importance of the original features. The normalized attention weight through a softmax function illustrates \u201chow much information influx in the deep factor from an original feature\u201d.\nU t k = LeakyReLU\n(\nW T a,kFt\n)\n, (9)\nA t k = softmax\n(\nU t k\n)\n, (10)\na\u0304 t k =\n1\nn\n\u2211\ni\u2208n\na t ik (11)\nwhere WTa,k \u2208 R n\u00d7n is a single-layer feed-forward neural network corresponding to the k-forward trading day. Atk \u2208 R n\u00d7m is the attention weight matrix for the deep factor f tk and a t ik is i-th column of Atk. Here, a t k is its corresponding attention weight vector of m. We define the estimated deep factor via factor attention, f\u0302 tk \u2208 R m, as\nf\u0302 t k = F T t a\u0304 t k, (12)\nwhere f\u0302 tk is the \u201cattention estimate\u201d of the deep factor f t k. When f\u0302 t k is very close to f t k, the attention weight a\u0304tk can interpret the portion of quantity comes from the original input factors."
        },
        {
            "heading": "3.3 Loss Design",
            "text": "Now we ponder the design of loss function to fulfill the learning objectives of deep factor.\nMaximizing Factor Stability. One of our goals is to find a factor that has good stability of its predictive power, usually measured by the information ratio of information coefficient (ICIR) [7]. We use ck to denote the ICIR of the deep factor f t k, where ck measures the stability of the predictive power of the deep factor f tk for the future return over the next k trading days rt+k. Thus, since higher\nICIR indicates higher stability, we look for a stable factor that maximizes ICIR. For more details on ICIR and information ratio, see our supplementary material.\nMaximizing Factor Return. Factor returns are the cross-sectional regression coefficients [6]that indicate the return attributable to a particular common factor: r\u0302t+k = b t kf t k, where b\nt \u2208 R is the factor return at time t. We introduce a local optimizer to learn the parameter btk, which is independent of the global optimizer. The deep factor is expected to have a higher cumulative factor return, \u2211\nt\u2208T b t k.\nImproving \u201cAttention Estimate\u201d. We use L2-norm to evaluate the deviation between the deep factor f tk and its corresponding attention estimate f\u0302 t k, which can be calculated as d t k = ||f t k \u2212 f\u0302 t k||2.\nThe overall loss function is\nL = 1\n|K||T |\n\u2211\nk\u2208K\n\u2211\nt\u2208T\ndtk \u2212 b t k \u2212 ck (13)\nwhere T is the set of dates in the training period, K is the set of forward horizons."
        },
        {
            "heading": "3.4 Optimization",
            "text": "Cross-sectional optimizer. The cross-sectional optimizer is a local optimizer designed to learn a cross-sectional regression coefficient (factor returns) at each time t \u2208 T , by minimizing the mean squared errors of the predicted returns and the target returns. This cross-sectional optimizer is independent of the global optimizer we use to train our deep multifactor model.\nGlobal optimizer. The global optimizer is designed to update the parameters of our deep multifactor model. It is set to simultaneously optimize the parameters in the stock context encoder, the industry and universe influences learning modules, the multi-head module, and the factor attention module."
        },
        {
            "heading": "4 Experiment",
            "text": "Stock Pool. In order to capture the most representative stocks of China\u2019s stock market, we select all constituents of the three major broad-based indices, namely CSI 300, CSI 500 and CSI 1000, which include 1800 stocks with the highest rank in terms of market capitalization and liquidity at the same time. Taking into account the changes caused by adjustments in the constituents, they cover more than 2800 stocks in the period from 2010 to mid-2022. By September 26, 2022, they cover 80.56% of the total market capitalization of all stocks in the Chinese market.\nIndustry Classification Standard. For industry graph, we choose the CITIC Securities Industry Classification Standard Level 1 (CICSL1) as a guideline to define the industry relationships among\nstocks. The CICSL1 is widely used by institutional investors investing in Chinese market and was developed based on two well-known global standards: Global Industry Classification Standard (GICS)\nand Industry Classification Benchmark (ICB). Figure 4 shows the heat map of industry portion in CSI 300, CSI 500 and CSI 1000, according to CICSL1 standard.\nDataset Construction. Our original inputs are developed from fundamental and market data collected from publicly available data from tushare.pro. The institutional investor can also obtain the data from Refinitiv\u2019s database or WIND. We construct our dataset on a daily basis and divide the original factors into five groups derived from the Barra Global Equity Model: reversal, value, size, momentum, quality[8]. Our dataset includes the factors that have been found to be informative in Chinese stock market [7]. Based on the factors mentioned in [8, 7], we create other derivatives of these factors by using twelve trailing months, quarterly changes, annual changes, and factor values over yields. Finally, we create 63 factors including the base factors and their derivatives. All factors are calculated using point-in-time data, which means that there is no information leakage. For example, a company issues a financial report at time t1 which is publicly available or accessible in a financial database at time t2. Later, it make a restatement of that report at time t3, while the information is available to investors at t4. Here, t1<t2<t3<t4. It will never use the modified information before time t4. We follow the temporal order to divide the data into 14 data groups: Each group contains a training set, a validation set, and a test set. The training set is extended every six months. The validation set consists of the data over the following six-month period. However, we exclude the last month data from the validation set to avoid information leakage. The reason is that maximizing the information ratio involves using future information, i.e., future returns over the next k trading days. Therefore, we truncate the information that might overlap with the information in the test set. Thus, while the test set uses data from the next six-month period, there is no overlap between the validation and test sets. For instance, the three datasets in the first group include training (2010/1/1~2015/6/30), validation (2015/7/1~2015/11/30), test (2016/1/1~2016/6/30), and the last group includes training (2010/1/1~2021/6/30), validation (2021/7/1~2021/11/30), test (2022/1/1~2022/6/30).\nPortfolio Construction. Our goal is to select stocks from a given universe that are considered more attractive than others and build a portfolio that can outperform the benchmark of that universe. During the testing period, we select the best model with the lowest validation loss and use it to produce the deep factors. We then rank the stocks in ascending order according to their factor scores. We assume that the stocks with higher values are more attractive, which means that they could be responsible for future excess returns over the market benchmarks, i.e., broad-based indices. Therefore, we construct an equally weighted portfolio consisting of the 10% most attractive stocks. The portfolio is rebalanced monthly, with transaction costs for buying and selling set at 4\u2030 of the transaction amount.\nBaselines and Model Implementation. We compare our proposed method with the following baselines: 1) Linear is a linear regression model where the model learns a weight for each style factor. 2) EW is a linear model where each descriptor (original factor) is equally weighted. EW is an important baseline that shows a result of combining factors that has nothing to do with data mining or in-sample optimization, and any deviations from equal weighting shall be determined by economic rationality [8]. 3) MLP is a nonlinear model that learns factors from the stock context based on neural networks and consists of a context encoder and a feature decoder. 4) MLP& GAT is a model based on a context encoder, a GAT, which learns the interactions between stocks in a universe graph, and a decoder, which learns a deep factor from the stock context and the universal relationships of the stocks. See supplementary materials for more details in model implementation.\nThe Performance of Portfolios Constructed by Different Methods. In Figure 1 we show the performance curve of the portfolio created with each method, and in Table 1 we show the evaluation metrics of each method, i.e., the active return denoted by \u03b1(%), ICIR, information ratio (IR), and Sharpe ratio (SR) (see our supplementary material for more details.). These results show that our methods generally outperform others in the long run. Our deep multifactor model (DMFM) can always achieve higher active returns and Sharpe ratio than linear, EW, MLP and MLP& GAT (MGAT) models. Although SR of the three benchmarks is -0.11, -0.20, and -0.18, respectively, our model always has a positive SR. Since CSI1000, CSI500 and CSI300 represent the small-cap, mid-cap and large-cap of Chinese stock markets, the better performance of our model in these three universes shows its generalizability at different levels of market capitalization.\nInterpretation of Deep Factor. To make our deep factor more transparent and to clarify its insight from the financial world, we visualize the attention weight of original style factors by groups or by each of them. We take the deep factor associated with the forward twentieth trading day (k = 20) as\nan example. The average attention weights over each test period are shown in Figure 2. In this case, the style factors belonging to the quality group receive more attention weights than other groups among all constituents of the three broad-based indexes. The heat maps for the different trading days (k = 3, 5, 10, 15) can be found in the supplementary materials.\nEdge Analysis for Dynamic Graph. This dynamic property of a stock universe can manifest itself in changes in the relationships among stocks (see Figure 3) and in changes in its constituents (see Figure 4). A change in index components or industry classification standard (ICS) contributes to a change in the industry share for each sector in a stock universe. Since the ICS does not change too often, the change in the industry proportion is mainly caused by the change in index constituents. Therefore, Figure 4 can show most of the changes in the nodes of the stock graph. To illustrate the changes in the stock relationship, in Figure 3 we show the curve of average number of edges a stock has on each trading day over our industry graph in different universes (CSI1000, CSI500 and CSI300)."
        },
        {
            "heading": "5 Conclusion",
            "text": "In this paper, we propose a deep cross-sectional multifactor model that incorporates financial insights and stock relationships on a dynamic and multi-relational graph in the task of factor investing. Our work makes three contributions: First, we are the first to incorporate an attention-based interpretation module into a deep learning framework that more directly shows how the original style factors explain our deep factor. Second, we define a stock graph with a hierarchical level of edges to represent the dynamic and multi-relational properties of stock interactions. Third, we build our model based on certain economic rationales and each module within our model represents a concrete financial meaning. In the future, we plan to apply our method to develop enhanced index funds (EIFs) with additional modules."
        }
    ],
    "title": "Factor Investing with a Deep Multi-Factor Model",
    "year": 2022
}